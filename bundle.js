(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const parsers_1 = require("../../src/parsers");
const DuplicateCheck_1 = require("../../src/processing/DuplicateCheck");
const getFiatRate_1 = require("../../src/processing/getFiatRate");
const SortTrades_1 = require("../../src/processing/SortTrades");
const types_1 = require("../../src/types");
const AlertBar_1 = require("../AlertBar");
const Button_1 = require("../Button");
const DuplicateTradesTable_1 = require("../DuplicateTradesTable");
const FileBrowse_1 = require("../FileBrowse");
const Loader_1 = require("../Loader");
const TradeDetails_1 = require("../TradeDetails");
const TradesTable_1 = require("../TradesTable");
class AddTrades extends React.Component {
    constructor(props) {
        super(props);
        this.openFileBrowser = () => __awaiter(this, void 0, void 0, function* () {
            this.setState({ fileBrowseOpen: true });
        });
        this.readFile = (fileData, input) => __awaiter(this, void 0, void 0, function* () {
            this.setState({ fileBrowseOpen: false });
            if (input.current !== null && input.current.files !== null && 0 in input.current.files) {
                if (input.current.files[0].name.match('.+(\.csv)$')) {
                    if (fileData !== '') {
                        this.setState({ processing: true });
                        const processedData = yield parsers_1.processData(this.state.exchange, fileData);
                        if (processedData && processedData.length) {
                            const duplicateTrades = DuplicateCheck_1.default(this.state.currentTrades, processedData);
                            if (duplicateTrades.length) {
                                this.setState({
                                    duplicateTrades,
                                    alertData: {
                                        message: 'Duplicate Trades Detected',
                                        type: AlertBar_1.AlertType.WARNING,
                                    },
                                    processing: false,
                                });
                            }
                            else {
                                this.setState({
                                    processedTrades: processedData,
                                    processing: false,
                                });
                            }
                        }
                        else {
                            alert('Error processing data');
                        }
                    }
                    else {
                        alert('File Data is empty');
                    }
                }
                else {
                    alert('Not a valid file, must be a csv file');
                }
            }
        });
        this.processTrades = () => __awaiter(this, void 0, void 0, function* () {
            this.setState({ processing: true });
            const duplicateToSave = this.state.duplicateTrades.filter((trade) => trade.duplicate);
            const tradesToSave = this.state.processedTrades.concat(duplicateToSave);
            const tradesWithFiatRate = yield getFiatRate_1.addFiatRateToTrades(tradesToSave, this.props.savedData.settings.fiatCurrency, types_1.FiatRateMethod[this.props.savedData.settings.fiatRateMethod]);
            const newTrades = SortTrades_1.default(this.state.currentTrades.concat(tradesWithFiatRate));
            if (yield this.props.save({ trades: newTrades })) {
                this.setState({
                    currentTrades: newTrades,
                    alertData: {
                        message: 'Trades Saved',
                        type: AlertBar_1.AlertType.SUCCESS,
                    },
                    processedTrades: [],
                    duplicateTrades: [],
                    processing: false,
                });
            }
            else {
                this.setState({
                    alertData: {
                        message: 'Unable to Save Trades',
                        type: AlertBar_1.AlertType.ERROR,
                    },
                    processing: false,
                });
            }
        });
        this.setAlertData = (type, message) => {
            this.setState({ alertData: { type, message } });
        };
        this.duplicateStatusChange = (tradeID) => (e) => {
            const id = this.state.duplicateTrades.findIndex((trade) => trade.id === tradeID);
            const newDuplicateTrades = this.state.duplicateTrades;
            newDuplicateTrades[id].duplicate = e.currentTarget.checked;
            this.setState({ duplicateTrades: newDuplicateTrades });
        };
        this.addTrade = (trade) => __awaiter(this, void 0, void 0, function* () {
            const newTrades = this.state.processedTrades;
            newTrades.push(trade);
            this.setState({ processedTrades: newTrades, addTrade: false });
        });
        this.setAddTradeDisplay = () => {
            this.setState({ addTrade: !this.state.addTrade });
        };
        this.editedTrade = (trades) => {
            this.setState({ processedTrades: trades });
            return true;
        };
        this.onSelectChange = (e) => {
            this.setState({ exchange: e.currentTarget.value });
        };
        this.state = {
            processedTrades: [],
            currentTrades: this.props.savedData.trades,
            holdings: this.props.savedData.holdings,
            processing: false,
            duplicateTrades: [],
            alertData: {},
            addTrade: false,
            fileBrowseOpen: false,
            exchange: '',
        };
    }
    render() {
        return (React.createElement("div", { className: 'addTrades' },
            Object.keys(this.state.alertData).length > 0 &&
                React.createElement(AlertBar_1.AlertBar, Object.assign({ onClick: this.setAlertData }, this.state.alertData)),
            React.createElement("div", { className: 'center tc mt2' },
                React.createElement("label", { htmlFor: 'type', className: 'pr2' }, "Import Type"),
                React.createElement("select", { name: 'exchange', id: 'exchange', onChange: this.onSelectChange },
                    React.createElement("option", { key: 'Auto-Detect', value: 'Auto-Detect' }, "Auto-Detect"),
                    ",",
                    Object.keys(types_1.EXCHANGES).map((key) => React.createElement("option", { key: key, value: key }, types_1.EXCHANGES[key])))),
            this.state.addTrade &&
                React.createElement(TradeDetails_1.default, { onSubmit: this.addTrade, className: 'cf' }),
            React.createElement("div", { className: 'flex justify-around pt2' },
                React.createElement(Button_1.default, { onClick: this.openFileBrowser, label: 'Load Trades' }),
                React.createElement(FileBrowse_1.FileBrowse, { onLoaded: this.readFile, browse: this.state.fileBrowseOpen }),
                React.createElement(Button_1.default, { onClick: this.setAddTradeDisplay, label: 'Add Trade' }),
                React.createElement(Button_1.default, { onClick: this.processTrades, label: 'Save/Process Trades' })),
            this.state.processing ?
                React.createElement(Loader_1.Loader, null)
                :
                    React.createElement("div", null,
                        this.state.duplicateTrades.length > 0 &&
                            React.createElement("div", null,
                                React.createElement("h3", { className: 'tc' }, "Duplicate Trades"),
                                React.createElement("hr", { className: 'center w-50' }),
                                React.createElement(DuplicateTradesTable_1.DuplicateTradesTable, { trades: this.state.duplicateTrades, duplicateChange: this.duplicateStatusChange })),
                        this.state.processedTrades.length > 0 &&
                            React.createElement("div", null,
                                React.createElement("h3", { className: 'tc' }, "Trades to Add"),
                                React.createElement("hr", { className: 'center w-50' }),
                                React.createElement(TradesTable_1.TradesTable, { trades: this.state.processedTrades, save: this.editedTrade })))));
    }
}
exports.AddTrades = AddTrades;

},{"../../src/parsers":1473,"../../src/processing/DuplicateCheck":1480,"../../src/processing/SortTrades":1481,"../../src/processing/getFiatRate":1485,"../../src/types":1491,"../AlertBar":3,"../Button":4,"../DuplicateTradesTable":9,"../FileBrowse":10,"../Loader":13,"../TradeDetails":18,"../TradesTable":19,"react":1347}],2:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const CalculateDailyBalance_1 = require("../../src/processing/CalculateDailyBalance");
const types_1 = require("../../src/types");
const Button_1 = require("../Button");
const DailyBalanceTable_1 = require("../DailyBalanceTable");
class AdvancedTab extends React.Component {
    constructor(props) {
        super(props);
        this.onExchangeChange = (e) => __awaiter(this, void 0, void 0, function* () {
            this.setState({ exchange: types_1.EXCHANGES[e.currentTarget.value] });
        });
        this.calculateDailyBalance = () => __awaiter(this, void 0, void 0, function* () {
            const trades = this.props.savedData.trades.filter((trade) => trade.exchange === this.state.exchange);
            this.setState({
                dailyBalance: yield CalculateDailyBalance_1.calculateDailyBalance(trades, this.props.savedData.settings.fiatCurrency),
            });
        });
        this.state = {
            exchange: types_1.EXCHANGES[Object.keys(types_1.EXCHANGES)[0]],
        };
    }
    render() {
        return (React.createElement("div", { className: 'AdvancedTab' },
            React.createElement("div", { className: 'center tc mt2' },
                React.createElement("label", { htmlFor: 'type', className: 'pr2' }, "Exchange"),
                React.createElement("select", { name: 'type', id: 'type', onChange: this.onExchangeChange }, Object.keys(types_1.EXCHANGES).map((key) => React.createElement("option", { key: key, value: key }, types_1.EXCHANGES[key]))),
                React.createElement(Button_1.default, { label: 'Calculate Daily Balance', onClick: this.calculateDailyBalance })),
            this.state.dailyBalance !== undefined &&
                React.createElement(DailyBalanceTable_1.DailyBalanceTable, { dailyBalance: this.state.dailyBalance })));
    }
}
exports.AdvancedTab = AdvancedTab;

},{"../../src/processing/CalculateDailyBalance":1477,"../../src/types":1491,"../Button":4,"../DailyBalanceTable":8,"react":1347}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const classNames = require("classNames");
const React = require("react");
var AlertType;
(function (AlertType) {
    AlertType[AlertType["WARNING"] = 0] = "WARNING";
    AlertType[AlertType["ERROR"] = 1] = "ERROR";
    AlertType[AlertType["INFO"] = 2] = "INFO";
    AlertType[AlertType["SUCCESS"] = 3] = "SUCCESS";
})(AlertType = exports.AlertType || (exports.AlertType = {}));
class AlertBar extends React.Component {
    render() {
        return (React.createElement("div", { className: classNames('alertbar lh-solid', {
                'bg-red': this.props.type === AlertType.ERROR,
                'bg-orange': this.props.type === AlertType.WARNING,
                'bg-blue': this.props.type === AlertType.INFO,
                'bg-green': this.props.type === AlertType.SUCCESS,
            }) },
            React.createElement("h2", { className: 'dib pl2 mb1 mt1 pb1 pt1 pre overflow-hidden' }, this.props.message),
            React.createElement("i", { className: 'fr pt1 pl2 pr2 fa fa-times-circle fa-2x grow', onClick: this.props.onClick })));
    }
}
exports.AlertBar = AlertBar;

},{"classNames":76,"react":1347}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
class Button extends React.Component {
    render() {
        return (React.createElement("button", { className: 'bg-blue white bg-animate hover-bg-dark-blue', onClick: this.props.onClick }, this.props.label));
    }
}
exports.default = Button;

},{"react":1347}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const Button_1 = require("../Button");
const Popup_1 = require("../Popup");
const Table_1 = require("../Table");
const CalculationMethodSelect_1 = require("../CalculationMethodSelect");
const types_1 = require("../../src/types");
function getLastYear(years) {
    return years[years.length - 1];
}
function createYearCalculationMethod(years, selectedYear, includePreviousYears, gainCalculationMethod) {
    const yearCalculationMethod = {};
    for (const year of years) {
        if (year === selectedYear || (includePreviousYears && year < selectedYear)) {
            yearCalculationMethod[year] = gainCalculationMethod;
        }
    }
    return yearCalculationMethod;
}
class Customize extends React.Component {
    constructor(props) {
        super(props);
        this.onSelectChange = (key) => (e) => {
            switch (key) {
                case 'year':
                    const year = e.currentTarget.value;
                    this.setState({
                        yearCalculationMethod: createYearCalculationMethod(this.props.years, year, this.state.includePreviousYears, this.state.gainCalculationMethod),
                        year,
                    });
                    break;
                case 'gainCalculationMethod':
                    const gainCalculationMethod = e.currentTarget.value;
                    this.setState({
                        yearCalculationMethod: createYearCalculationMethod(this.props.years, this.state.year, this.state.includePreviousYears, gainCalculationMethod),
                        gainCalculationMethod,
                    });
                    break;
            }
        };
        this.onCheckBoxChange = (key) => (e) => {
            this.setState({
                [key]: e.currentTarget.checked,
                yearCalculationMethod: createYearCalculationMethod(this.props.years, this.state.year, (key === 'includePreviousYears' ? e.currentTarget.checked : this.state.includePreviousYears), this.state.gainCalculationMethod),
            });
        };
        this.onYearGainChange = (key) => (e) => {
            const yearCalculationMethod = this.state.yearCalculationMethod;
            yearCalculationMethod[key] = e.currentTarget.value;
            this.setState({
                yearCalculationMethod,
            });
        };
        this.onAddOrRemoveYear = (key) => (e) => {
            const yearCalculationMethod = this.state.yearCalculationMethod;
            if (e.currentTarget.checked) {
                yearCalculationMethod[key] = e.currentTarget.value;
            }
            else {
                delete yearCalculationMethod[key];
            }
            this.setState({
                yearCalculationMethod,
            });
        };
        const yearCalculationMethods = Object.keys(props.yearCalculationMethod);
        if (yearCalculationMethods.length) {
            const allGainMethodsIdentical = yearCalculationMethods.every((val) => props.yearCalculationMethod[val] === props.yearCalculationMethod[yearCalculationMethods[0]]);
            let noGapYears = true;
            for (let index = parseInt(yearCalculationMethods[0], 10); index <= parseInt(yearCalculationMethods[yearCalculationMethods.length - 1], 10); index++) {
                if (yearCalculationMethods.indexOf(index.toString()) === -1 && props.years.indexOf(index.toString()) !== -1) {
                    noGapYears = false;
                    break;
                }
            }
            const showPerYearCalcutionMethod = (allGainMethodsIdentical && !noGapYears) || (!allGainMethodsIdentical && noGapYears);
            this.state = {
                showPerYearCalcutionMethod,
                includePreviousYears: !showPerYearCalcutionMethod,
                gainCalculationMethod: props.yearCalculationMethod[yearCalculationMethods[0]],
                year: (yearCalculationMethods.length === 1 ?
                    yearCalculationMethods[0] :
                    yearCalculationMethods[yearCalculationMethods.length - 1]),
                yearCalculationMethod: props.yearCalculationMethod
            };
        }
        else {
            this.state = {
                showPerYearCalcutionMethod: false,
                includePreviousYears: true,
                gainCalculationMethod: types_1.METHOD.FIFO,
                year: '0',
                yearCalculationMethod: {
                    0: types_1.METHOD.FIFO,
                }
            };
        }
    }
    render() {
        return (React.createElement(Popup_1.default, { onClose: this.props.onClose },
            React.createElement("div", null,
                React.createElement("h1", null, "Customize"),
                React.createElement("hr", null),
                React.createElement("div", null,
                    React.createElement("div", null,
                        React.createElement("label", null, "Customize Calcution Method Per Year"),
                        React.createElement("input", { type: "checkbox", defaultChecked: this.state.showPerYearCalcutionMethod, onChange: this.onCheckBoxChange('showPerYearCalcutionMethod') })),
                    React.createElement("div", null,
                        React.createElement("label", null, "Include Previous Years"),
                        React.createElement("input", { type: "checkbox", defaultChecked: this.state.includePreviousYears, onChange: this.onCheckBoxChange('includePreviousYears') })),
                    this.state.showPerYearCalcutionMethod ?
                        React.createElement("div", null,
                            React.createElement("label", null, "Gain Method For Each Year"),
                            React.createElement(Table_1.Table, { headers: ['Year', 'Calculation Method', 'Include Year'], rows: this.props.years.map((year) => [
                                    React.createElement("span", null, year),
                                    React.createElement(CalculationMethodSelect_1.default, { onChange: this.onYearGainChange(year), selectedMethod: this.state.yearCalculationMethod[year] }),
                                    React.createElement("input", { type: "checkbox", checked: year in this.state.yearCalculationMethod, onChange: this.onAddOrRemoveYear(year) })
                                ]) }))
                        :
                            React.createElement("div", null,
                                React.createElement("div", null,
                                    React.createElement("label", null, "Year"),
                                    React.createElement("select", { className: 'pl2', onChange: this.onSelectChange('year'), defaultValue: getLastYear(Object.keys(this.props.yearCalculationMethod)) },
                                        React.createElement("option", { key: "----", value: "0" }, "----"),
                                        this.props.years.map((year) => React.createElement("option", { key: year, value: year }, year)))),
                                React.createElement("div", null,
                                    React.createElement("label", null, "Calculation Method"),
                                    React.createElement(CalculationMethodSelect_1.default, { onChange: this.onSelectChange('gainCalculationMethod'), selectedMethod: this.props.yearCalculationMethod[getLastYear(Object.keys(this.props.yearCalculationMethod))] }))),
                    React.createElement("hr", null),
                    React.createElement("div", { className: "flex justify-around" },
                        React.createElement(Button_1.default, { label: 'Recalculate', onClick: this.props.onGenerate(this.state.yearCalculationMethod) }),
                        React.createElement(Button_1.default, { label: 'Form 8949', onClick: this.props.onForm8949Export }))))));
    }
}
exports.Customize = Customize;

},{"../../src/types":1491,"../Button":4,"../CalculationMethodSelect":7,"../Popup":14,"../Table":16,"react":1347}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const Form8949_1 = require("../../src/output/Form8949");
const CalculateGains_1 = require("../../src/processing/CalculateGains");
// import { AlertBar, AlertType } from '../AlertBar';
const Button_1 = require("../Button");
const FileDownload_1 = require("../FileDownload");
const GainsPerTradeTable_1 = require("../GainsPerTradeTable");
// import { Loader } from '../Loader';
const Customize_component_1 = require("./Customize.component");
function getTradeYears(trades) {
    const years = [];
    trades.forEach((trade) => {
        const year = new Date(trade.date).getFullYear();
        if (years.indexOf(year.toString()) === -1) {
            years.push(year.toString());
        }
    });
    return years;
}
function recalculate(holdings, trades, fiatCurrnecy, yearCalculationMethod) {
    const years = Object.keys(yearCalculationMethod);
    let newHoldings = holdings;
    if (years.length !== 1) {
        for (let index = 0; index < years.length - 1; index++) {
            const pastTrades = trades.filter((trade) => new Date(trade.date).getFullYear() === parseInt(years[index], 10));
            const result = CalculateGains_1.calculateGains(holdings, pastTrades, fiatCurrnecy, yearCalculationMethod[years[index]]);
            newHoldings = result.newHoldings;
        }
    }
    const lastYear = years[years.length - 1];
    let newTrades = trades;
    if (lastYear !== '----' && lastYear !== '0') {
        newTrades = trades.filter((trade) => new Date(trade.date).getFullYear().toString() === lastYear);
    }
    return {
        holdings: newHoldings,
        trades: newTrades,
        gainCalculationMethod: yearCalculationMethod[lastYear],
    };
}
class CalculateGains extends React.Component {
    constructor(props) {
        super(props);
        this.calculateGains = (yearCalculationMethod) => () => {
            const result = recalculate(this.props.savedData.holdings, this.props.savedData.trades, this.props.savedData.settings.fiatCurrency, yearCalculationMethod);
            const data = CalculateGains_1.calculateGainPerTrade(result.holdings, result.trades, this.props.savedData.settings.fiatCurrency, result.gainCalculationMethod);
            this.setState({
                filteredTradesWithGains: data.trades,
                longTermGains: data.longTerm,
                shortTermGains: data.shortTerm,
                showCustomizeModal: false,
                yearCalculationMethod,
            });
        };
        this.onChange = (key, extra) => (e) => {
            switch (key) {
                case 'year':
                    this.setState({
                        currentYear: parseInt(e.currentTarget.value, 10),
                    });
                    break;
                case 'yearGainCalculationMethod':
                    if (extra !== undefined) {
                        const currentYearCalculationMethod = this.state.yearCalculationMethod;
                        currentYearCalculationMethod[extra] = e.currentTarget.value;
                        this.setState({
                            yearCalculationMethod: currentYearCalculationMethod,
                        });
                    }
                    break;
            }
        };
        this.generateForm8949 = () => {
            const result = recalculate(this.props.savedData.holdings, this.props.savedData.trades, this.props.savedData.settings.fiatCurrency, this.state.yearCalculationMethod);
            const data = Form8949_1.default(result.holdings, result.trades, this.props.savedData.settings.fiatCurrency, result.gainCalculationMethod);
            this.setState({ downloadProps: {
                    data,
                    fileName: 'Form8949.csv',
                    download: true,
                } });
        };
        this.customizeModal = () => {
            this.setState({ showCustomizeModal: !this.state.showCustomizeModal });
        };
        this.state = {
            years: getTradeYears(props.savedData.trades),
            downloadProps: {
                fileName: '',
                data: '',
                download: false,
            },
            currentYear: 0,
            showCustomizeModal: false,
            yearCalculationMethod: {},
        };
    }
    render() {
        return (React.createElement("div", { className: 'calculategains' },
            React.createElement("div", { className: 'tc pt2' },
                React.createElement(Button_1.default, { label: 'Customize', onClick: this.customizeModal })),
            this.state.filteredTradesWithGains !== undefined && this.state.filteredTradesWithGains.length > 0 &&
                React.createElement("div", null,
                    React.createElement("div", { className: 'flex justify-center' },
                        React.createElement("h3", { className: 'pa2' },
                            "Short Term Gains: ",
                            this.state.shortTermGains),
                        React.createElement("h3", { className: 'pa2' },
                            "Long Term Gains: ",
                            this.state.longTermGains)),
                    React.createElement("hr", { className: "pa1 ma1" }),
                    React.createElement(GainsPerTradeTable_1.GainsPerTradeTable, { fiatCurrency: this.props.savedData.settings.fiatCurrency, trades: this.state.filteredTradesWithGains })),
            React.createElement(FileDownload_1.FileDownload, { data: this.state.downloadProps.data, fileName: this.state.downloadProps.fileName, download: this.state.downloadProps.download }),
            this.state.showCustomizeModal &&
                React.createElement(Customize_component_1.Customize, { onClose: this.customizeModal, onChange: this.onChange, onGenerate: this.calculateGains, onForm8949Export: this.generateForm8949, years: this.state.years, yearCalculationMethod: this.state.yearCalculationMethod })));
    }
}
exports.CalculateGains = CalculateGains;

},{"../../src/output/Form8949":1469,"../../src/processing/CalculateGains":1478,"../Button":4,"../FileDownload":11,"../GainsPerTradeTable":12,"./Customize.component":5,"react":1347}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const types_1 = require("../../src/types");
class CalculationMethodSelect extends React.Component {
    render() {
        return (React.createElement("select", { className: 'pl2', onChange: this.props.onChange, defaultValue: this.props.selectedMethod }, Object.keys(types_1.METHOD).map((method) => React.createElement("option", { key: method, value: types_1.METHOD[method] }, method))));
    }
}
exports.default = CalculationMethodSelect;

},{"../../src/types":1491,"react":1347}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const Table_1 = require("../Table");
class DailyBalanceTable extends React.Component {
    render() {
        return (React.createElement(Table_1.Table, { headers: ['Date', 'Holdings', 'Fiat Value'], rows: this.props.dailyBalance.map((balance) => [
                React.createElement("p", null, balance.date.toUTCString()),
                React.createElement("div", null, Object.keys(balance.holdings).map((currency) => React.createElement("p", null, `
                            ${currency} - ${balance.holdings[currency].amount} - ${balance.holdings[currency].fiatValue}
                        `))),
                React.createElement("p", null, balance.fiatValue),
            ]) }));
    }
}
exports.DailyBalanceTable = DailyBalanceTable;

},{"../Table":16,"react":1347}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const Table_1 = require("../Table");
const Toggle_1 = require("../Toggle");
class DuplicateTradesTable extends React.Component {
    render() {
        return (React.createElement(Table_1.Table, { headers: [
                'Date',
                'ID',
                'Amount Sold',
                'Sold Currency',
                'Rate',
                'Bought Currency',
                'Amount Bought',
                'Duplicate Probability',
                'Duplicate',
            ], rows: this.props.trades.map((trade) => [
                React.createElement("span", null, new Date(trade.date).toUTCString()),
                React.createElement("span", null, trade.id),
                React.createElement("span", null, trade.amountSold.toFixed(8)),
                React.createElement("span", null, trade.soldCurrency),
                React.createElement("div", null,
                    trade.rate.toFixed(8),
                    React.createElement("i", { className: 'fa fa-arrow-circle-right' }),
                    React.createElement("br", null),
                    React.createElement("i", { className: 'fa fa-arrow-circle-left' }),
                    trade.amountSold / trade.rate / trade.amountSold),
                React.createElement("span", null, trade.boughtCurrency),
                React.createElement("span", null, (trade.amountSold / trade.rate).toFixed(8)),
                React.createElement("span", null, trade.probability),
                React.createElement(Toggle_1.Toggle, { onChange: this.props.duplicateChange(trade.id), defaultValue: trade.duplicate }),
            ]) }));
    }
}
exports.DuplicateTradesTable = DuplicateTradesTable;

},{"../Table":16,"../Toggle":17,"react":1347}],10:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
class FileBrowse extends React.Component {
    constructor(props) {
        super(props);
        this.onetime = true;
        this.onSubmit = () => __awaiter(this, void 0, void 0, function* () {
            const reader = new FileReader();
            reader.onload = () => this.props.onLoaded(reader.result, this.fileInput, reader);
            if (this.fileInput.current !== null) {
                if (this.fileInput.current.files !== null) {
                    yield reader.readAsText(this.fileInput.current.files[0]);
                }
            }
        });
        this.fileInput = React.createRef();
    }
    componentDidUpdate(prevProps) {
        // complicated 3 boolean logic to stop some browsers(firefox/edge) from causing 2 popup windows
        if (this.props.browse) {
            if (!prevProps.browse || this.onetime) {
                if (!this.onetime && prevProps.browse) {
                    this.onetime = !this.onetime;
                }
                if (this.fileInput.current !== null) {
                    this.fileInput.current.click();
                }
                else {
                    alert('error clickng file input');
                }
            }
            else {
                if (this.onetime && !prevProps.browse) {
                    this.props.onLoaded('');
                }
                this.onetime = !this.onetime;
            }
        } // this set state valid once
    }
    render() {
        return (React.createElement("input", { type: 'file', className: 'FileBrowse dn', ref: this.fileInput, onChange: this.onSubmit }));
    }
}
exports.FileBrowse = FileBrowse;

},{"react":1347}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
class FileDownload extends React.Component {
    constructor(props) {
        super(props);
        this.downloadLink = React.createRef();
    }
    componentDidUpdate() {
        if (this.props.download) {
            if (this.downloadLink.current !== null) {
                this.downloadLink.current.click();
            }
            else {
                alert('error clickng file input');
            }
        }
    }
    render() {
        return (React.createElement("a", { download: this.props.fileName, href: `data:text/plain;charset=utf-8,${encodeURIComponent(this.props.data)}`, ref: this.downloadLink, className: 'dn' }));
    }
}
exports.FileDownload = FileDownload;

},{"react":1347}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const Table_1 = require("../Table");
class GainsPerTradeTable extends React.Component {
    render() {
        return (React.createElement(Table_1.Table, { headers: [
                'Date',
                'ID',
                'Amount Sold',
                'Sold Currency',
                'Rate',
                'Bought Currency',
                'Amount Bought',
                'Fiat Rate',
                'Fiat Value',
                'Short Term Gain',
                'Long Term Gain',
            ], rows: this.props.trades.map((trade) => [
                React.createElement("span", null, new Date(trade.date).toUTCString()),
                React.createElement("span", null, trade.id),
                React.createElement("span", null, trade.amountSold.toFixed(8)),
                React.createElement("span", null, trade.soldCurrency),
                React.createElement("div", null,
                    trade.rate.toFixed(8),
                    React.createElement("i", { className: 'fa fa-arrow-circle-right' }),
                    React.createElement("br", null),
                    React.createElement("i", { className: 'fa fa-arrow-circle-left' }),
                    trade.amountSold / trade.rate / trade.amountSold),
                React.createElement("span", null, trade.boughtCurrency),
                React.createElement("span", null, (trade.amountSold / trade.rate).toFixed(8)),
                React.createElement("span", null, trade.fiatRate.toFixed(8)),
                React.createElement("span", null, trade.soldCurrency === this.props.fiatCurrency ?
                    trade.amountSold :
                    (trade.amountSold * trade.fiatRate).toFixed(8)),
                React.createElement("span", null, trade.shortTerm.toFixed(2)),
                React.createElement("span", null, trade.longTerm.toFixed(2)),
            ]) }));
    }
}
exports.GainsPerTradeTable = GainsPerTradeTable;

},{"../Table":16,"react":1347}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// const React = require('react');
const React = require("react");
class Loader extends React.Component {
    render() {
        return (React.createElement("div", { className: 'center mt5 loader' },
            React.createElement("link", { rel: 'stylesheet', type: 'text/css', href: './components/Loader/index.css' })));
    }
}
exports.Loader = Loader;

},{"react":1347}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
class Popup extends React.Component {
    render() {
        return (React.createElement("div", { className: 'popup' },
            React.createElement("link", { rel: 'stylesheet', type: 'text/css', href: './components/Popup/index.css' }),
            React.createElement("div", { className: 'fixed w-100 h-100 top-0 right-0 left-0 bottom-0 bg-black o-70' }),
            React.createElement("div", { className: `dialog absolute w-50 ba b--black bw2 bg-white pa2 ${this.props.className}` },
                React.createElement("i", { className: 'fr fa fa-times fa-2x', onClick: this.props.onClose }),
                this.props.children)));
    }
}
exports.default = Popup;

},{"react":1347}],15:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const types_1 = require("../../src/types");
const Button_1 = require("../Button");
const Popup_1 = require("../Popup");
const CalculationMethodSelect_1 = require("../CalculationMethodSelect");
function valueIfNotUndefined(object, key, fallback) {
    if (object !== undefined) {
        if (key in object) {
            return object[key];
        }
    }
    return fallback;
}
class Settings extends React.Component {
    constructor(props) {
        super(props);
        this.onSave = () => __awaiter(this, void 0, void 0, function* () {
            const result = yield this.props.onSettingsSave({ settings: this.state });
            if (result) {
                this.props.onClose();
            }
            else {
                alert('Unable to save settings');
            }
        });
        this.onChange = (key) => (e) => {
            switch (key) {
                case 'fiatRateMethod':
                    this.setState({ fiatRateMethod: e.currentTarget.value });
                    break;
                case 'fiatCurrency':
                    this.setState({ fiatCurrency: e.currentTarget.value.toUpperCase() });
                    break;
                case 'gainCalculationMethod':
                    this.setState({ gainCalculationMethod: e.currentTarget.value });
                    break;
            }
        };
        this.state = {
            fiatRateMethod: valueIfNotUndefined(props.settings, 'fiatRateMethod', Object.keys(types_1.FiatRateMethod)[0]),
            fiatCurrency: valueIfNotUndefined(props.settings, 'fiatCurrency', 'USD'),
            gainCalculationMethod: valueIfNotUndefined(props.settings, 'gainCalculationMethod', types_1.METHOD.FIFO),
        };
    }
    render() {
        return (React.createElement(Popup_1.default, { onClose: this.props.onClose },
            React.createElement("div", null,
                React.createElement("h1", { className: 'mt1 mb1' }, "Settings"),
                React.createElement("hr", null),
                React.createElement("div", null,
                    React.createElement("label", { className: 'pr1' }, "Fiat Rate Calculation Method:"),
                    React.createElement("select", { defaultValue: this.state.fiatRateMethod, onChange: this.onChange('fiatRateMethod') }, Object.keys(types_1.FiatRateMethod).map((method) => React.createElement("option", { key: method, value: method }, types_1.FiatRateMethod[method])))),
                React.createElement("div", null,
                    React.createElement("label", { className: 'pr1' }, "Fiat Rate Calculation Method:"),
                    React.createElement("input", { type: 'text', defaultValue: this.state.fiatCurrency, onChange: this.onChange('fiatCurrency') })),
                React.createElement("div", null,
                    React.createElement("label", { className: 'pr1' }, "Fiat Gain Calculation Method:"),
                    React.createElement(CalculationMethodSelect_1.default, { onChange: this.onChange('gainCalculationMethod'), selectedMethod: this.state.gainCalculationMethod })),
                React.createElement("hr", null),
                React.createElement(Button_1.default, { label: 'Save', onClick: this.onSave }))));
    }
}
exports.Settings = Settings;

},{"../../src/types":1491,"../Button":4,"../CalculationMethodSelect":7,"../Popup":14,"react":1347}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
class Table extends React.Component {
    render() {
        return (React.createElement("div", { className: 'tradesTable pa4' },
            React.createElement("div", { className: 'overflow-auto' },
                React.createElement("table", { className: 'f6 w-100 mw8 center' },
                    React.createElement("thead", null,
                        React.createElement("tr", { className: 'stripe-dark' }, this.props.headers.map((header) => React.createElement("th", { key: header, className: 'fw6 tl pa3 bg-white' }, header)))),
                    React.createElement("tbody", { className: 'lh-copy' }, this.props.rows.map((row, index) => React.createElement("tr", { className: 'stripe-dark', key: index }, row.map((col, colindex) => React.createElement("td", { key: `${index}-${colindex}`, className: 'pa2 mw4 break-word' }, col)))))))));
    }
}
exports.Table = Table;

},{"react":1347}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
class Toggle extends React.Component {
    render() {
        return (React.createElement("label", { className: 'toggle' },
            React.createElement("link", { rel: 'stylesheet', type: 'text/css', href: './components/Toggle/index.css' }),
            React.createElement("input", { type: 'checkbox', onChange: this.props.onChange, defaultChecked: this.props.defaultValue }),
            React.createElement("span", { className: 'slider' })));
    }
}
exports.Toggle = Toggle;

},{"react":1347}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto = require("crypto");
const React = require("react");
const validator = require("validator");
const utils_1 = require("../../src/parsers/utils");
const Button_1 = require("../Button");
class TradeDetails extends React.Component {
    constructor(props) {
        super(props);
        this.onChange = (key) => (e) => {
            let rate = this.state.rate;
            if (key === 'amountBought' && this.state.amountSold !== '' && this.state.amountSold !== '0') {
                rate = (parseFloat(this.state.amountSold) / parseFloat(e.currentTarget.value)).toString();
            }
            if (key === 'amountSold' && this.state.amountBought !== '' && this.state.amountBought !== '0') {
                rate = (parseFloat(e.currentTarget.value) / parseFloat(this.state.amountBought)).toString();
            }
            this.setState({ [key]: e.currentTarget.value, rate });
        };
        this.onSubmit = () => {
            const errors = [];
            const keys = Object.keys(this.state);
            for (const key of keys) {
                switch (key) {
                    case 'boughtCurrency':
                    case 'soldCurrency':
                        if (!validator.isAlpha(this.state[key])) {
                            errors.push(`${key} must consist of only english letters`);
                            break;
                        }
                        if (!validator.isLength(this.state[key], { min: 3, max: 5 })) {
                            errors.push(`${key} must be 3 to 5 characters long`);
                            break;
                        }
                        break;
                    case 'amountBought':
                    case 'amountSold':
                        if (!validator.isNumeric(this.state[key].toString())) {
                            errors.push(`${key} must be numerical`);
                            break;
                        }
                        if (!validator.isFloat(this.state[key].toString(), { min: 0.00000001 })) {
                            errors.push(`${key} must be greater then 0.00000001`);
                            break;
                        }
                        break;
                    case 'date':
                        if (!validator.isAfter(this.state[key].toString(), '1/1/2010')) {
                            errors.push(`${key} must be a date after 2010`);
                            break;
                        }
                        if (!validator.isBefore(this.state[key].toString())) {
                            errors.push(`${key} must be a date in the present or past not future`);
                            break;
                        }
                        break;
                }
            }
            if (errors.length) {
                alert(errors.join('\n'));
            }
            else {
                const trade = {
                    date: utils_1.createDateAsUTC(new Date(this.state.date)).getTime(),
                    amountSold: parseFloat(this.state.amountSold),
                    boughtCurrency: this.state.boughtCurrency.toUpperCase(),
                    soldCurrency: this.state.soldCurrency.toUpperCase(),
                    rate: parseFloat(this.state.rate),
                    exchange: this.state.exchange,
                };
                let id = this.state.id;
                if (id === '') {
                    id = crypto.createHash('sha256').update(JSON.stringify(trade)).digest('hex');
                }
                trade.id = id;
                this.props.onSubmit(trade);
            }
        };
        if ('trade' in props && props.trade !== undefined) {
            this.state = {
                boughtCurrency: props.trade.boughtCurrency,
                soldCurrency: props.trade.soldCurrency,
                amountBought: (props.trade.amountSold / props.trade.rate).toString(),
                amountSold: props.trade.amountSold.toString(),
                rate: props.trade.rate.toString(),
                date: new Date(props.trade.date),
                exchange: props.trade.exchange,
                id: props.trade.id,
            };
        }
        else {
            this.state = {
                boughtCurrency: '',
                soldCurrency: '',
                amountSold: '',
                amountBought: '',
                rate: '',
                date: new Date(),
                exchange: '',
                id: '',
            };
        }
    }
    render() {
        return (React.createElement("div", { className: `TradeDetails w-70 center tc ${this.props.className}` },
            React.createElement("div", { className: 'fl w-100 pa1' },
                React.createElement("h4", { className: 'pb0 mb0 pt0 mt0 tc' }, "Exchange"),
                React.createElement("input", { className: 'w-100 tc', value: this.state.exchange, onChange: this.onChange('exchange') })),
            React.createElement("div", { className: 'fl w-100 pa1' },
                React.createElement("h4", { className: 'pb0 mb0 pt0 mt0 tc' }, "ID"),
                React.createElement("p", { className: 'pb0 mb0 pt0 mt0 tc' }, "will default to a hash of all trade data"),
                React.createElement("input", { className: 'w-100 tc', value: this.state.id, onChange: this.onChange('id') })),
            React.createElement("div", { className: 'fl w-100 pa1' },
                React.createElement("h4", { className: 'pb0 mb0 pt0 mt0 tc' }, "Date"),
                React.createElement("input", { className: 'w-100 tc', value: this.state.date.toString(), onChange: this.onChange('date') })),
            React.createElement("div", { className: 'fl w-50 pa1' },
                React.createElement("h4", { className: 'pb0 mb0 pt0 mt0 tc' }, "Bought Currency"),
                React.createElement("input", { className: 'w-100 tc', value: this.state.boughtCurrency, onChange: this.onChange('boughtCurrency') })),
            React.createElement("div", { className: 'fl w-50 pa1' },
                React.createElement("h4", { className: 'pb0 mb0 pt0 mt0 tc' }, "Sold Currency"),
                React.createElement("input", { className: 'w-100 tc', value: this.state.soldCurrency, onChange: this.onChange('soldCurrency') })),
            React.createElement("div", { className: 'fl w-third  pa1' },
                React.createElement("h4", { className: 'pb0 mb0 pt0 mt0 tc' }, "Bought Amount"),
                React.createElement("input", { className: 'w-100 tc', value: this.state.amountBought, onChange: this.onChange('amountBought') })),
            React.createElement("div", { className: 'fl w-third  pa1' },
                React.createElement("h4", { className: 'pb0 mb0 pt0 mt0 tc' }, "Rate"),
                React.createElement("input", { className: 'w-100 tc', value: this.state.rate, readOnly: true })),
            React.createElement("div", { className: 'fl w-third  pa1' },
                React.createElement("h4", { className: 'pb0 mb0 pt0 mt0 tc' }, "Sold Amount"),
                React.createElement("input", { className: 'w-100 tc', value: this.state.amountSold, onChange: this.onChange('amountSold') })),
            React.createElement("div", { className: 'fl w-100' },
                React.createElement(Button_1.default, { className: 'center', label: 'Add Trade', onClick: this.onSubmit }))));
    }
}
exports.default = TradeDetails;

},{"../../src/parsers/utils":1476,"../Button":4,"crypto":86,"react":1347,"validator":1391}],19:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const SortTrades_1 = require("../../src/processing/SortTrades");
const Popup_1 = require("../Popup");
const Table_1 = require("../Table");
const TradeDetails_1 = require("../TradeDetails");
class TradesTable extends React.Component {
    constructor(props) {
        super(props);
        this.changePopupStatus = (tradeID) => () => {
            this.setState({ popup: tradeID });
        };
        this.editTrade = (originalID) => (editedTrade) => __awaiter(this, void 0, void 0, function* () {
            const newTrades = this.props.trades.filter((trade) => trade.id !== originalID);
            newTrades.push(editedTrade);
            const sortedTrades = SortTrades_1.default(newTrades);
            if (yield this.props.save(sortedTrades)) {
                this.setState({ popup: undefined });
            }
        });
        this.state = {
            popup: undefined,
        };
    }
    render() {
        return (React.createElement("div", null,
            React.createElement(Table_1.Table, { headers: [
                    'Date',
                    'ID',
                    'Amount Sold',
                    'Sold Currency',
                    'Rate',
                    'Bought Currency',
                    'Amount Bought',
                    '',
                ], rows: this.props.trades.map((trade) => [
                    React.createElement("span", null, new Date(trade.date).toUTCString()),
                    React.createElement("span", null, trade.id),
                    React.createElement("span", null, trade.amountSold.toFixed(8)),
                    React.createElement("span", null, trade.soldCurrency),
                    React.createElement("div", null,
                        trade.rate.toFixed(8),
                        React.createElement("i", { className: 'fa fa-arrow-circle-right' }),
                        React.createElement("br", null),
                        React.createElement("i", { className: 'fa fa-arrow-circle-left' }),
                        trade.amountSold / trade.rate / trade.amountSold),
                    React.createElement("span", null, trade.boughtCurrency),
                    React.createElement("span", null, (trade.amountSold / trade.rate).toFixed(8)),
                    React.createElement("i", { className: 'fa fa-pencil-square', onClick: this.changePopupStatus(trade.id) }),
                ]) }),
            this.state.popup !== undefined &&
                React.createElement(Popup_1.default, { children: React.createElement(TradeDetails_1.default, { onSubmit: this.editTrade(this.state.popup), trade: this.props.trades.filter((trade) => trade.id === this.state.popup)[0], className: 'w-100' }), className: 'w-70', onClose: this.changePopupStatus(undefined) })));
    }
}
exports.TradesTable = TradesTable;

},{"../../src/processing/SortTrades":1481,"../Popup":14,"../Table":16,"../TradeDetails":18,"react":1347}],20:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const getFiatRate_1 = require("../../src/processing/getFiatRate");
const SortTrades_1 = require("../../src/processing/SortTrades");
const types_1 = require("../../src/types");
const Button_1 = require("../Button");
const Loader_1 = require("../Loader");
const TradesTable_1 = require("../TradesTable");
class ViewTrades extends React.Component {
    constructor(props) {
        super(props);
        this.save = (trades) => this.props.save({ trades: trades });
        this.refetchFiatRate = () => __awaiter(this, void 0, void 0, function* () {
            this.setState({ processing: true });
            const newTrades = yield getFiatRate_1.addFiatRateToTrades(this.props.savedData.trades, this.props.savedData.settings.fiatCurrency, types_1.FiatRateMethod[this.props.savedData.settings.fiatRateMethod]);
            const sortedTrades = SortTrades_1.default(newTrades);
            this.props.save({ trades: sortedTrades });
            this.setState({ processing: false });
        });
        this.state = {
            processing: false,
        };
    }
    render() {
        return (React.createElement("div", { className: 'viewTrades' },
            React.createElement("h3", { className: 'tc' }, "Trades"),
            React.createElement("hr", { className: 'center w-50' }),
            React.createElement("div", { className: 'tc center' },
                React.createElement(Button_1.default, { label: 'Refresh Trade Data', onClick: this.refetchFiatRate }),
                this.state.processing ?
                    React.createElement(Loader_1.Loader, null)
                    :
                        this.props.savedData.trades.length > 0 ?
                            React.createElement(TradesTable_1.TradesTable, { trades: this.props.savedData.trades, save: this.save })
                            :
                                React.createElement("h3", { className: 'tc' },
                                    "No Trades ",
                                    React.createElement("i", { className: 'fa fa-frown-o' })))));
    }
}
exports.ViewTrades = ViewTrades;

},{"../../src/processing/SortTrades":1481,"../../src/processing/getFiatRate":1485,"../../src/types":1491,"../Button":4,"../Loader":13,"../TradesTable":19,"react":1347}],21:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const classnames = require("classnames");
const React = require("react");
const savedDataConverter_1 = require("../src/savedDataConverter");
const save_1 = require("../src/save");
const AddTrades_1 = require("./AddTrades");
const AdvancedTab_1 = require("./AdvancedTab");
const Button_1 = require("./Button");
const CalculateGains_1 = require("./CalculateGains");
const FileBrowse_1 = require("./FileBrowse");
const FileDownload_1 = require("./FileDownload");
const Popup_1 = require("./Popup");
const Settings_1 = require("./Settings");
const ViewTrades_1 = require("./ViewTrades");
var TABS;
(function (TABS) {
    TABS["HOME"] = "Home";
    TABS["VIEW_TRADES"] = "View Trades";
    TABS["ADD_TRADES"] = "Add Trades";
    TABS["CALCULATE_GAINS"] = "Calculate Gains";
    TABS["ADVANCED"] = "Advanced";
})(TABS || (TABS = {}));
class rootElement extends React.Component {
    constructor(props) {
        super(props);
        this.saveData = (data) => __awaiter(this, void 0, void 0, function* () {
            const savedData = save_1.default(data, this.state.savedData);
            try {
                this.setState({
                    downloadProps: {
                        data: JSON.stringify(savedData),
                        fileName: 'data.json',
                        download: true,
                    },
                    savedData,
                });
                return true;
            }
            catch (err) {
                alert(err);
                return false;
            }
        });
        this.showCurrentTab = (currentTab) => {
            switch (currentTab) {
                case TABS.ADD_TRADES:
                    return React.createElement(AddTrades_1.AddTrades, { savedData: this.state.savedData, save: this.saveData });
                case TABS.VIEW_TRADES:
                    return React.createElement(ViewTrades_1.ViewTrades, { savedData: this.state.savedData, save: this.saveData });
                case TABS.CALCULATE_GAINS:
                    return React.createElement(CalculateGains_1.CalculateGains, { savedData: this.state.savedData });
                case TABS.ADVANCED:
                    return React.createElement(AdvancedTab_1.AdvancedTab, { savedData: this.state.savedData });
                case TABS.HOME:
                    return;
                default:
                    return;
            }
        };
        this.updateTab = (newTab) => () => {
            this.setState({ currentTab: newTab });
        };
        this.changePopupState = () => {
            this.setState({ loadDataPopup: !this.state.loadDataPopup });
        };
        this.loadData = (data) => {
            this.setState({ fileBrowseOpen: false });
            if (data !== '') {
                try {
                    const parsedData = JSON.parse(data);
                    const shouldSave = savedDataConverter_1.default(parsedData);
                    if (shouldSave) {
                        this.saveData(parsedData);
                    }
                    this.setState({
                        savedData: parsedData,
                        loadDataPopup: false,
                    });
                }
                catch (ex) {
                    alert('Unable to parse saved data');
                }
            }
        };
        this.openFileBrowse = () => {
            this.setState({ fileBrowseOpen: true });
        };
        this.settingsPopup = () => {
            this.setState({ settingsPopup: !this.state.settingsPopup });
        };
        this.state = {
            processing: false,
            duplicateTrades: [],
            currentTab: TABS.HOME,
            fileBrowseOpen: false,
            loadDataPopup: props.browser || props.savedData.trades.length +
                Object.keys(props.savedData.holdings).length === 0,
            downloadProps: {
                data: '',
                fileName: 'data.json',
                download: false,
            },
            settingsPopup: false,
            savedData: props.savedData,
        };
    }
    componentDidMount() {
        const savedDataLoaded = this.props.savedData.trades.length +
            Object.keys(this.props.savedData.holdings).length !== 0;
        if (savedDataLoaded) {
            const savedData = this.props.savedData;
            const shouldSave = savedDataConverter_1.default(savedData);
            if (shouldSave) {
                this.saveData(savedData);
            }
        }
    }
    componentDidUpdate() {
        if (this.state.downloadProps.download) {
            this.setState({
                downloadProps: {
                    data: '',
                    fileName: 'data.json',
                    download: false,
                },
            });
        }
    }
    render() {
        return (React.createElement("div", { className: 'app' },
            this.state.loadDataPopup &&
                React.createElement(Popup_1.default, { onClose: this.changePopupState },
                    React.createElement("div", null,
                        React.createElement("h1", null, "Welcome to CryptoTithe"),
                        React.createElement("h5", null, "Great Description to be put here"),
                        React.createElement(Button_1.default, { label: 'Load Existing Data', onClick: this.openFileBrowse }),
                        React.createElement(FileBrowse_1.FileBrowse, { onLoaded: this.loadData, browse: this.state.fileBrowseOpen }))),
            this.state.downloadProps &&
                React.createElement(FileDownload_1.FileDownload, { data: this.state.downloadProps.data, fileName: this.state.downloadProps.fileName, download: this.state.downloadProps.download }),
            this.state.settingsPopup &&
                React.createElement(Settings_1.Settings, { settings: this.state.savedData.settings, onSettingsSave: this.saveData, onClose: this.settingsPopup }),
            React.createElement("link", { rel: 'stylesheet', type: 'text/css', href: './components/index.css' }),
            React.createElement("i", { className: 'fa fa-cog fa-2x moon-gray fr pr1 bg-dark-gray', onClick: this.settingsPopup }),
            React.createElement("div", { className: 'flex bg-dark-gray h2' }, Object.keys(TABS).map((key) => React.createElement("h3", { key: key, className: classnames('pr2 pl2 ml2 mr2 moon-gray grow mt1 mb0', {
                    'bg-dark-gray': TABS[key] !== this.state.currentTab,
                    'bg-navy': TABS[key] === this.state.currentTab,
                }), onClick: this.updateTab(TABS[key]) }, TABS[key]))),
            React.createElement("div", { className: 'openTab' }, this.showCurrentTab(this.state.currentTab))));
    }
}
exports.rootElement = rootElement;

},{"../src/save":1487,"../src/savedDataConverter":1490,"./AddTrades":1,"./AdvancedTab":2,"./Button":4,"./CalculateGains":6,"./FileBrowse":10,"./FileDownload":11,"./Popup":14,"./Settings":15,"./ViewTrades":20,"classnames":77,"react":1347}],22:[function(require,module,exports){
(function (Buffer){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util = require("util");
const toString = Object.prototype.toString;
const isOfType = (type) => (value) => typeof value === type; // tslint:disable-line:strict-type-predicates
const getObjectType = (value) => {
    const objectName = toString.call(value).slice(8, -1);
    if (objectName) {
        return objectName;
    }
    return null;
};
const isObjectOfType = (typeName) => (value) => {
    return getObjectType(value) === typeName;
};
function is(value) {
    if (value === null) {
        return "null" /* null */;
    }
    if (value === true || value === false) {
        return "boolean" /* boolean */;
    }
    const type = typeof value;
    if (type === 'undefined') {
        return "undefined" /* undefined */;
    }
    if (type === 'string') {
        return "string" /* string */;
    }
    if (type === 'number') {
        return "number" /* number */;
    }
    if (type === 'symbol') {
        return "symbol" /* symbol */;
    }
    if (is.function_(value)) {
        return "Function" /* Function */;
    }
    if (Array.isArray(value)) {
        return "Array" /* Array */;
    }
    if (Buffer.isBuffer(value)) {
        return "Buffer" /* Buffer */;
    }
    const tagType = getObjectType(value);
    if (tagType) {
        return tagType;
    }
    if (value instanceof String || value instanceof Boolean || value instanceof Number) {
        throw new TypeError('Please don\'t use object wrappers for primitive types');
    }
    return "Object" /* Object */;
}
(function (is) {
    const isObject = (value) => typeof value === 'object';
    // tslint:disable:variable-name
    is.undefined = isOfType('undefined');
    is.string = isOfType('string');
    is.number = isOfType('number');
    is.function_ = isOfType('function');
    is.null_ = (value) => value === null;
    is.class_ = (value) => is.function_(value) && value.toString().startsWith('class ');
    is.boolean = (value) => value === true || value === false;
    // tslint:enable:variable-name
    is.symbol = isOfType('symbol');
    is.array = Array.isArray;
    is.buffer = Buffer.isBuffer;
    is.nullOrUndefined = (value) => is.null_(value) || is.undefined(value);
    is.object = (value) => !is.nullOrUndefined(value) && (is.function_(value) || isObject(value));
    is.iterable = (value) => !is.nullOrUndefined(value) && is.function_(value[Symbol.iterator]);
    is.generator = (value) => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);
    is.nativePromise = isObjectOfType("Promise" /* Promise */);
    const hasPromiseAPI = (value) => !is.null_(value) &&
        isObject(value) &&
        is.function_(value.then) &&
        is.function_(value.catch);
    is.promise = (value) => is.nativePromise(value) || hasPromiseAPI(value);
    // TODO: Change to use `isObjectOfType` once Node.js 6 or higher is targeted
    const isFunctionOfType = (type) => (value) => is.function_(value) && is.function_(value.constructor) && value.constructor.name === type;
    is.generatorFunction = isFunctionOfType('GeneratorFunction');
    is.asyncFunction = isFunctionOfType('AsyncFunction');
    is.boundFunction = (value) => is.function_(value) && !value.hasOwnProperty('prototype');
    is.regExp = isObjectOfType("RegExp" /* RegExp */);
    is.date = isObjectOfType("Date" /* Date */);
    is.error = isObjectOfType("Error" /* Error */);
    is.map = isObjectOfType("Map" /* Map */);
    is.set = isObjectOfType("Set" /* Set */);
    is.weakMap = isObjectOfType("WeakMap" /* WeakMap */);
    is.weakSet = isObjectOfType("WeakSet" /* WeakSet */);
    is.int8Array = isObjectOfType("Int8Array" /* Int8Array */);
    is.uint8Array = isObjectOfType("Uint8Array" /* Uint8Array */);
    is.uint8ClampedArray = isObjectOfType("Uint8ClampedArray" /* Uint8ClampedArray */);
    is.int16Array = isObjectOfType("Int16Array" /* Int16Array */);
    is.uint16Array = isObjectOfType("Uint16Array" /* Uint16Array */);
    is.int32Array = isObjectOfType("Int32Array" /* Int32Array */);
    is.uint32Array = isObjectOfType("Uint32Array" /* Uint32Array */);
    is.float32Array = isObjectOfType("Float32Array" /* Float32Array */);
    is.float64Array = isObjectOfType("Float64Array" /* Float64Array */);
    is.arrayBuffer = isObjectOfType("ArrayBuffer" /* ArrayBuffer */);
    is.sharedArrayBuffer = isObjectOfType("SharedArrayBuffer" /* SharedArrayBuffer */);
    is.dataView = isObjectOfType("DataView" /* DataView */);
    // TODO: Remove `object` checks when targeting ES2015 or higher
    // See `Notes`: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf
    is.directInstanceOf = (instance, klass) => is.object(instance) && is.object(klass) && Object.getPrototypeOf(instance) === klass.prototype;
    is.truthy = (value) => Boolean(value);
    is.falsy = (value) => !value;
    is.nan = (value) => Number.isNaN(value);
    const primitiveTypes = new Set([
        'undefined',
        'string',
        'number',
        'boolean',
        'symbol'
    ]);
    is.primitive = (value) => is.null_(value) || primitiveTypes.has(typeof value);
    is.integer = (value) => Number.isInteger(value);
    is.safeInteger = (value) => Number.isSafeInteger(value);
    is.plainObject = (value) => {
        // From: https://github.com/sindresorhus/is-plain-obj/blob/master/index.js
        let prototype;
        return getObjectType(value) === "Object" /* Object */ &&
            (prototype = Object.getPrototypeOf(value), prototype === null || // tslint:disable-line:ban-comma-operator
                prototype === Object.getPrototypeOf({}));
    };
    const typedArrayTypes = new Set([
        "Int8Array" /* Int8Array */,
        "Uint8Array" /* Uint8Array */,
        "Uint8ClampedArray" /* Uint8ClampedArray */,
        "Int16Array" /* Int16Array */,
        "Uint16Array" /* Uint16Array */,
        "Int32Array" /* Int32Array */,
        "Uint32Array" /* Uint32Array */,
        "Float32Array" /* Float32Array */,
        "Float64Array" /* Float64Array */
    ]);
    is.typedArray = (value) => {
        const objectType = getObjectType(value);
        if (objectType === null) {
            return false;
        }
        return typedArrayTypes.has(objectType);
    };
    const isValidLength = (value) => is.safeInteger(value) && value > -1;
    is.arrayLike = (value) => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);
    is.inRange = (value, range) => {
        if (is.number(range)) {
            return value >= Math.min(0, range) && value <= Math.max(range, 0);
        }
        if (is.array(range) && range.length === 2) {
            // TODO: Use spread operator here when targeting Node.js 6 or higher
            return value >= Math.min.apply(null, range) && value <= Math.max.apply(null, range);
        }
        throw new TypeError(`Invalid range: ${util.inspect(range)}`);
    };
    const NODE_TYPE_ELEMENT = 1;
    const DOM_PROPERTIES_TO_CHECK = [
        'innerHTML',
        'ownerDocument',
        'style',
        'attributes',
        'nodeValue'
    ];
    is.domElement = (value) => is.object(value) && value.nodeType === NODE_TYPE_ELEMENT && is.string(value.nodeName) &&
        !is.plainObject(value) && DOM_PROPERTIES_TO_CHECK.every(property => property in value);
    is.nodeStream = (value) => !is.nullOrUndefined(value) && isObject(value) && is.function_(value.pipe);
    is.infinite = (value) => value === Infinity || value === -Infinity;
    const isAbsoluteMod2 = (value) => (rem) => is.integer(rem) && Math.abs(rem % 2) === value;
    is.even = isAbsoluteMod2(0);
    is.odd = isAbsoluteMod2(1);
    const isWhiteSpaceString = (value) => is.string(value) && /\S/.test(value) === false;
    const isEmptyStringOrArray = (value) => (is.string(value) || is.array(value)) && value.length === 0;
    const isEmptyObject = (value) => !is.map(value) && !is.set(value) && is.object(value) && Object.keys(value).length === 0;
    const isEmptyMapOrSet = (value) => (is.map(value) || is.set(value)) && value.size === 0;
    is.empty = (value) => is.falsy(value) || isEmptyStringOrArray(value) || isEmptyObject(value) || isEmptyMapOrSet(value);
    is.emptyOrWhitespace = (value) => is.empty(value) || isWhiteSpaceString(value);
    const predicateOnArray = (method, predicate, args) => {
        // `args` is the calling function's "arguments object".
        // We have to do it this way to keep node v4 support.
        // So here we convert it to an array and slice off the first item.
        const values = Array.prototype.slice.call(args, 1);
        if (is.function_(predicate) === false) {
            throw new TypeError(`Invalid predicate: ${util.inspect(predicate)}`);
        }
        if (values.length === 0) {
            throw new TypeError('Invalid number of values');
        }
        return method.call(values, predicate);
    };
    function any(predicate) {
        return predicateOnArray(Array.prototype.some, predicate, arguments);
    }
    is.any = any;
    function all(predicate) {
        return predicateOnArray(Array.prototype.every, predicate, arguments);
    }
    is.all = all;
    // tslint:enable:only-arrow-functions no-function-expression
})(is || (is = {}));
// Some few keywords are reserved, but we'll populate them for Node.js users
// See https://github.com/Microsoft/TypeScript/issues/2536
Object.defineProperties(is, {
    class: {
        value: is.class_
    },
    function: {
        value: is.function_
    },
    null: {
        value: is.null_
    }
});
exports.default = is;
// For CommonJS default export support
module.exports = is;
module.exports.default = is;

}).call(this,{"isBuffer":require("../../../is-buffer/index.js")})
},{"../../../is-buffer/index.js":1235,"util":1390}],23:[function(require,module,exports){
var asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":24,"./asn1/base":26,"./asn1/constants":30,"./asn1/decoders":32,"./asn1/encoders":35,"bn.js":38}],24:[function(require,module,exports){
var asn1 = require('../asn1');
var inherits = require('inherits');

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = require('vm').runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"../asn1":23,"inherits":1233,"vm":1464}],25:[function(require,module,exports){
var inherits = require('inherits');
var Reporter = require('../base').Reporter;
var Buffer = require('buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base":26,"buffer":71,"inherits":1233}],26:[function(require,module,exports){
var base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":25,"./node":27,"./reporter":28}],27:[function(require,module,exports){
var Reporter = require('../base').Reporter;
var EncoderBuffer = require('../base').EncoderBuffer;
var DecoderBuffer = require('../base').DecoderBuffer;
var assert = require('minimalistic-assert');

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};

},{"../base":26,"minimalistic-assert":1306}],28:[function(require,module,exports){
var inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":1233}],29:[function(require,module,exports){
var constants = require('../constants');

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);

},{"../constants":30}],30:[function(require,module,exports){
var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":29}],31:[function(require,module,exports){
var inherits = require('inherits');

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../../asn1":23,"inherits":1233}],32:[function(require,module,exports){
var decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":31,"./pem":33}],33:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"./der":31,"buffer":71,"inherits":1233}],34:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../../asn1":23,"buffer":71,"inherits":1233}],35:[function(require,module,exports){
var encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":34,"./pem":36}],36:[function(require,module,exports){
var inherits = require('inherits');

var DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"./der":34,"inherits":1233}],37:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],38:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buffer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":40}],39:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":40}],40:[function(require,module,exports){

},{}],41:[function(require,module,exports){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = require('safe-buffer').Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES

},{"safe-buffer":1363}],42:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
var incr32 = require('./incr32')

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher

},{"./aes":41,"./ghash":46,"./incr32":47,"buffer-xor":70,"cipher-base":75,"inherits":1233,"safe-buffer":1363}],43:[function(require,module,exports){
var ciphers = require('./encrypter')
var deciphers = require('./decrypter')
var modes = require('./modes/list.json')

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":44,"./encrypter":45,"./modes/list.json":55}],44:[function(require,module,exports){
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var MODES = require('./modes')
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

},{"./aes":41,"./authCipher":42,"./modes":54,"./streamCipher":57,"cipher-base":75,"evp_bytestokey":144,"inherits":1233,"safe-buffer":1363}],45:[function(require,module,exports){
var MODES = require('./modes')
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

},{"./aes":41,"./authCipher":42,"./modes":54,"./streamCipher":57,"cipher-base":75,"evp_bytestokey":144,"inherits":1233,"safe-buffer":1363}],46:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH

},{"safe-buffer":1363}],47:[function(require,module,exports){
function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32

},{}],48:[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":70}],49:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var xor = require('buffer-xor')

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}

},{"buffer-xor":70,"safe-buffer":1363}],50:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":1363}],51:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":1363}],52:[function(require,module,exports){
var xor = require('buffer-xor')
var Buffer = require('safe-buffer').Buffer
var incr32 = require('../incr32')

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

},{"../incr32":47,"buffer-xor":70,"safe-buffer":1363}],53:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],54:[function(require,module,exports){
var modeModules = {
  ECB: require('./ecb'),
  CBC: require('./cbc'),
  CFB: require('./cfb'),
  CFB8: require('./cfb8'),
  CFB1: require('./cfb1'),
  OFB: require('./ofb'),
  CTR: require('./ctr'),
  GCM: require('./ctr')
}

var modes = require('./list.json')

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes

},{"./cbc":48,"./cfb":49,"./cfb1":50,"./cfb8":51,"./ctr":52,"./ecb":53,"./list.json":55,"./ofb":56}],55:[function(require,module,exports){
module.exports={
  "aes-128-ecb": {
    "cipher": "AES",
    "key": 128,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-192-ecb": {
    "cipher": "AES",
    "key": 192,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-256-ecb": {
    "cipher": "AES",
    "key": 256,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-128-cbc": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-192-cbc": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-256-cbc": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes128": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes192": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes256": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-128-cfb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-192-cfb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-256-cfb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-128-cfb8": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-192-cfb8": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-256-cfb8": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-128-cfb1": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-192-cfb1": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-256-cfb1": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-128-ofb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-192-ofb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-256-ofb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-128-ctr": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-192-ctr": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-256-ctr": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-128-gcm": {
    "cipher": "AES",
    "key": 128,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-192-gcm": {
    "cipher": "AES",
    "key": 192,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-256-gcm": {
    "cipher": "AES",
    "key": 256,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  }
}

},{}],56:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)
},{"buffer":71,"buffer-xor":70}],57:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher

},{"./aes":41,"cipher-base":75,"inherits":1233,"safe-buffer":1363}],58:[function(require,module,exports){
var DES = require('browserify-des')
var aes = require('browserify-aes/browser')
var aesModes = require('browserify-aes/modes')
var desModes = require('browserify-des/modes')
var ebtk = require('evp_bytestokey')

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":43,"browserify-aes/modes":54,"browserify-des":59,"browserify-des/modes":60,"evp_bytestokey":144}],59:[function(require,module,exports){
(function (Buffer){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return new Buffer(this._des.update(data))
}
DES.prototype._final = function () {
  return new Buffer(this._des.final())
}

}).call(this,require("buffer").Buffer)
},{"buffer":71,"cipher-base":75,"des.js":116,"inherits":1233}],60:[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],61:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
var randomBytes = require('randombytes');
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

}).call(this,require("buffer").Buffer)
},{"bn.js":38,"buffer":71,"randombytes":1340}],62:[function(require,module,exports){
module.exports = require('./browser/algorithms.json')

},{"./browser/algorithms.json":63}],63:[function(require,module,exports){
module.exports={
  "sha224WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "RSA-SHA224": {
    "sign": "ecdsa/rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "sha256WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "RSA-SHA256": {
    "sign": "ecdsa/rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "sha384WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "RSA-SHA384": {
    "sign": "ecdsa/rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "sha512WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA512": {
    "sign": "ecdsa/rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    "sign": "rsa",
    "hash": "sha1",
    "id": "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    "sign": "ecdsa",
    "hash": "sha1",
    "id": ""
  },
  "sha256": {
    "sign": "ecdsa",
    "hash": "sha256",
    "id": ""
  },
  "sha224": {
    "sign": "ecdsa",
    "hash": "sha224",
    "id": ""
  },
  "sha384": {
    "sign": "ecdsa",
    "hash": "sha384",
    "id": ""
  },
  "sha512": {
    "sign": "ecdsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-SHA1": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-WITH-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-WITH-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-WITH-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-WITH-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-RIPEMD160": {
    "sign": "dsa",
    "hash": "rmd160",
    "id": ""
  },
  "ripemd160WithRSA": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "RSA-RIPEMD160": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "md5WithRSAEncryption": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  },
  "RSA-MD5": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  }
}

},{}],64:[function(require,module,exports){
module.exports={
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
}

},{}],65:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash')
var stream = require('stream')
var inherits = require('inherits')
var sign = require('./sign')
var verify = require('./verify')

var algorithms = require('./algorithms.json')
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = new Buffer(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

}).call(this,require("buffer").Buffer)
},{"./algorithms.json":63,"./sign":66,"./verify":67,"buffer":71,"create-hash":82,"inherits":1233,"stream":1373}],66:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var EC = require('elliptic').ec
var BN = require('bn.js')
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [ 0 ].concat(r)
  if (s[0] & 0x80) s = [ 0 ].concat(s)

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([ zeros, x ])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([ zeros, out ])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = new Buffer(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([ t, kv.v ])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

}).call(this,require("buffer").Buffer)
},{"./curves.json":64,"bn.js":38,"browserify-rsa":61,"buffer":71,"create-hmac":84,"elliptic":127,"parse-asn1":1319}],67:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var BN = require('bn.js')
var EC = require('elliptic').ec
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = new Buffer(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

}).call(this,require("buffer").Buffer)
},{"./curves.json":64,"bn.js":38,"buffer":71,"elliptic":127,"parse-asn1":1319}],68:[function(require,module,exports){
arguments[4][40][0].apply(exports,arguments)
},{"dup":40}],69:[function(require,module,exports){
(function (global){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],70:[function(require,module,exports){
(function (Buffer){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this,require("buffer").Buffer)
},{"buffer":71}],71:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  get: function () {
    if (!(this instanceof Buffer)) {
      return undefined
    }
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  get: function () {
    if (!(this instanceof Buffer)) {
      return undefined
    }
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (ArrayBuffer.isView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (ArrayBuffer.isView(buf)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
function isArrayBuffer (obj) {
  return obj instanceof ArrayBuffer ||
    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
      typeof obj.byteLength === 'number')
}

function numberIsNaN (obj) {
  return obj !== obj // eslint-disable-line no-self-compare
}

},{"base64-js":37,"ieee754":1232}],72:[function(require,module,exports){
module.exports = {
  "100": "Continue",
  "101": "Switching Protocols",
  "102": "Processing",
  "200": "OK",
  "201": "Created",
  "202": "Accepted",
  "203": "Non-Authoritative Information",
  "204": "No Content",
  "205": "Reset Content",
  "206": "Partial Content",
  "207": "Multi-Status",
  "208": "Already Reported",
  "226": "IM Used",
  "300": "Multiple Choices",
  "301": "Moved Permanently",
  "302": "Found",
  "303": "See Other",
  "304": "Not Modified",
  "305": "Use Proxy",
  "307": "Temporary Redirect",
  "308": "Permanent Redirect",
  "400": "Bad Request",
  "401": "Unauthorized",
  "402": "Payment Required",
  "403": "Forbidden",
  "404": "Not Found",
  "405": "Method Not Allowed",
  "406": "Not Acceptable",
  "407": "Proxy Authentication Required",
  "408": "Request Timeout",
  "409": "Conflict",
  "410": "Gone",
  "411": "Length Required",
  "412": "Precondition Failed",
  "413": "Payload Too Large",
  "414": "URI Too Long",
  "415": "Unsupported Media Type",
  "416": "Range Not Satisfiable",
  "417": "Expectation Failed",
  "418": "I'm a teapot",
  "421": "Misdirected Request",
  "422": "Unprocessable Entity",
  "423": "Locked",
  "424": "Failed Dependency",
  "425": "Unordered Collection",
  "426": "Upgrade Required",
  "428": "Precondition Required",
  "429": "Too Many Requests",
  "431": "Request Header Fields Too Large",
  "451": "Unavailable For Legal Reasons",
  "500": "Internal Server Error",
  "501": "Not Implemented",
  "502": "Bad Gateway",
  "503": "Service Unavailable",
  "504": "Gateway Timeout",
  "505": "HTTP Version Not Supported",
  "506": "Variant Also Negotiates",
  "507": "Insufficient Storage",
  "508": "Loop Detected",
  "509": "Bandwidth Limit Exceeded",
  "510": "Not Extended",
  "511": "Network Authentication Required"
}

},{}],73:[function(require,module,exports){
'use strict';
module.exports = function (obj) {
	var ret = {};
	var keys = Object.keys(Object(obj));

	for (var i = 0; i < keys.length; i++) {
		ret[keys[i].toLowerCase()] = obj[keys[i]];
	}

	return ret;
};

},{}],74:[function(require,module,exports){
'use strict';

const EventEmitter = require('events');
const urlLib = require('url');
const normalizeUrl = require('normalize-url');
const getStream = require('get-stream');
const CachePolicy = require('http-cache-semantics');
const Response = require('responselike');
const lowercaseKeys = require('lowercase-keys');
const cloneResponse = require('clone-response');
const Keyv = require('keyv');

class CacheableRequest {
	constructor(request, cacheAdapter) {
		if (typeof request !== 'function') {
			throw new TypeError('Parameter `request` must be a function');
		}

		this.cache = new Keyv({
			uri: typeof cacheAdapter === 'string' && cacheAdapter,
			store: typeof cacheAdapter !== 'string' && cacheAdapter,
			namespace: 'cacheable-request'
		});

		return this.createCacheableRequest(request);
	}

	createCacheableRequest(request) {
		return (opts, cb) => {
			if (typeof opts === 'string') {
				opts = urlLib.parse(opts);
			}
			opts = Object.assign({
				headers: {},
				method: 'GET',
				cache: true,
				strictTtl: false,
				automaticFailover: false
			}, opts);
			opts.headers = lowercaseKeys(opts.headers);

			const ee = new EventEmitter();
			const url = normalizeUrl(urlLib.format(opts));
			const key = `${opts.method}:${url}`;
			let revalidate = false;
			let madeRequest = false;

			const makeRequest = opts => {
				madeRequest = true;
				const handler = response => {
					if (revalidate) {
						const revalidatedPolicy = CachePolicy.fromObject(revalidate.cachePolicy).revalidatedPolicy(opts, response);
						if (!revalidatedPolicy.modified) {
							const headers = revalidatedPolicy.policy.responseHeaders();
							response = new Response(response.statusCode, headers, revalidate.body, revalidate.url);
							response.cachePolicy = revalidatedPolicy.policy;
							response.fromCache = true;
						}
					}

					if (!response.fromCache) {
						response.cachePolicy = new CachePolicy(opts, response);
						response.fromCache = false;
					}

					let clonedResponse;
					if (opts.cache && response.cachePolicy.storable()) {
						clonedResponse = cloneResponse(response);
						getStream.buffer(response)
							.then(body => {
								const value = {
									cachePolicy: response.cachePolicy.toObject(),
									url: response.url,
									statusCode: response.fromCache ? revalidate.statusCode : response.statusCode,
									body
								};
								const ttl = opts.strictTtl ? response.cachePolicy.timeToLive() : undefined;
								return this.cache.set(key, value, ttl);
							})
							.catch(err => ee.emit('error', new CacheableRequest.CacheError(err)));
					} else if (opts.cache && revalidate) {
						this.cache.delete(key)
							.catch(err => ee.emit('error', new CacheableRequest.CacheError(err)));
					}

					ee.emit('response', clonedResponse || response);
					if (typeof cb === 'function') {
						cb(clonedResponse || response);
					}
				};

				try {
					const req = request(opts, handler);
					ee.emit('request', req);
				} catch (err) {
					ee.emit('error', new CacheableRequest.RequestError(err));
				}
			};

			const get = opts => Promise.resolve()
				.then(() => opts.cache ? this.cache.get(key) : undefined)
				.then(cacheEntry => {
					if (typeof cacheEntry === 'undefined') {
						return makeRequest(opts);
					}

					const policy = CachePolicy.fromObject(cacheEntry.cachePolicy);
					if (policy.satisfiesWithoutRevalidation(opts)) {
						const headers = policy.responseHeaders();
						const response = new Response(cacheEntry.statusCode, headers, cacheEntry.body, cacheEntry.url);
						response.cachePolicy = policy;
						response.fromCache = true;

						ee.emit('response', response);
						if (typeof cb === 'function') {
							cb(response);
						}
					} else {
						revalidate = cacheEntry;
						opts.headers = policy.revalidationHeaders(opts);
						makeRequest(opts);
					}
				});

			this.cache.on('error', err => ee.emit('error', new CacheableRequest.CacheError(err)));

			get(opts).catch(err => {
				if (opts.automaticFailover && !madeRequest) {
					makeRequest(opts);
				}
				ee.emit('error', new CacheableRequest.CacheError(err));
			});

			return ee;
		};
	}
}

CacheableRequest.RequestError = class extends Error {
	constructor(err) {
		super(err.message);
		this.name = 'RequestError';
		Object.assign(this, err);
	}
};

CacheableRequest.CacheError = class extends Error {
	constructor(err) {
		super(err.message);
		this.name = 'CacheError';
		Object.assign(this, err);
	}
};

module.exports = CacheableRequest;

},{"clone-response":78,"events":143,"get-stream":1209,"http-cache-semantics":1230,"keyv":1244,"lowercase-keys":73,"normalize-url":1308,"responselike":1361,"url":1386}],75:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var StringDecoder = require('string_decoder').StringDecoder
var inherits = require('inherits')

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase

},{"inherits":1233,"safe-buffer":1363,"stream":1373,"string_decoder":1379}],76:[function(require,module,exports){
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
		// register as 'classnames', consistent with npm package name
		define('classnames', [], function () {
			return classNames;
		});
	} else {
		window.classNames = classNames;
	}
}());

},{}],77:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"dup":76}],78:[function(require,module,exports){
'use strict';

const PassThrough = require('stream').PassThrough;
const mimicResponse = require('mimic-response');

const cloneResponse = response => {
	if (!(response && response.pipe)) {
		throw new TypeError('Parameter `response` must be a response stream.');
	}

	const clone = new PassThrough();
	mimicResponse(response, clone);

	return response.pipe(clone);
};

module.exports = cloneResponse;

},{"mimic-response":1305,"stream":1373}],79:[function(require,module,exports){
(function (Buffer){
var clone = (function() {
'use strict';

function _instanceof(obj, type) {
  return type != null && obj instanceof type;
}

var nativeMap;
try {
  nativeMap = Map;
} catch(_) {
  // maybe a reference error because no `Map`. Give it a dummy value that no
  // value will ever be an instanceof.
  nativeMap = function() {};
}

var nativeSet;
try {
  nativeSet = Set;
} catch(_) {
  nativeSet = function() {};
}

var nativePromise;
try {
  nativePromise = Promise;
} catch(_) {
  nativePromise = function() {};
}

/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if `circular` is false and `parent` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param `parent` - the object to be cloned
 * @param `circular` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param `depth` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param `prototype` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
 * @param `includeNonEnumerable` - set to true if the non-enumerable properties
 *    should be cloned as well. Non-enumerable properties on the prototype
 *    chain will be ignored. (optional - false by default)
*/
function clone(parent, circular, depth, prototype, includeNonEnumerable) {
  if (typeof circular === 'object') {
    depth = circular.depth;
    prototype = circular.prototype;
    includeNonEnumerable = circular.includeNonEnumerable;
    circular = circular.circular;
  }
  // maintain two arrays for circular references, where corresponding parents
  // and children have the same index
  var allParents = [];
  var allChildren = [];

  var useBuffer = typeof Buffer != 'undefined';

  if (typeof circular == 'undefined')
    circular = true;

  if (typeof depth == 'undefined')
    depth = Infinity;

  // recurse this function so we don't reset allParents and allChildren
  function _clone(parent, depth) {
    // cloning null always returns null
    if (parent === null)
      return null;

    if (depth === 0)
      return parent;

    var child;
    var proto;
    if (typeof parent != 'object') {
      return parent;
    }

    if (_instanceof(parent, nativeMap)) {
      child = new nativeMap();
    } else if (_instanceof(parent, nativeSet)) {
      child = new nativeSet();
    } else if (_instanceof(parent, nativePromise)) {
      child = new nativePromise(function (resolve, reject) {
        parent.then(function(value) {
          resolve(_clone(value, depth - 1));
        }, function(err) {
          reject(_clone(err, depth - 1));
        });
      });
    } else if (clone.__isArray(parent)) {
      child = [];
    } else if (clone.__isRegExp(parent)) {
      child = new RegExp(parent.source, __getRegExpFlags(parent));
      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
    } else if (clone.__isDate(parent)) {
      child = new Date(parent.getTime());
    } else if (useBuffer && Buffer.isBuffer(parent)) {
      child = new Buffer(parent.length);
      parent.copy(child);
      return child;
    } else if (_instanceof(parent, Error)) {
      child = Object.create(parent);
    } else {
      if (typeof prototype == 'undefined') {
        proto = Object.getPrototypeOf(parent);
        child = Object.create(proto);
      }
      else {
        child = Object.create(prototype);
        proto = prototype;
      }
    }

    if (circular) {
      var index = allParents.indexOf(parent);

      if (index != -1) {
        return allChildren[index];
      }
      allParents.push(parent);
      allChildren.push(child);
    }

    if (_instanceof(parent, nativeMap)) {
      parent.forEach(function(value, key) {
        var keyChild = _clone(key, depth - 1);
        var valueChild = _clone(value, depth - 1);
        child.set(keyChild, valueChild);
      });
    }
    if (_instanceof(parent, nativeSet)) {
      parent.forEach(function(value) {
        var entryChild = _clone(value, depth - 1);
        child.add(entryChild);
      });
    }

    for (var i in parent) {
      var attrs;
      if (proto) {
        attrs = Object.getOwnPropertyDescriptor(proto, i);
      }

      if (attrs && attrs.set == null) {
        continue;
      }
      child[i] = _clone(parent[i], depth - 1);
    }

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(parent);
      for (var i = 0; i < symbols.length; i++) {
        // Don't need to worry about cloning a symbol because it is a primitive,
        // like a number or string.
        var symbol = symbols[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);
        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
          continue;
        }
        child[symbol] = _clone(parent[symbol], depth - 1);
        if (!descriptor.enumerable) {
          Object.defineProperty(child, symbol, {
            enumerable: false
          });
        }
      }
    }

    if (includeNonEnumerable) {
      var allPropertyNames = Object.getOwnPropertyNames(parent);
      for (var i = 0; i < allPropertyNames.length; i++) {
        var propertyName = allPropertyNames[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);
        if (descriptor && descriptor.enumerable) {
          continue;
        }
        child[propertyName] = _clone(parent[propertyName], depth - 1);
        Object.defineProperty(child, propertyName, {
          enumerable: false
        });
      }
    }

    return child;
  }

  return _clone(parent, depth);
}

/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */
clone.clonePrototype = function clonePrototype(parent) {
  if (parent === null)
    return null;

  var c = function () {};
  c.prototype = parent;
  return new c();
};

// private utility functions

function __objToStr(o) {
  return Object.prototype.toString.call(o);
}
clone.__objToStr = __objToStr;

function __isDate(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Date]';
}
clone.__isDate = __isDate;

function __isArray(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Array]';
}
clone.__isArray = __isArray;

function __isRegExp(o) {
  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
}
clone.__isRegExp = __isRegExp;

function __getRegExpFlags(re) {
  var flags = '';
  if (re.global) flags += 'g';
  if (re.ignoreCase) flags += 'i';
  if (re.multiline) flags += 'm';
  return flags;
}
clone.__getRegExpFlags = __getRegExpFlags;

return clone;
})();

if (typeof module === 'object' && module.exports) {
  module.exports = clone;
}

}).call(this,require("buffer").Buffer)
},{"buffer":71}],80:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":1235}],81:[function(require,module,exports){
(function (Buffer){
var elliptic = require('elliptic')
var BN = require('bn.js')

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}

}).call(this,require("buffer").Buffer)
},{"bn.js":38,"buffer":71,"elliptic":127}],82:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var MD5 = require('md5.js')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Base = require('cipher-base')

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}

},{"cipher-base":75,"inherits":1233,"md5.js":1303,"ripemd160":1362,"sha.js":1365}],83:[function(require,module,exports){
var MD5 = require('md5.js')

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}

},{"md5.js":1303}],84:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Legacy = require('./legacy')
var Base = require('cipher-base')
var Buffer = require('safe-buffer').Buffer
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')

var sha = require('sha.js')

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}

},{"./legacy":85,"cipher-base":75,"create-hash/md5":83,"inherits":1233,"ripemd160":1362,"safe-buffer":1363,"sha.js":1365}],85:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var Base = require('cipher-base')

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac

},{"cipher-base":75,"inherits":1233,"safe-buffer":1363}],86:[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var algos = require('browserify-sign/algos')
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = require('diffie-hellman')

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = require('browserify-sign')

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = require('randomfill')

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}

},{"browserify-cipher":58,"browserify-sign":65,"browserify-sign/algos":62,"create-ecdh":81,"create-hash":82,"create-hmac":84,"diffie-hellman":122,"pbkdf2":1320,"public-encrypt":1330,"randombytes":1340,"randomfill":1341}],87:[function(require,module,exports){
module.exports = require("./libs/csv2json.js");
},{"./libs/csv2json.js":109}],88:[function(require,module,exports){
var util = require("util");
module.exports = CSVError;
function CSVError(err, index, extra) {
  Error.call(this, "");
  this.err = err;
  this.line = index;
  this.extra = extra;
  this.message = "Error: " + err + ". JSON Line number: " + index + (extra ? " near: " + extra : "");
  this.name = "CSV Error";
}
util.inherits(CSVError, Error);

CSVError.prototype.toString = function() {
  return JSON.stringify([this.err, this.line, this.extra]);
};

CSVError.column_mismatched = function(index, extra) {
  return new CSVError("column_mismatched", index, extra);
};

CSVError.unclosed_quote = function(index, extra) {
  return new CSVError("unclosed_quote", index, extra);
};

CSVError.fromArray = function(arr) {
  return new CSVError(arr[0], arr[1], arr[2]);
};

},{"util":1390}],89:[function(require,module,exports){
(function (process,Buffer){
var util = require("util");
var Transform = require("stream").Transform;
var os = require("os");
var stripBom = require('strip-bom');
var eol = os.EOL;
// var Processor = require("./Processor.js");
var defParam = require("./defParam");
var fileline = require("./fileline");
var fileLineToCSVLine = require("./fileLineToCSVLine");
var linesToJson = require("./linesToJson");
var CSVError = require("./CSVError");
var workerMgr = null;
var _ = require('lodash');
var rowSplit = require("./rowSplit");
function Converter(params, options) {
  Transform.call(this, options);
  this._options = options || {};
  this.param = defParam(params);
  this.param._options = this._options;
  // this.resultObject = new Result(this);
  // this.pipe(this.resultObject); // it is important to have downstream for a transform otherwise it will stuck
  this.started = false;//indicate if parsing has started.
  this.recordNum = 0;
  this.lineNumber = 0; //file line number
  this._csvLineBuffer = "";
  this.lastIndex = 0; // index in result json array
  //this._pipe(this.lineParser).pipe(this.processor);
  // this.initNoFork();
  if (this.param.forked) {
    this.param.forked = false;
    this.workerNum = 2;
  }
  this.flushCb = null;
  this.processEnd = false;
  this.sequenceBuffer = [];
  this._needJson = null;
  this._needEmitResult = null;
  this._needEmitFinalResult = null;
  this._needEmitHeader = null;
  this._needEmitJson = null;
  this._needPush = null;
  this._needEmitCsv = null;
  this._csvTransf = null;
  this.finalResult = [];
  // this.on("data", function() {});
  this.on("error", emitDone(this));
  this.on("end", emitDone(this));
  this.initWorker();
  process.nextTick(function () {
    if (this._needEmitFinalResult === null) {
      this._needEmitFinalResult = this.listeners("end_parsed").length > 0;
    }
    if (this._needEmitResult === null) {
      this._needEmitResult = this.listeners("record_parsed").length > 0;
    }
    if (this._needEmitJson === null) {
      this._needEmitJson = this.listeners("json").length > 0;
    }
    if (this._needEmitHeader === null) {
      this._needEmitHeader = this.listeners("header").length > 0;
    }
    if (this._needEmitCsv === null) {
      this._needEmitCsv = this.listeners("csv").length > 0;
    }
    if (this._needJson === null) {
      this._needJson = this._needEmitJson || this._needEmitFinalResult || this._needEmitResult || this.transform || this._options.objectMode;
    }
    if (this._needPush === null) {
      this._needPush = this.listeners("data").length > 0 || this.listeners("readable").length > 0;
      // this._needPush=false;
    }
    this.param._needParseJson = this._needJson || this._needPush;
  }.bind(this));

  return this;
}

util.inherits(Converter, Transform);
function emitDone(conv) {
  return function (err) {
    if (!conv._hasDone) {
      conv._hasDone = true;
      process.nextTick(function () {
        conv.emit('done', err);
      });
    };
  }
}


function bufFromString(str) {
  var length=Buffer.byteLength(str);
  var buffer = Buffer.allocUnsafe
    ? Buffer.allocUnsafe(length)
    : new Buffer(length);
  buffer.write(str);
  return buffer;
}

Converter.prototype._transform = function (data, encoding, cb) {
  data=this.prepareData(data);
  var idx =data.length-1;
  var left=null;
  /**
   * From Keyang:
   * The code below is to check if a single utf8 char (which could be multiple bytes) being split.
   * If the char being split, the buffer from two chunk needs to be concat
   * check how utf8 being encoded to understand the code below. 
   * If anyone has any better way to do this, please let me know.
   */
  if ((data[idx] & 1<<7) !=0){
    while ((data[idx] & 3<<6) === 128){
      idx--;
    }
    idx--;
  }
  if (idx !=data.length-1){
    left=data.slice(idx+1);
    data=data.slice(0,idx+1)
    var _cb=cb;
    var self=this;
    cb=function(){
      if (self._csvLineBuffer){
        self._csvLineBuffer=Buffer.concat([bufFromString(self._csvLineBuffer,"utf8"),left]);
      }else{
        self._csvLineBuffer=left;
      }
      _cb();
    }
  }
  data = data.toString("utf8");
  if (this.started === false) {
    this.started = true;
    data = stripBom(data);
    if (this.param.toArrayString) {
      if (this._needPush) {
        this.push("[" + eol, "utf8");
      }
    }
  }
  var self = this;
  this.preProcessRaw(data, function (d) {
    if (d && d.length > 0) {
      self.processData(d, cb);
    } else {
      cb();
    }
  });
};

Converter.prototype.prepareData = function (data) {
  if (this._csvLineBuffer && this._csvLineBuffer.length>0){
    if (typeof this._csvLineBuffer === "string"){
      this._csvLineBuffer=bufFromString(this._csvLineBuffer);
    }
    return Buffer.concat([this._csvLineBuffer,data]);
  }else{
    return data;
  }
  // return this._csvLineBuffer + data;
};

Converter.prototype.setPartialData = function (d) {
  this._csvLineBuffer = d;
};

Converter.prototype.processData = function (data, cb) {
  var params = this.param;
  if (params.ignoreEmpty && !params._headers) {
    data = data.trimLeft();
  }
  var eol = this.param.eol;
  var fileLines = fileline(data, this.param);
  if (this.param.eol !== eol) {
    this.emit("eol", this.param.eol);
  }
  if (fileLines.lines.length > 0) {
    if (this.preProcessLine && typeof this.preProcessLine === "function") {
      fileLines.lines = this._preProcessLines(fileLines.lines, this.lastIndex);
    }
    if (!params._headers) { //header is not inited. init header
      this.processHead(fileLines, cb);
    } else {
      if (params.workerNum <= 1) {
        var lines = fileLineToCSVLine(fileLines, params);
        this.setPartialData(lines.partial);
        var jsonArr = linesToJson(lines.lines, params, this.recordNum);
        this.processResult(jsonArr);
        this.lastIndex += jsonArr.length;
        this.recordNum += jsonArr.length;
        cb();
      } else {
        this.workerProcess(fileLines, cb);
      }
    }
  } else {
    this.setPartialData(fileLines.partial);
    cb();
  }
};

Converter.prototype._preProcessLines = function (lines, startIdx) {
  var rtn = [];
  for (var i = 0, len = lines.length; i < len; i++) {
    var result = this.preProcessLine(lines[i], startIdx + i + 1);
    if (typeof result === "string") {
      rtn.push(result);
    } else {
      rtn.push(lines[i]);
      this.emit("error", new Error("preProcessLine should return a string but got: " + JSON.stringify(result)));
    }
  }
  return rtn;
};

Converter.prototype.initWorker = function () {
  var workerNum = this.param.workerNum - 1;
  if (workerNum > 0) {
    workerMgr = require("./workerMgr");
    this.workerMgr = workerMgr();
    this.workerMgr.initWorker(workerNum, this.param);
  }
};

Converter.prototype.preRawData = function (func) {
  this.preProcessRaw = func;
  return this;
};

Converter.prototype.preFileLine = function (func) {
  this.preProcessLine = func;
  return this;
};

/**
 * workerpRocess does not support embeded multiple lines.
 */
Converter.prototype.workerProcess = function (fileLine, cb) {
  var self = this;
  var line = fileLine;
  var eol = this.getEol();
  this.setPartialData(line.partial);
  this.workerMgr.sendWorker(line.lines.join(eol) + eol, this.lastIndex, cb, function (results, lastIndex) {
    var buf;
    var cur = self.sequenceBuffer[0];
    if (cur.idx === lastIndex) {
      cur.result = results;
      var records = [];
      while (self.sequenceBuffer[0] && self.sequenceBuffer[0].result) {
        buf = self.sequenceBuffer.shift();
        records = records.concat(buf.result);
      }
      self.processResult(records);
      self.recordNum += records.length;
    } else {
      for (var i = 0, len = self.sequenceBuffer.length; i < len; i++) {
        buf = self.sequenceBuffer[i];
        if (buf.idx === lastIndex) {
          buf.result = results;
          break;
        }
      }
    }
  });
  this.sequenceBuffer.push({
    idx: this.lastIndex,
    result: null
  });
  this.lastIndex += line.lines.length;
};

Converter.prototype.processHead = function (fileLine, cb) {
  var params = this.param;
  if (params._headers) {
    return cb();
  }
  //dirty hack
  params._needFilterRow = false;
  // if header is not inited. init header
  var lines = fileLine.lines;
  var left = "";
  var headerRow = [];
  if (!params.noheader) {
    while (lines.length) {
      var line = left + lines.shift();
      var delimiter = params.delimiter;
      var row = rowSplit(line, params);
      if (params.delimiter !== delimiter) {
        this.emit("delimiter", params.delimiter);
      }
      if (row.closed) {
        headerRow = row.cols;
        left = "";
        break;
      } else {
        left = line + this.getEol();
      }
    }
  }
  params._needFilterRow = true;
  if (!params.noheader && headerRow.length === 0) { //if one chunk of data does not complete header row.
    this.setPartialData(left);
    return cb();
  }
  if (params.noheader) {
    if (params.headers) {
      params._headers = params.headers;
    } else {
      params._headers = [];
    }
  } else {
    if (params.headers) {
      params._headers = params.headers;
    } else {
      params._headers = headerRow;
    }
  }
  configIgnoreIncludeColumns(params);
  params._headers = require("./filterRow")(params._headers, params);
  if (this._needEmitHeader && this.param._headers) {
    this.emit("header", this.param._headers);
  }
  var delimiter = params.delimiter;
  var lines = fileLineToCSVLine(fileLine, params);
  if (params.delimiter !== delimiter) {
    this.emit("delimiter", params.delimiter);
  }
  this.setPartialData(lines.partial);
  if (this.param.workerNum > 1) {
    this.workerMgr.setParams(params);
  }
  var res = linesToJson(lines.lines, params, 0);
  // Put the header with the first row
  // if(res.length > 0) res[0].header = params._headers;
  this.processResult(res);
  this.lastIndex += res.length;
  this.recordNum += res.length;

  cb();
};
function configIgnoreIncludeColumns(params) {
  if (params._postIgnoreColumns) {
    for (var i = 0; i < params.ignoreColumns.length; i++) {
      var ignoreCol = params.ignoreColumns[i];
      if (typeof ignoreCol === "string") {
        var idx = params._headers.indexOf(ignoreCol);
        if (idx > -1) {
          params.ignoreColumns[i] = idx;
        } else {
          params.ignoreColumns[i] = -1;
        }
      }
    }
    params.ignoreColumns.sort(function (a, b) { return b - a; });
  }
  if (params._postIncludeColumns) {
    for (var i = 0; i < params.includeColumns.length; i++) {
      var includeCol = params.includeColumns[i];
      if (typeof includeCol === "string") {
        var idx = params._headers.indexOf(includeCol);
        if (idx > -1) {
          params.includeColumns[i] = idx;
        } else {
          params.includeColumns[i] = -1;
        }
      }
    }
  }
  params.ignoreColumns = _.uniq(params.ignoreColumns);
  params.includeColumns = _.uniq(params.includeColumns);
}

Converter.prototype.processResult = function (result) {
  for (var i = 0, len = result.length; i < len; i++) {
    var r = result[i];
    if (r.err) {
      this.emit("error", r.err);
    } else {
      this.emitResult(r);
    }
  }
};

Converter.prototype.emitResult = function (r) {
  var index = r.index;
  var header = this.param;
  var row = r.row;
  var result = r.json;
  var resultJson = null;
  var resultStr = null;
  if (typeof result === "string") {
    resultStr = result;
  } else {
    resultJson = result;
  }
  if (resultJson === null && this._needJson) {
    resultJson = JSON.parse(resultStr);
    if (typeof row === "string") {
      row = JSON.parse(row);
    }
  }
  if (this.transform && typeof this.transform === "function") {
    this.transform(resultJson, row, index);
    resultStr = null;
  }
  if (this._needEmitJson) {
    this.emit("json", resultJson, index);
  }
  if (this._needEmitCsv) {
    if (typeof row === "string") {
      row = JSON.parse(row);
    }
    this.emit("csv", row, index);
  }
  if (this.param.constructResult && this._needEmitFinalResult) {
    this.finalResult.push(resultJson);
  }
  if (this._needEmitResult) {
    this.emit("record_parsed", resultJson, row, index);
  }
  if (this.param.toArrayString && index > 0 && this._needPush) {
    this.push("," + eol);
  }
  if (this._options && this._options.objectMode) {
    this.push(resultJson);
  } else {
    if (this._needPush) {
      if (resultStr === null) {
        resultStr = JSON.stringify(resultJson);
      }
      this.push(!this.param.toArrayString ? resultStr + eol : resultStr, "utf8");
    }
  }
};

Converter.prototype.preProcessRaw = function (data, cb) {
  cb(data);
};

// FIXME: lineNumber is not used.
Converter.prototype.preProcessLine = function (line, lineNumber) {
  return line;
};

Converter.prototype._flush = function (cb) {
  var self = this;
  this.flushCb = function () {
    self.emit("end_parsed", self.finalResult);
    if (self.workerMgr) {
      self.workerMgr.destroyWorker();
    }
    cb();
    if (!self._needPush) {
      self.emit("end");
    }
  };
  if (this._csvLineBuffer.length > 0) {
    var eol = this.getEol();
    if (this._csvLineBuffer[this._csvLineBuffer.length - 1] !== eol) {
      this._csvLineBuffer += eol;
    }
    this.processData(this._csvLineBuffer, function () {
      this.checkAndFlush();
    }.bind(this));
  } else {
    this.checkAndFlush();
  }
  return;
};

Converter.prototype.checkAndFlush = function () {
  if (this._csvLineBuffer.length !== 0) {
    this.emit("error", CSVError.unclosed_quote(this.recordNum, this._csvLineBuffer), this._csvLineBuffer);
  }
  if (this.param.toArrayString && this._needPush) {
    this.push(eol + "]", "utf8");
  }
  if (this.workerMgr && this.workerMgr.isRunning()) {
    this.workerMgr.drain = function () {
      this.flushCb();
    }.bind(this);
  } else {
    this.flushCb();
  }
};

Converter.prototype.getEol = function (data) {
  if (!this.param.eol && data) {
    for (var i = 0, len = data.length; i < len; i++) {
      if (data[i] === "\r") {
        if (data[i + 1] === "\n") {
          this.param.eol = "\r\n";
        } else {
          this.param.eol = "\r";
        }
        return this.param.eol;
      } else if (data[i] === "\n") {
        this.param.eol = "\n";
        return this.param.eol;
      }
    }
    this.param.eol = eol;
  }

  return this.param.eol || eol;
};

Converter.prototype.fromFile = function (filePath, cb, options) {
  var fs = require('fs');
  var rs = null;
  if (typeof cb ==="object" && typeof options === "undefined"){
    options=cb;
    cb=null;
  }
  this.wrapCallback(cb, function () {
    if (rs && rs.destroy) {
      rs.destroy();
    }
  });
  fs.exists(filePath, function (exist) {
    if (exist) {
      rs = fs.createReadStream(filePath,options);
      rs.pipe(this);
    } else {
      this.emit('error', new Error("File does not exist. Check to make sure the file path to your csv is correct."));
    }
  }.bind(this));
  return this;
};

Converter.prototype.fromStream = function (readStream, cb) {
  if (cb && typeof cb === "function") {
    this.wrapCallback(cb);
  }
  readStream.pipe(this);
  return this;
};

Converter.prototype.transf = function (func) {
  this.transform = func;
  return this;
};

Converter.prototype.fromString = function (csvString, cb) {
  if (typeof csvString !== "string") {
    if (cb && typeof cb ==="function"){
      return cb(new Error("Passed CSV Data is not a string."));
    }
  }
  if (cb && typeof cb === "function") {
    this.wrapCallback(cb, function () {
    });
  }
  process.nextTick(function () {
    this.end(csvString);
  }.bind(this));
  return this;
};

Converter.prototype.wrapCallback = function (cb, clean) {
  if (clean === undefined) {
    clean = function () { };
  }
  if (cb && typeof cb === "function") {
    this.once("end_parsed", function (res) {
      if (!this.hasError) {
        cb(null, res);
      }
    }.bind(this));
  }
  this.once("error", function (err) {
    this.hasError = true;
    if (cb && typeof cb === "function") {
      cb(err);
    }
    clean();
  }.bind(this));
};

module.exports = Converter;

}).call(this,require('_process'),require("buffer").Buffer)
},{"./CSVError":88,"./defParam":91,"./fileLineToCSVLine":98,"./fileline":99,"./filterRow":100,"./linesToJson":104,"./rowSplit":107,"./workerMgr":108,"_process":1327,"buffer":71,"fs":40,"lodash":1298,"os":1310,"stream":1373,"strip-bom":1380,"util":1390}],90:[function(require,module,exports){
var getEol = require("./getEol");
var rowSplit = require("./rowSplit");
/**
 * Convert lines to csv columns
 * @param  {[type]} lines [file lines]
 * @param  {[type]} param [Converter param]
 * @return {[type]}  {lines:[[col1,col2,col3...]],partial:String}
 */
module.exports = function(lines, param) {
  var csvLines = [];
  var left = "";
  while (lines.length) {
    var line = left + lines.shift();
    var row = rowSplit(line, param);
      if (row.closed || param.alwaysSplitAtEOL) {
      csvLines.push(row.cols);
      left = "";
    } else {
      left = line + (getEol(line, param) || "\n"); // if unable to getEol from data, assume "\n"
    }
  }
  return {lines: csvLines, partial: left};
};

},{"./getEol":102,"./rowSplit":107}],91:[function(require,module,exports){
(function (process){
var numExp = /^[0-9]+$/;
module.exports = function (params) {
  var _param = {
    constructResult: true, //set to false to not construct result in memory. suitable for big csv data
    delimiter: ',', // change the delimiter of csv columns. It is able to use an array to specify potencial delimiters. e.g. [",","|",";"]
    ignoreColumns: [], // columns to ignore upon input.
    includeColumns: [], // columns to include upon input.
    quote: '"', //quote for a column containing delimiter.
    trim: true, //trim column's space charcters
    checkType: false, //whether check column type
    toArrayString: false, //stream down stringified json array instead of string of json. (useful if downstream is file writer etc)
    ignoreEmpty: false, //Ignore empty value while parsing. if a value of the column is empty, it will be skipped parsing.
    workerNum: getEnv("CSV_WORKER", 1), //number of parallel workers. If multi-core CPU available, increase the number will get better performance for large csv data.
    fork: false, //use another CPU core to convert the csv stream
    noheader: false, //indicate if first line of CSV file is header or not.
    headers: null, //an array of header strings. If noheader is false and headers is array, csv header will be ignored.
    flatKeys: false, // Don't interpret dots and square brackets in header fields as nested object or array identifiers at all.
    maxRowLength: 0, //the max character a csv row could have. 0 means infinite. If max number exceeded, parser will emit "error" of "row_exceed". if a possibly corrupted csv data provided, give it a number like 65535 so the parser wont consume memory. default: 0
    checkColumn: false, //whether check column number of a row is the same as headers. If column number mismatched headers number, an error of "mismatched_column" will be emitted.. default: false
    escape: '"', //escape char for quoted column
    colParser:{}, //flags on columns to alter field processing.

    /**below are internal params */
    _columnConv:[],
    _headerType: [],
    _headerTitle: [],
    _headerFlag: [],
    _headers: null,
    _needFilterRow: false
  };
  if (!params) {
    params = {};
  }
  for (var key in params) {
    if (params.hasOwnProperty(key)) {
      if (Array.isArray(params[key])) {
        _param[key] = [].concat(params[key]);
      } else {
        _param[key] = params[key];
      }
    }
  }
  if (_param.ignoreColumns.length > 0 && !numExp.test(_param.ignoreColumns.join(""))) {
    _param._postIgnoreColumns = true;
  }
  if (_param.includeColumns.length > 0 && !numExp.test(_param.includeColumns.join(""))) {
    _param._postIncludeColumns = true;
  }

  if (_param.ignoreColumns.length || _param.includeColumns.length) {
    _param._needFilterRow = true;
    if (!_param._postIgnoreColumns){
      _param.ignoreColumns.sort(function (a, b) { return b-a;});
    }
  }


  return _param;
};

function getEnv(key, def) {
  if (process.env[key]) {
    return process.env[key];
  } else {
    return def;
  }
}

}).call(this,require('_process'))
},{"_process":1327}],92:[function(require,module,exports){
module.exports = [
  require('./parser_array.js'),
  require('./parser_json.js'),
  require('./parser_omit.js'),
  require('./parser_jsonarray.js'),
  require("./parser_flat.js")
];

},{"./parser_array.js":93,"./parser_flat.js":94,"./parser_json.js":95,"./parser_jsonarray.js":96,"./parser_omit.js":97}],93:[function(require,module,exports){
module.exports = {
  "name": "array",
  "processSafe":true,
  "regExp": /^\*array\*/,
  "parserFunc": function parser_array(params) {
    var fieldName = params.head.replace(this.regExp, '');
    if (params.resultRow[fieldName] === undefined) {
      params.resultRow[fieldName] = [];
    }
    params.resultRow[fieldName].push(params.item);
  }
};

},{}],94:[function(require,module,exports){
module.exports = {
  "name": "flat",
  "processSafe": true,
  "regExp": /^\*flat\*/,
  "parserFunc": function parser_flat (params) {
     var key = this.getHeadStr();
     var val = params.item;
     params.resultRow[key] = val;
  }
};

},{}],95:[function(require,module,exports){
var arrReg = /\[([0-9]*)\]/;


function processHead(pointer, headArr, arrReg, flatKeys) {
  var headStr, match, index;
  while (headArr.length > 1) {
    headStr = headArr.shift();
    // match = headStr.match(arrReg);
    match = flatKeys ? false : headStr.match(arrReg);
    if (match) { //if its array, we need add an empty json object into specified index.
      if (pointer[headStr.replace(match[0], '')] === undefined) {
        pointer[headStr.replace(match[0], '')] = [];
      }
      index = match[1]; //get index where json object should stay
      pointer = pointer[headStr.replace(match[0], '')];
      if (index === '') { //if its dynamic array index, push to the end
        index = pointer.length;
      }
      if (!pointer[index]) { //current index in the array is empty. we need create a new json object.
        pointer[index] = {};
      }
      pointer = pointer[index];
    } else { //not array, just normal JSON object. we get the reference of it
      if (pointer[headStr] === undefined) {
        pointer[headStr] = {};
      }
      pointer = pointer[headStr];
    }
  }
  return pointer;
}
module.exports = {
  "name": "json",
  "processSafe": true,
  "regExp": /^\*json\*/,
  "parserFunc": function parser_json(params) {
    var fieldStr = this.getHeadStr();
    var headArr = (params.config && params.config.flatKeys) ? [fieldStr] : fieldStr.split('.');
    var match, index, key;
    //now the pointer is pointing the position to add a key/value pair.
    var pointer = processHead(params.resultRow, headArr, arrReg, params.config && params.config.flatKeys);
    key = headArr.shift();
    match = (params.config && params.config.flatKeys) ? false : key.match(arrReg);
    if (match) { // the last element is an array, we need check and treat it as an array.
      try {
        key = key.replace(match[0], '');
        if (!pointer[key] || !(pointer[key] instanceof Array)) {
          pointer[key] = [];
        }
        if (pointer[key]) {
          index = match[1];
          if (index === '') {
            index = pointer[key].length;
          }
          pointer[key][index] = params.item;
        } else {
          params.resultRow[fieldStr] = params.item;
        }
      } catch (e) {
        params.resultRow[fieldStr] = params.item;
      }
    } else {
      if (typeof pointer === "string"){
        params.resultRow[fieldStr] = params.item;
      }else{
        pointer[key] = params.item;
      }
    }
  }
};

},{}],96:[function(require,module,exports){
module.exports = {
  "name": "jsonarray",
  "processSafe":true,
  "regExp": /^\*jsonarray\*/,
  "parserFunc": function parser_jsonarray (params) {
    var fieldStr = params.head.replace(this.regExp, "");
    var headArr = fieldStr.split('.');
    var pointer = params.resultRow;
    while (headArr.length > 1) {
      var headStr = headArr.shift();
      if (pointer[headStr] === undefined) {
        pointer[headStr] = {};
      }
      pointer = pointer[headStr];
    }
    var arrFieldName = headArr.shift();
    if (pointer[arrFieldName] === undefined) {
      pointer[arrFieldName] = [];
    }
    pointer[arrFieldName].push(params.item);
  }
};

},{}],97:[function(require,module,exports){
module.exports = {
  "name": "omit",
  "regExp": /^\*omit\*/,
  "processSafe":true,
  "parserFunc": function parser_omit() {}
};

},{}],98:[function(require,module,exports){
var csvline=require("./csvline");
/**
 * Convert data chunk to csv lines with cols
 * @param  {[type]} data   [description]
 * @param  {[type]} params [description]
 * @return {[type]}    {lines:[[col1,col2,col3]],partial:String}
 */
module.exports = function(fileLine, params) {
  var lines = fileLine.lines;
  var csvLines = csvline(lines,params);
  return {
    lines: csvLines.lines,
    partial: csvLines.partial + fileLine.partial
  };
};

},{"./csvline":90}],99:[function(require,module,exports){
var getEol = require("./getEol");
/**
 * convert data chunk to file lines array
 * @param  {string} data  data chunk as utf8 string
 * @param  {object} param Converter param object
 * @return {Object}   {lines:[line1,line2...],partial:String}
 */
module.exports = function(data, param) {
  var eol = getEol(data,param);
  var lines = data.split(eol);
  var partial = lines.pop();
  return {lines: lines, partial: partial};
};

},{"./getEol":102}],100:[function(require,module,exports){
module.exports=function filterRow(row, param) {
  if (param.ignoreColumns instanceof Array && param.ignoreColumns.length > 0) {
    for (var igRow = 0, igColLen = param.ignoreColumns.length; igRow < igColLen; igRow++) {
      if (param.ignoreColumns[igRow] >= 0) {
        row.splice(param.ignoreColumns[igRow], 1);
      }
    }
  }
  if (param.includeColumns instanceof Array && param.includeColumns.length > 0) {
    var cleanRowArr = [];
    for (var inRow = 0, inColLen = param.includeColumns.length; inRow < inColLen; inRow++) {
      if (param.includeColumns[inRow] >= 0) {
        cleanRowArr.push(row[param.includeColumns[inRow]]);
      }
    }
    row = cleanRowArr;
  }
  return row;
}
},{}],101:[function(require,module,exports){
module.exports = getDelimiter;
var defaulDelimiters = [",", "|", "\t", ";", ":"];
function getDelimiter(rowStr,param) {
  var checker;
  if (param.delimiter === "auto"){
    checker = defaulDelimiters;
  } else if (param.delimiter instanceof Array) {
    checker = param.delimiter;
  } else {
    return param.delimiter;
  }
  var count = 0;
  var rtn = ",";
  checker.forEach(function(delim) {
    var delimCount = rowStr.split(delim).length;
    if (delimCount > count) {
      rtn = delim;
      count = delimCount;
    }
  });
  return rtn;
}

},{}],102:[function(require,module,exports){
//return eol from a data chunk.
var eol = require("os").EOL;
module.exports = function(data, param) {
  if (!param.eol && data) {
    for (var i = 0, len = data.length; i < len; i++) {
      if (data[i] === "\r") {
        if (data[i + 1] === "\n") {
          param.eol = "\r\n";
        } else if (data[i + 1]) {
          param.eol = "\r";
        }
        return param.eol;
      } else if (data[i] === "\n") {
        param.eol = "\n";
        return param.eol;
      }
    }
  }
  return param.eol;
};

},{"os":1310}],103:[function(require,module,exports){
module.exports = constructor;
module.exports.Converter = require("./Converter.js");

function constructor(param,options) {
  return new module.exports.Converter(param, options);
}

},{"./Converter.js":89}],104:[function(require,module,exports){
var parserMgr = require("./parserMgr.js");
var CSVError = require("./CSVError");
var numReg = /^[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?$/;
/**
 * Convert lines of csv array into json
 * @param  {[type]} lines  [[col1,col2,col3]]
 * @param  {[type]} params Converter params with _headers field populated
 * @param  {[type]} idx start pos of the lines
 * @return {[type]}   [{err:null,json:obj,index:line,row:[csv row]}]
 */
module.exports = function (lines, params, idx) {
  if (params._needParseJson) {
    if (!params._headers || !Array.isArray(params._headers)) {
      params._headers = [];
    }
    if (!params.parseRules) {
      var row = params._headers;
      params.parseRules = parserMgr.initParsers(row, params);
    }
    return processRows(lines, params, idx);
  } else {
    return justReturnRows(lines, params, idx);
  }
};

function justReturnRows(lines, params, idx) {
  var rtn = [];
  for (var i = 0, len = lines.length; i < len; i++) {
    rtn.push({
      err: null,
      json: {},
      index: idx++,
      row: lines[i]
    });
  }
  return rtn;
}

function processRows(csvRows, params, startIndex) {
  var res = [];
  for (var i = 0, len = csvRows.length; i < len; i++) {
    var r = processRow(csvRows[i], params, startIndex++);
    if (r) {
      res.push(r);
    }
  }
  return res;
}

function processRow(row, param, index) {
  var parseRules = param.parseRules;
  if (param.checkColumn && row.length !== parseRules.length) {
    return {
      err: CSVError.column_mismatched(index)
    };
  }

  var headRow = param._headers;
  var resultRow = convertRowToJson(row, headRow, param);
  if (resultRow) {
    return {
      json: resultRow,
      index: index,
      row: row
    };
  } else {
    return null;
  }
}

function convertRowToJson(row, headRow, param) {
  var hasValue = false;
  var resultRow = {};

  for (var i = 0, len = row.length; i < len; i++) {
    var convertFunc, head, item;
    item = row[i];

    if (param.ignoreEmpty && item === '') {
      continue;
    }
    hasValue = true;

    head = headRow[i];
    if (!head || head === "") {
      head = headRow[i] = "field" + (i + 1);
    }
    var convFunc = getConvFunc(head, i, param);
    if (convFunc) {
      var convRes = convFunc(item, head, resultRow,row,i);
      if (convRes !== undefined) {
        setPath(resultRow, head, convRes);
      }
    } else {
      var flag = getFlag(head, i, param);
      if (flag === 'omit') {
        continue;
      }
      if (param.checkType) {
        convertFunc = checkType(item, head, i, param);
        item = convertFunc(item);
      }
      var title = getTitle(head, i, param);
      if (flag === 'flat' || param.flatKeys) {
        resultRow[title] = item;
      } else {
        setPath(resultRow, title, item);
      }
    }
  }
  if (hasValue) {
    return resultRow;
  } else {
    return false;
  }
}

var builtInConv={
  "string":stringType,
  "number":numberType,
  "omit":function(){}
}
function getConvFunc(head,i,param){
  if (param._columnConv[i] !== undefined){
    return param._columnConv[i];
  }else{
    var flag=param.colParser[head];
    if (flag === undefined){
      return param._columnConv[i]=false;
    }
    if (typeof flag ==="string"){
      flag=flag.trim().toLowerCase();
      var builtInFunc=builtInConv[flag];
      if (builtInFunc){
        return param._columnConv[i]=builtInFunc;
      }else{
        return param._columnConv[i]=false;  
      }
    }else if (typeof flag ==="function"){
      return param._columnConv[i]=flag;
    }else{
      return param._columnConv[i]=false;
    }
  }
}
function setPath(json, path, value) {
  var _set = require('lodash/set');
  var pathArr = path.split('.');
  if (pathArr.length === 1) {
    json[path] = value;
  } else {
    _set(json, path, value);
  }
}

function getFlag(head, i, param) {
  if (typeof param._headerFlag[i] === "string") {
    return param._headerFlag[i];
  } else if (head.indexOf('*omit*') > -1) {
    return param._headerFlag[i] = 'omit';
  } else if (head.indexOf('*flat*') > -1) {
    return param._headerFlag[i] = 'flat';
  } else {
    return param._headerFlag[i] = '';
  }
}

function getTitle(head, i, param) {
  if (param._headerTitle[i]) {
    return param._headerTitle[i];
  }

  var flag = getFlag(head, i, param);
  var str = head.replace('*flat*', '').replace('string#!', '').replace('number#!', '');
  return param._headerTitle[i] = str;
}

function checkType(item, head, headIdx, param) {
  if (param._headerType[headIdx]) {
    return param._headerType[headIdx];
  } else if (head.indexOf('number#!') > -1) {
    return param._headerType[headIdx] = numberType;
  } else if (head.indexOf('string#!') > -1) {
    return param._headerType[headIdx] = stringType;
  } else if (param.checkType) {
    return param._headerType[headIdx] = dynamicType;
  } else {
    return param._headerType[headIdx] = stringType;
  }
}

function numberType(item) {
  var rtn = parseFloat(item);
  if (isNaN(rtn)) {
    return item;
  }
  return rtn;
}

function stringType(item) {
  return item.toString();
}

function dynamicType(item) {
  var trimed = item.trim();
  if (trimed === "") {
    return stringType(item);
  }
  if (numReg.test(trimed)) {
    return numberType(item);
  } else if (trimed.length === 5 && trimed.toLowerCase() === "false" || trimed.length === 4 && trimed.toLowerCase() === "true") {
    return booleanType(item);
  } else if (trimed[0] === "{" && trimed[trimed.length - 1] === "}" || trimed[0] === "[" && trimed[trimed.length - 1] === "]") {
    return jsonType(item);
  } else {
    return stringType(item);
  }
}

function booleanType(item) {
  var trimed = item.trim();
  if (trimed.length === 5 && trimed.toLowerCase() === "false") {
    return false;
  } else {
    return true;
  }
}

function jsonType(item) {
  try {
    return JSON.parse(item);
  } catch (e) {
    return item;
  }
}

},{"./CSVError":88,"./parserMgr.js":106,"lodash/set":1300}],105:[function(require,module,exports){
var explicitTypes = ["number", "string"];

function Parser(name, regExp, parser, processSafe) {
  this.name = typeof name === "undefined" ? "Default" : name;
  this.regExp = null;
  this.type = "";
  this.processSafe = processSafe;
  if (typeof regExp !== "undefined") {
    if (typeof regExp === "string") {
      this.regExp = new RegExp(regExp);
    } else {
      this.regExp = regExp;
    }
  }
  if (typeof parser !== "undefined") {
    this.parse = parser;
  }
}
// var numReg = /^[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?$/;
Parser.prototype.convertType = function(item) {
  var type=this.type;
  if (type === 'number') {
    var rtn = parseFloat(item);
    if (isNaN(rtn)) {
      return 0;
    } else {
      return rtn;
    }
  } else if (this.param && this.param.checkType && type === '') {
    var trimed = item.trim();
    if (trimed === ""){
      return trimed;
    }
    if (!isNaN(trimed)) {
      return parseFloat(trimed);
    } else if (trimed.length === 5 && trimed.toLowerCase() === "false") {
      return false;
    } else if (trimed.length === 4 && trimed.toLowerCase() === "true") {
      return true;
    } else if (trimed[0] === "{" && trimed[trimed.length - 1] === "}" || trimed[0] === "[" && trimed[trimed.length - 1]==="]") {
      try {
        return JSON.parse(trimed);
      } catch (e) {
        return item;
      }
    } else {
      return item;
    }
  }
  return item;
};

Parser.prototype.setParam = function(param) {
  this.param = param;
};

Parser.prototype.test = function(str) {
  return this.regExp && this.regExp.test(str);
};

Parser.prototype.parse = function(params) {
  params.resultRow[params.head] = params.item;
};

Parser.prototype.getHeadStr = function() {
  if (this.headStr) {
    return this.headStr;
  } else {
    var head = this.head;
    this.headStr = head.replace(this.regExp, '');
    if (!this.headStr) {
      this.headStr = "Unknown Header";
    }
    return this.getHeadStr();
  }
};

Parser.prototype.getHead = function() {
  return this.head;
};

Parser.prototype.initHead = function(columnTitle) {
  this.head = columnTitle;
  var wholeHead = columnTitle.replace(this.regExp, '');
  //init type && headStr
  var splitArr = wholeHead.split("#!");
  if (splitArr.length === 1) { //no explicit type
    this.headStr = splitArr[0];
  } else {
    var type = splitArr.shift();
    if (explicitTypes.indexOf(type.toLowerCase()) > -1) {
      this.type = type;
      this.headStr = splitArr.join("#!");
    } else { //no explicit type
      this.headStr = wholeHead;
    }
  }
  if (!this.headStr) {
    this.headStr = wholeHead ? wholeHead : "Unknown Head";
  }
};

Parser.prototype.clone = function() {
  var obj = Object.create(this);
  var newParser = new Parser();
  for (var key in obj) {
    newParser[key] = obj[key];
  }
  return newParser;
};

Parser.prototype.getName = function() {
  return this.name;
};

module.exports = Parser;

},{}],106:[function(require,module,exports){
//implementation
var registeredParsers = [];
var Parser = require("./parser.js");
var defaultParser = require("./defaultParsers");

function registerParser (parser) {
  if (parser instanceof Parser && registeredParsers.indexOf(parser) === -1) {
    registeredParsers.push(parser); // TODO indexOf doesn't work with object references
  }
}

function getParser(columnTitle, param) {
  var inst, parser;
  function getParserByName(parserName) {
    var parser;
    registeredParsers.forEach(function(p){
      if (p.getName() === parserName){
        parser = p;
      }
    });
    if (parser) {
      var inst = parser.clone();
      return inst;
    }
    return new Parser(); //TODO remove new
  }
  columnTitle = columnTitle ? columnTitle : '';
  registeredParsers.forEach(function(p) {
    if (p.test(columnTitle)) {
      parser=p;
    }
  });
  if (parser) {
    inst = parser.clone();
    inst.head = columnTitle;
  } else {
    inst = getParserByName("json", columnTitle);
  }
  inst.setParam(param);
  inst.initHead(columnTitle);
  return inst;
}

function addParser(name, regExp, parseFunc) {
  var parser = new Parser(name, regExp, parseFunc,false); //TODO remove new
  registerParser(parser);
}

function addSafeParser(parserPath) {
  //TODO impl
}

function initParsers(row, param) {
  var parsers = [];
  row.forEach(function (columnTitle) {
    parsers.push(getParser(columnTitle, param));
  });
  return parsers;
}

defaultParser.forEach(function (parserCfg){
  //TODO refactor this
  addParser(parserCfg.name, parserCfg.regExp, parserCfg.parserFunc, parserCfg.processSafe);
});

//module interfaces
module.exports.addParser = addParser;
module.exports.initParsers = initParsers;
module.exports.getParser = getParser;

},{"./defaultParsers":92,"./parser.js":105}],107:[function(require,module,exports){
var getDelimiter = require("./getDelimiter");
var filterRow=require("./filterRow");
/**
 * Convert a line of string to csv columns according to its delimiter
 * the param._header may not be ready when this is called.
 * @param  {[type]} rowStr [description]
 * @param  {[type]} param  [Converter param]
 * @return {[type]}        {cols:["a","b","c"],closed:boolean} the closed field indicate if the row is a complete row
 */
module.exports = function rowSplit(rowStr, param) {
  if (rowStr === "") {
    return { cols: [], closed: true };
  }
  var quote = param.quote;
  var trim = param.trim;
  var escape = param.escape;
  if (param.delimiter instanceof Array || param.delimiter.toLowerCase() === "auto") {
    param.delimiter = getDelimiter(rowStr, param);
  }
  var delimiter = param.delimiter;
  var rowArr = rowStr.split(delimiter);
  if (quote === "off") {
    return { cols: rowArr, closed: true };
  }
  var row = [];
  var inquote = false;
  var quoteBuff = '';
  for (var i = 0, rowLen = rowArr.length; i < rowLen; i++) {
    var e = rowArr[i];
    if (!inquote && trim) {
      e = e.trim();
    }
    var len = e.length;
    if (!inquote) {
      if (isQuoteOpen(e, param)) { //quote open
        e = e.substr(1);
        if (isQuoteClose(e, param)) { //quote close
          e = e.substring(0, e.length - 1);
          e = _escapeQuote(e, quote, escape);
          row.push(e);
          continue;
        } else {
          inquote = true;
          quoteBuff += e;
          continue;
        }
      } else {
        row.push(e);
        continue;
      }
    } else { //previous quote not closed
      if (isQuoteClose(e, param)) { //close double quote
        inquote = false;
        e = e.substr(0, len - 1);
        quoteBuff += delimiter + e;
        quoteBuff = _escapeQuote(quoteBuff, quote, escape);
        if (trim) {
          quoteBuff = quoteBuff.trimRight();
        }
        row.push(quoteBuff);
        quoteBuff = "";
      } else {
        quoteBuff += delimiter + e;
      }
    }
  }

  if (!inquote && param._needFilterRow) {
    row = filterRow(row, param);
  }

  return { cols: row, closed: !inquote };
  // if (param.workerNum<=1){
  // }else{
  //   if (inquote && quoteBuff.length>0){//for multi core, quote will be closed at the end of line
  //     quoteBuff=_escapeQuote(quoteBuff,quote,escape);;
  //     if (trim){
  //       quoteBuff=quoteBuff.trimRight();
  //     }
  //     row.push(quoteBuff);
  //   }
  //   return {cols:row,closed:true};
  // }

};



function isQuoteOpen(str, param) {
  var quote = param.quote;
  var escape = param.escape;
  return str[0] === quote && (
    str[1] !== quote ||
    str[1] === escape && (str[2] === quote || str.length === 2));
}
function isQuoteClose(str, param) {
  var quote = param.quote;
  var count = 0;
  var idx = str.length - 1;
  var escape = param.escape;
  while (str[idx] === quote || str[idx] === escape) {
    idx--;
    count++;
  }
  return count % 2 !== 0;
}

function twoDoubleQuote(str, quote) {
  var twoQuote = quote + quote;
  var curIndex = -1;
  while ((curIndex = str.indexOf(twoQuote, curIndex)) > -1) {
    str = str.substring(0, curIndex) + str.substring(++curIndex);
  }
  return str;
}

var cachedRegExp = {};
function _escapeQuote(segment, quote, escape) {

  var key = "es|" + quote + "|" + escape;
  if (cachedRegExp[key] === undefined) {

    // if (escape === "\\") {
    //   escape = "\\\\";
    // }
    cachedRegExp[key] = new RegExp('\\'+escape + '\\'+quote, 'g');
  }
  var regExp = cachedRegExp[key];
  // console.log(regExp,segment);
  return segment.replace(regExp, quote);
}

},{"./filterRow":100,"./getDelimiter":101}],108:[function(require,module,exports){
(function (process,__dirname){
module.exports = workerMgr;
var eom = "\x03";
var eom1 = "\x0e";
var eom2 = "\x0f";
var CSVError = require('./CSVError');
function workerMgr() {
  var spawn = require("child_process").spawn;
  var exports = {
    initWorker: initWorker,
    sendWorker: sendWorker,
    setParams: setParams,
    drain: function(){},
    isRunning: isRunning,
    destroyWorker: destroyWorker
  };
  var workers = [];
  var running = 0;
  var waiting = null;
  function initWorker(num, params) {
    workers = [];
    running = 0;
    waiting = null;
    for (var i = 0; i < num; i++) {
      workers.push(new Worker(params));
    }

  }
  function isRunning() {
    return running > 0;
  }
  function destroyWorker() {
    workers.forEach(function(w) {
      w.destroy();
    });
  }

  function sendWorker(data, startIdx, transformCb, cbResult) {
    if (workers.length > 0) {
      var worker = workers.shift();
      running++;
      worker.parse(data, startIdx, function(result) {
        // var arr=JSON.parse(result);
        // arr.forEach(function(item){
        //   console.log('idx',item.index)
        // })
        workers.push(worker);
        cbResult(result, startIdx);
        running--;
        if (waiting === null && running === 0) {
          exports.drain();
        } else if (waiting) {
          sendWorker.apply(this, waiting);
          waiting = null;
        }
      });
      process.nextTick(transformCb);
    } else {
      waiting = [data, startIdx, transformCb, cbResult];
    }
  }

  function setParams(params) {
    workers.forEach(function(w) {
      w.setParams(params);
    });
  }
  return exports;
}

function Worker(params) {
  var spawn = require("child_process").spawn;
  this.cp = spawn(process.execPath, [__dirname + "/worker.js"], {
    env: {
      child:true
    },
    stdio:['pipe', 'pipe', 2, 'ipc']
    // stdio:[0,1,2,'ipc']
  });
  this.setParams(params);
  this.cp.on("message", this.onChildMsg.bind(this));
  this.buffer = "";
  var self = this;
  this.cp.stdout.on("data", function(d) {
    var str = d.toString("utf8");
    var all = self.buffer + str;
    var cmdArr = all.split(eom);
    while (cmdArr.length > 1) {
      self.onChildMsg(cmdArr.shift());
    }
    self.buffer = cmdArr[0];
  });
}

Worker.prototype.setParams = function(params) {
  var msg = "0" + JSON.stringify(params);
  this.sendMsg(msg);
};

/**
 * msg is like:
 * <cmd><data>
 * cmd is from 0-9
 */
Worker.prototype.onChildMsg = function(msg) {
  if (msg) {
    var cmd = msg[0];
    var data = msg.substr(1);
    switch (cmd) {
      case "0": //total line number of current chunk
        if (this.cbLine) {
          var sp = data.split("|");
          var len = parseInt(sp[0]);
          var partial = sp[1];
          this.cbLine(len, partial);
        }
        break;
      case "1": // json array of current chunk
        if (this.cbResult) {
          var rows = data.split(eom1);
          rows.pop();
          var res = [];
          rows.forEach(function(row) {
            var sp = row.split(eom2);
            res.push({
              index: sp[0],
              row: sp[1],
              err: sp[2] ? CSVError.fromArray(JSON.parse(sp[2])) : null,
              json: sp[3]
            });
          });
          this.cbResult(res);
        }
        break;
    }
  }
};

Worker.prototype.parse = function(data, startIdx, cbResult) {
  this.cbResult = cbResult;
  var msg = "1" + startIdx + "|" + data;
  this.sendMsg(msg);
};

Worker.prototype.destroy = function() {
  this.cp.kill();
};

Worker.prototype.sendMsg = function(msg) {
  this.cp.stdin.write(msg + eom, "utf8");
  // this.cp.send(msg)
};

}).call(this,require('_process'),"/node_modules/csvtojson/libs/core")
},{"./CSVError":88,"_process":1327,"child_process":40}],109:[function(require,module,exports){
//deprecated but leave it for backward compatibility
module.exports.core=require("./core");

//live apis
module.exports=require("./core");
module.exports.interfaces = require("./interfaces");

},{"./core":103,"./interfaces":112}],110:[function(require,module,exports){
module.exports = require("./main.js");
},{"./main.js":111}],111:[function(require,module,exports){
(function (process){
/**
 * Convert input to process stdout
 */

//implementation
var Converter = require("../../core/Converter.js");
function _initConverter(){
    var csvConverter = new Converter();
    var started = false;
    var writeStream = process.stdout;
    csvConverter.on("record_parsed",function(rowJSON){
        if (started){
            writeStream.write(",\n");
        }
        writeStream.write(JSON.stringify(rowJSON));  //write parsed JSON object one by one.
        if (started === false){
            started = true;
        }
    });
    writeStream.write("[\n"); //write array symbol

    csvConverter.on("end_parsed",function(){
        writeStream.write("\n]"); //end array symbol
    });
    csvConverter.on("error",function(err){
        console.error(err);
        process.exit(-1);
    });
    return csvConverter;
}
function convertFile(fileName){
    var csvConverter=_initConverter();
    csvConverter.from(fileName);
}

function convertString(csvString){
    var csvConverter=_initConverter();
    csvConverter.from(csvString);
}
//module interfaces
module.exports.convertFile = convertFile;
module.exports.convertString = convertString;
}).call(this,require('_process'))
},{"../../core/Converter.js":89,"_process":1327}],112:[function(require,module,exports){
module.exports.web=require("./web");
module.exports.cli=require("./cli");
},{"./cli":110,"./web":113}],113:[function(require,module,exports){
module.exports = require("./webServer.js");
},{"./webServer.js":114}],114:[function(require,module,exports){
var http = require("http");
var Converter = require("../../core/Converter.js");
function startWebServer (args) {
    args = args || {};
    var serverArgs = {
        port: args.port || '8801',
        urlpath: args.urlpath || '/parseCSV'
    };
    var server = http.createServer();
    server.on("request", function(req, res){
        if (req.url === serverArgs.urlpath && req.method === "POST"){
            req.pipe(new Converter({constructResult:false})).pipe(res);
        } else {
            res.end("Please post data to: " + serverArgs.urlpath);
        }
    });

    server.listen(serverArgs.port);
    console.log("CSV Web Server Listen On:" + serverArgs.port);
    console.log("POST to " + serverArgs.urlpath + " with CSV data to get parsed.");
    return server;
}
module.exports.startWebServer = startWebServer;

},{"../../core/Converter.js":89,"http":1374}],115:[function(require,module,exports){
'use strict';
var token = '%[a-f0-9]{2}';
var singleMatcher = new RegExp(token, 'gi');
var multiMatcher = new RegExp('(' + token + ')+', 'gi');

function decodeComponents(components, split) {
	try {
		// Try to decode the entire string first
		return decodeURIComponent(components.join(''));
	} catch (err) {
		// Do nothing
	}

	if (components.length === 1) {
		return components;
	}

	split = split || 1;

	// Split the array in 2 parts
	var left = components.slice(0, split);
	var right = components.slice(split);

	return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
}

function decode(input) {
	try {
		return decodeURIComponent(input);
	} catch (err) {
		var tokens = input.match(singleMatcher);

		for (var i = 1; i < tokens.length; i++) {
			input = decodeComponents(tokens, i).join('');

			tokens = input.match(singleMatcher);
		}

		return input;
	}
}

function customDecodeURIComponent(input) {
	// Keep track of all the replacements and prefill the map with the `BOM`
	var replaceMap = {
		'%FE%FF': '\uFFFD\uFFFD',
		'%FF%FE': '\uFFFD\uFFFD'
	};

	var match = multiMatcher.exec(input);
	while (match) {
		try {
			// Decode as big chunks as possible
			replaceMap[match[0]] = decodeURIComponent(match[0]);
		} catch (err) {
			var result = decode(match[0]);

			if (result !== match[0]) {
				replaceMap[match[0]] = result;
			}
		}

		match = multiMatcher.exec(input);
	}

	// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else
	replaceMap['%C2'] = '\uFFFD';

	var entries = Object.keys(replaceMap);

	for (var i = 0; i < entries.length; i++) {
		// Replace all decoded components
		var key = entries[i];
		input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
	}

	return input;
}

module.exports = function (encodedURI) {
	if (typeof encodedURI !== 'string') {
		throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');
	}

	try {
		encodedURI = encodedURI.replace(/\+/g, ' ');

		// Try the built in decoder first
		return decodeURIComponent(encodedURI);
	} catch (err) {
		// Fallback to a more advanced decoder
		return customDecodeURIComponent(encodedURI);
	}
};

},{}],116:[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":117,"./des/cipher":118,"./des/des":119,"./des/ede":120,"./des/utils":121}],117:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":1233,"minimalistic-assert":1306}],118:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":1306}],119:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"../des":116,"inherits":1233,"minimalistic-assert":1306}],120:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"../des":116,"inherits":1233,"minimalistic-assert":1306}],121:[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],122:[function(require,module,exports){
(function (Buffer){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this,require("buffer").Buffer)
},{"./lib/dh":123,"./lib/generatePrime":124,"./lib/primes.json":125,"buffer":71}],123:[function(require,module,exports){
(function (Buffer){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this,require("buffer").Buffer)
},{"./generatePrime":124,"bn.js":38,"buffer":71,"miller-rabin":1304,"randombytes":1340}],124:[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":38,"miller-rabin":1304,"randombytes":1340}],125:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],126:[function(require,module,exports){
"use strict";

var stream = require("stream");

function DuplexWrapper(options, writable, readable) {
  if (typeof readable === "undefined") {
    readable = writable;
    writable = options;
    options = null;
  }

  stream.Duplex.call(this, options);

  if (typeof readable.read !== "function") {
    readable = (new stream.Readable(options)).wrap(readable);
  }

  this._writable = writable;
  this._readable = readable;
  this._waiting = false;

  var self = this;

  writable.once("finish", function() {
    self.end();
  });

  this.once("finish", function() {
    writable.end();
  });

  readable.on("readable", function() {
    if (self._waiting) {
      self._waiting = false;
      self._read();
    }
  });

  readable.once("end", function() {
    self.push(null);
  });

  if (!options || typeof options.bubbleErrors === "undefined" || options.bubbleErrors) {
    writable.on("error", function(err) {
      self.emit("error", err);
    });

    readable.on("error", function(err) {
      self.emit("error", err);
    });
  }
}

DuplexWrapper.prototype = Object.create(stream.Duplex.prototype, {constructor: {value: DuplexWrapper}});

DuplexWrapper.prototype._write = function _write(input, encoding, done) {
  this._writable.write(input, encoding, done);
};

DuplexWrapper.prototype._read = function _read() {
  var buf;
  var reads = 0;
  while ((buf = this._readable.read()) !== null) {
    this.push(buf);
    reads++;
  }
  if (reads === 0) {
    this._waiting = true;
  }
};

module.exports = function duplex2(options, writable, readable) {
  return new DuplexWrapper(options, writable, readable);
};

module.exports.DuplexWrapper = DuplexWrapper;

},{"stream":1373}],127:[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":142,"./elliptic/curve":130,"./elliptic/curves":133,"./elliptic/ec":134,"./elliptic/eddsa":137,"./elliptic/utils":141,"brorand":39}],128:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../../elliptic":127,"bn.js":38}],129:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../../elliptic":127,"../curve":130,"bn.js":38,"inherits":1233}],130:[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":128,"./edwards":129,"./mont":131,"./short":132}],131:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var elliptic = require('../../elliptic');
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../../elliptic":127,"../curve":130,"bn.js":38,"inherits":1233}],132:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../../elliptic":127,"../curve":130,"bn.js":38,"inherits":1233}],133:[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var elliptic = require('../elliptic');

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});

},{"../elliptic":127,"./precomputed/secp256k1":140,"hash.js":1217}],134:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../../elliptic":127,"./key":135,"./signature":136,"bn.js":38,"hmac-drbg":1229}],135:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"../../elliptic":127,"bn.js":38}],136:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../../elliptic":127,"bn.js":38}],137:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../../elliptic":127,"./key":138,"./signature":139,"hash.js":1217}],138:[function(require,module,exports){
'use strict';

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../../elliptic":127}],139:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../../elliptic":127,"bn.js":38}],140:[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};

},{}],141:[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":38,"minimalistic-assert":1306,"minimalistic-crypto-utils":1307}],142:[function(require,module,exports){
module.exports={
  "_from": "elliptic@^6.0.0",
  "_id": "elliptic@6.4.0",
  "_inBundle": false,
  "_integrity": "sha1-ysmvh2LIWDYYcAPI3+GT5eLq5d8=",
  "_location": "/elliptic",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "elliptic@^6.0.0",
    "name": "elliptic",
    "escapedName": "elliptic",
    "rawSpec": "^6.0.0",
    "saveSpec": null,
    "fetchSpec": "^6.0.0"
  },
  "_requiredBy": [
    "/browserify-sign",
    "/create-ecdh"
  ],
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz",
  "_shasum": "cac9af8762c85836187003c8dfe193e5e2eae5df",
  "_spec": "elliptic@^6.0.0",
  "_where": "B:\\Programming\\NodeJS\\CryptoTithe\\node_modules\\browserify-sign",
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "hmac-drbg": "^1.0.0",
    "inherits": "^2.0.1",
    "minimalistic-assert": "^1.0.0",
    "minimalistic-crypto-utils": "^1.0.0"
  },
  "deprecated": false,
  "description": "EC cryptography",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^2.11.3",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^8.6.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/indutny/elliptic",
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "license": "MIT",
  "main": "lib/elliptic.js",
  "name": "elliptic",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "test": "npm run lint && npm run unit",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "version": "grunt dist && git add dist/"
  },
  "version": "6.4.0"
}

},{}],143:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var objectCreate = Object.create || objectCreatePolyfill
var objectKeys = Object.keys || objectKeysPolyfill
var bind = Function.prototype.bind || functionBindPolyfill

function EventEmitter() {
  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
    this._events = objectCreate(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

var hasDefineProperty;
try {
  var o = {};
  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });
  hasDefineProperty = o.x === 0;
} catch (err) { hasDefineProperty = false }
if (hasDefineProperty) {
  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function() {
      return defaultMaxListeners;
    },
    set: function(arg) {
      // check whether the input is a positive number (whose value is zero or
      // greater and not a NaN).
      if (typeof arg !== 'number' || arg < 0 || arg !== arg)
        throw new TypeError('"defaultMaxListeners" must be a positive number');
      defaultMaxListeners = arg;
    }
  });
} else {
  EventEmitter.defaultMaxListeners = defaultMaxListeners;
}

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || isNaN(n))
    throw new TypeError('"n" argument must be a positive number');
  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function emitNone(handler, isFn, self) {
  if (isFn)
    handler.call(self);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self);
  }
}
function emitOne(handler, isFn, self, arg1) {
  if (isFn)
    handler.call(self, arg1);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1);
  }
}
function emitTwo(handler, isFn, self, arg1, arg2) {
  if (isFn)
    handler.call(self, arg1, arg2);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2);
  }
}
function emitThree(handler, isFn, self, arg1, arg2, arg3) {
  if (isFn)
    handler.call(self, arg1, arg2, arg3);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2, arg3);
  }
}

function emitMany(handler, isFn, self, args) {
  if (isFn)
    handler.apply(self, args);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].apply(self, args);
  }
}

EventEmitter.prototype.emit = function emit(type) {
  var er, handler, len, args, i, events;
  var doError = (type === 'error');

  events = this._events;
  if (events)
    doError = (doError && events.error == null);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    if (arguments.length > 1)
      er = arguments[1];
    if (er instanceof Error) {
      throw er; // Unhandled 'error' event
    } else {
      // At least give some kind of context to the user
      var err = new Error('Unhandled "error" event. (' + er + ')');
      err.context = er;
      throw err;
    }
    return false;
  }

  handler = events[type];

  if (!handler)
    return false;

  var isFn = typeof handler === 'function';
  len = arguments.length;
  switch (len) {
      // fast cases
    case 1:
      emitNone(handler, isFn, this);
      break;
    case 2:
      emitOne(handler, isFn, this, arguments[1]);
      break;
    case 3:
      emitTwo(handler, isFn, this, arguments[1], arguments[2]);
      break;
    case 4:
      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
      break;
      // slower
    default:
      args = new Array(len - 1);
      for (i = 1; i < len; i++)
        args[i - 1] = arguments[i];
      emitMany(handler, isFn, this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');

  events = target._events;
  if (!events) {
    events = target._events = objectCreate(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener) {
      target.emit('newListener', type,
          listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (!existing) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
          prepend ? [listener, existing] : [existing, listener];
    } else {
      // If we've already got an array, just append.
      if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }
    }

    // Check for listener leak
    if (!existing.warned) {
      m = $getMaxListeners(target);
      if (m && m > 0 && existing.length > m) {
        existing.warned = true;
        var w = new Error('Possible EventEmitter memory leak detected. ' +
            existing.length + ' "' + String(type) + '" listeners ' +
            'added. Use emitter.setMaxListeners() to ' +
            'increase limit.');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        if (typeof console === 'object' && console.warn) {
          console.warn('%s: %s', w.name, w.message);
        }
      }
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    switch (arguments.length) {
      case 0:
        return this.listener.call(this.target);
      case 1:
        return this.listener.call(this.target, arguments[0]);
      case 2:
        return this.listener.call(this.target, arguments[0], arguments[1]);
      case 3:
        return this.listener.call(this.target, arguments[0], arguments[1],
            arguments[2]);
      default:
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i)
          args[i] = arguments[i];
        this.listener.apply(this.target, args);
    }
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = bind.call(onceWrapper, state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');

      events = this._events;
      if (!events)
        return this;

      list = events[type];
      if (!list)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = objectCreate(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else
          spliceOne(list, position);

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (!events)
        return this;

      // not listening for removeListener, no need to emit
      if (!events.removeListener) {
        if (arguments.length === 0) {
          this._events = objectCreate(null);
          this._eventsCount = 0;
        } else if (events[type]) {
          if (--this._eventsCount === 0)
            this._events = objectCreate(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = objectKeys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = objectCreate(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (!events)
    return [];

  var evlistener = events[type];
  if (!evlistener)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
};

// About 1.5x faster than the two-arg version of Array#splice().
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)
    list[i] = list[k];
  list.pop();
}

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function objectCreatePolyfill(proto) {
  var F = function() {};
  F.prototype = proto;
  return new F;
}
function objectKeysPolyfill(obj) {
  var keys = [];
  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {
    keys.push(k);
  }
  return k;
}
function functionBindPolyfill(context) {
  var fn = this;
  return function () {
    return fn.apply(context, arguments);
  };
}

},{}],144:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var MD5 = require('md5.js')

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey

},{"md5.js":1303,"safe-buffer":1363}],145:[function(require,module,exports){
// since we are requiring the top level of faker, load all locales by default
var Faker = require('./lib');
var faker = new Faker({ locales: require('./lib/locales') });
module['exports'] = faker;
},{"./lib":157,"./lib/locales":159}],146:[function(require,module,exports){
/**
 *
 * @namespace faker.address
 */
function Address (faker) {
  var f = faker.fake,
      Helpers = faker.helpers;

  /**
   * Generates random zipcode from format. If format is not specified, the
   * locale's zip format is used.
   *
   * @method faker.address.zipCode
   * @param {String} format
   */
  this.zipCode = function(format) {
    // if zip format is not specified, use the zip format defined for the locale
    if (typeof format === 'undefined') {
      var localeFormat = faker.definitions.address.postcode;
      if (typeof localeFormat === 'string') {
        format = localeFormat;
      } else {
        format = faker.random.arrayElement(localeFormat);
      }
    }
    return Helpers.replaceSymbols(format);
  }

  /**
   * Generates a random localized city name. The format string can contain any
   * method provided by faker wrapped in `{{}}`, e.g. `{{name.firstName}}` in
   * order to build the city name.
   *
   * If no format string is provided one of the following is randomly used:
   * 
   * * `{{address.cityPrefix}} {{name.firstName}}{{address.citySuffix}}`
   * * `{{address.cityPrefix}} {{name.firstName}}`
   * * `{{name.firstName}}{{address.citySuffix}}`
   * * `{{name.lastName}}{{address.citySuffix}}`
   *
   * @method faker.address.city
   * @param {String} format
   */
  this.city = function (format) {
    var formats = [
      '{{address.cityPrefix}} {{name.firstName}}{{address.citySuffix}}',
      '{{address.cityPrefix}} {{name.firstName}}',
      '{{name.firstName}}{{address.citySuffix}}',
      '{{name.lastName}}{{address.citySuffix}}'
    ];

    if (typeof format !== "number") {
      format = faker.random.number(formats.length - 1);
    }

    return f(formats[format]);

  }

  /**
   * Return a random localized city prefix
   * @method faker.address.cityPrefix
   */
  this.cityPrefix = function () {
    return faker.random.arrayElement(faker.definitions.address.city_prefix);
  }

  /**
   * Return a random localized city suffix
   *
   * @method faker.address.citySuffix
   */
  this.citySuffix = function () {
    return faker.random.arrayElement(faker.definitions.address.city_suffix);
  }

  /**
   * Returns a random localized street name
   *
   * @method faker.address.streetName
   */
  this.streetName = function () {
      var result;
      var suffix = faker.address.streetSuffix();
      if (suffix !== "") {
          suffix = " " + suffix
      }

      switch (faker.random.number(1)) {
      case 0:
          result = faker.name.lastName() + suffix;
          break;
      case 1:
          result = faker.name.firstName() + suffix;
          break;
      }
      return result;
  }

  //
  // TODO: change all these methods that accept a boolean to instead accept an options hash.
  //
  /**
   * Returns a random localized street address
   *
   * @method faker.address.streetAddress
   * @param {Boolean} useFullAddress
   */
  this.streetAddress = function (useFullAddress) {
      if (useFullAddress === undefined) { useFullAddress = false; }
      var address = "";
      switch (faker.random.number(2)) {
      case 0:
          address = Helpers.replaceSymbolWithNumber("#####") + " " + faker.address.streetName();
          break;
      case 1:
          address = Helpers.replaceSymbolWithNumber("####") +  " " + faker.address.streetName();
          break;
      case 2:
          address = Helpers.replaceSymbolWithNumber("###") + " " + faker.address.streetName();
          break;
      }
      return useFullAddress ? (address + " " + faker.address.secondaryAddress()) : address;
  }

  /**
   * streetSuffix
   *
   * @method faker.address.streetSuffix
   */
  this.streetSuffix = function () {
      return faker.random.arrayElement(faker.definitions.address.street_suffix);
  }
  
  /**
   * streetPrefix
   *
   * @method faker.address.streetPrefix
   */
  this.streetPrefix = function () {
      return faker.random.arrayElement(faker.definitions.address.street_prefix);
  }

  /**
   * secondaryAddress
   *
   * @method faker.address.secondaryAddress
   */
  this.secondaryAddress = function () {
      return Helpers.replaceSymbolWithNumber(faker.random.arrayElement(
          [
              'Apt. ###',
              'Suite ###'
          ]
      ));
  }

  /**
   * county
   *
   * @method faker.address.county
   */
  this.county = function () {
    return faker.random.arrayElement(faker.definitions.address.county);
  }

  /**
   * country
   *
   * @method faker.address.country
   */
  this.country = function () {
    return faker.random.arrayElement(faker.definitions.address.country);
  }

  /**
   * countryCode
   *
   * @method faker.address.countryCode
   */
  this.countryCode = function () {
    return faker.random.arrayElement(faker.definitions.address.country_code);
  }

  /**
   * state
   *
   * @method faker.address.state
   * @param {Boolean} useAbbr
   */
  this.state = function (useAbbr) {
      return faker.random.arrayElement(faker.definitions.address.state);
  }

  /**
   * stateAbbr
   *
   * @method faker.address.stateAbbr
   */
  this.stateAbbr = function () {
      return faker.random.arrayElement(faker.definitions.address.state_abbr);
  }

  /**
   * latitude
   *
   * @method faker.address.latitude
   */
  this.latitude = function () {
      return (faker.random.number(180 * 10000) / 10000.0 - 90.0).toFixed(4);
  }

  /**
   * longitude
   *
   * @method faker.address.longitude
   */
  this.longitude = function () {
      return (faker.random.number(360 * 10000) / 10000.0 - 180.0).toFixed(4);
  }
  
  return this;
}


module.exports = Address;

},{}],147:[function(require,module,exports){
/**
 *
 * @namespace faker.commerce
 */
var Commerce = function (faker) {
  var self = this;

  /**
   * color
   *
   * @method faker.commerce.color
   */
  self.color = function() {
      return faker.random.arrayElement(faker.definitions.commerce.color);
  };

  /**
   * department
   *
   * @method faker.commerce.department
   */
  self.department = function() {
      return faker.random.arrayElement(faker.definitions.commerce.department);
  };

  /**
   * productName
   *
   * @method faker.commerce.productName
   */
  self.productName = function() {
      return faker.commerce.productAdjective() + " " +
              faker.commerce.productMaterial() + " " +
              faker.commerce.product();
  };

  /**
   * price
   *
   * @method faker.commerce.price
   * @param {number} min
   * @param {number} max
   * @param {number} dec
   * @param {string} symbol
   *
   * @return {string}
   */
  self.price = function(min, max, dec, symbol) {
      min = min || 0;
      max = max || 1000;
      dec = dec === undefined ? 2 : dec;
      symbol = symbol || '';

      if (min < 0 || max < 0) {
          return symbol + 0.00;
      }

      var randValue = faker.random.number({ max: max, min: min });

      return symbol + (Math.round(randValue * Math.pow(10, dec)) / Math.pow(10, dec)).toFixed(dec);
  };

  /*
  self.categories = function(num) {
      var categories = [];

      do {
          var category = faker.random.arrayElement(faker.definitions.commerce.department);
          if(categories.indexOf(category) === -1) {
              categories.push(category);
          }
      } while(categories.length < num);

      return categories;
  };

  */
  /*
  self.mergeCategories = function(categories) {
      var separator = faker.definitions.separator || " &";
      // TODO: find undefined here
      categories = categories || faker.definitions.commerce.categories;
      var commaSeparated = categories.slice(0, -1).join(', ');

      return [commaSeparated, categories[categories.length - 1]].join(separator + " ");
  };
  */

  /**
   * productAdjective
   *
   * @method faker.commerce.productAdjective
   */
  self.productAdjective = function() {
      return faker.random.arrayElement(faker.definitions.commerce.product_name.adjective);
  };

  /**
   * productMaterial
   *
   * @method faker.commerce.productMaterial
   */
  self.productMaterial = function() {
      return faker.random.arrayElement(faker.definitions.commerce.product_name.material);
  };

  /**
   * product
   *
   * @method faker.commerce.product
   */
  self.product = function() {
      return faker.random.arrayElement(faker.definitions.commerce.product_name.product);
  };

  return self;
};

module['exports'] = Commerce;

},{}],148:[function(require,module,exports){
/**
 *
 * @namespace faker.company
 */
var Company = function (faker) {
  
  var self = this;
  var f = faker.fake;
  
  /**
   * suffixes
   *
   * @method faker.company.suffixes
   */
  this.suffixes = function () {
    // Don't want the source array exposed to modification, so return a copy
    return faker.definitions.company.suffix.slice(0);
  }

  /**
   * companyName
   *
   * @method faker.company.companyName
   * @param {string} format
   */
  this.companyName = function (format) {

    var formats = [
      '{{name.lastName}} {{company.companySuffix}}',
      '{{name.lastName}} - {{name.lastName}}',
      '{{name.lastName}}, {{name.lastName}} and {{name.lastName}}'
    ];

    if (typeof format !== "number") {
      format = faker.random.number(formats.length - 1);
    }

    return f(formats[format]);
  }

  /**
   * companySuffix
   *
   * @method faker.company.companySuffix
   */
  this.companySuffix = function () {
      return faker.random.arrayElement(faker.company.suffixes());
  }

  /**
   * catchPhrase
   *
   * @method faker.company.catchPhrase
   */
  this.catchPhrase = function () {
    return f('{{company.catchPhraseAdjective}} {{company.catchPhraseDescriptor}} {{company.catchPhraseNoun}}')
  }

  /**
   * bs
   *
   * @method faker.company.bs
   */
  this.bs = function () {
    return f('{{company.bsAdjective}} {{company.bsBuzz}} {{company.bsNoun}}');
  }

  /**
   * catchPhraseAdjective
   *
   * @method faker.company.catchPhraseAdjective
   */
  this.catchPhraseAdjective = function () {
      return faker.random.arrayElement(faker.definitions.company.adjective);
  }

  /**
   * catchPhraseDescriptor
   *
   * @method faker.company.catchPhraseDescriptor
   */
  this.catchPhraseDescriptor = function () {
      return faker.random.arrayElement(faker.definitions.company.descriptor);
  }

  /**
   * catchPhraseNoun
   *
   * @method faker.company.catchPhraseNoun
   */
  this.catchPhraseNoun = function () {
      return faker.random.arrayElement(faker.definitions.company.noun);
  }

  /**
   * bsAdjective
   *
   * @method faker.company.bsAdjective
   */
  this.bsAdjective = function () {
      return faker.random.arrayElement(faker.definitions.company.bs_adjective);
  }

  /**
   * bsBuzz
   *
   * @method faker.company.bsBuzz
   */
  this.bsBuzz = function () {
      return faker.random.arrayElement(faker.definitions.company.bs_verb);
  }

  /**
   * bsNoun
   *
   * @method faker.company.bsNoun
   */
  this.bsNoun = function () {
      return faker.random.arrayElement(faker.definitions.company.bs_noun);
  }
  
}

module['exports'] = Company;
},{}],149:[function(require,module,exports){
/**
 *
 * @namespace faker.database
 */
var Database = function (faker) {
  var self = this;
  /**
   * column
   *
   * @method faker.database.column
   */
  self.column = function () {
      return faker.random.arrayElement(faker.definitions.database.column);
  };

  self.column.schema = {
    "description": "Generates a column name.",
    "sampleResults": ["id", "title", "createdAt"]
  };

  /**
   * type
   *
   * @method faker.database.type
   */
  self.type = function () {
      return faker.random.arrayElement(faker.definitions.database.type);
  };

  self.type.schema = {
    "description": "Generates a column type.",
    "sampleResults": ["byte", "int", "varchar", "timestamp"]
  };

  /**
   * collation
   *
   * @method faker.database.collation
   */
  self.collation = function () {
      return faker.random.arrayElement(faker.definitions.database.collation);
  };

  self.collation.schema = {
    "description": "Generates a collation.",
    "sampleResults": ["utf8_unicode_ci", "utf8_bin"]
  };

  /**
   * engine
   *
   * @method faker.database.engine
   */
  self.engine = function () {
      return faker.random.arrayElement(faker.definitions.database.engine);
  };

  self.engine.schema = {
    "description": "Generates a storage engine.",
    "sampleResults": ["MyISAM", "InnoDB"]
  };
};

module["exports"] = Database;

},{}],150:[function(require,module,exports){
/**
 *
 * @namespace faker.date
 */
var _Date = function (faker) {
  var self = this;
  /**
   * past
   *
   * @method faker.date.past
   * @param {number} years
   * @param {date} refDate
   */
  self.past = function (years, refDate) {
      var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();
      var range = {
        min: 1000,
        max: (years || 1) * 365 * 24 * 3600 * 1000
      };

      var past = date.getTime();
      past -= faker.random.number(range); // some time from now to N years ago, in milliseconds
      date.setTime(past);

      return date;
  };

  /**
   * future
   *
   * @method faker.date.future
   * @param {number} years
   * @param {date} refDate
   */
  self.future = function (years, refDate) {
      var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();
      var range = {
        min: 1000,
        max: (years || 1) * 365 * 24 * 3600 * 1000
      };

      var future = date.getTime();
      future += faker.random.number(range); // some time from now to N years later, in milliseconds
      date.setTime(future);

      return date;
  };

  /**
   * between
   *
   * @method faker.date.between
   * @param {date} from
   * @param {date} to
   */
  self.between = function (from, to) {
      var fromMilli = Date.parse(from);
      var dateOffset = faker.random.number(Date.parse(to) - fromMilli);

      var newDate = new Date(fromMilli + dateOffset);

      return newDate;
  };

  /**
   * recent
   *
   * @method faker.date.recent
   * @param {number} days
   */
  self.recent = function (days) {
      var date = new Date();
      var range = {
        min: 1000,
        max: (days || 1) * 24 * 3600 * 1000
      };

      var future = date.getTime();
      future -= faker.random.number(range); // some time from now to N days ago, in milliseconds
      date.setTime(future);

      return date;
  };

  /**
   * month
   *
   * @method faker.date.month
   * @param {object} options
   */
  self.month = function (options) {
      options = options || {};

      var type = 'wide';
      if (options.abbr) {
          type = 'abbr';
      }
      if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {
          type += '_context';
      }

      var source = faker.definitions.date.month[type];

      return faker.random.arrayElement(source);
  };

  /**
   * weekday
   *
   * @param {object} options
   * @method faker.date.weekday
   */
  self.weekday = function (options) {
      options = options || {};

      var type = 'wide';
      if (options.abbr) {
          type = 'abbr';
      }
      if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {
          type += '_context';
      }

      var source = faker.definitions.date.weekday[type];

      return faker.random.arrayElement(source);
  };
  
  return self;
  
};

module['exports'] = _Date;
},{}],151:[function(require,module,exports){
/*
  fake.js - generator method for combining faker methods based on string input

*/

function Fake (faker) {
  
  /**
   * Generator method for combining faker methods based on string input
   *
   * __Example:__
   *
   * ```
   * console.log(faker.fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'));
   * //outputs: "Marks, Dean Sr."
   * ```
   *
   * This will interpolate the format string with the value of methods
   * [name.lastName]{@link faker.name.lastName}, [name.firstName]{@link faker.name.firstName},
   * and [name.suffix]{@link faker.name.suffix}
   *
   * @method faker.fake
   * @param {string} str
   */
  this.fake = function fake (str) {
    // setup default response as empty string
    var res = '';

    // if incoming str parameter is not provided, return error message
    if (typeof str !== 'string' || str.length === 0) {
      res = 'string parameter is required!';
      return res;
    }

    // find first matching {{ and }}
    var start = str.search('{{');
    var end = str.search('}}');

    // if no {{ and }} is found, we are done
    if (start === -1 && end === -1) {
      return str;
    }

    // console.log('attempting to parse', str);

    // extract method name from between the {{ }} that we found
    // for example: {{name.firstName}}
    var token = str.substr(start + 2,  end - start - 2);
    var method = token.replace('}}', '').replace('{{', '');

    // console.log('method', method)

    // extract method parameters
    var regExp = /\(([^)]+)\)/;
    var matches = regExp.exec(method);
    var parameters = '';
    if (matches) {
      method = method.replace(regExp, '');
      parameters = matches[1];
    }

    // split the method into module and function
    var parts = method.split('.');

    if (typeof faker[parts[0]] === "undefined") {
      throw new Error('Invalid module: ' + parts[0]);
    }

    if (typeof faker[parts[0]][parts[1]] === "undefined") {
      throw new Error('Invalid method: ' + parts[0] + "." + parts[1]);
    }

    // assign the function from the module.function namespace
    var fn = faker[parts[0]][parts[1]];

    // If parameters are populated here, they are always going to be of string type
    // since we might actually be dealing with an object or array,
    // we always attempt to the parse the incoming parameters into JSON
    var params;
    // Note: we experience a small performance hit here due to JSON.parse try / catch
    // If anyone actually needs to optimize this specific code path, please open a support issue on github
    try {
      params = JSON.parse(parameters)
    } catch (err) {
      // since JSON.parse threw an error, assume parameters was actually a string
      params = parameters;
    }

    var result;
    if (typeof params === "string" && params.length === 0) {
      result = fn.call(this);
    } else {
      result = fn.call(this, params);
    }

    // replace the found tag with the returned fake value
    res = str.replace('{{' + token + '}}', result);

    // return the response recursively until we are done finding all tags
    return fake(res);    
  }
  
  return this;
  
  
}

module['exports'] = Fake;
},{}],152:[function(require,module,exports){
/**
 * @namespace faker.finance
 */
var Finance = function (faker) {
  var ibanLib = require("./iban");
  var Helpers = faker.helpers,
      self = this;

  /**
   * account
   *
   * @method faker.finance.account
   * @param {number} length
   */
  self.account = function (length) {

      length = length || 8;

      var template = '';

      for (var i = 0; i < length; i++) {
          template = template + '#';
      }
      length = null;
      return Helpers.replaceSymbolWithNumber(template);
  };

  /**
   * accountName
   *
   * @method faker.finance.accountName
   */
  self.accountName = function () {

      return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');
  };

  /**
   * mask
   *
   * @method faker.finance.mask
   * @param {number} length
   * @param {boolean} parens
   * @param {boolean} ellipsis
   */
  self.mask = function (length, parens, ellipsis) {

      //set defaults
      length = (length == 0 || !length || typeof length == 'undefined') ? 4 : length;
      parens = (parens === null) ? true : parens;
      ellipsis = (ellipsis === null) ? true : ellipsis;

      //create a template for length
      var template = '';

      for (var i = 0; i < length; i++) {
          template = template + '#';
      }

      //prefix with ellipsis
      template = (ellipsis) ? ['...', template].join('') : template;

      template = (parens) ? ['(', template, ')'].join('') : template;

      //generate random numbers
      template = Helpers.replaceSymbolWithNumber(template);

      return template;
  };

  //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc
  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol

  /**
   * amount
   *
   * @method faker.finance.amount
   * @param {number} min
   * @param {number} max
   * @param {number} dec
   * @param {string} symbol
   *
   * @return {string}
   */
  self.amount = function (min, max, dec, symbol) {

      min = min || 0;
      max = max || 1000;
      dec = dec === undefined ? 2 : dec;
      symbol = symbol || '';
      var randValue = faker.random.number({ max: max, min: min, precision: Math.pow(10, -dec) });

      return symbol + randValue.toFixed(dec);
  };

  /**
   * transactionType
   *
   * @method faker.finance.transactionType
   */
  self.transactionType = function () {
      return Helpers.randomize(faker.definitions.finance.transaction_type);
  };

  /**
   * currencyCode
   *
   * @method faker.finance.currencyCode
   */
  self.currencyCode = function () {
      return faker.random.objectElement(faker.definitions.finance.currency)['code'];
  };

  /**
   * currencyName
   *
   * @method faker.finance.currencyName
   */
  self.currencyName = function () {
      return faker.random.objectElement(faker.definitions.finance.currency, 'key');
  };

  /**
   * currencySymbol
   *
   * @method faker.finance.currencySymbol
   */
  self.currencySymbol = function () {
      var symbol;

      while (!symbol) {
          symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];
      }
      return symbol;
  };

  /**
   * bitcoinAddress
   *
   * @method  faker.finance.bitcoinAddress
   */
  self.bitcoinAddress = function () {
    var addressLength = faker.random.number({ min: 27, max: 34 });

    var address = faker.random.arrayElement(['1', '3']);

    for (var i = 0; i < addressLength - 1; i++)
      address += faker.random.alphaNumeric().toUpperCase();

    return address;
  };

  /**
   * iban
   *
   * @method  faker.finance.iban
   */
  self.iban = function (formatted) {
      var ibanFormat = faker.random.arrayElement(ibanLib.formats);
      var s = "";
      var count = 0;
      for (var b = 0; b < ibanFormat.bban.length; b++) {
          var bban = ibanFormat.bban[b];
          var c = bban.count;
          count += bban.count;
          while (c > 0) {
              if (bban.type == "a") {
                  s += faker.random.arrayElement(ibanLib.alpha);
              } else if (bban.type == "c") {
                  if (faker.random.number(100) < 80) {
                      s += faker.random.number(9);
                  } else {
                      s += faker.random.arrayElement(ibanLib.alpha);
                  }
              } else {
                  if (c >= 3 && faker.random.number(100) < 30) {
                      if (faker.random.boolean()) {
                          s += faker.random.arrayElement(ibanLib.pattern100);
                          c -= 2;
                      } else {
                          s += faker.random.arrayElement(ibanLib.pattern10);
                          c--;
                      }
                  } else {
                      s += faker.random.number(9);
                  }
              }
              c--;
          }
          s = s.substring(0, count);
      }
      var checksum = 98 - ibanLib.mod97(ibanLib.toDigitString(s + ibanFormat.country + "00"));
      if (checksum < 10) {
          checksum = "0" + checksum;
      }
      var iban = ibanFormat.country + checksum + s;
      return formatted ? iban.match(/.{1,4}/g).join(" ") : iban;
  };

  /**
   * bic
   *
   * @method  faker.finance.bic
   */
  self.bic = function () {
      var vowels = ["A", "E", "I", "O", "U"];
      var prob = faker.random.number(100);
      return Helpers.replaceSymbols("???") +
          faker.random.arrayElement(vowels) +
          faker.random.arrayElement(ibanLib.iso3166) +
          Helpers.replaceSymbols("?") + "1" +
          (prob < 10 ?
              Helpers.replaceSymbols("?" + faker.random.arrayElement(vowels) + "?") :
          prob < 40 ?
              Helpers.replaceSymbols("###") : "");
  };
};

module['exports'] = Finance;

},{"./iban":155}],153:[function(require,module,exports){
/**
 *
 * @namespace faker.hacker
 */
var Hacker = function (faker) {
  var self = this;
  
  /**
   * abbreviation
   *
   * @method faker.hacker.abbreviation
   */
  self.abbreviation = function () {
    return faker.random.arrayElement(faker.definitions.hacker.abbreviation);
  };

  /**
   * adjective
   *
   * @method faker.hacker.adjective
   */
  self.adjective = function () {
    return faker.random.arrayElement(faker.definitions.hacker.adjective);
  };

  /**
   * noun
   *
   * @method faker.hacker.noun
   */
  self.noun = function () {
    return faker.random.arrayElement(faker.definitions.hacker.noun);
  };

  /**
   * verb
   *
   * @method faker.hacker.verb
   */
  self.verb = function () {
    return faker.random.arrayElement(faker.definitions.hacker.verb);
  };

  /**
   * ingverb
   *
   * @method faker.hacker.ingverb
   */
  self.ingverb = function () {
    return faker.random.arrayElement(faker.definitions.hacker.ingverb);
  };

  /**
   * phrase
   *
   * @method faker.hacker.phrase
   */
  self.phrase = function () {

    var data = {
      abbreviation: self.abbreviation,
      adjective: self.adjective,
      ingverb: self.ingverb,
      noun: self.noun,
      verb: self.verb
    };

    var phrase = faker.random.arrayElement([ "If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!",
      "We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!",
      "Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!",
      "You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!",
      "Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!",
      "The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!",
      "{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!",
      "I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!"
   ]);

   return faker.helpers.mustache(phrase, data);

  };
  
  return self;
};

module['exports'] = Hacker;
},{}],154:[function(require,module,exports){
/**
 *
 * @namespace faker.helpers
 */
var Helpers = function (faker) {

  var self = this;

  /**
   * backword-compatibility
   *
   * @method faker.helpers.randomize
   * @param {array} array
   */
  self.randomize = function (array) {
      array = array || ["a", "b", "c"];
      return faker.random.arrayElement(array);
  };

  /**
   * slugifies string
   *
   * @method faker.helpers.slugify
   * @param {string} string
   */
  self.slugify = function (string) {
      string = string || "";
      return string.replace(/ /g, '-').replace(/[^\w\.\-]+/g, '');
  };

  /**
   * parses string for a symbol and replace it with a random number from 1-10
   *
   * @method faker.helpers.replaceSymbolWithNumber
   * @param {string} string
   * @param {string} symbol defaults to `"#"`
   */
  self.replaceSymbolWithNumber = function (string, symbol) {
      string = string || "";
      // default symbol is '#'
      if (symbol === undefined) {
          symbol = '#';
      }

      var str = '';
      for (var i = 0; i < string.length; i++) {
          if (string.charAt(i) == symbol) {
              str += faker.random.number(9);
          } else {
              str += string.charAt(i);
          }
      }
      return str;
  };

  /**
   * parses string for symbols (numbers or letters) and replaces them appropriately
   *
   * @method faker.helpers.replaceSymbols
   * @param {string} string
   */
  self.replaceSymbols = function (string) {
      string = string || "";
      var alpha = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
      var str = '';

      for (var i = 0; i < string.length; i++) {
          if (string.charAt(i) == "#") {
              str += faker.random.number(9);
          } else if (string.charAt(i) == "?") {
              str += faker.random.arrayElement(alpha);
          } else {
              str += string.charAt(i);
          }
      }
      return str;
  };

  /**
   * takes an array and returns it randomized
   *
   * @method faker.helpers.shuffle
   * @param {array} o
   */
  self.shuffle = function (o) {
      if (typeof o === 'undefined' || o.length === 0) {
        return [];
      }
      o = o || ["a", "b", "c"];
      for (var j, x, i = o.length-1; i; j = faker.random.number(i), x = o[--i], o[i] = o[j], o[j] = x);
      return o;
  };

  /**
   * mustache
   *
   * @method faker.helpers.mustache
   * @param {string} str
   * @param {object} data
   */
  self.mustache = function (str, data) {
    if (typeof str === 'undefined') {
      return '';
    }
    for(var p in data) {
      var re = new RegExp('{{' + p + '}}', 'g')
      str = str.replace(re, data[p]);
    }
    return str;
  };

  /**
   * createCard
   *
   * @method faker.helpers.createCard
   */
  self.createCard = function () {
      return {
          "name": faker.name.findName(),
          "username": faker.internet.userName(),
          "email": faker.internet.email(),
          "address": {
              "streetA": faker.address.streetName(),
              "streetB": faker.address.streetAddress(),
              "streetC": faker.address.streetAddress(true),
              "streetD": faker.address.secondaryAddress(),
              "city": faker.address.city(),
              "state": faker.address.state(),
              "country": faker.address.country(),
              "zipcode": faker.address.zipCode(),
              "geo": {
                  "lat": faker.address.latitude(),
                  "lng": faker.address.longitude()
              }
          },
          "phone": faker.phone.phoneNumber(),
          "website": faker.internet.domainName(),
          "company": {
              "name": faker.company.companyName(),
              "catchPhrase": faker.company.catchPhrase(),
              "bs": faker.company.bs()
          },
          "posts": [
              {
                  "words": faker.lorem.words(),
                  "sentence": faker.lorem.sentence(),
                  "sentences": faker.lorem.sentences(),
                  "paragraph": faker.lorem.paragraph()
              },
              {
                  "words": faker.lorem.words(),
                  "sentence": faker.lorem.sentence(),
                  "sentences": faker.lorem.sentences(),
                  "paragraph": faker.lorem.paragraph()
              },
              {
                  "words": faker.lorem.words(),
                  "sentence": faker.lorem.sentence(),
                  "sentences": faker.lorem.sentences(),
                  "paragraph": faker.lorem.paragraph()
              }
          ],
          "accountHistory": [faker.helpers.createTransaction(), faker.helpers.createTransaction(), faker.helpers.createTransaction()]
      };
  };

  /**
   * contextualCard
   *
   * @method faker.helpers.contextualCard
   */
  self.contextualCard = function () {
    var name = faker.name.firstName(),
        userName = faker.internet.userName(name);
    return {
        "name": name,
        "username": userName,
        "avatar": faker.internet.avatar(),
        "email": faker.internet.email(userName),
        "dob": faker.date.past(50, new Date("Sat Sep 20 1992 21:35:02 GMT+0200 (CEST)")),
        "phone": faker.phone.phoneNumber(),
        "address": {
            "street": faker.address.streetName(true),
            "suite": faker.address.secondaryAddress(),
            "city": faker.address.city(),
            "zipcode": faker.address.zipCode(),
            "geo": {
                "lat": faker.address.latitude(),
                "lng": faker.address.longitude()
            }
        },
        "website": faker.internet.domainName(),
        "company": {
            "name": faker.company.companyName(),
            "catchPhrase": faker.company.catchPhrase(),
            "bs": faker.company.bs()
        }
    };
  };


  /**
   * userCard
   *
   * @method faker.helpers.userCard
   */
  self.userCard = function () {
      return {
          "name": faker.name.findName(),
          "username": faker.internet.userName(),
          "email": faker.internet.email(),
          "address": {
              "street": faker.address.streetName(true),
              "suite": faker.address.secondaryAddress(),
              "city": faker.address.city(),
              "zipcode": faker.address.zipCode(),
              "geo": {
                  "lat": faker.address.latitude(),
                  "lng": faker.address.longitude()
              }
          },
          "phone": faker.phone.phoneNumber(),
          "website": faker.internet.domainName(),
          "company": {
              "name": faker.company.companyName(),
              "catchPhrase": faker.company.catchPhrase(),
              "bs": faker.company.bs()
          }
      };
  };

  /**
   * createTransaction
   *
   * @method faker.helpers.createTransaction
   */
  self.createTransaction = function(){
    return {
      "amount" : faker.finance.amount(),
      "date" : new Date(2012, 1, 2),  //TODO: add a ranged date method
      "business": faker.company.companyName(),
      "name": [faker.finance.accountName(), faker.finance.mask()].join(' '),
      "type" : self.randomize(faker.definitions.finance.transaction_type),
      "account" : faker.finance.account()
    };
  };

  return self;

};


/*
String.prototype.capitalize = function () { //v1.0
    return this.replace(/\w+/g, function (a) {
        return a.charAt(0).toUpperCase() + a.substr(1).toLowerCase();
    });
};
*/

module['exports'] = Helpers;

},{}],155:[function(require,module,exports){
module["exports"] = {
  alpha: [
    'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'
  ],
  pattern10: [
    "01", "02", "03", "04", "05", "06", "07", "08", "09"
  ],
  pattern100: [
    "001", "002", "003", "004", "005", "006", "007", "008", "009"
  ],
  toDigitString: function (str) {
      return str.replace(/[A-Z]/gi, function(match) {
          return match.toUpperCase().charCodeAt(0) - 55;
      });
  },
  mod97: function (digitStr) {
      var m = 0;
      for (var i = 0; i < digitStr.length; i++) {
          m = ((m * 10) + (digitStr[i] |0)) % 97;
      }
      return m;
  },
  formats: [
    {
      country: "AL",
      total: 28,
      bban: [
        {
          type: "n",
          count: 8
        },
        {
          type: "c",
          count: 16
        }
      ],
      format: "ALkk bbbs sssx cccc cccc cccc cccc"
    },
    {
      country: "AD",
      total: 24,
      bban: [
        {
          type: "n",
          count: 8
        },
        {
          type: "c",
          count: 12
        }
      ],
      format: "ADkk bbbb ssss cccc cccc cccc"
    },
    {
      country: "AT",
      total: 20,
      bban: [
        {
          type: "n",
          count: 5
        },
        {
          type: "n",
          count: 11
        }
      ],
      format: "ATkk bbbb bccc cccc cccc"
    },
    {
      country: "AZ",
      total: 28,
      bban: [
        {
          type: "c",
          count: 4
        },
        {
          type: "n",
          count: 20
        }
      ],
      format: "AZkk bbbb cccc cccc cccc cccc cccc"
    },
    {
      country: "BH",
      total: 22,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "c",
          count: 14
        }
      ],
      format: "BHkk bbbb cccc cccc cccc cc"
    },
    {
      country: "BE",
      total: 16,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "n",
          count: 9
        }
      ],
      format: "BEkk bbbc cccc ccxx"
    },
    {
      country: "BA",
      total: 20,
      bban: [
        {
          type: "n",
          count: 6
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "BAkk bbbs sscc cccc ccxx"
    },
    {
      country: "BR",
      total: 29,
      bban: [
        {
          type: "n",
          count: 13
        },
        {
          type: "n",
          count: 10
        },
        {
          type: "a",
          count: 1
        },
        {
          type: "c",
          count: 1
        }
      ],
      format: "BRkk bbbb bbbb ssss sccc cccc ccct n"
    },
    {
      country: "BG",
      total: 22,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "n",
          count: 6
        },
        {
          type: "c",
          count: 8
        }
      ],
      format: "BGkk bbbb ssss ddcc cccc cc"
    },
    {
      country: "CR",
      total: 21,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "n",
          count: 14
        }
      ],
      format: "CRkk bbbc cccc cccc cccc c"
    },
    {
      country: "HR",
      total: 21,
      bban: [
        {
          type: "n",
          count: 7
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "HRkk bbbb bbbc cccc cccc c"
    },
    {
      country: "CY",
      total: 28,
      bban: [
        {
          type: "n",
          count: 8
        },
        {
          type: "c",
          count: 16
        }
      ],
      format: "CYkk bbbs ssss cccc cccc cccc cccc"
    },
    {
      country: "CZ",
      total: 24,
      bban: [
        {
          type: "n",
          count: 10
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "CZkk bbbb ssss sscc cccc cccc"
    },
    {
      country: "DK",
      total: 18,
      bban: [
        {
          type: "n",
          count: 4
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "DKkk bbbb cccc cccc cc"
    },
    {
      country: "DO",
      total: 28,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "n",
          count: 20
        }
      ],
      format: "DOkk bbbb cccc cccc cccc cccc cccc"
    },
    {
      country: "TL",
      total: 23,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "n",
          count: 16
        }
      ],
      format: "TLkk bbbc cccc cccc cccc cxx"
    },
    {
      country: "EE",
      total: 20,
      bban: [
        {
          type: "n",
          count: 4
        },
        {
          type: "n",
          count: 12
        }
      ],
      format: "EEkk bbss cccc cccc cccx"
    },
    {
      country: "FO",
      total: 18,
      bban: [
        {
          type: "n",
          count: 4
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "FOkk bbbb cccc cccc cx"
    },
    {
      country: "FI",
      total: 18,
      bban: [
        {
          type: "n",
          count: 6
        },
        {
          type: "n",
          count: 8
        }
      ],
      format: "FIkk bbbb bbcc cccc cx"
    },
    {
      country: "FR",
      total: 27,
      bban: [
        {
          type: "n",
          count: 10
        },
        {
          type: "c",
          count: 11
        },
        {
          type: "n",
          count: 2
        }
      ],
      format: "FRkk bbbb bggg ggcc cccc cccc cxx"
    },
    {
      country: "GE",
      total: 22,
      bban: [
        {
          type: "c",
          count: 2
        },
        {
          type: "n",
          count: 16
        }
      ],
      format: "GEkk bbcc cccc cccc cccc cc"
    },
    {
      country: "DE",
      total: 22,
      bban: [
        {
          type: "n",
          count: 8
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "DEkk bbbb bbbb cccc cccc cc"
    },
    {
      country: "GI",
      total: 23,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "c",
          count: 15
        }
      ],
      format: "GIkk bbbb cccc cccc cccc ccc"
    },
    {
      country: "GR",
      total: 27,
      bban: [
        {
          type: "n",
          count: 7
        },
        {
          type: "c",
          count: 16
        }
      ],
      format: "GRkk bbbs sssc cccc cccc cccc ccc"
    },
    {
      country: "GL",
      total: 18,
      bban: [
        {
          type: "n",
          count: 4
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "GLkk bbbb cccc cccc cc"
    },
    {
      country: "GT",
      total: 28,
      bban: [
        {
          type: "c",
          count: 4
        },
        {
          type: "c",
          count: 4
        },
        {
          type: "c",
          count: 16
        }
      ],
      format: "GTkk bbbb mmtt cccc cccc cccc cccc"
    },
    {
      country: "HU",
      total: 28,
      bban: [
        {
          type: "n",
          count: 8
        },
        {
          type: "n",
          count: 16
        }
      ],
      format: "HUkk bbbs sssk cccc cccc cccc cccx"
    },
    {
      country: "IS",
      total: 26,
      bban: [
        {
          type: "n",
          count: 6
        },
        {
          type: "n",
          count: 16
        }
      ],
      format: "ISkk bbbb sscc cccc iiii iiii ii"
    },
    {
      country: "IE",
      total: 22,
      bban: [
        {
          type: "c",
          count: 4
        },
        {
          type: "n",
          count: 6
        },
        {
          type: "n",
          count: 8
        }
      ],
      format: "IEkk aaaa bbbb bbcc cccc cc"
    },
    {
      country: "IL",
      total: 23,
      bban: [
        {
          type: "n",
          count: 6
        },
        {
          type: "n",
          count: 13
        }
      ],
      format: "ILkk bbbn nncc cccc cccc ccc"
    },
    {
      country: "IT",
      total: 27,
      bban: [
        {
          type: "a",
          count: 1
        },
        {
          type: "n",
          count: 10
        },
        {
          type: "c",
          count: 12
        }
      ],
      format: "ITkk xaaa aabb bbbc cccc cccc ccc"
    },
    {
      country: "JO",
      total: 30,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "n",
          count: 4
        },
        {
          type: "n",
          count: 18
        }
      ],
      format: "JOkk bbbb nnnn cccc cccc cccc cccc cc"
    },
    {
      country: "KZ",
      total: 20,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "c",
          count: 13
        }
      ],
      format: "KZkk bbbc cccc cccc cccc"
    },
    {
      country: "XK",
      total: 20,
      bban: [
        {
          type: "n",
          count: 4
        },
        {
          type: "n",
          count: 12
        }
      ],
      format: "XKkk bbbb cccc cccc cccc"
    },
    {
      country: "KW",
      total: 30,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "c",
          count: 22
        }
      ],
      format: "KWkk bbbb cccc cccc cccc cccc cccc cc"
    },
    {
      country: "LV",
      total: 21,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "c",
          count: 13
        }
      ],
      format: "LVkk bbbb cccc cccc cccc c"
    },
    {
      country: "LB",
      total: 28,
      bban: [
        {
          type: "n",
          count: 4
        },
        {
          type: "c",
          count: 20
        }
      ],
      format: "LBkk bbbb cccc cccc cccc cccc cccc"
    },
    {
      country: "LI",
      total: 21,
      bban: [
        {
          type: "n",
          count: 5
        },
        {
          type: "c",
          count: 12
        }
      ],
      format: "LIkk bbbb bccc cccc cccc c"
    },
    {
      country: "LT",
      total: 20,
      bban: [
        {
          type: "n",
          count: 5
        },
        {
          type: "n",
          count: 11
        }
      ],
      format: "LTkk bbbb bccc cccc cccc"
    },
    {
      country: "LU",
      total: 20,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "c",
          count: 13
        }
      ],
      format: "LUkk bbbc cccc cccc cccc"
    },
    {
      country: "MK",
      total: 19,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "c",
          count: 10
        },
        {
          type: "n",
          count: 2
        }
      ],
      format: "MKkk bbbc cccc cccc cxx"
    },
    {
      country: "MT",
      total: 31,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "n",
          count: 5
        },
        {
          type: "c",
          count: 18
        }
      ],
      format: "MTkk bbbb ssss sccc cccc cccc cccc ccc"
    },
    {
      country: "MR",
      total: 27,
      bban: [
        {
          type: "n",
          count: 10
        },
        {
          type: "n",
          count: 13
        }
      ],
      format: "MRkk bbbb bsss sscc cccc cccc cxx"
    },
    {
      country: "MU",
      total: 30,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "n",
          count: 4
        },
        {
          type: "n",
          count: 15
        },
        {
          type: "a",
          count: 3
        }
      ],
      format: "MUkk bbbb bbss cccc cccc cccc 000d dd"
    },
    {
      country: "MC",
      total: 27,
      bban: [
        {
          type: "n",
          count: 10
        },
        {
          type: "c",
          count: 11
        },
        {
          type: "n",
          count: 2
        }
      ],
      format: "MCkk bbbb bsss sscc cccc cccc cxx"
    },
    {
      country: "MD",
      total: 24,
      bban: [
        {
          type: "c",
          count: 2
        },
        {
          type: "c",
          count: 18
        }
      ],
      format: "MDkk bbcc cccc cccc cccc cccc"
    },
    {
      country: "ME",
      total: 22,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "n",
          count: 15
        }
      ],
      format: "MEkk bbbc cccc cccc cccc xx"
    },
    {
      country: "NL",
      total: 18,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "NLkk bbbb cccc cccc cc"
    },
    {
      country: "NO",
      total: 15,
      bban: [
        {
          type: "n",
          count: 4
        },
        {
          type: "n",
          count: 7
        }
      ],
      format: "NOkk bbbb cccc ccx"
    },
    {
      country: "PK",
      total: 24,
      bban: [
        {
          type: "c",
          count: 4
        },
        {
          type: "n",
          count: 16
        }
      ],
      format: "PKkk bbbb cccc cccc cccc cccc"
    },
    {
      country: "PS",
      total: 29,
      bban: [
        {
          type: "c",
          count: 4
        },
        {
          type: "n",
          count: 9
        },
        {
          type: "n",
          count: 12
        }
      ],
      format: "PSkk bbbb xxxx xxxx xccc cccc cccc c"
    },
    {
      country: "PL",
      total: 28,
      bban: [
        {
          type: "n",
          count: 8
        },
        {
          type: "n",
          count: 16
        }
      ],
      format: "PLkk bbbs sssx cccc cccc cccc cccc"
    },
    {
      country: "PT",
      total: 25,
      bban: [
        {
          type: "n",
          count: 8
        },
        {
          type: "n",
          count: 13
        }
      ],
      format: "PTkk bbbb ssss cccc cccc cccx x"
    },
    {
      country: "QA",
      total: 29,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "c",
          count: 21
        }
      ],
      format: "QAkk bbbb cccc cccc cccc cccc cccc c"
    },
    {
      country: "RO",
      total: 24,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "c",
          count: 16
        }
      ],
      format: "ROkk bbbb cccc cccc cccc cccc"
    },
    {
      country: "SM",
      total: 27,
      bban: [
        {
          type: "a",
          count: 1
        },
        {
          type: "n",
          count: 10
        },
        {
          type: "c",
          count: 12
        }
      ],
      format: "SMkk xaaa aabb bbbc cccc cccc ccc"
    },
    {
      country: "SA",
      total: 24,
      bban: [
        {
          type: "n",
          count: 2
        },
        {
          type: "c",
          count: 18
        }
      ],
      format: "SAkk bbcc cccc cccc cccc cccc"
    },
    {
      country: "RS",
      total: 22,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "n",
          count: 15
        }
      ],
      format: "RSkk bbbc cccc cccc cccc xx"
    },
    {
      country: "SK",
      total: 24,
      bban: [
        {
          type: "n",
          count: 10
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "SKkk bbbb ssss sscc cccc cccc"
    },
    {
      country: "SI",
      total: 19,
      bban: [
        {
          type: "n",
          count: 5
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "SIkk bbss sccc cccc cxx"
    },
    {
      country: "ES",
      total: 24,
      bban: [
        {
          type: "n",
          count: 10
        },
        {
          type: "n",
          count: 10
        }
      ],
      format: "ESkk bbbb gggg xxcc cccc cccc"
    },
    {
      country: "SE",
      total: 24,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "n",
          count: 17
        }
      ],
      format: "SEkk bbbc cccc cccc cccc cccc"
    },
    {
      country: "CH",
      total: 21,
      bban: [
        {
          type: "n",
          count: 5
        },
        {
          type: "c",
          count: 12
        }
      ],
      format: "CHkk bbbb bccc cccc cccc c"
    },
    {
      country: "TN",
      total: 24,
      bban: [
        {
          type: "n",
          count: 5
        },
        {
          type: "n",
          count: 15
        }
      ],
      format: "TNkk bbss sccc cccc cccc cccc"
    },
    {
      country: "TR",
      total: 26,
      bban: [
        {
          type: "n",
          count: 5
        },
        {
          type: "c",
          count: 1
        },
        {
          type: "c",
          count: 16
        }
      ],
      format: "TRkk bbbb bxcc cccc cccc cccc cc"
    },
    {
      country: "AE",
      total: 23,
      bban: [
        {
          type: "n",
          count: 3
        },
        {
          type: "n",
          count: 16
        }
      ],
      format: "AEkk bbbc cccc cccc cccc ccc"
    },
    {
      country: "GB",
      total: 22,
      bban: [
        {
          type: "a",
          count: 4
        },
        {
          type: "n",
          count: 6
        },
        {
          type: "n",
          count: 8
        }
      ],
      format: "GBkk bbbb ssss sscc cccc cc"
    },
    {
      country: "VG",
      total: 24,
      bban: [
        {
          type: "c",
          count: 4
        },
        {
          type: "n",
          count: 16
        }
      ],
      format: "VGkk bbbb cccc cccc cccc cccc"
    }
  ],
  iso3166: [
    "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS",
    "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI",
    "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY",
    "BZ", "CA", "CC", "CD", "CE", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN",
    "CO", "CP", "CR", "CS", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DD", "DE",
    "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES",
    "ET", "EU", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE",
    "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU",
    "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM",
    "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH",
    "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK",
    "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH",
    "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW",
    "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR",
    "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN",
    "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB",
    "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR",
    "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH",
    "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "UA", "UG",
    "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS",
    "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW"
  ]
}
},{}],156:[function(require,module,exports){
/**
 *
 * @namespace faker.image
 */
var Image = function (faker) {

  var self = this;

  /**
   * image
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.image
   */
  self.image = function (width, height, randomize) {
    var categories = ["abstract", "animals", "business", "cats", "city", "food", "nightlife", "fashion", "people", "nature", "sports", "technics", "transport"];
    return self[faker.random.arrayElement(categories)](width, height, randomize);
  };
  /**
   * avatar
   *
   * @method faker.image.avatar
   */
  self.avatar = function () {
    return faker.internet.avatar();
  };
  /**
   * imageUrl
   *
   * @param {number} width
   * @param {number} height
   * @param {string} category
   * @param {boolean} randomize
   * @method faker.image.imageUrl
   */
  self.imageUrl = function (width, height, category, randomize, https) {
      var width = width || 640;
      var height = height || 480;
      var protocol = 'http://';
      if (typeof https !== 'undefined' && https === true) {
        protocol = 'https://';
      }
      var url = protocol + 'lorempixel.com/' + width + '/' + height;
      if (typeof category !== 'undefined') {
        url += '/' + category;
      }

      if (randomize) {
        url += '?' + faker.random.number()
      }

      return url;
  };
  /**
   * abstract
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.abstract
   */
  self.abstract = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'abstract', randomize);
  };
  /**
   * animals
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.animals
   */
  self.animals = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'animals', randomize);
  };
  /**
   * business
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.business
   */
  self.business = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'business', randomize);
  };
  /**
   * cats
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.cats
   */
  self.cats = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'cats', randomize);
  };
  /**
   * city
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.city
   */
  self.city = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'city', randomize);
  };
  /**
   * food
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.food
   */
  self.food = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'food', randomize);
  };
  /**
   * nightlife
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.nightlife
   */
  self.nightlife = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'nightlife', randomize);
  };
  /**
   * fashion
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.fashion
   */
  self.fashion = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'fashion', randomize);
  };
  /**
   * people
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.people
   */
  self.people = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'people', randomize);
  };
  /**
   * nature
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.nature
   */
  self.nature = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'nature', randomize);
  };
  /**
   * sports
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.sports
   */
  self.sports = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'sports', randomize);
  };
  /**
   * technics
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.technics
   */
  self.technics = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'technics', randomize);
  };
  /**
   * transport
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.transport
   */
  self.transport = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'transport', randomize);
  };
  /**
   * dataUri
   *
   * @param {number} width
   * @param {number} height
   * @method faker.image.dataurl
   */
  self.dataUri = function (width, height) {
    var rawPrefix = 'data:image/svg+xml;charset=UTF-8,';
    var svgString = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" baseProfile="full" width="' + width + '" height="' + height + '"> <rect width="100%" height="100%" fill="grey"/>  <text x="0" y="20" font-size="20" text-anchor="start" fill="white">' + width + 'x' + height + '</text> </svg>';
    return rawPrefix + encodeURIComponent(svgString);
  };
}

module["exports"] = Image;
},{}],157:[function(require,module,exports){
/*

   this index.js file is used for including the faker library as a CommonJS module, instead of a bundle

   you can include the faker library into your existing node.js application by requiring the entire /faker directory

    var faker = require(./faker);
    var randomName = faker.name.findName();

   you can also simply include the "faker.js" file which is the auto-generated bundled version of the faker library

    var faker = require(./customAppPath/faker);
    var randomName = faker.name.findName();


  if you plan on modifying the faker library you should be performing your changes in the /lib/ directory

*/

/**
 *
 * @namespace faker
 */
function Faker (opts) {

  var self = this;

  opts = opts || {};

  // assign options
  var locales = self.locales || opts.locales || {};
  var locale = self.locale || opts.locale || "en";
  var localeFallback = self.localeFallback || opts.localeFallback || "en";

  self.locales = locales;
  self.locale = locale;
  self.localeFallback = localeFallback;

  self.definitions = {};

  function bindAll(obj) {
      Object.keys(obj).forEach(function(meth) {
          if (typeof obj[meth] === 'function') {
              obj[meth] = obj[meth].bind(obj);
          }
      });
      return obj;
  }

  var Fake = require('./fake');
  self.fake = new Fake(self).fake;

  var Random = require('./random');
  self.random = bindAll(new Random(self));

  var Helpers = require('./helpers');
  self.helpers = new Helpers(self);

  var Name = require('./name');
  self.name = bindAll(new Name(self));

  var Address = require('./address');
  self.address = bindAll(new Address(self));

  var Company = require('./company');
  self.company = bindAll(new Company(self));

  var Finance = require('./finance');
  self.finance = bindAll(new Finance(self));

  var Image = require('./image');
  self.image = bindAll(new Image(self));

  var Lorem = require('./lorem');
  self.lorem = bindAll(new Lorem(self));

  var Hacker = require('./hacker');
  self.hacker = bindAll(new Hacker(self));

  var Internet = require('./internet');
  self.internet = bindAll(new Internet(self));

  var Database = require('./database');
  self.database = bindAll(new Database(self));

  var Phone = require('./phone_number');
  self.phone = bindAll(new Phone(self));

  var _Date = require('./date');
  self.date = bindAll(new _Date(self));

  var Commerce = require('./commerce');
  self.commerce = bindAll(new Commerce(self));

  var System = require('./system');
  self.system = bindAll(new System(self));

  var _definitions = {
    "name": ["first_name", "last_name", "prefix", "suffix", "title", "male_first_name", "female_first_name", "male_middle_name", "female_middle_name", "male_last_name", "female_last_name"],
    "address": ["city_prefix", "city_suffix", "street_suffix", "county", "country", "country_code", "state", "state_abbr", "street_prefix", "postcode"],
    "company": ["adjective", "noun", "descriptor", "bs_adjective", "bs_noun", "bs_verb", "suffix"],
    "lorem": ["words"],
    "hacker": ["abbreviation", "adjective", "noun", "verb", "ingverb"],
    "phone_number": ["formats"],
    "finance": ["account_type", "transaction_type", "currency", "iban"],
    "internet": ["avatar_uri", "domain_suffix", "free_email", "example_email", "password"],
    "commerce": ["color", "department", "product_name", "price", "categories"],
    "database": ["collation", "column", "engine", "type"],
    "system": ["mimeTypes"],
    "date": ["month", "weekday"],
    "title": "",
    "separator": ""
  };

  // Create a Getter for all definitions.foo.bar properties
  Object.keys(_definitions).forEach(function(d){
    if (typeof self.definitions[d] === "undefined") {
      self.definitions[d] = {};
    }

    if (typeof _definitions[d] === "string") {
        self.definitions[d] = _definitions[d];
      return;
    }

    _definitions[d].forEach(function(p){
      Object.defineProperty(self.definitions[d], p, {
        get: function () {
          if (typeof self.locales[self.locale][d] === "undefined" || typeof self.locales[self.locale][d][p] === "undefined") {
            // certain localization sets contain less data then others.
            // in the case of a missing definition, use the default localeFallback to substitute the missing set data
            // throw new Error('unknown property ' + d + p)
            return self.locales[localeFallback][d][p];
          } else {
            // return localized data
            return self.locales[self.locale][d][p];
          }
        }
      });
    });
  });

};

Faker.prototype.seed = function(value) {
  var Random = require('./random');
  this.seedValue = value;
  this.random = new Random(this, this.seedValue);
}
module['exports'] = Faker;

},{"./address":146,"./commerce":147,"./company":148,"./database":149,"./date":150,"./fake":151,"./finance":152,"./hacker":153,"./helpers":154,"./image":156,"./internet":158,"./lorem":1186,"./name":1187,"./phone_number":1188,"./random":1189,"./system":1190}],158:[function(require,module,exports){
var random_ua = require('../vendor/user-agent');

/**
 *
 * @namespace faker.internet
 */
var Internet = function (faker) {
  var self = this;
  /**
   * avatar
   *
   * @method faker.internet.avatar
   */
  self.avatar = function () {
      return faker.random.arrayElement(faker.definitions.internet.avatar_uri);
  };

  self.avatar.schema = {
    "description": "Generates a URL for an avatar.",
    "sampleResults": ["https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg"]
  };

  /**
   * email
   *
   * @method faker.internet.email
   * @param {string} firstName
   * @param {string} lastName
   * @param {string} provider
   */
  self.email = function (firstName, lastName, provider) {
      provider = provider || faker.random.arrayElement(faker.definitions.internet.free_email);
      return  faker.helpers.slugify(faker.internet.userName(firstName, lastName)) + "@" + provider;
  };

  self.email.schema = {
    "description": "Generates a valid email address based on optional input criteria",
    "sampleResults": ["foo.bar@gmail.com"],
    "properties": {
      "firstName": {
        "type": "string",
        "required": false,
        "description": "The first name of the user"
      },
      "lastName": {
        "type": "string",
        "required": false,
        "description": "The last name of the user"
      },
      "provider": {
        "type": "string",
        "required": false,
        "description": "The domain of the user"
      }
    }
  };
  /**
   * exampleEmail
   *
   * @method faker.internet.exampleEmail
   * @param {string} firstName
   * @param {string} lastName
   */
  self.exampleEmail = function (firstName, lastName) {
      var provider = faker.random.arrayElement(faker.definitions.internet.example_email);
      return self.email(firstName, lastName, provider);
  };

  /**
   * userName
   *
   * @method faker.internet.userName
   * @param {string} firstName
   * @param {string} lastName
   */
  self.userName = function (firstName, lastName) {
      var result;
      firstName = firstName || faker.name.firstName();
      lastName = lastName || faker.name.lastName();
      switch (faker.random.number(2)) {
      case 0:
          result = firstName + faker.random.number(99);
          break;
      case 1:
          result = firstName + faker.random.arrayElement([".", "_"]) + lastName;
          break;
      case 2:
          result = firstName + faker.random.arrayElement([".", "_"]) + lastName + faker.random.number(99);
          break;
      }
      result = result.toString().replace(/'/g, "");
      result = result.replace(/ /g, "");
      return result;
  };

  self.userName.schema = {
    "description": "Generates a username based on one of several patterns. The pattern is chosen randomly.",
    "sampleResults": [
      "Kirstin39",
      "Kirstin.Smith",
      "Kirstin.Smith39",
      "KirstinSmith",
      "KirstinSmith39",
    ],
    "properties": {
      "firstName": {
        "type": "string",
        "required": false,
        "description": "The first name of the user"
      },
      "lastName": {
        "type": "string",
        "required": false,
        "description": "The last name of the user"
      }
    }
  };

  /**
   * protocol
   *
   * @method faker.internet.protocol
   */
  self.protocol = function () {
      var protocols = ['http','https'];
      return faker.random.arrayElement(protocols);
  };

  self.protocol.schema = {
    "description": "Randomly generates http or https",
    "sampleResults": ["https", "http"]
  };

  /**
   * url
   *
   * @method faker.internet.url
   */
  self.url = function () {
      return faker.internet.protocol() + '://' + faker.internet.domainName();
  };

  self.url.schema = {
    "description": "Generates a random URL. The URL could be secure or insecure.",
    "sampleResults": [
      "http://rashawn.name",
      "https://rashawn.name"
    ]
  };

  /**
   * domainName
   *
   * @method faker.internet.domainName
   */
  self.domainName = function () {
      return faker.internet.domainWord() + "." + faker.internet.domainSuffix();
  };

  self.domainName.schema = {
    "description": "Generates a random domain name.",
    "sampleResults": ["marvin.org"]
  };

  /**
   * domainSuffix
   *
   * @method faker.internet.domainSuffix
   */
  self.domainSuffix = function () {
      return faker.random.arrayElement(faker.definitions.internet.domain_suffix);
  };

  self.domainSuffix.schema = {
    "description": "Generates a random domain suffix.",
    "sampleResults": ["net"]
  };

  /**
   * domainWord
   *
   * @method faker.internet.domainWord
   */
  self.domainWord = function () {
      return faker.name.firstName().replace(/([\\~#&*{}/:<>?|\"'])/ig, '').toLowerCase();
  };

  self.domainWord.schema = {
    "description": "Generates a random domain word.",
    "sampleResults": ["alyce"]
  };

  /**
   * ip
   *
   * @method faker.internet.ip
   */
  self.ip = function () {
      var randNum = function () {
          return (faker.random.number(255)).toFixed(0);
      };

      var result = [];
      for (var i = 0; i < 4; i++) {
          result[i] = randNum();
      }

      return result.join(".");
  };

  self.ip.schema = {
    "description": "Generates a random IP.",
    "sampleResults": ["97.238.241.11"]
  };

  /**
   * ipv6
   *
   * @method faker.internet.ipv6
   */
  self.ipv6 = function () {
      var randHash = function () {
          var result = "";
          for (var i = 0; i < 4; i++) {
            result += (faker.random.arrayElement(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"]));
          }
          return result
      };

      var result = [];
      for (var i = 0; i < 8; i++) {
        result[i] = randHash();
      }
      return result.join(":");
  };

  self.ipv6.schema = {
    "description": "Generates a random IPv6 address.",
    "sampleResults": ["2001:0db8:6276:b1a7:5213:22f1:25df:c8a0"]
  };

  /**
   * userAgent
   *
   * @method faker.internet.userAgent
   */
  self.userAgent = function () {
    return random_ua.generate();
  };

  self.userAgent.schema = {
    "description": "Generates a random user agent.",
    "sampleResults": ["Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_7_5 rv:6.0; SL) AppleWebKit/532.0.1 (KHTML, like Gecko) Version/7.1.6 Safari/532.0.1"]
  };

  /**
   * color
   *
   * @method faker.internet.color
   * @param {number} baseRed255
   * @param {number} baseGreen255
   * @param {number} baseBlue255
   */
  self.color = function (baseRed255, baseGreen255, baseBlue255) {
      baseRed255 = baseRed255 || 0;
      baseGreen255 = baseGreen255 || 0;
      baseBlue255 = baseBlue255 || 0;
      // based on awesome response : http://stackoverflow.com/questions/43044/algorithm-to-randomly-generate-an-aesthetically-pleasing-color-palette
      var red = Math.floor((faker.random.number(256) + baseRed255) / 2);
      var green = Math.floor((faker.random.number(256) + baseGreen255) / 2);
      var blue = Math.floor((faker.random.number(256) + baseBlue255) / 2);
      var redStr = red.toString(16);
      var greenStr = green.toString(16);
      var blueStr = blue.toString(16);
      return '#' +
        (redStr.length === 1 ? '0' : '') + redStr +
        (greenStr.length === 1 ? '0' : '') + greenStr +
        (blueStr.length === 1 ? '0': '') + blueStr;

  };

  self.color.schema = {
    "description": "Generates a random hexadecimal color.",
    "sampleResults": ["#06267f"],
    "properties": {
      "baseRed255": {
        "type": "number",
        "required": false,
        "description": "The red value. Valid values are 0 - 255."
      },
      "baseGreen255": {
        "type": "number",
        "required": false,
        "description": "The green value. Valid values are 0 - 255."
      },
      "baseBlue255": {
        "type": "number",
        "required": false,
        "description": "The blue value. Valid values are 0 - 255."
      }
    }
  };

  /**
   * mac
   *
   * @method faker.internet.mac
   */
  self.mac = function(){
      var i, mac = "";
      for (i=0; i < 12; i++) {
          mac+= faker.random.number(15).toString(16);
          if (i%2==1 && i != 11) {
              mac+=":";
          }
      }
      return mac;
  };

  self.mac.schema = {
    "description": "Generates a random mac address.",
    "sampleResults": ["78:06:cc:ae:b3:81"]
  };

  /**
   * password
   *
   * @method faker.internet.password
   * @param {number} len
   * @param {boolean} memorable
   * @param {string} pattern
   * @param {string} prefix
   */
   self.password = function (len, memorable, pattern, prefix) {
     len = len || 15;
     if (typeof memorable === "undefined") {
       memorable = false;
     }
     /*
      * password-generator ( function )
      * Copyright(c) 2011-2013 Bermi Ferrer <bermi@bermilabs.com>
      * MIT Licensed
      */
     var consonant, letter, password, vowel;
     letter = /[a-zA-Z]$/;
     vowel = /[aeiouAEIOU]$/;
     consonant = /[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/;
     var _password = function (length, memorable, pattern, prefix) {
       var char, n;
       if (length == null) {
         length = 10;
       }
       if (memorable == null) {
         memorable = true;
       }
       if (pattern == null) {
         pattern = /\w/;
       }
       if (prefix == null) {
         prefix = '';
       }
       if (prefix.length >= length) {
         return prefix;
       }
       if (memorable) {
         if (prefix.match(consonant)) {
           pattern = vowel;
         } else {
           pattern = consonant;
         }
       }
       n = faker.random.number(94) + 33;
       char = String.fromCharCode(n);
       if (memorable) {
         char = char.toLowerCase();
       }
       if (!char.match(pattern)) {
         return _password(length, memorable, pattern, prefix);
       }
       return _password(length, memorable, pattern, "" + prefix + char);
     };
     return _password(len, memorable, pattern, prefix);
   }

  self.password.schema = {
    "description": "Generates a random password.",
    "sampleResults": [
      "AM7zl6Mg",
      "susejofe"
    ],
    "properties": {
      "length": {
        "type": "number",
        "required": false,
        "description": "The number of characters in the password."
      },
      "memorable": {
        "type": "boolean",
        "required": false,
        "description": "Whether a password should be easy to remember."
      },
      "pattern": {
        "type": "regex",
        "required": false,
        "description": "A regex to match each character of the password against. This parameter will be negated if the memorable setting is turned on."
      },
      "prefix": {
        "type": "string",
        "required": false,
        "description": "A value to prepend to the generated password. The prefix counts towards the length of the password."
      }
    }
  };

};


module["exports"] = Internet;

},{"../vendor/user-agent":1192}],159:[function(require,module,exports){
exports['az'] = require('./locales/az');
exports['cz'] = require('./locales/cz');
exports['de'] = require('./locales/de');
exports['de_AT'] = require('./locales/de_AT');
exports['de_CH'] = require('./locales/de_CH');
exports['en'] = require('./locales/en');
exports['en_AU'] = require('./locales/en_AU');
exports['en_BORK'] = require('./locales/en_BORK');
exports['en_CA'] = require('./locales/en_CA');
exports['en_GB'] = require('./locales/en_GB');
exports['en_IE'] = require('./locales/en_IE');
exports['en_IND'] = require('./locales/en_IND');
exports['en_US'] = require('./locales/en_US');
exports['en_au_ocker'] = require('./locales/en_au_ocker');
exports['es'] = require('./locales/es');
exports['es_MX'] = require('./locales/es_MX');
exports['fa'] = require('./locales/fa');
exports['fr'] = require('./locales/fr');
exports['fr_CA'] = require('./locales/fr_CA');
exports['ge'] = require('./locales/ge');
exports['id_ID'] = require('./locales/id_ID');
exports['it'] = require('./locales/it');
exports['ja'] = require('./locales/ja');
exports['ko'] = require('./locales/ko');
exports['nb_NO'] = require('./locales/nb_NO');
exports['nep'] = require('./locales/nep');
exports['nl'] = require('./locales/nl');
exports['pl'] = require('./locales/pl');
exports['pt_BR'] = require('./locales/pt_BR');
exports['ru'] = require('./locales/ru');
exports['sk'] = require('./locales/sk');
exports['sv'] = require('./locales/sv');
exports['tr'] = require('./locales/tr');
exports['uk'] = require('./locales/uk');
exports['vi'] = require('./locales/vi');
exports['zh_CN'] = require('./locales/zh_CN');
exports['zh_TW'] = require('./locales/zh_TW');

},{"./locales/az":184,"./locales/cz":223,"./locales/de":261,"./locales/de_AT":294,"./locales/de_CH":313,"./locales/en":393,"./locales/en_AU":425,"./locales/en_BORK":433,"./locales/en_CA":441,"./locales/en_GB":454,"./locales/en_IE":464,"./locales/en_IND":476,"./locales/en_US":488,"./locales/en_au_ocker":508,"./locales/es":540,"./locales/es_MX":584,"./locales/fa":603,"./locales/fr":629,"./locales/fr_CA":649,"./locales/ge":675,"./locales/id_ID":704,"./locales/it":741,"./locales/ja":763,"./locales/ko":784,"./locales/nb_NO":814,"./locales/nep":834,"./locales/nl":858,"./locales/pl":898,"./locales/pt_BR":927,"./locales/ru":964,"./locales/sk":1004,"./locales/sv":1051,"./locales/tr":1077,"./locales/uk":1110,"./locales/vi":1137,"./locales/zh_CN":1160,"./locales/zh_TW":1179}],160:[function(require,module,exports){
module["exports"] = [
  "###"
];

},{}],161:[function(require,module,exports){
module["exports"] = [
  "#{Address.city_name}"
];

},{}],162:[function(require,module,exports){
module["exports"] = [
  "Ağcabədi",
  "Ağdam",
  "Ağdaş",
  "Ağdərə",
  "Ağstafa",
  "Ağsu",
  "Astara",
  "Bakı",
  "Balakən",
  "Beyləqan",
  "Bərdə",
  "Biləsuvar",
  "Cəbrayıl",
  "Cəlilabad",
  "Culfa",
  "Daşkəsən",
  "Dəliməmmədli",
  "Füzuli",
  "Gədəbəy",
  "Gəncə",
  "Goranboy",
  "Göyçay",
  "Göygöl",
  "Göytəpə",
  "Hacıqabul",
  "Horadiz",
  "Xaçmaz",
  "Xankəndi",
  "Xocalı",
  "Xocavənd",
  "Xırdalan",
  "Xızı",
  "Xudat",
  "İmişli",
  "İsmayıllı",
  "Kəlbəcər",
  "Kürdəmir",
  "Qax",
  "Qazax",
  "Qəbələ",
  "Qobustan",
  "Qovlar",
  "Quba",
  "Qubadlı",
  "Qusar",
  "Laçın",
  "Lerik",
  "Lənkəran",
  "Liman",
  "Masallı",
  "Mingəçevir",
  "Naftalan",
  "Naxçıvan (şəhər)",
  "Neftçala",
  "Oğuz",
  "Ordubad",
  "Saatlı",
  "Sabirabad",
  "Salyan",
  "Samux",
  "Siyəzən",
  "Sumqayıt",
  "Şabran",
  "Şahbuz",
  "Şamaxı",
  "Şəki",
  "Şəmkir",
  "Şərur",
  "Şirvan",
  "Şuşa",
  "Tərtər",
  "Tovuz",
  "Ucar",
  "Yardımlı",
  "Yevlax",
  "Zaqatala",
  "Zəngilan",
  "Zərdab"
];

},{}],163:[function(require,module,exports){
module["exports"] = [
  "Akrotiri və Dekeliya",
  "Aland adaları",
  "Albaniya",
  "Almaniya",
  "Amerika Samoası",
  "Andorra",
  "Angilya",
  "Anqola",
  "Antiqua və Barbuda",
  "Argentina",
  "Aruba",
  "Avstraliya",
  "Avstriya",
  "Azərbaycan",
  "Baham adaları",
  "Banqladeş",
  "Barbados",
  "Belçika",
  "Beliz",
  "Belarus",
  "Benin",
  "Bermud adaları",
  "BƏƏ",
  "ABŞ",
  "Boliviya",
  "Bolqarıstan",
  "Bosniya və Herseqovina",
  "Botsvana",
  "Böyük Britaniya",
  "Braziliya",
  "Bruney",
  "Burkina-Faso",
  "Burundi",
  "Butan",
  "Bəhreyn",
  "Cersi",
  "Cəbəli-Tariq",
  "CAR",
  "Cənubi Sudan",
  "Cənubi Koreya",
  "Cibuti",
  "Çad",
  "Çexiya",
  "Monteneqro",
  "Çili",
  "ÇXR",
  "Danimarka",
  "Dominika",
  "Dominikan Respublikası",
  "Efiopiya",
  "Ekvador",
  "Ekvatorial Qvineya",
  "Eritreya",
  "Ermənistan",
  "Estoniya",
  "Əfqanıstan",
  "Əlcəzair",
  "Farer adaları",
  "Fələstin Dövləti",
  "Fici",
  "Kot-d’İvuar",
  "Filippin",
  "Finlandiya",
  "Folklend adaları",
  "Fransa",
  "Fransa Polineziyası",
  "Gernsi",
  "Gürcüstan",
  "Haiti",
  "Hindistan",
  "Honduras",
  "Honkonq",
  "Xorvatiya",
  "İndoneziya",
  "İordaniya",
  "İraq",
  "İran",
  "İrlandiya",
  "İslandiya",
  "İspaniya",
  "İsrail",
  "İsveç",
  "İsveçrə",
  "İtaliya",
  "Kabo-Verde",
  "Kamboca",
  "Kamerun",
  "Kanada",
  "Kayman adaları",
  "Keniya",
  "Kipr",
  "Kiribati",
  "Kokos adaları",
  "Kolumbiya",
  "Komor adaları",
  "Konqo Respublikası",
  "KDR",
  "Kosovo",
  "Kosta-Rika",
  "Kuba",
  "Kuk adaları",
  "Küveyt",
  "Qabon",
  "Qambiya",
  "Qana",
  "Qətər",
  "Qayana",
  "Qazaxıstan",
  "Qərbi Sahara",
  "Qırğızıstan",
  "Qrenada",
  "Qrenlandiya",
  "Quam",
  "Qvatemala",
  "Qvineya",
  "Qvineya-Bisau",
  "Laos",
  "Latviya",
  "Lesoto",
  "Liberiya",
  "Litva",
  "Livan",
  "Liviya",
  "Lixtenşteyn",
  "Lüksemburq",
  "Macarıstan",
  "Madaqaskar",
  "Makao",
  "Makedoniya",
  "Malavi",
  "Malayziya",
  "Maldiv adaları",
  "Mali",
  "Malta",
  "Marşall adaları",
  "Mavriki",
  "Mavritaniya",
  "Mayotta",
  "Meksika",
  "Men adası",
  "Mərakeş",
  "MAR",
  "Mikroneziya",
  "Milad adası",
  "Misir",
  "Myanma",
  "Moldova",
  "Monako",
  "Monqolustan",
  "Montserrat",
  "Mozambik",
  "Müqəddəs Yelena, Askenson və Tristan-da-Kunya adaları",
  "Namibiya",
  "Nauru",
  "Nepal",
  "Niderland",
  "Niderland Antil adaları",
  "Niger",
  "Nigeriya",
  "Nikaraqua",
  "Niue",
  "Norfolk adası",
  "Norveç",
  "Oman",
  "Özbəkistan",
  "Pakistan",
  "Palau",
  "Panama",
  "Papua-Yeni Qvineya",
  "Paraqvay",
  "Peru",
  "Pitkern adaları",
  "Polşa",
  "Portuqaliya",
  "Prednestroviya",
  "Puerto-Riko",
  "Ruanda",
  "Rumıniya",
  "Rusiya",
  "Salvador",
  "Samoa",
  "San-Marino",
  "San-Tome və Prinsipi",
  "Seneqal",
  "Sen-Bartelemi",
  "Sent-Kits və Nevis",
  "Sent-Lüsiya",
  "Sen-Marten",
  "Sen-Pyer və Mikelon",
  "Sent-Vinsent və Qrenadina",
  "Serbiya",
  "Seyşel adaları",
  "Səudiyyə Ərəbistanı",
  "Sinqapur",
  "Slovakiya",
  "Sloveniya",
  "Solomon adaları",
  "Somali",
  "Somalilend",
  "Sudan",
  "Surinam",
  "Suriya",
  "Svazilend",
  "Syerra-Leone",
  "Şərqi Timor",
  "Şimali Marian adaları",
  "Şpisbergen və Yan-Mayen",
  "Şri-Lanka",
  "Tacikistan",
  "Tanzaniya",
  "Tailand",
  "Çin Respublikası",
  "Törks və Kaykos adaları",
  "Tokelau",
  "Tonqa",
  "Toqo",
  "Trinidad və Tobaqo",
  "Tunis",
  "Tuvalu",
  "Türkiyə",
  "Türkmənistan",
  "Ukrayna",
  "Uollis və Futuna",
  "Uqanda",
  "Uruqvay",
  "Vanuatu",
  "Vatikan",
  "Venesuela",
  "Amerika Virgin adaları",
  "Britaniya Virgin adaları",
  "Vyetnam",
  "Yamayka",
  "Yaponiya",
  "Yeni Kaledoniya",
  "Yeni Zelandiya",
  "Yəmən",
  "Yunanıstan",
  "Zambiya",
  "Zimbabve"
];

},{}],164:[function(require,module,exports){
module["exports"] = [
  "Azərbaycan"
];

},{}],165:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.street_title = require("./street_title");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":160,"./city":161,"./city_name":162,"./country":163,"./default_country":164,"./postcode":166,"./secondary_address":167,"./state":168,"./street_address":169,"./street_name":170,"./street_suffix":171,"./street_title":172}],166:[function(require,module,exports){
module["exports"] = [
  "AZ####"
];

},{}],167:[function(require,module,exports){
module["exports"] = [
  "m. ###"
];

},{}],168:[function(require,module,exports){
module["exports"] = [

];

},{}],169:[function(require,module,exports){
module["exports"] = [
  "#{street_name}, #{building_number}"
];

},{}],170:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Address.street_title}",
  "#{Address.street_title} #{street_suffix}"
];

},{}],171:[function(require,module,exports){
module["exports"] = [
  "küç.",
  "küçəsi",
  "prospekti",
  "pr.",
  "sahəsi",
  "sh."
];

},{}],172:[function(require,module,exports){
module["exports"] = [
  "Abbas Fətullayev",
  "Abbas Mirzə Şərifzadə",
  "Abbas Səhhət",
  "Abdulla Şaiq",
  "Afiyəddin Cəlilov",
  "Axundov",
  "Ağa Nemətulla",
  "Ağadadaş Qurbanov",
  "Akademik Həsən Əliyev",
  "Akademik Lətif İmanov",
  "Alı Mustafayev",
  "Almas İldırım",
  "Asəf Zeynallı",
  "Asif Əsədullayev",
  "Aşıq Alı",
  "Aşıq Ələsgər",
  "Azadlıq prospekti",
  "Bakıxanov",
  "Balababa Məcidov",
  "Balaəmi Dadaşov",
  "Behbud Şaxtantinski",
  "Bəkir Çobanzadə",
  "Bəsti Bağırova",
  "Bəşir Səfəroğlu",
  "Böyük Qala",
  "Cabir Əliyev",
  "Camal Hacıəliyev",
  "Cavadxan",
  "Cavanşir",
  "Ceyhun Səlimov",
  "Ceyhunbəy Hacıbəyli",
  "Cəbiyev",
  "Cəfər Xəndan",
  "Cəfər Cabbarlı",
  "Cəlal Qurbanov",
  "Cəlil Məmmədquluzadə",
  "Çingiz Mustafayev",
  "Çobanzadə",
  "Dadaş Bünyadzadə",
  "Dağlı Yunus",
  "Dilarə Əliyeva",
  "Elçin Əzimov",
  "Eldar və Abdulla Əlibəyovlar",
  "Elxan Həsənov",
  "Elşən Mehdiyev",
  "Elşən Süleymanov",
  "Etibar Bəkirov",
  "Əbdüləzəl Dəmirçizadə",
  "Əbdülhəsən Anaplı",
  "Əbdülkərim Əlizadə",
  "Əhməd bəy Ağaoğlu",
  "Əhməd Cavad",
  "Əhməd Cəmil",
  "Əhməd Mehbalıyev",
  "Əhməd Rəcəbli",
  "Əjdər Xanbabayev",
  "Əkrəm Cəfərov",
  "Ələsgər Qayıbov",
  "Əliağa Vahid",
  "Əli Bəy Hüseynzadə",
  "Əlimərdan bəy Topçubaşov",
  "Əliyar Əliyev",
  "Əlövsət Abdulrəhimov",
  "Əlövsət Quliyev",
  "Əmir Bağırov",
  "Əsəd Əhmədov",
  "Əşrəf Yunusov",
  "Əzim Əzimzadə",
  "Əziz Əliyev",
  "Heybət Heybətov",
  "Həqiqət Rzayeva",
  "Həmid Araslı",
  "Hənifə Ələsgərova",
  "Hərbçilər",
  "Həsənoğu",
  "Həsən Seyidbəyli",
  "Hətəm Allahverdiyev",
  "Həzi Aslanov",
  "Hüsü Hacıyev",
  "Hüseynqulu Sarabski",
  "Fətəli xan Xoyski",
  "Fəzail Bayramov",
  "Fikrət Əmirov",
  "Fuad İbrahimbəyov",
  "Fuad Yusifov",
  "General Əliağa Şıxlinski",
  "Gülayə Qədirbəyova",
  "Gənclik",
  "Xaqani",
  "Xan Şuşinski",
  "Xanlar",
  "Xudu Məmmədov",
  "İbrahimpaşa Dadaşov",
  "İdris Süleymanov",
  "İlqar Abbasov",
  "İlqar İsmayılov",
  "İmran Qasımov",
  "İnqilab İsmayılov",
  "İsfəndiyar Zülalov",
  "İslam Abışov",
  "İslam Səfərli",
  "İsmayıl bəy Qutqaşınlı",
  "İsmayıl Mirzəgülov",
  "İstiqlaliyyət",
  "28 May",
  "İsgəndərov",
  "İvan Turgenev",
  "İzmir",
  "İzzət Həmidov",
  "İzzət Orucova",
  "Kamal Rəhimov",
  "Kazım Kazımzadə",
  "Kazımağa Kərimov",
  "Kərəm İsmayılov",
  "Kiçik Qala",
  "Koroğlu Rəhimov",
  "Qaçaq Nəbi",
  "Qarabağ",
  "Qədirbəyov",
  "Qəzənfər Musabəyov",
  "Qəzənfər Vəliyev",
  "Leyla Məmmədbəyova",
  "Mahmud İbrahimov",
  "Malik Məmmədov",
  "Mehdi Abbasov",
  "Mehdi Mehdizadə",
  "Məhəmməd Əmin Rəsulzadə",
  "Məhəmməd Hadi",
  "Məhəmməd Xiyabani",
  "Məhəmməd ibn Hinduşah Naxçıvani",
  "Məhsəti Gəncəvi",
  "Məmmədyarov",
  "Mərdanov qardaşları",
  "Mətləb Ağayev",
  "Məşədi Hilal",
  "Məzahir Rüstəmov",
  "Mikayıl Müşviq",
  "Mingəçevir",
  "Mirəli Qaşqay",
  "Mirəli Seyidov",
  "Mirzağa Əliyev",
  "Mirzə İbrahimov",
  "Mirzə Mənsur",
  "Mirzə Mustafayev",
  "Murtuza Muxtarov",
  "Mustafa Topçubaşov",
  "Müqtədir Aydınbəyov",
  "Müslüm Maqomayev",
  "Müzəffər Həsənov",
  "Nabat Aşurbəyova",
  "Naxçıvani",
  "Naximov",
  "Nazim İsmaylov",
  "Neapol",
  "Neftçi Qurban Abbasov",
  "Neftçilər prospekti",
  "Nəcəfbəy Vəzirov",
  "Nəcəfqulu Rəfiyev",
  "Nəriman Nərimanov",
  "Nəsirəddin Tusi",
  "Nigar Rəfibəyli",
  "Niyazi",
  "Nizami",
  "Nizami Abdullayev",
  "Nobel prospekti",
  "Novruz",
  "Novruzov qardaşları",
  "Oqtay Vəliyev",
  "Parlament",
  "Puşkin",
  "Rafiq Ağayev",
  "Ramiz Qəmbərov",
  "Rəşid Behbudov",
  "Rəşid Məcidov",
  "Ruhulla Axundov",
  "Ruslan Allahverdiyev",
  "Rüstəm Rüstəmov",
  "Tahir Bağırov",
  "Tarzan Hacı Məmmədov",
  "Tbilisi prospekti",
  "Təbriz (Bakı)",
  "Təbriz Xəlilbəyli",
  "Tofiq Məmmədov",
  "Tolstoy",
  "Sabit Orucov",
  "Sabit Rəhman",
  "Sahib Hümmətov",
  "Salatın Əsgərova",
  "Sarayevo",
  "Seyid Əzim Şirvani",
  "Seyid Şuşinski",
  "Seyidov",
  "Səməd bəy Mehmandarov",
  "Səməd Vurğun",
  "Səttar Bəhlulzadə",
  "Sona xanım Vəlixanlı",
  "Sübhi Salayev",
  "Süleyman Əhmədov",
  "Süleyman Rəhimov",
  "Süleyman Rüstəm",
  "Süleyman Sani Axundov",
  "Süleyman Vəzirov",
  "Şahin Səmədov",
  "Şamil Əzizbəyov",
  "Şamil Kamilov",
  "Şeyx Şamil",
  "Şəfayət Mehdiyev",
  "Şəmsi Bədəlbəyli",
  "Şirin Mirzəyev",
  "Şıxəli Qurbanov",
  "Şövkət Ələkbərova",
  "Ülvi Bünyadzadə",
  "Üzeyir Hacıbəyov",
  "Vasif Əliyev",
  "Vəli Məmmədov",
  "Vladislav Plotnikov",
  "Vüqar Quliyev",
  "Vunq Tau",
  "Yaqub Əliyev",
  "Yaşar Abdullayev",
  "Yaşar Əliyev",
  "Yavər Əliyev",
  "Yesenin",
  "Yəhya Hüseynov",
  "Yılmaz Axundzadə",
  "Yüsif Eyvazov",
  "Yusif Qasımov",
  "Yusif Məmmədəliyev",
  "Yusif Səfərov",
  "Yusif Vəzir Çəmənzəminli",
  "Zahid Əliyev",
  "Zahid Xəlilov",
  "Zaur Kərimov",
  "Zavod",
  "Zərgərpalan"
];

},{}],173:[function(require,module,exports){
module["exports"] = [
  "ala",
  "açıq bənövşəyi",
  "ağ",
  "mavi",
  "boz",
  "bənövşəyi",
  "göy rəng",
  "gümüşü",
  "kardinal",
  "narıncı",
  "qara",
  "qırmızı",
  "qəhvəyi",
  "tünd göy",
  "tünd qırmızı",
  "xlorofil",
  "yaşıl",
  "çəhrayı"
];

},{}],174:[function(require,module,exports){
module["exports"] = [
  "Kitablar",
  "Filmlər",
  "musiqi",
  "oyunlar",
  "Elektronika",
  "Kompyuterlər",
  "Ev",
  "садинструмент",
  "Səhiyyə",
  "gözəllik",
  "Oyuncaqlar",
  "uşaq üçün",
  "Geyim",
  "Ayyaqqabı",
  "bəzək",
  "İdman",
  "turizm",
  "Avtomobil",
];

},{}],175:[function(require,module,exports){
var commerce = {};
module['exports'] = commerce;
commerce.color = require("./color");
commerce.department = require("./department");
commerce.product_name = require("./product_name");

},{"./color":173,"./department":174,"./product_name":176}],176:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Balaca",
    "Ergonomik",
    "Kobud",
    "İntellektual",
    "Möhtəşəm",
    "İnanılmaz",
    "Fantastik",
    "Əlverişli",
    "Parlaq",
    "Mükəmməl"
  ],
  "material": [
    "Polad",
    "Ağac",
    "Beton",
    "Plastik",
    "Pambıq",
    "Qranit",
    "Rezin"
  ],
  "product": [
    "Stul",
    "Avtomobil",
    "Kompyuter",
    "Beret",
    "Kulon",
    "Stol",
    "Sviter",
    "Kəmər",
  ]
};

},{}],177:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.prefix = require("./prefix");
company.suffix = require("./suffix");
company.name = require("./name");

},{"./name":178,"./prefix":179,"./suffix":180}],178:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.female_first_name}",
  "#{prefix} #{Name.male_first_name}",
  "#{prefix} #{Name.male_last_name}",
  "#{prefix} #{suffix}#{suffix}",
  "#{prefix} #{suffix}#{suffix}#{suffix}",
  "#{prefix} #{Address.city_name}#{suffix}",
  "#{prefix} #{Address.city_name}#{suffix}#{suffix}",
  "#{prefix} #{Address.city_name}#{suffix}#{suffix}#{suffix}"
];

},{}],179:[function(require,module,exports){
module["exports"] = [
  "ASC",
  "MMC",
  "QSC",
];

},{}],180:[function(require,module,exports){
arguments[4][168][0].apply(exports,arguments)
},{"dup":168}],181:[function(require,module,exports){
var date = {};
module["exports"] = date;
date.month = require("./month");
date.weekday = require("./weekday");

},{"./month":182,"./weekday":183}],182:[function(require,module,exports){
// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1734
module["exports"] = {
  wide: [
    "yanvar",
    "fevral",
    "mart",
    "aprel",
    "may",
    "iyun",
    "iyul",
    "avqust",
    "sentyabr",
    "oktyabr",
    "noyabr",
    "dekabr"
  ],
  wide_context: [
    "января",
    "февраля",
    "марта",
    "апреля",
    "мая",
    "июня",
    "июля",
    "августа",
    "сентября",
    "октября",
    "ноября",
    "декабря"
  ],
  abbr: [
    "янв.",
    "февр.",
    "март",
    "апр.",
    "май",
    "июнь",
    "июль",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек."
  ],
  abbr_context: [
    "янв.",
    "февр.",
    "марта",
    "апр.",
    "мая",
    "июня",
    "июля",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек."
  ]
};

},{}],183:[function(require,module,exports){
// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1825
module["exports"] = {
  wide: [
    "Bazar",
    "Bazar ertəsi",
    "Çərşənbə axşamı",
    "Çərşənbə",
    "Cümə axşamı",
    "Cümə",
    "Şənbə"
  ],
  wide_context: [
    "воскресенье",
    "понедельник",
    "вторник",
    "среда",
    "четверг",
    "пятница",
    "суббота"
  ],
  abbr: [
    "Ba",
    "BE",
    "ÇA",
    "Çə",
    "CA",
    "Cü",
    "Şə"
  ],
  abbr_context: [
    "вс",
    "пн",
    "вт",
    "ср",
    "чт",
    "пт",
    "сб"
  ]
};

},{}],184:[function(require,module,exports){
var az = {};
module['exports'] = az;
az.title = "Azerbaijani";
az.separator = " və ";
az.address = require("./address");
az.internet = require("./internet");
az.name = require("./name");
az.phone_number = require("./phone_number");
az.commerce = require("./commerce");
az.company = require("./company");
az.date = require("./date");

},{"./address":165,"./commerce":175,"./company":177,"./date":181,"./internet":187,"./name":190,"./phone_number":197}],185:[function(require,module,exports){
module["exports"] = [
  "com",
  "az",
  "com.az",
  "info",
  "net",
  "org"
];

},{}],186:[function(require,module,exports){
module["exports"] = [
  "box.az",
  "mail.az",
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],187:[function(require,module,exports){
var internet = {};
module['exports'] = internet;
internet.free_email = require("./free_email");
internet.domain_suffix = require("./domain_suffix");

},{"./domain_suffix":185,"./free_email":186}],188:[function(require,module,exports){
module["exports"] = [
  "Anna",
  "Adeliya",
  "Afaq",
  "Afət",
  "Afərim",
  "Aidə",
  "Aygün",
  "Aynur",
  "Alsu",
  "Ayan",
  "Aytən",
  "Aygül",
  "Aydan",
  "Aylin",
  "Bahar",
  "Banu",
  "Bəyaz",
  "Billurə",
  "Cansu",
  "Ceyla",
  "Damla",
  "Dəniz",
  "Diana",
  "Dilarə",
  "Ella",
  "Elza",
  "Elyanora",
  "Ellada",
  "Elvira",
  "Elnarə",
  "Esmira",
  "Estella",
  "Fatimə",
  "Fəxriyyə",
  "Fərəh",
  "Fərqanə",
  "Fidan",
  "Firuzə",
  "Gövhər",
  "Günay",
  "Gülay",
  "Gülçin",
  "Gülər",
  "Gülsüm",
  "Humay",
  "Hüriyə",
  "Hülya",
  "Jalə",
  "Jasmin",
  "Kübra",
  "Ləman",
  "Lamiyə",
  "Lalə",
  "Liliya",
  "Laura",
  "Leyla",
  "Maya",
  "Mehriban",
  "Mələk",
  "Nuray",
  "Nurgün",
  "Nərgiz",
  "Nigar",
  "Ofelya",
  "Pəri",
  "Röya",
  "Səbinə",
  "Selcan",
  "Tansu",
  "Tuba",
  "Ülviyyə",
  "Ulduz",
  "Ülkər"
];

},{}],189:[function(require,module,exports){
module["exports"] = [
  "Qasımova",
  "Əfəndiyeva",
  "Soltanova",
  "Abdullayeva",
  "Rəşidova",
  "Ələkbərova",
  "Əliyeva",
  "Tahirova",
  "Seyidova",
  "Vəsiyeva"
];

},{}],190:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.male_last_name = require("./male_last_name");
name.female_first_name = require("./female_first_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./female_first_name":188,"./female_last_name":189,"./male_first_name":191,"./male_last_name":192,"./name":193,"./prefix":194,"./suffix":195}],191:[function(require,module,exports){
module["exports"] = [
  "Anar",
  "Amid",
  "Afəl",
  "Abbas",
  "Abdulla",
  "Adil",
  "Akif",
  "Aqil",
  "Bəhram",
  "Nurlan",
  "Rafiq",
  "Tərlan",
  "Zaur",
  "Emin",
  "Emil",
  "Kamran",
  "Elnur",
  "Natiq",
  "Rəşad",
  "Rəşid",
  "Tahir",
  "Əhməd",
  "Zahir",
  "İlham",
  "İlqar",
  "Nahid",
  "Nihad",
  "Faiq",
  "İxtiyar",
  "Şəhriyar",
  "Şaiq",
  "Bəxtiyar",
  "Bəhruz",
  "Tunar",
  "Nadir"
];

},{}],192:[function(require,module,exports){
module["exports"] = [
  "Əhmədov",
  "Ələkbərov",
  "Əliyev",
  "Vəliyev",
  "Soltanov",
  "Quliyev",
  "Məmmədov",
  "Xəlilov",
  "Nəzərov",
  "Rəhimov"
];

},{}],193:[function(require,module,exports){
module["exports"] = [
  "#{male_first_name}",
  "#{male_last_name} #{male_first_name}",
  "#{male_first_name} #{male_last_name}",
  "#{female_first_name}",
  "#{female_first_name} #{female_last_name}",
  "#{female_last_name} #{female_first_name}",
];

},{}],194:[function(require,module,exports){
module["exports"] = [];

},{}],195:[function(require,module,exports){
arguments[4][194][0].apply(exports,arguments)
},{"dup":194}],196:[function(require,module,exports){
module["exports"] = [
  "(9##)###-##-##"
];

},{}],197:[function(require,module,exports){
var phone_number = {};
module['exports'] = phone_number;
phone_number.formats = require("./formats");

},{"./formats":196}],198:[function(require,module,exports){
module["exports"] = [
  "#",
  "##",
  "###"
];

},{}],199:[function(require,module,exports){
module["exports"] = [
  "#{city_name}"
];

},{}],200:[function(require,module,exports){
module["exports"] = [
  "Abertamy",
  "Adamov",
  "Andělská Hora",
  "Aš",
  "Bakov nad Jizerou",
  "Bavorov",
  "Bechyně",
  "Bečov nad Teplou",
  "Bělá nad Radbuzou",
  "Bělá pod Bezdězem",
  "Benátky nad Jizerou",
  "Benešov",
  "Benešov nad Ploučnicí",
  "Beroun",
  "Bezdružice",
  "Bílina",
  "Bílovec",
  "Blansko",
  "Blatná",
  "Blovice",
  "Blšany",
  "Bochov",
  "Bohumín",
  "Bohušovice nad Ohří",
  "Bojkovice",
  "Bor",
  "Borohrádek",
  "Borovany",
  "Boskovice",
  "Boží Dar",
  "Brandýs nad Labem-Stará Boleslav",
  "Brandýs nad Orlicí",
  "Brno",
  "Broumov",
  "Brtnice",
  "Brumov-Bylnice",
  "Bruntál",
  "Brušperk",
  "Břeclav",
  "Březnice",
  "Březová",
  "Březová nad Svitavou",
  "Břidličná",
  "Bučovice",
  "Budišov nad Budišovkou",
  "Budyně nad Ohří",
  "Buštěhrad",
  "Bystré",
  "Bystřice",
  "Bystřice nad Pernštejnem",
  "Bystřice pod Hostýnem",
  "Bzenec",
  "Chabařovice",
  "Cheb",
  "Chlumec",
  "Chlumec nad Cidlinou",
  "Choceň",
  "Chodov",
  "Chomutov",
  "Chotěboř",
  "Chrast",
  "Chrastava",
  "Chropyně",
  "Chrudim",
  "Chřibská",
  "Chvaletice",
  "Chýnov",
  "Chyše",
  "Cvikov",
  "Čáslav",
  "Čelákovice",
  "Černošice",
  "Černošín",
  "Černovice",
  "Červená Řečice",
  "Červený Kostelec",
  "Česká Kamenice",
  "Česká Lípa",
  "Česká Skalice",
  "Česká Třebová",
  "České Budějovice",
  "České Velenice",
  "Český Brod",
  "Český Dub",
  "Český Krumlov",
  "Český Těšín",
  "Dačice",
  "Dašice",
  "Děčín",
  "Desná",
  "Deštná",
  "Dobrovice",
  "Dobruška",
  "Dobřany",
  "Dobřichovice",
  "Dobříš",
  "Doksy",
  "Dolní Benešov",
  "Dolní Bousov",
  "Dolní Kounice",
  "Dolní Poustevna",
  "Domažlice",
  "Dubá",
  "Dubí",
  "Dubňany",
  "Duchcov",
  "Dvůr Králové nad Labem",
  "Františkovy Lázně",
  "Frenštát pod Radhoštěm",
  "Frýdek-Místek",
  "Frýdlant",
  "Frýdlant nad Ostravicí",
  "Fryšták",
  "Fulnek",
  "Golčův Jeníkov",
  "Habartov",
  "Habry",
  "Hanušovice",
  "Harrachov",
  "Hartmanice",
  "Havířov",
  "Havlíčkův Brod",
  "Hejnice",
  "Heřmanův Městec",
  "Hlinsko",
  "Hluboká nad Vltavou",
  "Hlučín",
  "Hluk",
  "Hodkovice nad Mohelkou",
  "Hodonín",
  "Holešov",
  "Holice",
  "Holýšov",
  "Hora Svaté Kateřiny",
  "Horažďovice",
  "Horní Benešov",
  "Horní Blatná",
  "Horní Bříza",
  "Horní Cerekev",
  "Horní Jelení",
  "Horní Jiřetín",
  "Horní Planá",
  "Horní Slavkov",
  "Horšovský Týn",
  "Hořice",
  "Hořovice",
  "Hostinné",
  "Hostivice",
  "Hostomice",
  "Hostouň",
  "Hoštka",
  "Hradec Králové",
  "Hradec nad Moravicí",
  "Hrádek",
  "Hrádek nad Nisou",
  "Hranice (okres Cheb)",
  "Hranice (okres Přerov)",
  "Hrob",
  "Hrochův Týnec",
  "Hronov",
  "Hrotovice",
  "Hroznětín",
  "Hrušovany nad Jevišovkou",
  "Hulín",
  "Humpolec",
  "Husinec",
  "Hustopeče",
  "Ivančice",
  "Ivanovice na Hané",
  "Jablonec nad Jizerou",
  "Jablonec nad Nisou",
  "Jablonné nad Orlicí",
  "Jablonné v Podještědí",
  "Jablunkov",
  "Jáchymov",
  "Janov",
  "Janovice nad Úhlavou",
  "Janské Lázně",
  "Jaroměř",
  "Jaroměřice nad Rokytnou",
  "Javorník",
  "Jemnice",
  "Jesenice (okres Rakovník)",
  "Jeseník",
  "Jevíčko",
  "Jevišovice",
  "Jičín",
  "Jihlava",
  "Jilemnice",
  "Jílové",
  "Jílové u Prahy",
  "Jindřichův Hradec",
  "Jirkov",
  "Jiříkov",
  "Jistebnice",
  "Kadaň",
  "Kamenice nad Lipou",
  "Kamenický Šenov",
  "Kaplice",
  "Kardašova Řečice",
  "Karlovy Vary",
  "Karolinka",
  "Karviná",
  "Kasejovice",
  "Kašperské Hory",
  "Kaznějov",
  "Kdyně",
  "Kelč",
  "Kladno",
  "Kladruby",
  "Klášterec nad Ohří",
  "Klatovy",
  "Klecany",
  "Klimkovice",
  "Klobouky u Brna",
  "Kojetín",
  "Kolín",
  "Konice",
  "Kopidlno",
  "Kopřivnice",
  "Koryčany",
  "Kosmonosy",
  "Kostelec na Hané",
  "Kostelec nad Černými lesy",
  "Kostelec nad Labem",
  "Kostelec nad Orlicí",
  "Košťany",
  "Kouřim",
  "Kožlany",
  "Králíky",
  "Kralovice",
  "Kralupy nad Vltavou",
  "Králův Dvůr",
  "Kraslice",
  "Krásná Hora nad Vltavou",
  "Krásná Lípa",
  "Krásné Údolí",
  "Krásno",
  "Kravaře",
  "Krnov",
  "Kroměříž",
  "Krupka",
  "Kryry",
  "Kunovice",
  "Kunštát",
  "Kuřim",
  "Kutná Hora",
  "Kyjov",
  "Kynšperk nad Ohří",
  "Lanškroun",
  "Lanžhot",
  "Lázně Bělohrad",
  "Lázně Bohdaneč",
  "Lázně Kynžvart",
  "Ledeč nad Sázavou",
  "Ledvice",
  "Letohrad",
  "Letovice",
  "Libáň",
  "Libčice nad Vltavou",
  "Liběchov",
  "Liberec",
  "Libochovice",
  "Libušín",
  "Lipník nad Bečvou",
  "Lišov",
  "Litoměřice",
  "Litomyšl",
  "Litovel",
  "Litvínov",
  "Loket",
  "Lom",
  "Lomnice nad Lužnicí",
  "Lomnice nad Popelkou",
  "Loštice",
  "Loučná pod Klínovcem",
  "Louny",
  "Lovosice",
  "Luby",
  "Lučany nad Nisou",
  "Luhačovice",
  "Luže",
  "Lysá nad Labem",
  "Manětín",
  "Mariánské Lázně",
  "Mašťov",
  "Měčín",
  "Mělník",
  "Městec Králové",
  "Město Albrechtice",
  "Město Touškov",
  "Meziboří",
  "Meziměstí",
  "Mikulášovice",
  "Mikulov",
  "Miletín",
  "Milevsko",
  "Milovice",
  "Mimoň",
  "Miroslav",
  "Mirošov",
  "Mirotice",
  "Mirovice",
  "Mladá Boleslav",
  "Mladá Vožice",
  "Mnichovice",
  "Mnichovo Hradiště",
  "Mníšek pod Brdy",
  "Modřice",
  "Mohelnice",
  "Moravská Třebová",
  "Moravské Budějovice",
  "Moravský Beroun",
  "Moravský Krumlov",
  "Morkovice-Slížany",
  "Most",
  "Mšeno",
  "Mýto",
  "Náchod",
  "Nalžovské Hory",
  "Náměšť nad Oslavou",
  "Napajedla",
  "Nasavrky",
  "Nechanice",
  "Nejdek",
  "Němčice nad Hanou",
  "Nepomuk",
  "Neratovice",
  "Netolice",
  "Neveklov",
  "Nová Bystřice",
  "Nová Paka",
  "Nová Role",
  "Nová Včelnice",
  "Nové Hrady",
  "Nové Město na Moravě",
  "Nové Město nad Metují",
  "Nové Město pod Smrkem",
  "Nové Sedlo",
  "Nové Strašecí",
  "Nový Bor",
  "Nový Bydžov",
  "Nový Jičín",
  "Nový Knín",
  "Nymburk",
  "Nýrsko",
  "Nýřany",
  "Odolena Voda",
  "Odry",
  "Olešnice",
  "Olomouc",
  "Oloví",
  "Opava",
  "Opočno",
  "Orlová",
  "Osečná",
  "Osek",
  "Oslavany",
  "Ostrava",
  "Ostrov",
  "Otrokovice",
  "Pacov",
  "Pardubice",
  "Paskov",
  "Pec pod Sněžkou",
  "Pečky",
  "Pelhřimov",
  "Petřvald",
  "Pilníkov",
  "Písek",
  "Planá",
  "Planá nad Lužnicí",
  "Plánice",
  "Plasy",
  "Plesná",
  "Plumlov",
  "Plzeň",
  "Poběžovice",
  "Počátky",
  "Podbořany",
  "Poděbrady",
  "Podivín",
  "Pohořelice",
  "Police nad Metují",
  "Polička",
  "Polná",
  "Postoloprty",
  "Potštát",
  "Prachatice",
  "Praha",
  "Proseč",
  "Prostějov",
  "Protivín",
  "Přebuz",
  "Přelouč",
  "Přerov",
  "Přeštice",
  "Příbor",
  "Příbram",
  "Přibyslav",
  "Přimda",
  "Pyšely",
  "Rabí",
  "Radnice",
  "Rájec-Jestřebí",
  "Rajhrad",
  "Rakovník",
  "Ralsko",
  "Raspenava",
  "Rejštejn",
  "Rokycany",
  "Rokytnice nad Jizerou",
  "Rokytnice v Orlických horách",
  "Ronov nad Doubravou",
  "Rosice",
  "Rotava",
  "Roudnice nad Labem",
  "Rousínov",
  "Rovensko pod Troskami",
  "Roztoky",
  "Rožďalovice",
  "Rožmberk nad Vltavou",
  "Rožmitál pod Třemšínem",
  "Rožnov pod Radhoštěm",
  "Rtyně v Podkrkonoší",
  "Rudná",
  "Rudolfov",
  "Rumburk",
  "Rychnov nad Kněžnou",
  "Rychnov u Jablonce nad Nisou",
  "Rychvald",
  "Rýmařov",
  "Řevnice",
  "Říčany",
  "Sadská",
  "Sázava",
  "Seč",
  "Sedlčany",
  "Sedlec-Prčice",
  "Sedlice",
  "Semily",
  "Sezemice",
  "Sezimovo Ústí",
  "Skalná",
  "Skuteč",
  "Slaný",
  "Slatiňany",
  "Slavičín",
  "Slavkov u Brna",
  "Slavonice",
  "Slušovice",
  "Smečno",
  "Smiřice",
  "Smržovka",
  "Soběslav",
  "Sobotka",
  "Sokolov",
  "Solnice",
  "Spálené Poříčí",
  "Staňkov",
  "Staré Město (okres Šumperk)",
  "Staré Město (okres Uherské Hradiště)",
  "Stárkov",
  "Starý Plzenec",
  "Stochov",
  "Stod",
  "Strakonice",
  "Stráž nad Nežárkou",
  "Stráž pod Ralskem",
  "Strážnice",
  "Strážov",
  "Strmilov",
  "Stříbro",
  "Studénka",
  "Suchdol nad Lužnicí",
  "Sušice",
  "Světlá nad Sázavou",
  "Svitavy",
  "Svoboda nad Úpou",
  "Svratka",
  "Šenov",
  "Šlapanice",
  "Šluknov",
  "Špindlerův Mlýn",
  "Šternberk",
  "Štětí",
  "Štíty",
  "Štramberk",
  "Šumperk",
  "Švihov",
  "Tábor",
  "Tachov",
  "Tanvald",
  "Telč",
  "Teplá",
  "Teplice",
  "Teplice nad Metují",
  "Terezín",
  "Tišnov",
  "Toužim",
  "Tovačov",
  "Trhové Sviny",
  "Trhový Štěpánov",
  "Trmice",
  "Trutnov",
  "Třebechovice pod Orebem",
  "Třebenice",
  "Třebíč",
  "Třeboň",
  "Třemošná",
  "Třemošnice",
  "Třešť",
  "Třinec",
  "Turnov",
  "Týn nad Vltavou",
  "Týnec nad Labem",
  "Týnec nad Sázavou",
  "Týniště nad Orlicí",
  "Uherské Hradiště",
  "Uherský Brod",
  "Uherský Ostroh",
  "Uhlířské Janovice",
  "Újezd u Brna",
  "Unhošť",
  "Uničov",
  "Úpice",
  "Úsov",
  "Ústí nad Labem",
  "Ústí nad Orlicí",
  "Úštěk",
  "Úterý",
  "Úvaly",
  "Valašské Klobouky",
  "Valašské Meziříčí",
  "Valtice",
  "Vamberk",
  "Varnsdorf",
  "Vejprty",
  "Velešín",
  "Velká Bíteš",
  "Velká Bystřice",
  "Velké Bílovice",
  "Velké Hamry",
  "Velké Meziříčí",
  "Velké Opatovice",
  "Velké Pavlovice",
  "Velký Šenov",
  "Veltrusy",
  "Velvary",
  "Verneřice",
  "Veselí nad Lužnicí",
  "Veselí nad Moravou",
  "Vidnava",
  "Vimperk",
  "Vítkov",
  "Vizovice",
  "Vlachovo Březí",
  "Vlašim",
  "Vodňany",
  "Volary",
  "Volyně",
  "Votice",
  "Vracov",
  "Vratimov",
  "Vrbno pod Pradědem",
  "Vrchlabí",
  "Vroutek",
  "Vsetín",
  "Všeruby",
  "Výsluní",
  "Vysoké Mýto",
  "Vysoké nad Jizerou",
  "Vysoké Veselí",
  "Vyškov",
  "Vyšší Brod",
  "Zábřeh",
  "Zákupy",
  "Zásmuky",
  "Zbiroh",
  "Zbýšov",
  "Zdice",
  "Zlaté Hory",
  "Zlín",
  "Zliv",
  "Znojmo",
  "Zruč nad Sázavou",
  "Zubří",
  "Žacléř",
  "Žamberk",
  "Žandov",
  "Žatec",
  "Ždánice",
  "Žďár nad Sázavou",
  "Ždírec nad Doubravou",
  "Žebrák",
  "Železná Ruda",
  "Železnice",
  "Železný Brod",
  "Židlochovice",
  "Žirovnice",
  "Žlutice",
  "Žulová",
];

},{}],201:[function(require,module,exports){
module["exports"] = [
  "Afghánistán",
  "Albánie",
  "Alžírsko",
  "Andorra",
  "Angola",
  "Antigua a Barbuda",
  "Argentina",
  "Arménie",
  "Austrálie",
  "Ázerbájdžán",
  "Bahamy",
  "Bahrajn",
  "Bangladéš",
  "Barbados",
  "Belgie",
  "Belize",
  "Benin",
  "Bělorusko",
  "Bhútán",
  "Bolívie",
  "Bosna a Hercegovina",
  "Botswana",
  "Brazílie",
  "Brunej",
  "Bulharsko",
  "Burkina Faso",
  "Burundi",
  "Čad",
  "Černá Hora",
  "Česko",
  "Čína",
  "Dánsko",
  "DR Kongo",
  "Dominika",
  "Dominik",
  "Džibutsko",
  "Egypt",
  "Ekvádor",
  "Eritrea",
  "Estonsko",
  "Etiopie",
  "Fidži",
  "Filipíny",
  "Finsko",
  "Francie",
  "Gabon",
  "Gambie",
  "Gruzie",
  "Německo",
  "Ghana",
  "Grenada",
  "Guatemala",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Honduras",
  "Chile",
  "Chorvatsko",
  "Indie",
  "Indonésie",
  "Irák",
  "Írán",
  "Irsko",
  "Island",
  "Itálie",
  "Izrael",
  "Jamajka",
  "Japonsko",
  "Jemen",
  "Jihoaf",
  "Jižní Korea",
  "Jižní Súdán",
  "Jordánsko",
  "Kambodža",
  "Kamerun",
  "Kanada",
  "Kapverdy",
  "Katar",
  "Kazachstán",
  "Keňa",
  "Kiribati",
  "Kolumbie",
  "Komory",
  "Kongo",
  "Kostarika",
  "Kuba",
  "Kuvajt",
  "Kypr",
  "Kyrgyzstán",
  "Laos",
  "Lesotho",
  "Libanon",
  "Libérie",
  "Libye",
  "Lichtenštejnsko",
  "Litva",
  "Lotyšsko",
  "Lucembursko",
  "Madagaskar",
  "Maďarsko",
  "Makedonie",
  "Malajsie",
  "Malawi",
  "Maledivy",
  "Mali",
  "Malta",
  "Maroko",
  "Marshallovy ostrovy",
  "Mauritánie",
  "Mauricius",
  "Mexiko",
  "Mikronésie",
  "Moldavsko",
  "Monako",
  "Mongolsko",
  "Mosambik",
  "Myanmar (Barma)",
  "Namibie",
  "Nauru",
  "Nepál",
  "Niger",
  "Nigérie",
  "Nikaragua",
  "Nizozemsko",
  "Norsko",
  "Nový Zéland",
  "Omán",
  "Pákistán",
  "Palau",
  "Palestina",
  "Panama",
  "Papua-Nová Guinea",
  "Paraguay",
  "Peru",
  "Pobřeží slonoviny",
  "Polsko",
  "Portugalsko",
  "Rakousko",
  "Rovníková Guinea",
  "Rumunsko",
  "Rusko",
  "Rwanda",
  "Řecko",
  "Salvador",
  "Samoa",
  "San Marino",
  "Saúdská Arábie",
  "Senegal",
  "Severní Korea",
  "Seychely",
  "Sierra Leone",
  "Singapur",
  "Slovensko",
  "Slovinsko",
  "Srbsko",
  "Středo",
  "Somálsko",
  "Surinam",
  "Súdán",
  "Svatá Lucie",
  "Svatý Kryštof a Nevis",
  "Svatý Tomáš a Princův ostrov",
  "Svatý Vincenc a Grenadiny",
  "Svazijsko",
  "Spojené arabské emiráty",
  "Spojené království",
  "Spojené státy americké",
  "Sýrie",
  "Šalamounovy ostrovy",
  "Španělsko",
  "Srí Lanka",
  "Švédsko",
  "Švýcarsko",
  "Tádžikistán",
  "Tanzanie",
  "Thajsko",
  "Togo",
  "Tonga",
  "Trinidad a Tobago",
  "Tunisko",
  "Turecko",
  "Turkmenistán",
  "Tuvalu",
  "Uganda",
  "Ukrajina",
  "Uruguay",
  "Uzbekistán",
  "Vanuatu",
  "Vatikán",
  "Venezuela",
  "Vietnam",
  "Východní Timor",
  "Zambie",
  "Zimbabwe",
];

},{}],202:[function(require,module,exports){
module["exports"] = [
  "Česká republika"
];

},{}],203:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city_name = require("./city_name");
address.city = require("./city");
address.street = require("./street");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":198,"./city":199,"./city_name":200,"./country":201,"./default_country":202,"./postcode":204,"./secondary_address":205,"./state":206,"./state_abbr":207,"./street":208,"./street_address":209,"./street_name":210,"./time_zone":211}],204:[function(require,module,exports){
module["exports"] = [
  "#####",
  "### ##",
  "###-##"
];

},{}],205:[function(require,module,exports){
module["exports"] = [
  "Apt. ###",
  "Suite ###"
];

},{}],206:[function(require,module,exports){
arguments[4][194][0].apply(exports,arguments)
},{"dup":194}],207:[function(require,module,exports){
arguments[4][194][0].apply(exports,arguments)
},{"dup":194}],208:[function(require,module,exports){
module["exports"] = [
  "17. Listopadu",
  "17. Listopadu",
  "28. Pluku",
  "28. Října",
  "28. Října",
  "5. Května",
  "5. Května",
  "5. Máje",
  "7. Května",
  "8. Listopadu",
  "9. Května",
  "Achátová",
  "Adamova",
  "Adamovská",
  "Adélčina",
  "Africká",
  "Akademická",
  "Aksamitova",
  "Akátová",
  "Alabastrová",
  "Albertov",
  "Albrechtická",
  "Albánská",
  "Albíny Hochové",
  "Aldašínská",
  "Alej Českých Exulantů",
  "Aleny Santarové",
  "Aloisovská",
  "Aloisovská",
  "Aloisovská",
  "Altajská",
  "Alšovo Nábř.",
  "Alšovo Nábřeží",
  "Alšovy Sady",
  "Alžírská",
  "Ambrožova",
  "Americká",
  "Ametystová",
  "Amforová",
  "Amortova",
  "Ampérova",
  "Amurská",
  "Anastázova",
  "Anderleho",
  "Andersenova",
  "Andrštova",
  "Andělova",
  "Anenská",
  "Anenské Nám.",
  "Anenské Náměstí",
  "Anežky Malé",
  "Anežská",
  "Angelovova",
  "Anglická",
  "Angolská",
  "Anhaltova",
  "Ankarská",
  "Anny Drabíkové",
  "Anny Letenské",
  "Anny Rybníčkové",
  "Anny Čížkové",
  "Anny Čížkové",
  "Antala Staška",
  "Antonína Hodného",
  "Antonína Čermáka",
  "Antonínská",
  "Anýzová",
  "Apolinářská",
  "Arabská",
  "Aranžérská",
  "Arbesovo Nám.",
  "Arbesovo Náměstí",
  "Archangelská",
  "Archeologická",
  "Archimédova",
  "Archivní",
  "Argentinská",
  "Aristotelova",
  "Arkalycká",
  "Armádní",
  "Armádního Sboru",
  "Armády",
  "Arménská",
  "Arnošta Valenty",
  "Astlova",
  "Athénská",
  "Atletická",
  "Aubrechtové",
  "Augustinova",
  "Augustova",
  "Austova",
  "Aviatická",
  "Axmanova",
  "Azalková",
  "Azuritová",
  "Ašská",
  "Baarova",
  "Babická",
  "Babiččina",
  "Babočková",
  "Babská",
  "Babylonská",
  "Babákova",
  "Bachmačské Nám.",
  "Bachmačské Náměstí",
  "Bachova",
  "Bacháčkova",
  "Badeniho",
  "Badeniho",
  "Bajgarova",
  "Bajkalská",
  "Bajkonurská",
  "Bakalářská",
  "Bakovská",
  "Bakurinova",
  "Balabánova",
  "Balbínova",
  "Banskobystrická",
  "Baranova",
  "Barchovická",
  "Barešova",
  "Barrandova",
  "Barrandovská",
  "Bartolomějská",
  "Bartoňkova",
  "Bartoňova",
  "Bartoškova",
  "Bartoškova",
  "Bartoškova",
  "Bartákova",
  "Bartůňkova",
  "Barunčina",
  "Barvířská",
  "Barákova",
  "Basilejské Nám.",
  "Basilejské Náměstí",
  "Bassova",
  "Batelovská",
  "Batličkova",
  "Bavorovská",
  "Bavorská",
  "Bazalková",
  "Bazovského",
  "Bačetínská",
  "Baňská",
  "Baškirská",
  "Bašteckého",
  "Baštýřská",
  "Bažantní",
  "Beaufortova",
  "Bechlínská",
  "Bechyňova",
  "Bechyňská",
  "Beckovská",
  "Bedlová",
  "Bednářská",
  "Bedrnova",
  "Bedřichovská",
  "Beethovenova",
  "Beldova",
  "Belgická",
  "Bellova",
  "Bellušova",
  "Bendlova",
  "Bendova",
  "Benecká",
  "Benediktská",
  "Benešovská",
  "Benická",
  "Benkova",
  "Benákova",
  "Benátská",
  "Benáčanova",
  "Beníškové",
  "Beranových",
  "Bergerova",
  "Bergmanova",
  "Berkovská",
  "Berlínská",
  "Bermanova",
  "Bernartická",
  "Bernolákova",
  "Berounská",
  "Bertrámová",
  "Berylová",
  "Besední",
  "Beskydská",
  "Betlémská",
  "Betlémské Nám.",
  "Betlémské Náměstí",
  "Betáňská",
  "Bezdrevská",
  "Bezděkovská",
  "Bezinková",
  "Bezová",
  "Bezprašná",
  "Bečovská",
  "Bečvářova",
  "Bečvářská",
  "Bečvářská",
  "Beřkovická",
  "Bešťákova",
  "Bieblova",
  "Binarova",
  "Biskupcova",
  "Biskupská",
  "Biskupský Dvůr",
  "Blachutova",
  "Blahníkova",
  "Blahoslavova",
  "Blanická",
  "Blatenská",
  "Blatnická",
  "Blatovská",
  "Blatská",
  "Blattného",
  "Blažimská",
  "Blažkova",
  "Blažíčkova",
  "Blešnovská",
  "Blodkova",
  "Bludovická",
  "Blériotova",
  "Blšanecká",
  "Bobkova",
  "Bochovská",
  "Bodláková",
  "Bohdalec",
  "Bohdalec",
  "Bohdalecká",
  "Bohdalecká",
  "Bohdanečská",
  "Bohdašínská",
  "Bohnická",
  "Bohrova",
  "Bohumínská",
  "Bohuslava Martinů",
  "Bohuslava Martinů",
  "Bohuslava Ze Švamberka",
  "Bohuslavická",
  "Bohušovická",
  "Bohušovická",
  "Boháčova",
  "Bohúňova",
  "Bojanovická",
  "Bojasova",
  "Bojetická",
  "Boješická",
  "Bojkovická",
  "Bojovská",
  "Bojínková",
  "Bojčenkova",
  "Bolebořská",
  "Boleratická",
  "Boleslavova",
  "Boleslavská",
  "Boletická",
  "Bolevecká",
  "Bolinská",
  "Boloňská",
  "Bolzanova",
  "Bolívarova",
  "Borecká",
  "Borečkova",
  "Borodinská",
  "Borotínská",
  "Borovanská",
  "Borovanského",
  "Borovnická",
  "Borovská",
  "Borová",
  "Borošova",
  "Borská",
  "Borského",
  "Boršov",
  "Boršovská",
  "Borůvková",
  "Boseňská",
  "Botevova",
  "Botičská",
  "Botičská",
  "Boudova",
  "Bousovská",
  "Boučkova",
  "Bouřilova",
  "Boušova",
  "Bozděchova",
  "Boční I",
  "Boční Ii",
  "Bořanovická",
  "Bořetická",
  "Bořetínská",
  "Bořivojova",
  "Bořivojova",
  "Boříkova",
  "Bošická",
  "Bošilecká",
  "Bošínská",
  "Božanovská",
  "Božecká",
  "Božejovická",
  "Boženy Hofmeisterové",
  "Boženy Jandlové",
  "Boženy Němcové",
  "Boženy Němcové",
  "Boženy Stárkové",
  "Božetická",
  "Božetěchova",
  "Božkova",
  "Božkovská",
  "Božídarská",
  "Brabcova",
  "Bramboříková",
  "Branaldova",
  "Brandejsova",
  "Brandejsovo Nám.",
  "Brandejsovo Náměstí",
  "Brandlova",
  "Brandýská",
  "Branická",
  "Branická",
  "Branické Nám.",
  "Branické Náměstí",
  "Branislavova",
  "Branišovská",
  "Branská",
  "Bratislavská",
  "Bratranců Veverkových",
  "Bratří Dohalských",
  "Bratří Venclíků",
  "Bratří Čapků",
  "Bratříkovská",
  "Braunerova",
  "Braunova",
  "Braškovská",
  "Brdecká",
  "Brdičkova",
  "Brdlíkova",
  "Brechtova",
  "Brechtova",
  "Brehmova",
  "Breitcetlova",
  "Brichtova",
  "Brigádnická",
  "Brigádníků",
  "Brixiho",
  "Brodecká",
  "Brodecká",
  "Brodského",
  "Bromova",
  "Bronzová",
  "Broskvoňová",
  "Broumarská",
  "Broumovská",
  "Brozánská",
  "Brožíkova",
  "Brtecká",
  "Brtnická",
  "Brumovická",
  "Brunclíkova",
  "Brunelova",
  "Brunnerova",
  "Bruselská",
  "Brusinková",
  "Bruslařská",
  "Bryksova",
  "Brzická",
  "Brzorádových",
  "Brázdimská",
  "Brňovská",
  "Bubenečská",
  "Bubenečská",
  "Bubenská",
  "Bubenské Nábř.",
  "Bubenské Nábřeží",
  "Bubeníčkova",
  "Bublavská",
  "Bublíkova",
  "Bubnova",
  "Bucharova",
  "Buchlovská",
  "Buchovcova",
  "Budapešťská",
  "Budečská",
  "Budilova",
  "Budilovská",
  "Budovatelská",
  "Budyňská",
  "Budyšínská",
  "Budínova",
  "Budčická",
  "Budějovická",
  "Budějovická",
  "Bukolská",
  "Bukovecká",
  "Bukovinská",
  "Buková",
  "Bulharská",
  "Buližníková",
  "Bulovka",
  "Burdova",
  "Burešova",
  "Burianova",
  "Butovická",
  "Butovická",
  "Buzulucká",
  "Buštěhradská",
  "Bydhošťská",
  "Bydžovská",
  "Bydžovského",
  "Bylanská",
  "Bystrá",
  "Bystřická",
  "Bystřičná",
  "Byšická",
  "Byškovická",
  "Bzenecká",
  "Bártlova",
  "Bášťská",
  "Bílenecké Nám.",
  "Bílenecké Náměstí",
  "Bílinská",
  "Bílkova",
  "Bílkova",
  "Bílovská",
  "Bílá",
  "Bílčická",
  "Bínova",
  "Bítovská",
  "Böhmova",
  "Býšovská",
  "Běchorská",
  "Běchovická",
  "Běhounkova",
  "Bělehradská",
  "Bělehradská",
  "Bělehradská",
  "Bělečská",
  "Bělinského",
  "Bělocerkevská",
  "Bělocká",
  "Bělohorská",
  "Bělohorská",
  "Bělomlýnská",
  "Bělomlýnská",
  "Běloveská",
  "Běluňská",
  "Bělušická",
  "Bělásková",
  "Bělčická",
  "Bělčická",
  "Běžecká",
  "Běžná",
  "Břeclavská",
  "Břehová",
  "Břehová",
  "Břetislavova",
  "Břevnovská",
  "Březanova",
  "Březecká",
  "Březenská",
  "Březinova",
  "Březiněveská",
  "Březnická",
  "Březnová",
  "Březovická",
  "Březovského",
  "Březová",
  "Břečťanová",
  "Břežanská",
  "Břežánecká",
  "Břidlicová",
  "Břidličná",
  "Břízova",
  "Bříšťanská",
  "Cafourkova",
  "Cedrová",
  "Celetná",
  "Celniční",
  "Celsiova",
  "Cementářská",
  "Ceplechova",
  "Cerhenická",
  "Cerhýnská",
  "Cetyňská",
  "Chabařovická",
  "Chaberská",
  "Chabeřická",
  "Chabská",
  "Chalabalova",
  "Chaloupeckého",
  "Chaloupky",
  "Chaltická",
  "Chalupkova",
  "Chalupnická",
  "Chaplinovo Nám.",
  "Chaplinovo Náměstí",
  "Charkovská",
  "Charlese De Gaulla",
  "Charvátova",
  "Chatařská",
  "Chatová",
  "Chebská",
  "Chelčického",
  "Chemická",
  "Chilská",
  "Chittussiho",
  "Chladírenská",
  "Chlebovická",
  "Chlumecká",
  "Chlumecká",
  "Chlumecká",
  "Chlumova",
  "Chlumínská",
  "Chlumčanského",
  "Chlupova",
  "Chlupáčova",
  "Chládkova",
  "Chmelařská",
  "Chmelická",
  "Chmelová",
  "Chmelířova",
  "Choceradská",
  "Choceňská",
  "Chocholouškova",
  "Chocholova",
  "Chodecká",
  "Chodovecké Nám.",
  "Chodovecké Náměstí",
  "Chodovická",
  "Chodovská",
  "Chodovská",
  "Chodovská",
  "Chodská",
  "Cholupická",
  "Chomutovická",
  "Chomutovská",
  "Chopinova",
  "Choratická",
  "Chorošová",
  "Chorušická",
  "Chorvatská",
  "Chotečská",
  "Chotkova",
  "Chotouchovská",
  "Chotouňská",
  "Chotovická",
  "Chotutická",
  "Chotěbuzská",
  "Chotěnovská",
  "Chotětovská",
  "Chotěšovská",
  "Chovatelská",
  "Chrastavská",
  "Chrobolská",
  "Chrpová",
  "Chrudimská",
  "Chráněná",
  "Chrášťanská",
  "Chuchelská",
  "Chudenická",
  "Chudoměřická",
  "Churnajevova",
  "Churáňovská",
  "Chvaletická",
  "Chvaletická",
  "Chvalečská",
  "Chvalkovická",
  "Chvalova",
  "Chvalská",
  "Chvalská",
  "Chvalšovická",
  "Chvatěrubská",
  "Chvojenecká",
  "Chyjická",
  "Chýnická",
  "Chýnovská",
  "Chýňská",
  "Chřibská",
  "Cibulka",
  "Cidlinská",
  "Cigánkova",
  "Cihelná",
  "Cihlářova",
  "Cihlářská",
  "Cimburkova",
  "Ciolkovského",
  "Cirkusová",
  "Cisterciácká",
  "Citolibská",
  "Coriových",
  "Ctiborova",
  "Ctiněveská",
  "Ctiradova",
  "Ctěnická",
  "Cukerní",
  "Cukrovarnická",
  "Cukrovarská",
  "Cuřínova",
  "Cvikovská",
  "Cvičebná",
  "Cvrčkova",
  "Cvrčkova",
  "Cvrčkova",
  "Cyprichova",
  "Cíglerova",
  "Cílkova",
  "Cínovecká",
  "Církova",
  "Církvická",
  "Církvičná",
  "Císařská Louka",
  "Císařský Ostrov",
  "Císařský Ostrov",
  "Císařský Ostrov",
  "Cítovská",
  "Daimlerova",
  "Dalejská",
  "Dalejská",
  "Dalešická",
  "Daliborova",
  "Dalimilova",
  "Dalovická",
  "Dandova",
  "Danielova",
  "Dany Medřické",
  "Darwinova",
  "Dasnická",
  "Davelská",
  "Davidovičova",
  "Davídkova",
  "Davídkova",
  "Dačická",
  "Dačického",
  "Daňkova",
  "Dašická",
  "Daškova",
  "Dehtínská",
  "Dejvická",
  "Dejvická",
  "Demlova",
  "Demoliční",
  "Desenská",
  "Destinnové",
  "Destinové",
  "Devonská",
  "Deylova",
  "Deštná",
  "Dešťová",
  "Diabasová",
  "Diamantová",
  "Diblíkova",
  "Diblíkova",
  "Dienzenhoferovy Sady",
  "Dieselova",
  "Diskařská",
  "Diskařská",
  "Dismanova",
  "Dittrichova",
  "Divadelní",
  "Divadelní",
  "Divecká",
  "Diviznová",
  "Divišova",
  "Divišovská",
  "Divoká Šárka",
  "Divoká Šárka",
  "Dlabačov",
  "Dlabačov",
  "Dlouhá",
  "Dlážděná",
  "Do Blatin",
  "Do Borovin",
  "Do Chuchle",
  "Do Dolnic",
  "Do Dubin",
  "Do Dubče",
  "Do Hlinek",
  "Do Klukovic",
  "Do Kopečka",
  "Do Koutů",
  "Do Koutů",
  "Do Lipan",
  "Do Lipin",
  "Do Lipin",
  "Do Luk",
  "Do Panenek",
  "Do Podkovy",
  "Do Polí",
  "Do Potoků",
  "Do Píšovic",
  "Do Roklí",
  "Do Rybníčků",
  "Do Svépravic",
  "Do Vozovny",
  "Do Vrchu",
  "Do Vršku",
  "Do Zahrádek I",
  "Do Zahrádek I",
  "Do Zahrádek I",
  "Do Zahrádek Ii",
  "Do Zahrádek Ii",
  "Do Zátiší",
  "Do Údolí",
  "Do Újezda",
  "Do Čertous",
  "Do Čtvrti",
  "Do Říčan",
  "Dobevská",
  "Dobnerova",
  "Dobratická",
  "Dobronická",
  "Dobronická",
  "Dobropolská",
  "Dobrovická",
  "Dobrovolného",
  "Dobrovolského",
  "Dobrovského",
  "Dobrovízská",
  "Dobročovická",
  "Dobrošovská",
  "Dobrušská",
  "Dobřanská",
  "Dobřejovická",
  "Dobřenická",
  "Dobřichovská",
  "Dobšická",
  "Dobšínská",
  "Dohalická",
  "Doksanská",
  "Dolanská",
  "Dolejškova",
  "Doležalova",
  "Dolina",
  "Dolnobranská",
  "Dolnobřežanská",
  "Dolnocholupická",
  "Dolnojirčanská",
  "Dolnokrčská",
  "Dolnokřeslická",
  "Dolnomlýnská",
  "Dolnoměcholupská",
  "Dolnoměcholupská",
  "Dolnopočernická",
  "Dolnočernošická",
  "Dolní",
  "Dolní",
  "Dolní Chaloupky",
  "Dolomitová",
  "Dolská",
  "Dolákova",
  "Dolínecká",
  "Dolňanská",
  "Domanovická",
  "Domašínská",
  "Domažlická",
  "Dominova",
  "Dominínská",
  "Domkovská",
  "Domkářská",
  "Domousnická",
  "Donatellova",
  "Donovalská",
  "Donská",
  "Donátova",
  "Donínská",
  "Dopplerova",
  "Dopravní",
  "Dopraváků",
  "Dopraváků",
  "Dostihová",
  "Dostojevského",
  "Doubecká",
  "Doubická",
  "Doubravická",
  "Doubravská",
  "Doubravínova",
  "Doubravčická",
  "Doudlebská",
  "Doudova",
  "Doupovská",
  "Dr. Marodyho",
  "Dr. Zikmunda Wintra",
  "Dr.Zikmunda Wintra",
  "Dragounská",
  "Drahanská",
  "Drahanská",
  "Drahelická",
  "Drahelčická",
  "Drahobejlova",
  "Drahorádova",
  "Drahotická",
  "Drahotínská",
  "Drahovská",
  "Drahovská",
  "Drahoňovského",
  "Draženovská",
  "Draženovská",
  "Dražetická",
  "Dražická",
  "Dražického",
  "Dražického Nám.",
  "Dražického Náměstí",
  "Dražkovská",
  "Dreyerova",
  "Drimlova",
  "Drnovská",
  "Drobná",
  "Drtikolova",
  "Drtinova",
  "Druhanická",
  "Druhého Odboje",
  "Družicová",
  "Družnosti",
  "Družná",
  "Družstevní",
  "Družstevní Ochoz",
  "Družstevní Ochoz",
  "Drážní",
  "Drůbežnická",
  "Drůbežářská",
  "Dubanská",
  "Dubenecká",
  "Dubečská",
  "Dubečské Horky",
  "Dubinská",
  "Dubnická",
  "Dubnova",
  "Dubovická",
  "Dubová",
  "Dubrovnická",
  "Dubská",
  "Duchcovská",
  "Duchoslávka",
  "Dudkova",
  "Dudínská",
  "Duhová",
  "Dukelská",
  "Dukelských Hrdinů",
  "Dunajevského",
  "Dunajská",
  "Dunická",
  "Dunovského",
  "Durychova",
  "Durychova",
  "Dusíkova",
  "Duškova",
  "Duškova",
  "Dušní",
  "Dušní",
  "Dvorecká",
  "Dvorecké Nám.",
  "Dvorecké Náměstí",
  "Dvorní",
  "Dvorská",
  "Dvoudílná",
  "Dvouletky",
  "Dvouramenná",
  "Dvořeckého",
  "Dvořišťská",
  "Dvořákova",
  "Dvořákovo Nábř.",
  "Dvořákovo Nábřeží",
  "Dygrýnova",
  "Dyjská",
  "Dykova",
  "Dářská",
  "Dürerova",
  "Dýšinská",
  "Děbolínská",
  "Dědická",
  "Dědinova",
  "Dědinská",
  "Děkanská",
  "Děkanská Vinice I",
  "Děkanská Vinice Ii",
  "Dělená",
  "Dělnická",
  "Dělostřelecká",
  "Dětenická",
  "Dětská",
  "Dětský Ostrov",
  "Děvínská",
  "Děčínská",
  "Děčínská",
  "Dřevařská",
  "Dřevnická",
  "Dřevná",
  "Dřevčická",
  "Dřínovská",
  "Dřínová",
  "Dřítenská",
  "Eberlova",
  "Ebrova",
  "Edisonova",
  "Edvardova",
  "Egyptská",
  "Eichlerova",
  "Einsteinova",
  "Ejpovická",
  "Ekonomická",
  "Eledrova",
  "Elektrárenská",
  "Eliášova",
  "Eliášova",
  "Elišky Junkové",
  "Elišky Krásnohorské",
  "Elišky Krásnohorské",
  "Elišky Peškové",
  "Elišky Přemyslovny",
  "Ellnerové",
  "Elsnicovo Náměstí",
  "Emilie Hyblerové",
  "Emlerova",
  "Engelmüllerova",
  "Engelova",
  "Engelova",
  "Englerova",
  "Erbenova",
  "Erbenova",
  "Estonská",
  "Etiopská",
  "Euklidova",
  "Evropská",
  "Evropská",
  "Evropská",
  "Evropská",
  "Evropská",
  "Evy Olmerové",
  "Exnárova",
  "F.V.Veselého",
  "Fabiánova",
  "Fabiánská",
  "Fadějevova",
  "Fajmanové",
  "Fajtlova",
  "Falcká",
  "Faltysova",
  "Famfulíkova",
  "Fantova",
  "Faradayova",
  "Farkašova",
  "Farní",
  "Farská",
  "Farského",
  "Fastrova",
  "Federova",
  "Fejfarova",
  "Felberova",
  "Fenyklová",
  "Fetrovská",
  "Feřtekova",
  "Fialková",
  "Fibichova",
  "Fikerova",
  "Filipova",
  "Filipovského",
  "Filipíny Welserové",
  "Fillova",
  "Filmařská",
  "Filosofská",
  "Fingerova",
  "Finkovská",
  "Finská",
  "Firkušného",
  "Fischlova",
  "Fišerova",
  "Flemingovo Nám.",
  "Flemingovo Náměstí",
  "Flájská",
  "Flöglova",
  "Foerstrova",
  "Folmavská",
  "Formanská",
  "Formánkova",
  "Fořtova",
  "Fragnerova",
  "Francouzská",
  "Francouzská",
  "Francouzská",
  "Františka Diviše",
  "Františka Jansy",
  "Františka Kadlece",
  "Františka Křížka",
  "Františka Černého",
  "Františka Červeného",
  "Františka Šimáčka",
  "Františkova",
  "Franty Kocourka",
  "Frančíkova",
  "Freiwaldova",
  "Freyova",
  "Frimlova",
  "Fričova",
  "Froncova",
  "Frostova",
  "Froňkova",
  "Frydrychova",
  "Fryčovická",
  "Fráni Šrámka",
  "Frézařská",
  "Frýdecká",
  "Frýdlantská",
  "Fuchsova",
  "Fügnerovo Nám.",
  "Fügnerovo Náměstí",
  "Gabinova",
  "Gabčíkova",
  "Gagarinova",
  "Galandova",
  "Galileova",
  "Gallašova",
  "Galvaniho",
  "Gaussova",
  "Gdaňská",
  "Generála Janouška",
  "Generála Mejstříka",
  "Generála Píky",
  "Generála Šišky",
  "Generála Šišky",
  "Gensovská",
  "Geologická",
  "Gercenova",
  "Gerstnerova",
  "Ginzova",
  "Glazunovova",
  "Glinkova",
  "Glowackého",
  "Goetheho",
  "Gogolova",
  "Golfová",
  "Gollova",
  "Golčova",
  "Gončarenkova",
  "Gončarenkova",
  "Gorazdova",
  "Gotthardská",
  "Goyova",
  "Gočárova",
  "Grafická",
  "Grafitová",
  "Grammova",
  "Granátová",
  "Gregorova",
  "Grussova",
  "Gruzínská",
  "Gutfreundova",
  "Gutova",
  "Gymnasijní",
  "Gymnastická",
  "Habartická",
  "Habartická",
  "Habartovská",
  "Haberfeldova",
  "Habrovská",
  "Habrová",
  "Habřická",
  "Habřická",
  "Hackerova",
  "Hadovitá",
  "Hadravská",
  "Hajní",
  "Hakenova",
  "Halasova",
  "Halenkovská",
  "Halštatská",
  "Hamerská",
  "Hamplova",
  "Hamrová",
  "Hamsíkova",
  "Hankova",
  "Hanouškova",
  "Hanusova",
  "Hanušova",
  "Hanzelkova",
  "Hanzlíkova",
  "Harantova",
  "Harcovská",
  "Harlacherova",
  "Harmonická",
  "Harrachovská",
  "Hartenberská",
  "Hasičská",
  "Hasičů",
  "Hasova",
  "Hastrmanská",
  "Haunerova",
  "Hauptova",
  "Hausmannova",
  "Havanská",
  "Havelská",
  "Havelská Ulička",
  "Havlovického",
  "Havlovického",
  "Havlovská",
  "Havlínova",
  "Havlíčkova",
  "Havlíčkovo Nám.",
  "Havlíčkovo Náměstí",
  "Havlíčkovy Sady",
  "Havlůjové",
  "Havlůjové",
  "Havranická",
  "Havraní",
  "Havránkova",
  "Havířovská",
  "Havířská",
  "Haškova",
  "Hašlerova",
  "Haštalská",
  "Haštalské Nám.",
  "Haštalské Náměstí",
  "Heckelova",
  "Heineho",
  "Heinemannova",
  "Hejnická",
  "Hejnická",
  "Hejplíkova",
  "Hejtmanská",
  "Hejtmánkova",
  "Hekova",
  "Hekrova",
  "Heldova",
  "Heleny Malířové",
  "Hellichova",
  "Helmova",
  "Helsinská",
  "Helénská",
  "Hennerova",
  "Heranova",
  "Herbenova",
  "Herdovská",
  "Herlíkovická",
  "Hermanická",
  "Hermelínská",
  "Hermíny Týrlové",
  "Heroldovy Sady",
  "Herrmannova",
  "Herrova",
  "Hertzova",
  "Herálecká I",
  "Herálecká Ii",
  "Herálecká Iii",
  "Herálecká Iv",
  "Herčíkova",
  "Hevlínská",
  "Heydukova",
  "Heyrovského Nám.",
  "Heyrovského Nám.",
  "Heyrovského Náměstí",
  "Heyrovského Náměstí",
  "Hečkova",
  "Heřmanova",
  "Heřmánková",
  "Hildy Čihákové",
  "Hillebrantova",
  "Hilmarova",
  "Hiršlova",
  "Hlavatého",
  "Hlavenecká",
  "Hlavní",
  "Hlavova",
  "Hlaváčkova",
  "Hlaváčova",
  "Hlaďova",
  "Hledíková",
  "Hlinská",
  "Hlivická",
  "Hlohová",
  "Hloubětínská",
  "Hloubětínská",
  "Hlubocká",
  "Hluboká",
  "Hlubočepská",
  "Hlušičkova",
  "Hládkov",
  "Hládkov",
  "Hlávkova",
  "Hněvkovská",
  "Hněvkovského",
  "Hnězdenská",
  "Hoblířská",
  "Hodkovická",
  "Hodkovská",
  "Hodonínská",
  "Hodčina",
  "Hodějovská",
  "Hodějovská",
  "Hoděšovická",
  "Hofbauerova",
  "Hoffmannova",
  "Hokejová",
  "Hokešovo Nám.",
  "Hokešovo Náměstí",
  "Holandská",
  "Holekova",
  "Holenická",
  "Holenská",
  "Holečkova",
  "Holečkova",
  "Holešovické Nábřeží",
  "Holešovický Přístav",
  "Holická",
  "Hollarovo Nám.",
  "Hollarovo Náměstí",
  "Holohlavská",
  "Holotínská",
  "Holoubkova",
  "Holoubkovská",
  "Holubická",
  "Holubinková",
  "Holubkova",
  "Holubova",
  "Holubí",
  "Holušická",
  "Holyňská",
  "Holátova",
  "Holínská",
  "Holýšovská",
  "Holčovická",
  "Holšická",
  "Homolová",
  "Homérova",
  "Honzíkova",
  "Hornická",
  "Hornocholupická",
  "Hornocholupická",
  "Hornofova",
  "Hornokrčská",
  "Hornokřeslická",
  "Hornomlýnská",
  "Hornoměcholupská",
  "Hornoměcholupská",
  "Hornopočernická",
  "Horní",
  "Horní Chaloupky",
  "Horní Hrdlořezská",
  "Horní Stromky",
  "Horníčkova",
  "Horolezecká",
  "Horoměřická",
  "Horoměřická",
  "Horoušanská",
  "Horoušanská",
  "Horovo Nám.",
  "Horovo Náměstí",
  "Horská",
  "Horusická",
  "Horymírovo Nám.",
  "Horymírovo Náměstí",
  "Horákova",
  "Horáčkova",
  "Horčičkova",
  "Horňátecká",
  "Horšovská",
  "Horšovská",
  "Hospodářská",
  "Hostavická",
  "Hostavická",
  "Hostinského",
  "Hostivařská",
  "Hostivařské Nám.",
  "Hostivařské Náměstí",
  "Hostivická",
  "Hostivítova",
  "Hostišovská",
  "Hostouňská",
  "Hostošova",
  "Hostýnská",
  "Hostýnská",
  "Houbařská",
  "Houdova",
  "Hovorčovická",
  "Hořanská",
  "Hořejší Náb.",
  "Hořejší Nábřeží",
  "Hořejšího",
  "Hořelická",
  "Hořická",
  "Hořovského",
  "Hořínecká",
  "Hoškova",
  "Hoštická",
  "Hošťálkova",
  "Hrabačovská",
  "Hrabákova",
  "Hrachovská",
  "Hrad I. Nádvoří",
  "Hrad Ii. Nádvoří",
  "Hrad Iii. Nádvoří",
  "Hradební",
  "Hradecká",
  "Hradeckých",
  "Hradečkova",
  "Hradešínská",
  "Hradčanské Nám.",
  "Hradčanské Náměstí",
  "Hraniční",
  "Hrazanská",
  "Hrazanská",
  "Hrdinova",
  "Hrdličkova",
  "Hrdlořezská",
  "Hrdoňovická",
  "Hroncova",
  "Hronovská",
  "Hronětická",
  "Hrozenkovská",
  "Hroznová",
  "Hrozného",
  "Hrubého",
  "Hrubínova",
  "Hrudičkova",
  "Hrusická",
  "Hruškovská",
  "Hruškovská",
  "Hrušovanské Nám.",
  "Hrušovanské Náměstí",
  "Hrušovická",
  "Hrušovská",
  "Hrušínského",
  "Hrušňová",
  "Hrušňová",
  "Hrádková",
  "Hráského",
  "Huberova",
  "Hubičkova",
  "Hubáčkova",
  "Hudcova",
  "Hudební",
  "Hudečkova",
  "Hudečkova",
  "Hugo Haase",
  "Hulanova",
  "Hulická",
  "Humenecká",
  "Humpolecká",
  "Huntířovská",
  "Hurbanova",
  "Husařská",
  "Husinecká",
  "Husitská",
  "Husitská",
  "Husníkova",
  "Husova",
  "Husovo Nám.",
  "Husovo Náměstí",
  "Hustopečská",
  "Hutnická",
  "Huťská",
  "Hviezdoslavova",
  "Hviezdoslavova",
  "Hvozdecká",
  "Hvozdnická",
  "Hvozdíková",
  "Hvožďanská",
  "Hvězdonická",
  "Hvězdova",
  "Hvězdářská",
  "Hyacintová",
  "Hybernská",
  "Hybešova",
  "Hynaisova",
  "Hypšmanova",
  "Hábova",
  "Hájecká",
  "Hájenská",
  "Hájkova",
  "Hájovna U Podjezdu",
  "Hájovna V Šárce",
  "Hájová",
  "Hájíčkova",
  "Hájčí",
  "Hákova",
  "Hálkova",
  "Hálova",
  "Hálův Statek",
  "Högerova",
  "Hübnerové",
  "Hřbitovní",
  "Hřebenová",
  "Hřebíkova",
  "Hřenská",
  "Hřibojedská",
  "Hřibská",
  "Hříbková",
  "Hřídelecká",
  "Hůlkova",
  "Hůlkova",
  "Hůrská",
  "Ibsenova",
  "Imrychova",
  "Ingrišova",
  "Internacionální",
  "Irkutská",
  "Irská",
  "Irvingova",
  "Italská",
  "Italská",
  "Italská",
  "Ivančická",
  "Izraelská",
  "Izraelská",
  "Jabkenická",
  "Jablonecká",
  "Jablonecká",
  "Jablonského",
  "Jabloňová",
  "Jablunkovská",
  "Jagellonská",
  "Jagellonská",
  "Jahodnická",
  "Jahodová",
  "Jakobiho",
  "Jakubovská",
  "Jakubská",
  "Jakutská",
  "Jalodvorská",
  "Jalovcová",
  "Jaltská",
  "Jamborova",
  "Jamská",
  "Jana Bílka",
  "Jana Jindřicha",
  "Jana Karafiáta",
  "Jana Kašpara",
  "Jana Marka",
  "Jana Masaryka",
  "Jana Ouřady",
  "Jana Přibíka",
  "Jana Růžičky",
  "Jana Srba",
  "Jana Zajíce",
  "Jana Čerstvého",
  "Jana Želivského",
  "Janderova",
  "Jandova",
  "Janečkova",
  "Jankovcova",
  "Jankovská",
  "Janouchova",
  "Janouškova",
  "Janovická",
  "Janovská",
  "Janovského",
  "Jansenova",
  "Janského",
  "Jansova",
  "Jantarová",
  "Janákova",
  "Janáčkovo Nábř.",
  "Janáčkovo Nábř.",
  "Janáčkovo Nábřeží",
  "Janáčkovo Nábřeží",
  "Janýrova",
  "Jančova",
  "Jarešova",
  "Jarkovská",
  "Jarmily Novotné",
  "Jarní",
  "Jarníkova",
  "Jaromíra Jindry",
  "Jaromíra Vejvody",
  "Jaromírova",
  "Jaroměřská",
  "Jaroslava Foglara",
  "Jaroslava Švehly",
  "Jaroslavická",
  "Jasanová",
  "Jaselská",
  "Jaselská",
  "Jasenická",
  "Jasenná",
  "Jasmínová",
  "Jasná I",
  "Jasná Ii",
  "Jaspisová",
  "Jateční",
  "Jaurisova",
  "Jaurisova",
  "Javorenská",
  "Javornická",
  "Javorová",
  "Javorská",
  "Javořická",
  "Jašíkova",
  "Jažlovická",
  "Jedlová",
  "Jednostranná",
  "Jednostranná",
  "Jednotného Zemědělského Družstva",
  "Jednořadá",
  "Jelenovská",
  "Jelení",
  "Jelínkova",
  "Jemenská",
  "Jemnická",
  "Jenerálka",
  "Jenečská",
  "Jenišovská",
  "Jenská",
  "Jeníkovická",
  "Jenštejnská",
  "Jeremenkova",
  "Jeremenkova",
  "Jeremenkova",
  "Jeremiášova",
  "Jeremiášova",
  "Jerevanská",
  "Jeronýmova",
  "Jeruzalémská",
  "Jesenická",
  "Jeseniova",
  "Jestřebická",
  "Jetelová",
  "Jetřichovická",
  "Jevanská",
  "Jezdecká",
  "Jezdovická",
  "Jezerní",
  "Jezerská",
  "Jezevčí",
  "Ječná",
  "Jeřabinová",
  "Jeřabinová",
  "Jeřická",
  "Jeřábkova",
  "Jeřábnická",
  "Jeřábová",
  "Ješetická",
  "Ještědská",
  "Ježdíkova",
  "Ježkova",
  "Ježovická",
  "Ježovická",
  "Ježovská",
  "Jihlavská",
  "Jihovýchodní I",
  "Jihovýchodní Ii",
  "Jihovýchodní Iii",
  "Jihovýchodní Iv",
  "Jihovýchodní Ix",
  "Jihovýchodní V",
  "Jihovýchodní Vi",
  "Jihovýchodní Vii",
  "Jihovýchodní Viii",
  "Jihozápadní I",
  "Jihozápadní Ii",
  "Jihozápadní Iii",
  "Jihozápadní Iv",
  "Jihozápadní V",
  "Jihozápadní Vi",
  "Jihočeská",
  "Jilemnická",
  "Jilemnická",
  "Jilemnického",
  "Jilmová",
  "Jilská",
  "Jindrova",
  "Jindřicha Jindřicha",
  "Jindřicha Plachty",
  "Jindřichova",
  "Jindřišská",
  "Jinolická",
  "Jinonická",
  "Jinonická",
  "Jinočanská",
  "Jirenská",
  "Jirečkova",
  "Jirkovská",
  "Jirsákova",
  "Jirsíkova",
  "Jiránkova",
  "Jiráskovo Nám.",
  "Jiráskovo Náměstí",
  "Jirčanská",
  "Jiskrova",
  "Jistebnická",
  "Jitkovská",
  "Jitravská",
  "Jitravská",
  "Jitrocelová",
  "Jitřní",
  "Jivenská",
  "Jizerská",
  "Jičínská",
  "Jičínská",
  "Jiřická",
  "Jiřinková",
  "Jiřiny Štěpničkové",
  "Jiřská",
  "Jiřího Jandy",
  "Jiřího Mašína",
  "Jiřího Ze Vtelna",
  "Jiříčkova",
  "Jiříčkové",
  "Jižní I",
  "Jižní Ii",
  "Jižní Iii",
  "Jižní Iv",
  "Jižní Ix",
  "Jižní Nám.",
  "Jižní Náměstí",
  "Jižní Spojka",
  "Jižní Spojka",
  "Jižní Spojka",
  "Jižní Spojka",
  "Jižní V",
  "Jižní Vi",
  "Jižní Vii",
  "Jižní Viii",
  "Jižní Xi",
  "Jižní Xii",
  "Jižní Xiii",
  "Jižní Xiv",
  "Jižní Xv",
  "Jižní Xvi",
  "Jižní Xvii",
  "Johanitská",
  "Jordana Jovkova",
  "Jordánská",
  "Josefa Bíbrdlíka",
  "Josefa Houdka",
  "Josefa Houdka",
  "Josefa Kočího",
  "Josefa Němce",
  "Josefa Vašíčka",
  "Josefa Šimůnka",
  "Josefská",
  "José Martího",
  "Juarézova",
  "Jugoslávská",
  "Jugoslávských Partyzánů",
  "Jugoslávských Partyzánů",
  "Jungmannova",
  "Jungmannova",
  "Jungmannovo Náměstí",
  "Junácká",
  "Jupiterova",
  "Jurkovičova",
  "Juárezova",
  "Jzd",
  "Jáchymova",
  "Jáchymova",
  "Jáchymovská",
  "Jánošíkova",
  "Jánská",
  "Jánský Vršek",
  "Jíchova",
  "Jílkova",
  "Jílovická",
  "Jílovišťská",
  "Jílovská",
  "Jílovská",
  "Jílová",
  "Jírova",
  "Jírovcovo Nám.",
  "Jírovcovo Náměstí",
  "Jívanská",
  "Jívová",
  "K Austisu",
  "K Avii",
  "K Barrandovu",
  "K Bateriím",
  "K Bažantnici",
  "K Belvederu",
  "K Berance",
  "K Beranovu",
  "K Berounce",
  "K Beránku",
  "K Betonárně",
  "K Betáni",
  "K Blatovu",
  "K Bohnicím",
  "K Borovíčku",
  "K Botiči",
  "K Brance",
  "K Brnkám",
  "K Brusce",
  "K Brusce",
  "K Brůdku",
  "K Bílému Vrchu",
  "K Běchovicům",
  "K Březince",
  "K Březiněvsi",
  "K Břečkám",
  "K Celinám",
  "K Cementárně",
  "K Chabům",
  "K Chabům",
  "K Chaloupce",
  "K Chaloupkám",
  "K Chatám",
  "K Chmelnici",
  "K Chumberku",
  "K Cihelně",
  "K Cikánce",
  "K Cíli",
  "K Dalejím",
  "K Dobré Vodě",
  "K Dobré Vodě",
  "K Dolům",
  "K Drahani",
  "K Drahani",
  "K Drazdům",
  "K Drsnici",
  "K Dubinám",
  "K Dubovému Mlýnu",
  "K Dubu",
  "K Dubči",
  "K Dálnici",
  "K Dálnici",
  "K Dýmači",
  "K Děrám",
  "K Fantovu Mlýnu",
  "K Farkám",
  "K Fialce",
  "K Fišpance",
  "K Habrovce",
  "K Habru",
  "K Haltýři",
  "K Havlínu",
  "K Hluboké Cestě",
  "K Hlásku",
  "K Holyni",
  "K Holému Vrchu",
  "K Holému Vrchu",
  "K Homolce",
  "K Horkám",
  "K Horkám",
  "K Horkám",
  "K Horním Počernicím",
  "K Horoměřicům",
  "K Hořavce",
  "K Hradišti",
  "K Hrnčířům",
  "K Hrušovu",
  "K Hrušovu",
  "K Hrázi",
  "K Hutím",
  "K Hutím",
  "K Hutím",
  "K Hádku",
  "K Háječku",
  "K Háji",
  "K Háji",
  "K Hájku",
  "K Hájovně",
  "K Hájovně",
  "K Hájovně",
  "K Hájům",
  "K Hárunce",
  "K Interně",
  "K Jalovce",
  "K Jasánkám",
  "K Jelenu",
  "K Jelenám",
  "K Jezeru",
  "K Jezeru",
  "K Jezu",
  "K Jezírku",
  "K Jihu",
  "K Jihu",
  "K Jinočanům",
  "K Jinočanům",
  "K Jižnímu Městu",
  "K Juliáně",
  "K Jízdárně",
  "K Labeškám",
  "K Ladům",
  "K Lahovičkám",
  "K Lahovské",
  "K Lažance",
  "K Lesoparku",
  "K Lesu",
  "K Lesu",
  "K Lesíku",
  "K Letišti",
  "K Letňanům",
  "K Libuši",
  "K Lindě",
  "K Lipanům",
  "K Lipinám",
  "K Lipám",
  "K Lochkovu",
  "K Lomu",
  "K Louži",
  "K Luhu",
  "K Lukám",
  "K Lučinám",
  "K Lužinám",
  "K Ládví",
  "K Ládví",
  "K Lánu",
  "K Lávce",
  "K Lázním",
  "K Lípě",
  "K Markétě",
  "K Matěji",
  "K Mejtu",
  "K Metru",
  "K Metru",
  "K Milíčovu",
  "K Mlíčníku",
  "K Mlýnu",
  "K Modřanskému Nádraží",
  "K Mohyle",
  "K Moravině",
  "K Moravině",
  "K Mostku",
  "K Mostu",
  "K Motelu",
  "K Motolu",
  "K Mírám",
  "K Měcholupům",
  "K Měchurce",
  "K Nedvězí",
  "K Netlukám",
  "K Noskovně",
  "K Nouzovu",
  "K Nové Vsi",
  "K Nové Vsi",
  "K Nové Škole",
  "K Novému Dvoru",
  "K Novému Hradu",
  "K Novému Sídlišti",
  "K Novým Domkům",
  "K Nádraží",
  "K Nádrži",
  "K Náhonu",
  "K Náměstí",
  "K Náplavce",
  "K Náplavce",
  "K Návrší",
  "K Návrší",
  "K Návsi",
  "K Obci",
  "K Obecním Hájovnám",
  "K Oboře",
  "K Obsinám",
  "K Ochozu",
  "K Ohradě",
  "K Okrouhlíku",
  "K Olympiku",
  "K Opatřilce",
  "K Opatřilce",
  "K Oplocení",
  "K Orionce",
  "K Osmidomkům",
  "K Otočce",
  "K Ovčínu",
  "K Ovčínu",
  "K Padesátníku",
  "K Palečku",
  "K Panenkám",
  "K Parku",
  "K Pastvinám",
  "K Pazderkám",
  "K Pekárně",
  "K Peluňku",
  "K Petrově Komoře",
  "K Pitkovicům",
  "K Podchodu",
  "K Podjezdu",
  "K Podjezdu",
  "K Polím",
  "K Pomníku",
  "K Popelce",
  "K Popelce",
  "K Potoku",
  "K Poště",
  "K Pramenu",
  "K Prelátům",
  "K Prádelně",
  "K Průhonicům",
  "K Průhonu",
  "K Průmstavu",
  "K Pyramidce",
  "K Pérovně",
  "K Pískovně",
  "K Písnici",
  "K Přehradám",
  "K Přejezdu",
  "K Přístavišti",
  "K Přívozu",
  "K Radhošti",
  "K Radonicům",
  "K Radotínu",
  "K Radotínu",
  "K Remízku",
  "K Rokli",
  "K Rokytce",
  "K Rotundě",
  "K Rovinám",
  "K Rozkoši",
  "K Rozmezí",
  "K Roztokům",
  "K Rozvodně",
  "K Rukavičkárně",
  "K Rybníku",
  "K Rybníčku",
  "K Rybníčkům",
  "K Rybárně",
  "K Ryšánce",
  "K Ryšánce",
  "K Sadu",
  "K Safině",
  "K Samoobsluze",
  "K Samotě",
  "K Sedlišti",
  "K Sibřině",
  "K Sokolovně",
  "K Sopce",
  "K Sopce",
  "K Starému Bubenči",
  "K Starému Lomu",
  "K Stavebninám",
  "K Sukovu",
  "K Sádkám",
  "K Sádkám",
  "K Sídlišti",
  "K Sídlišti",
  "K Teplárně",
  "K Topolům",
  "K Topírně",
  "K Transformátoru",
  "K Trati",
  "K Trninám",
  "K Trnkám",
  "K Trníčku",
  "K Truhlářce",
  "K Tržišti",
  "K Tuchoměřicům",
  "K Táboru",
  "K Třebonicům",
  "K Třešňovce",
  "K Tůni",
  "K Ubytovnám",
  "K Uhříněvsi",
  "K Uhříněvsi",
  "K Učilišti",
  "K Valu",
  "K Vejvoďáku",
  "K Velké Ohradě",
  "K Velké Ohradě",
  "K Velkému Dvoru",
  "K Verneráku",
  "K Viaduktu",
  "K Vidouli",
  "K Vilkám",
  "K Vinici",
  "K Vinicím",
  "K Vinoři",
  "K Vizerce",
  "K Višňovce",
  "K Višňovce",
  "K Višňovému Sadu",
  "K Vltavě",
  "K Vlásence",
  "K Vodici",
  "K Vodojemu",
  "K Vodárně",
  "K Vodě",
  "K Vrbičkám",
  "K Vrbě",
  "K Vrcholu",
  "K Vrtilce",
  "K Vršíčku",
  "K Vyhlídce",
  "K Vysoké Cestě",
  "K Vystrkovu",
  "K Václavce",
  "K Vápence",
  "K Váze",
  "K Výboru",
  "K Výtopně",
  "K Výzkumným Ústavům",
  "K Větrolamu",
  "K Zabrkům",
  "K Zadní Kopanině",
  "K Zadní Kopanině",
  "K Zahradnictví",
  "K Zahradám",
  "K Zahrádkám",
  "K Zastávce",
  "K Zatáčce",
  "K Zelené Louce",
  "K Zeleným Domkům",
  "K Zelenči",
  "K Zámku",
  "K Zátiší",
  "K Závodišti",
  "K Závorám",
  "K Závěrce",
  "K Závětinám",
  "K Údolí",
  "K Údolí Hvězd",
  "K Újezdu",
  "K Ústavu",
  "K Úvozu",
  "K Černošicím",
  "K Červenému Dvoru",
  "K Červenému Dvoru",
  "K Červenému Dvoru",
  "K Červenému Vrchu",
  "K Čestlicům",
  "K Čihadlům",
  "K Ďáblicům",
  "K Řece",
  "K Řeporyjím",
  "K Řeporyjím",
  "K Říčanům",
  "K Šafránce",
  "K Šafránce",
  "K Šancím",
  "K Šeberovu",
  "K Šeberáku",
  "K Šedivce",
  "K Šubrtce",
  "K Železnici",
  "K Žižkovu",
  "Kabeláčova",
  "Kabešova",
  "Kabátové",
  "Kadaňská",
  "Kadeřávkovská",
  "Kafkova",
  "Kahovská",
  "Kaizlovy Sady",
  "Kakosova",
  "Kakostová",
  "Kalabisova",
  "Kalašova",
  "Kalinová",
  "Kališnická",
  "Kališťská",
  "Kalská",
  "Kalvodova",
  "Kamelova",
  "Kamencová",
  "Kamenická",
  "Kamenická",
  "Kamenitá",
  "Kamenná",
  "Kameníků",
  "Kamerunská",
  "Kampanova",
  "Kamzíková",
  "Kamýcká",
  "Kamýcká",
  "Kamýcká",
  "Kanadská",
  "Kandertova",
  "Kanovnická",
  "Kapitulská",
  "Kaplanova",
  "Kaplická",
  "Kapraďová",
  "Kaprova",
  "Kaprova",
  "Kapucínská",
  "Karafiátová",
  "Karasova",
  "Karasovská",
  "Kardausova",
  "Kardašovská",
  "Kardašovská",
  "Karenova",
  "Karfíkova",
  "Karla Engliše",
  "Karla Hlaváčka",
  "Karla Kryla",
  "Karla Křížka",
  "Karla Michala",
  "Karla Rachůnka",
  "Karla Tomáše",
  "Karla Zicha",
  "Karla Černého",
  "Karlická",
  "Karlova",
  "Karlovarská",
  "Karlovarská",
  "Karlovická",
  "Karlovo Nám.",
  "Karlovo Nám.",
  "Karlovo Náměstí",
  "Karlovo Náměstí",
  "Karlínské Nám.",
  "Karlínské Náměstí",
  "Karlštejnská",
  "Karmelitská",
  "Karolinská",
  "Karoliny Světlé",
  "Karpatská",
  "Kartounářů",
  "Kartouzská",
  "Kasalická",
  "Kateřinská",
  "Kateřinské Nám.",
  "Kateřinské Náměstí",
  "Katovická",
  "Katusická",
  "Kavkazská",
  "Kazaňská",
  "Kazašská",
  "Kazimírova",
  "Kaznějovská",
  "Kazín",
  "Kazínská",
  "Kačerovská",
  "Kačínská",
  "Kaňkova",
  "Kaňkovského",
  "Kaňovská",
  "Kašeho",
  "Kaškova",
  "Kašovická",
  "Kašparovo Nám.",
  "Kašparovo Náměstí",
  "Kašperská",
  "Kaštanová",
  "Kbelská",
  "Kbelská",
  "Kbelská",
  "Kbelská",
  "Kdoulová",
  "Ke Březině",
  "Ke Břvům",
  "Ke Cvičišti",
  "Ke Dračkám",
  "Ke Dráze",
  "Ke Dvoru",
  "Ke Džbánu",
  "Ke Garážím",
  "Ke Golfu",
  "Ke Goniu",
  "Ke Hlásce",
  "Ke Hrádku",
  "Ke Hrázi",
  "Ke Hrázi",
  "Ke Hřbitovu",
  "Ke Hřišti",
  "Ke Kablu",
  "Ke Kablu",
  "Ke Kalvárii",
  "Ke Kaménce",
  "Ke Kamínce",
  "Ke Kamýku",
  "Ke Kapličce",
  "Ke Kapslovně",
  "Ke Karlovu",
  "Ke Kateřinkám",
  "Ke Kazínu",
  "Ke Kašně",
  "Ke Kinu",
  "Ke Kladivům",
  "Ke Klimentce",
  "Ke Klubovně",
  "Ke Klínku",
  "Ke Klínku",
  "Ke Klíčovu",
  "Ke Koh-I-Nooru",
  "Ke Kolodějskému Zámku",
  "Ke Kolodějům",
  "Ke Kolonii",
  "Ke Konstruktivě",
  "Ke Kopečku",
  "Ke Korunce",
  "Ke Kostelu",
  "Ke Kostelíčku",
  "Ke Kotlářce",
  "Ke Koulce",
  "Ke Koupališti",
  "Ke Kovárně",
  "Ke Kozím Hřbetům",
  "Ke Královicům",
  "Ke Krči",
  "Ke Krčské Stráni",
  "Ke Kulišce",
  "Ke Kulturnímu Domu",
  "Ke Kurtům",
  "Ke Kyjovu",
  "Ke Kálku",
  "Ke Křížku",
  "Ke Křížkám",
  "Ke Lhoteckému Lesu",
  "Ke Mlýnku",
  "Ke Mlýnu",
  "Ke Mlýnu",
  "Ke Schodům",
  "Ke Skalce",
  "Ke Skalkám",
  "Ke Skladům",
  "Ke Sklárně",
  "Ke Skále",
  "Ke Slatinám",
  "Ke Slivenci",
  "Ke Smrčině",
  "Ke Smíchovu",
  "Ke Smíchovu",
  "Ke Splávku",
  "Ke Spofě",
  "Ke Spořilovu",
  "Ke Spálence",
  "Ke Srážku",
  "Ke Stadionu",
  "Ke Stanici",
  "Ke Starému Hřišti",
  "Ke Starým Rybníkům",
  "Ke Stinkovskému Rybníku",
  "Ke Strašnické",
  "Ke Strouze",
  "Ke Stráni",
  "Ke Strži",
  "Ke Studni",
  "Ke Studni",
  "Ke Studánce",
  "Ke Stupicím",
  "Ke Stáčírně",
  "Ke Stírce",
  "Ke Střelnici",
  "Ke Střelnici",
  "Ke Sv. Izidoru",
  "Ke Třem Mostům",
  "Ke Xaverovu",
  "Ke Zbraslavi",
  "Ke Zbrojnici",
  "Ke Zbuzanům",
  "Ke Zdibům",
  "Ke Zdravotnímu Středisku",
  "Ke Zděři",
  "Ke Zlatému Kopci",
  "Ke Zličínu",
  "Ke Znaku",
  "Ke Zvonici",
  "Ke Zvoničce",
  "Ke Školce",
  "Ke Škole",
  "Ke Šmejkalu",
  "Ke Štvanici",
  "Ke Štítu",
  "Ke Štěpcům",
  "Ke Štěrkovně",
  "Ke Švestkovce",
  "Kecova",
  "Kejhova",
  "Kejnická",
  "Kellnerova",
  "Keltská",
  "Keltů",
  "Kelvinova",
  "Kemrova",
  "Keplerova",
  "Keplerova",
  "Keramická",
  "Kesnerka",
  "Kestřanská",
  "Keteňská",
  "Kettnerova",
  "Keřová",
  "Khodlova",
  "Kischova",
  "Kišiněvská",
  "Kladenská",
  "Kladenská",
  "Kladenská",
  "Kladinovská",
  "Kladrubská",
  "Kladská",
  "Klamovka",
  "Klapkova",
  "Klapálkova",
  "Klatovská",
  "Klausova",
  "Klecandova",
  "Klecanská",
  "Klenečská",
  "Klenovická",
  "Klenovská",
  "Klenová",
  "Klečkova",
  "Klečákova",
  "Klešická",
  "Klicperova",
  "Klidná",
  "Klihařská",
  "Klikatá",
  "Klikatá",
  "Klimentská",
  "Klivarova",
  "Kloboukova",
  "Kloboučnická",
  "Kloknerova",
  "Klokotská",
  "Klostermannova",
  "Klouzková",
  "Kludských",
  "Klukovická",
  "Klánova",
  "Klánova",
  "Klánova",
  "Klánovická",
  "Klánovická",
  "Klárov",
  "Klášterecká",
  "Klášterská",
  "Klášterského",
  "Klímova",
  "Klímova",
  "Klínecká",
  "Klínovecká",
  "Klínová",
  "Klírova",
  "Klíčanská",
  "Klíčova",
  "Klíčovská",
  "Klíčovská",
  "Kmochova",
  "Knínická",
  "Kněževeská",
  "Kněžická",
  "Koberkova",
  "Kobrova",
  "Kobyliská",
  "Kobyliské Nám.",
  "Kobyliské Náměstí",
  "Kobylákova",
  "Kochanova",
  "Kocianova",
  "Koclířova",
  "Kocourova",
  "Kodaňská",
  "Kodicilova",
  "Kodymova",
  "Kohoutovská",
  "Kohoutových",
  "Kojetická",
  "Kojická",
  "Kokořínská",
  "Kolbenova",
  "Kolbenova",
  "Kolbenova",
  "Koldínova",
  "Kolejní",
  "Kolektivní",
  "Kolešovská",
  "Kollárova",
  "Kolmistrova",
  "Kolmá",
  "Kolocova",
  "Kolodějská",
  "Kolonie U Obecní Cihelny",
  "Kolonka",
  "Kolovečská",
  "Kolovratská",
  "Kolová",
  "Kolátorova",
  "Koláčkova",
  "Koláře Kaliny",
  "Kolářova",
  "Kolínova",
  "Kolínská",
  "Kolčavka",
  "Komenského Nám.",
  "Komenského Náměstí",
  "Komornická",
  "Komořanská",
  "Komořanská",
  "Komořanská",
  "Komunardů",
  "Komárkova",
  "Komárovská",
  "Koncová",
  "Konecchlumského",
  "Konečná",
  "Kongresová",
  "Konojedská",
  "Konopišťská",
  "Konopova",
  "Konopáskova",
  "Konstantinova",
  "Konvalinková",
  "Konviktská",
  "Konzumní",
  "Konzumní",
  "Koníčkovo Nám.",
  "Koníčkovo Náměstí",
  "Konětopská",
  "Koněvova",
  "Konšelská",
  "Konžská",
  "Kopalova",
  "Kopanina",
  "Kopanská",
  "Kopeckého",
  "Koperníkova",
  "Kopečná",
  "Kopretinová",
  "Kopřivnická",
  "Korandova",
  "Korandova",
  "Korunní",
  "Korunní",
  "Korunní",
  "Korunovační",
  "Korunovační",
  "Korybutova",
  "Korycanská",
  "Korytná",
  "Kosatcová",
  "Kosařova",
  "Kosmická",
  "Kosmonoská",
  "Kosova",
  "Kosořická",
  "Kosořská",
  "Kostelecká",
  "Kostelecká",
  "Kostelní",
  "Kostelní Náměstí",
  "Kostečná",
  "Kostková",
  "Kostlivého",
  "Kostnické Nám.",
  "Kostnické Náměstí",
  "Kostomlatská",
  "Kostrbova",
  "Kostřínská",
  "Kosárkovo Nábř.",
  "Kosárkovo Nábřeží",
  "Kosí",
  "Koterovská",
  "Koterovská",
  "Kotevní",
  "Kotlaska",
  "Kotlářka",
  "Kotorská",
  "Kotovka",
  "Kotrčová",
  "Kotršálova",
  "Kotíkova",
  "Kotěrova",
  "Koubkova",
  "Koubkova",
  "Koubova",
  "Koukolová",
  "Koulka",
  "Koulova",
  "Kounická",
  "Kounovská",
  "Koutská",
  "Kouřimská",
  "Kovanecká",
  "Kovařovicova",
  "Kovriginova",
  "Kováků",
  "Kovárenská",
  "Kovářova",
  "Kovářská",
  "Kováříkova",
  "Kozinova",
  "Kozinovo Náměstí",
  "Kozlova",
  "Kozlovská",
  "Kozmíkova",
  "Kozomínská",
  "Kozácká",
  "Kozákovská",
  "Kozáková",
  "Kozí",
  "Kočova",
  "Kořenského",
  "Košařova",
  "Košická",
  "Koštířova",
  "Košátecká",
  "Košíkářská",
  "Košířské Nám.",
  "Košířské Náměstí",
  "Košťálkova",
  "Koťátkova",
  "Koželužská",
  "Kožlanská",
  "Kožná",
  "Kožíškova",
  "Kpt. Nálepky",
  "Kpt. Stránského",
  "Krabošická",
  "Krahulčí",
  "Krajanská",
  "Krajní",
  "Krajová",
  "Krajánkova",
  "Krakovská",
  "Kralická",
  "Kralupská",
  "Krameriova",
  "Kramlova",
  "Kramolná",
  "Kramolínská",
  "Kramperova",
  "Kraslická",
  "Krasnická",
  "Krasnojarská",
  "Kratochvílova",
  "Krausova",
  "Krbická",
  "Krchlebská",
  "Krejnická",
  "Krejčího",
  "Kremličkova",
  "Kremnická",
  "Kremnická",
  "Krhanická",
  "Krhanická",
  "Kristiánova",
  "Kriváňská",
  "Krkonošská",
  "Krnovská",
  "Krnská",
  "Krocínova",
  "Krocínovská",
  "Kroftova",
  "Krohova",
  "Krokova",
  "Krolmusova",
  "Kropáčkova",
  "Krosenská",
  "Kroupova",
  "Kroupova",
  "Krouzova",
  "Krovova",
  "Krteňská",
  "Kruhová",
  "Krumlovská",
  "Krupkovo Nám.",
  "Krupkovo Náměstí",
  "Krupná",
  "Krupská",
  "Krušovická",
  "Kružberská",
  "Krylovecká",
  "Krylovecká",
  "Krymská",
  "Krynická",
  "Krystalová",
  "Kryšpínova",
  "Kryštofova",
  "Krále Václava Iv.",
  "Králodvorská",
  "Králova",
  "Královická",
  "Královny Žofie",
  "Královská Obora",
  "Královská Obora",
  "Krásnolipská",
  "Krásného",
  "Krásova",
  "Krátká",
  "Krátká",
  "Krátkého",
  "Krátký Lán",
  "Krčmářovská",
  "Krčská",
  "Krčínovo Nám.",
  "Krčínovo Náměstí",
  "Krčínská",
  "Krňovická",
  "Krškova",
  "Kubatova",
  "Kubaštova",
  "Kubelíkova",
  "Kubišova",
  "Kubištova",
  "Kubova",
  "Kubánské Nám.",
  "Kubánské Náměstí",
  "Kubíkova",
  "Kubínova",
  "Kuchařská",
  "Kudeříkové",
  "Kudrnova",
  "Kukelská",
  "Kukelská",
  "Kukulova",
  "Kukulova",
  "Kukučínova",
  "Kulhavého",
  "Kulhánkovská",
  "Kuncova",
  "Kundratka",
  "Kunešova",
  "Kunická",
  "Kunratická",
  "Kunratická Spojka",
  "Kunratická Spojka",
  "Kuní",
  "Kuní",
  "Kunínova",
  "Kunčická",
  "Kunětická",
  "Kupeckého",
  "Kupkova",
  "Kurandové",
  "Kurkova",
  "Kurta Konráda",
  "Kurzova",
  "Kurčatovova",
  "Kusá",
  "Kusého",
  "Kutilova",
  "Kutnauerovo Náměstí",
  "Kutnohorská",
  "Kutnohorská",
  "Kutrovická",
  "Kuttelwascherova",
  "Kutvirtova",
  "Kučerova",
  "Kučerové",
  "Kuťatská",
  "Kuželova",
  "Kvapilova",
  "Kvasinská",
  "Kvestorská",
  "Květinková",
  "Květinářská",
  "Květnická",
  "Květnová",
  "Květnového Povstání",
  "Květnového Povstání",
  "Květnového Vítězství",
  "Květnového Vítězství",
  "Květná",
  "Květoslavova",
  "Květová",
  "Kyjevská",
  "Kyjevská",
  "Kyjovská",
  "Kyjská",
  "Kyjská",
  "Kykalova",
  "Kymrova",
  "Kynická",
  "Kyselova",
  "Kyslíková",
  "Kysucká",
  "Kysúcká",
  "Kytlická",
  "Kytínská",
  "Kácovská",
  "Kádnerova",
  "Kálikova",
  "Kálmánova",
  "Káranská",
  "Křejpského",
  "Křelovická",
  "Křemelná",
  "Křemencova",
  "Křemenná",
  "Křemenáčová",
  "Křemílkova",
  "Křenická",
  "Křenova",
  "Křepelčí",
  "Křepelčí",
  "Křesadlova",
  "Křesanovská",
  "Křeslická",
  "Křesomyslova",
  "Křešínská",
  "Křimická",
  "Křimovská",
  "Křivatcová",
  "Křivenická",
  "Křivoklátská",
  "Křivá",
  "Křičkova",
  "Křišťanova",
  "Křišťálová",
  "Křižovnická",
  "Křižovnické Nám.",
  "Křižovnické Náměstí",
  "Křižíkova",
  "Křižíkova",
  "Křovinovo Nám.",
  "Křovinovo Náměstí",
  "Křtinská",
  "Kříženeckého Nám.",
  "Kříženeckého Náměstí",
  "Křížkovského",
  "Křížová",
  "Křížová",
  "Labská",
  "Labětínská",
  "Ladislava Coňka",
  "Ladova",
  "Laglerové",
  "Lahovská",
  "Lahovská",
  "Lamačova",
  "Langweilova",
  "Lannova",
  "Lanýžová",
  "Lanžhotská",
  "Lanžovská",
  "Laténská",
  "Laubova",
  "Laudonova",
  "Laudova",
  "Laurinova",
  "Lazarská",
  "Lazarská",
  "Lačnovská",
  "Lažanská",
  "Lažanská",
  "Lažanského",
  "Lebeděvova",
  "Ledařská",
  "Ledecká",
  "Ledečská",
  "Ledkovská",
  "Lednická",
  "Lednová",
  "Ledvická",
  "Ledvinova",
  "Ledč",
  "Ledčická",
  "Legerova",
  "Legerova",
  "Legerova",
  "Legerova",
  "Legionářů",
  "Lehárova",
  "Leitzova",
  "Leknínová",
  "Leopoldova",
  "Leskovecká",
  "Lesnická",
  "Lesného",
  "Lesní",
  "Lessnerova",
  "Lesáků",
  "Letců",
  "Letecká",
  "Letenská",
  "Letenské Nám.",
  "Letenské Nám.",
  "Letenské Náměstí",
  "Letenské Náměstí",
  "Letenské Sady",
  "Letní",
  "Letohradská",
  "Letovská",
  "Letňanská",
  "Letňanská",
  "Levandulová",
  "Levobřežní",
  "Levského",
  "Levá",
  "Lexova",
  "Lečkova",
  "Lešanská",
  "Lešenská",
  "Lešetínská",
  "Lešovská",
  "Leštínská",
  "Lhenická",
  "Lhotecká",
  "Lhotecká",
  "Lhotská",
  "Lhotákova",
  "Liberecká",
  "Liberijská",
  "Libečkova",
  "Libeňská",
  "Libeňský Ostrov",
  "Libeňský Ostrov",
  "Libeřská",
  "Libichovská",
  "Libická",
  "Libišanská",
  "Libišská",
  "Libkovská",
  "Liblická",
  "Liblická",
  "Libochovická",
  "Libocká",
  "Liborova",
  "Libotovská",
  "Libovická",
  "Libočanská",
  "Liboňovská",
  "Libošovická",
  "Libuňská",
  "Libušina",
  "Libušská",
  "Libušská",
  "Libušská",
  "Libušská",
  "Libáňská",
  "Libínská",
  "Libčanská",
  "Libčická",
  "Liběchovská",
  "Libědická",
  "Liběšická",
  "Libřická",
  "Lichá",
  "Lidečská",
  "Lidická",
  "Lidického",
  "Lihovarská",
  "Liliová",
  "Lilková",
  "Limuzská",
  "Limuzská",
  "Lindavská",
  "Lindleyova",
  "Lindnerova",
  "Linhartova",
  "Linhartská",
  "Lipanská",
  "Lipecká",
  "Lipenecká",
  "Lipenská",
  "Lipenská",
  "Lipenské Nám.",
  "Lipenské Náměstí",
  "Lipnická",
  "Lipoltická",
  "Lipovická",
  "Lipovská",
  "Lipová Alej",
  "Lipové Náměstí",
  "Lipského",
  "Lipí",
  "Lisabonská",
  "Lisabonská",
  "Listopadová",
  "Lisztova",
  "Litavská",
  "Litevská",
  "Litická",
  "Litochlebská",
  "Litoměřická",
  "Litoměřická",
  "Litovická",
  "Litošická",
  "Litošická",
  "Litožnická",
  "Litvínovská",
  "Litvínovská",
  "Livornská",
  "Lišanská",
  "Lišická",
  "Liškova",
  "Lišovická",
  "Liščí",
  "Liščí",
  "Lnářská",
  "Lobečská",
  "Lochenická",
  "Lochkovská",
  "Lochotínská",
  "Lodecká",
  "Lodní Mlýny",
  "Loděnická",
  "Lodžská",
  "Lodžská",
  "Lohenická",
  "Lohniského",
  "Lojovická",
  "Lojovická",
  "Lojovická",
  "Lolkova",
  "Lomařská",
  "Lomecká",
  "Lomená",
  "Lomnická",
  "Lomnického",
  "Lomová",
  "Londýnská",
  "Loosova",
  "Lopatecká",
  "Lopatecká",
  "Lopuchová",
  "Loretánská",
  "Loretánské Nám.",
  "Loretánské Náměstí",
  "Losinská",
  "Lotyšská",
  "Loucká",
  "Loudova",
  "Lounská",
  "Lounských",
  "Loutkářská",
  "Loučanská",
  "Loučimská",
  "Loučná",
  "Louňovická",
  "Lovecká",
  "Lovosická",
  "Lovosická",
  "Lovosická",
  "Lovčenská",
  "Lovčická",
  "Lozická",
  "Lošetická",
  "Lošáková",
  "Lstibořská",
  "Lubenecká",
  "Lublaňská",
  "Lublaňská",
  "Lublinská",
  "Lubnická",
  "Lucemburská",
  "Lucemburská",
  "Lucinková",
  "Ludmilina",
  "Ludvíkova",
  "Luhovská",
  "Lukavecká",
  "Lukavského",
  "Lukešova",
  "Lukešova",
  "Lukovská",
  "Lukášova",
  "Lumiérů",
  "Lumírova",
  "Lumírova",
  "Luníkovská",
  "Lupenická",
  "Lupáčova",
  "Lutínská",
  "Luční",
  "Luštěnická",
  "Lužanská",
  "Lužecká",
  "Lužická",
  "Lužnická",
  "Lužná",
  "Lužní",
  "Lužská",
  "Lvovská",
  "Lysinská",
  "Lysolajská",
  "Lysolajské Údolí",
  "Lyčkovo Nám.",
  "Lyčkovo Náměstí",
  "Lyžařská",
  "Ládevská",
  "Lánovská",
  "Lánská",
  "Lásenická",
  "Láskova",
  "Lázeňská",
  "Lékařská",
  "Lékořicová",
  "Líbalova",
  "Líbeznická",
  "Lípová",
  "Lískovická",
  "Lísková",
  "Líšnická",
  "Lýskova",
  "M. J. Lermontova",
  "Macešková",
  "Macharovo Nám.",
  "Macharovo Náměstí",
  "Machatého",
  "Machkova",
  "Machnova",
  "Machovcova",
  "Machovická",
  "Machovská",
  "Machuldova",
  "Macháčkova",
  "Madarova",
  "Madaťjanova",
  "Madridská",
  "Magd. Rettigové",
  "Magdalény Rettigové",
  "Magistrů",
  "Magnitogorská",
  "Mahenova",
  "Mahlerovy Sady",
  "Mahulenina",
  "Maiselova",
  "Maiselova",
  "Majerové",
  "Majerského",
  "Makedonská",
  "Makovská",
  "Makovského",
  "Maková",
  "Malachitová",
  "Malebná",
  "Malenická",
  "Malešická",
  "Malešická",
  "Malešická",
  "Malešické Nám.",
  "Malešické Náměstí",
  "Malešovská",
  "Malinová",
  "Maličká",
  "Malkovského",
  "Malletova",
  "Malletova",
  "Malobřevnovská",
  "Malostranské Nábř.",
  "Malostranské Nábřeží",
  "Malostranské Náměstí",
  "Malotická",
  "Malovická",
  "Maltézské Nám.",
  "Maltézské Náměstí",
  "Malá",
  "Malá Bylanská",
  "Malá Houdova",
  "Malá Klášterní",
  "Malá Lada",
  "Malá Michnovka",
  "Malá Plynární",
  "Malá Skloněná",
  "Malá Smidarská",
  "Malá Tyršovka",
  "Malá Xaveriova",
  "Malá Štupartská",
  "Malá Štěpánská",
  "Malátova",
  "Malé Nám.",
  "Malé Náměstí",
  "Malého",
  "Malínská",
  "Malířská",
  "Malý Dvůr",
  "Malý Okrouhlík",
  "Malšovická",
  "Malšovské Nám.",
  "Malšovské Náměstí",
  "Mandloňová",
  "Mandova",
  "Mansfeldova",
  "Manská Zahrada",
  "Mantovská",
  "Manželů Dostálových",
  "Manželů Kotrbových",
  "Manželů Lyčkových",
  "Marciho",
  "Marešova",
  "Marie Cibulkové",
  "Marie Podvalové",
  "Mariánská",
  "Mariánská",
  "Mariánské Hradby",
  "Mariánské Hradby",
  "Mariánské Nám.",
  "Mariánské Náměstí",
  "Markova",
  "Markupova",
  "Markušova",
  "Markvartická",
  "Markyta",
  "Markétská",
  "Maroldova",
  "Martinelliho",
  "Martinická",
  "Martinova",
  "Martinovská",
  "Martinská",
  "Marty Krásové",
  "Marvanova",
  "Maršovská",
  "Masarykovo Nábř.",
  "Masarykovo Nábř.",
  "Masarykovo Nábřeží",
  "Masarykovo Nábřeží",
  "Masná",
  "Matek",
  "Matenská",
  "Maternova",
  "Mateřská",
  "Mateřídoušková",
  "Matjuchinova",
  "Matoušova",
  "Mattioliho",
  "Matúškova",
  "Matěchova",
  "Matějkova",
  "Matějovského",
  "Matějská",
  "Maxovská",
  "Mazancova",
  "Mazovská",
  "Mazurská",
  "Maďarská",
  "Maňákova",
  "Mařatkova",
  "Mařákova",
  "Maříkova",
  "Mašatova",
  "Maškova",
  "Mašovická",
  "Maštěřovského",
  "Mašínova",
  "Mechovka",
  "Mechová",
  "Medinská",
  "Medkova",
  "Medlovská",
  "Medová",
  "Meduňková",
  "Meinlinova",
  "Mejstříkova",
  "Melantrichova",
  "Meliorační",
  "Melodická",
  "Melounová",
  "Menclova",
  "Mendelova",
  "Mendíků",
  "Menšíkova",
  "Menšíkovská",
  "Merhoutova",
  "Merkurova",
  "Meruňková",
  "Meskářova",
  "Meteorologická",
  "Meteorologická",
  "Metodějova",
  "Metujská",
  "Mexická",
  "Mezi Chatami",
  "Mezi Domky",
  "Mezi Domy",
  "Mezi Humny",
  "Mezi Lysinami",
  "Mezi Lány",
  "Mezi Poli",
  "Mezi Potoky",
  "Mezi Rolemi",
  "Mezi Rybníky",
  "Mezi Sklady",
  "Mezi Stráněmi",
  "Mezi Vodami",
  "Mezi Úvozy",
  "Mezi Školami",
  "Mezibranská",
  "Mezihorská",
  "Mezihoří",
  "Mezilehlá",
  "Mezilesní",
  "Mezilesí",
  "Meziluží",
  "Mezipolí",
  "Mezitraťová",
  "Mezitraťová",
  "Mezitraťová",
  "Mezivrší",
  "Meziškolská",
  "Mečislavova",
  "Mečovská",
  "Mečíková",
  "Michalovicova",
  "Michalská",
  "Michelangelova",
  "Michelská",
  "Michelská",
  "Michnova",
  "Michnovka",
  "Mickiewiczova",
  "Mikanova",
  "Mikova",
  "Mikovcova",
  "Mikovická",
  "Mikulandská",
  "Mikuleckého",
  "Mikulova",
  "Mikulovická",
  "Mikuláše Z Husi",
  "Mikulášská",
  "Mikulčická",
  "Mikšovského",
  "Milady Horákové",
  "Milady Horákové",
  "Milady Horákové",
  "Milady Horákové",
  "Milady Horákové",
  "Milana Kadlece",
  "Milenovská",
  "Milerova",
  "Miletická",
  "Miletínská",
  "Milevská",
  "Milevská",
  "Milešovská",
  "Milotická",
  "Milovická",
  "Milovická",
  "Milánská",
  "Milínská",
  "Milíčova",
  "Milíčovská",
  "Mimoňská",
  "Minaříkova",
  "Minerální",
  "Minická",
  "Minská",
  "Miranova",
  "Miroslava Hajna",
  "Miroslava Hamra",
  "Mirotická",
  "Mirotická",
  "Mirovická",
  "Mirošovická",
  "Mirošovská",
  "Mistrovská",
  "Mistřínská",
  "Miřetická",
  "Miškovická",
  "Mladenovova",
  "Mladoboleslavská",
  "Mladoboleslavská",
  "Mladoboleslavská",
  "Mladoboleslavská",
  "Mladoboleslavská",
  "Mladotická",
  "Mladotova",
  "Mladých",
  "Mladých Běchovic",
  "Mladčina",
  "Mladějovská",
  "Mlynářská",
  "Mládeže",
  "Mládežnická",
  "Mládkova",
  "Mládí",
  "Mlázovická",
  "Mlékárenská",
  "Mlýnská",
  "Mlýnská",
  "Mnichovická",
  "Mochovská",
  "Mochovská",
  "Modenská",
  "Modlanská",
  "Modletická",
  "Modletínská",
  "Modravská",
  "Modrá",
  "Modrého",
  "Modřanská",
  "Modřanská",
  "Modřanská",
  "Modřanská",
  "Modřínová",
  "Mohelnická",
  "Mohylová",
  "Mojmírova",
  "Mokrá",
  "Mokřanská",
  "Moldavská",
  "Molitorovská",
  "Molákova",
  "Mongolská",
  "Moravanská",
  "Moravanů",
  "Moravská",
  "Morseova",
  "Morstadtova",
  "Morušová",
  "Morušová",
  "Morávkova",
  "Moskevská",
  "Mostecká",
  "Motolská",
  "Moulíkova",
  "Moysesova",
  "Mozambická",
  "Mozartova",
  "Mošnova",
  "Možného",
  "Mramorová",
  "Mratínská",
  "Mračnická",
  "Mrkosova",
  "Mrkvičkova",
  "Mrákovská",
  "Mrázkova",
  "Mrázovka",
  "Mráčkova",
  "Mrštíkova",
  "Mrštíkova",
  "Muchomůrková",
  "Muchova",
  "Mukařovská",
  "Mukařovského",
  "Murgašova",
  "Murmanská",
  "Musilova",
  "Musorgského",
  "Musílkova",
  "Mutěnínská",
  "Muzejní",
  "Muzikova",
  "Muškova",
  "Mydlářka",
  "Myjavská",
  "Mylnerovka",
  "Myslbekova",
  "Myslbekova",
  "Myslivecká",
  "Myslivečkova",
  "Myslíkova",
  "Myslíkova",
  "Myšlínská",
  "Máchova",
  "Máchova",
  "Mádrova",
  "Májovková",
  "Májová",
  "Málkovská",
  "Mánesova",
  "Márova",
  "Máslova",
  "Máslovická",
  "Mátová",
  "Mílovská",
  "Mílová",
  "Mírová",
  "Mírového Hnutí",
  "Mírového Hnutí",
  "Místecká",
  "Míčova",
  "Míšeňská",
  "Míšovická",
  "Münzbergerových",
  "Mýtní",
  "Měchenická",
  "Měcholupská",
  "Měděnecká",
  "Mělická",
  "Mělnická",
  "Městská",
  "Měsíčková",
  "Měsíční",
  "Měšická",
  "Měšínská",
  "Mšecká",
  "Mšenská",
  "N. A. Někrasova",
  "Na Babách",
  "Na Babě",
  "Na Bahnech",
  "Na Balkáně",
  "Na Balkáně",
  "Na Bambouzku",
  "Na Baních",
  "Na Barikádách",
  "Na Bartoňce",
  "Na Bateriích",
  "Na Bateriích",
  "Na Bačálkách",
  "Na Baště Sv. Jiří",
  "Na Baště Sv. Ludmily",
  "Na Baště Sv. Tomáše",
  "Na Bendovce",
  "Na Benátkách",
  "Na Beránce",
  "Na Betonce",
  "Na Bečvářce",
  "Na Bitevní Pláni",
  "Na Blanici",
  "Na Blanseku",
  "Na Blatech",
  "Na Bluku",
  "Na Bohdalci",
  "Na Bojišti",
  "Na Boleslavce",
  "Na Borovém",
  "Na Botiči",
  "Na Botě",
  "Na Božkovně",
  "Na Brabenci",
  "Na Brázdě",
  "Na Bučance",
  "Na Bělici",
  "Na Bělidle",
  "Na Bělohorské Pláni",
  "Na Břehu",
  "Na Břevnovské Pláni",
  "Na Březince",
  "Na Celné",
  "Na Cestě",
  "Na Chmelnici",
  "Na Chobotě",
  "Na Chodovci",
  "Na Chvalce",
  "Na Chvalské Tvrzi",
  "Na Cihelně",
  "Na Cihlářce",
  "Na Cikorce",
  "Na Cikánce",
  "Na Cimbále",
  "Na Cípu",
  "Na Císařce",
  "Na Dionysce",
  "Na Dlouhé Mezi",
  "Na Dlouhé Mezi",
  "Na Dlouhé Mezi",
  "Na Dlouhé Mezi",
  "Na Dlouhém Lánu",
  "Na Dlážděnce",
  "Na Dlážděnce",
  "Na Dlážděnce",
  "Na Dlážděnce",
  "Na Dobešce",
  "Na Dobré Vodě",
  "Na Dolinách",
  "Na Dolinách",
  "Na Dolnici",
  "Na Dolíku",
  "Na Domovině",
  "Na Doubkové",
  "Na Drahách",
  "Na Dračkách",
  "Na Dračkách",
  "Na Dražkách",
  "Na Dubině",
  "Na Dvorcích",
  "Na Dyrince",
  "Na Dílcích",
  "Na Dílech",
  "Na Dědince",
  "Na Dědinách",
  "Na Děkance",
  "Na Děkance",
  "Na Dělostřílnách",
  "Na Džbánu",
  "Na Fabiánce",
  "Na Farkách",
  "Na Farkáně I",
  "Na Farkáně Ii",
  "Na Farkáně Iii",
  "Na Farkáně Iv",
  "Na Fialce I",
  "Na Fialce Ii",
  "Na Fidlovačce",
  "Na Fišerce",
  "Na Florenci",
  "Na Florenci",
  "Na Floře",
  "Na Folimance",
  "Na Formance",
  "Na Františku",
  "Na Groši",
  "Na Habrovce",
  "Na Habrové",
  "Na Hanspaulce",
  "Na Harfě",
  "Na Havránce",
  "Na Hlavní",
  "Na Hlinách",
  "Na Hloubětínské Vinici",
  "Na Hlídce",
  "Na Holém Vrchu",
  "Na Homolce",
  "Na Homoli",
  "Na Horce",
  "Na Horkách",
  "Na Hradním Vodovodu",
  "Na Hranicích",
  "Na Hranicích",
  "Na Hrobci",
  "Na Hroudě",
  "Na Hroudě",
  "Na Hrádku",
  "Na Hrázi",
  "Na Hubálce",
  "Na Humnech",
  "Na Hupech",
  "Na Hutmance",
  "Na Hutích",
  "Na Hutích",
  "Na Hvížďalce",
  "Na Hvězdárně",
  "Na Hádku",
  "Na Hájku",
  "Na Hřebenech I",
  "Na Hřebenech Ii",
  "Na Hřebenech Ii",
  "Na Hřebenkách",
  "Na Hůrce",
  "Na Jabloňce",
  "Na Jabloňce",
  "Na Jahodách",
  "Na Jarově",
  "Na Jelenách",
  "Na Jelenách",
  "Na Jetelce",
  "Na Jetelce",
  "Na Jezerce",
  "Na Jezerách",
  "Na Jitřence",
  "Na Jivinách",
  "Na Julisce",
  "Na Jílech",
  "Na Jílu",
  "Na Kameni",
  "Na Kampě",
  "Na Kapličce",
  "Na Karlovce",
  "Na Kavčích Horách",
  "Na Kazance",
  "Na Kačence",
  "Na Kačerově",
  "Na Kindlovce",
  "Na Klaudiánce",
  "Na Klaudiánce",
  "Na Kleovce",
  "Na Klikovce",
  "Na Klimentce",
  "Na Klášterním",
  "Na Klínech",
  "Na Klínech",
  "Na Klínku",
  "Na Knížce",
  "Na Kocourkách",
  "Na Kocínce",
  "Na Kodymce",
  "Na Kolejním Statku",
  "Na Komořsku",
  "Na Komořsku",
  "Na Konci",
  "Na Konečné",
  "Na Konvářce",
  "Na Kopanině",
  "Na Kopci",
  "Na Kopečku",
  "Na Kopytářce",
  "Na Korunce",
  "Na Korábě",
  "Na Korálově",
  "Na Kotlářce",
  "Na Koupaliště",
  "Na Kovárně",
  "Na Kozačce",
  "Na Kozinci",
  "Na Košince",
  "Na Košíku",
  "Na Kraji",
  "Na Krocínce",
  "Na Krutci",
  "Na Královce",
  "Na Královně",
  "Na Krčské Stráni",
  "Na Kuthence",
  "Na Kvintusce",
  "Na Květnici",
  "Na Kyjově",
  "Na Křemínku",
  "Na Křenkově",
  "Na Křečku",
  "Na Křivce",
  "Na Křivce",
  "Na Křivce",
  "Na Křivině",
  "Na Křtině",
  "Na Křídle",
  "Na Labuťce",
  "Na Labuťce I",
  "Na Labuťce Ii",
  "Na Labuťce Iii",
  "Na Labuťce Iv",
  "Na Ladách",
  "Na Lahovské",
  "Na Laurové",
  "Na Lepším",
  "Na Lhotech",
  "Na Lhotkách",
  "Na Libušince",
  "Na Losách",
  "Na Louce",
  "Na Loukoti",
  "Na Louži",
  "Na Loužku",
  "Na Luka",
  "Na Lukách",
  "Na Luzích",
  "Na Lučinách",
  "Na Lužci",
  "Na Lysinách",
  "Na Lysině",
  "Na Ládví",
  "Na Lánech",
  "Na Lávce",
  "Na Lázeňce",
  "Na Líše",
  "Na Malovance",
  "Na Malé Šárce",
  "Na Malém Klínu",
  "Na Maninách",
  "Na Manoušce",
  "Na Markvartce",
  "Na Marně",
  "Na Mezi",
  "Na Mlejnku",
  "Na Moklině",
  "Na Mokřině",
  "Na Moráni",
  "Na Močále",
  "Na Mrázovce",
  "Na Musilech",
  "Na Mírách",
  "Na Míčánce",
  "Na Míčánkách",
  "Na Mýtě",
  "Na Můstku",
  "Na Neklance",
  "Na Nežárce",
  "Na Nivách",
  "Na Novině",
  "Na Nové Silnici",
  "Na Náspu",
  "Na Návrati",
  "Na Návrší",
  "Na Návsi",
  "Na Obrátce",
  "Na Obrátce",
  "Na Odbočce",
  "Na Ohradě",
  "Na Okraji",
  "Na Okraji",
  "Na Okrouhlíku",
  "Na Okruhu",
  "Na Opyši",
  "Na Opyši",
  "Na Ostrohu",
  "Na Ostrově",
  "Na Ostrůvku",
  "Na Ovesníku",
  "Na Ovčinách",
  "Na Ovčáckém",
  "Na Ovčíně",
  "Na Ořechovce",
  "Na Padesátníku I",
  "Na Padesátníku Ii",
  "Na Padesátníku Iii",
  "Na Padesátníku Iv",
  "Na Padesátníku V",
  "Na Padesátém",
  "Na Pahorku",
  "Na Pahoubce",
  "Na Palouku",
  "Na Paloučku",
  "Na Pankráci",
  "Na Panorámě",
  "Na Parcelách",
  "Na Parkáně",
  "Na Parukářce",
  "Na Pasece",
  "Na Pasece",
  "Na Pastvinách",
  "Na Pavím Vrchu",
  "Na Pazderce",
  "Na Pecích",
  "Na Pernikářce",
  "Na Perštýně",
  "Na Petynce",
  "Na Petynce",
  "Na Petřinách",
  "Na Petřinách",
  "Na Placích",
  "Na Planině",
  "Na Plužině",
  "Na Plzeňce",
  "Na Plácku",
  "Na Pláni",
  "Na Plískavě",
  "Na Podkovce",
  "Na Pokraji",
  "Na Pokraji",
  "Na Poli",
  "Na Polníku",
  "Na Pomezí",
  "Na Pomezí",
  "Na Popelce",
  "Na Popelce",
  "Na Potůčku",
  "Na Poustkách",
  "Na Pozorce",
  "Na Poříčním Právu",
  "Na Poříčí",
  "Na Poříčí",
  "Na Požáru",
  "Na Požáru",
  "Na Pramenech",
  "Na Pramenech",
  "Na Prosecké Vyhlídce",
  "Na Proseku",
  "Na Prostřední Cestě",
  "Na Proutcích",
  "Na Provaznici",
  "Na Průhonu",
  "Na Průseku",
  "Na Pučálce",
  "Na Pískovně",
  "Na Písku",
  "Na Pískách",
  "Na Pěkné Vyhlídce",
  "Na Pěšinách",
  "Na Pěšinách",
  "Na Pěšině",
  "Na Předevsi",
  "Na Přesypu",
  "Na Přesypu",
  "Na Přídole",
  "Na Příkopě",
  "Na Příkopě",
  "Na Přívozích",
  "Na Příčce",
  "Na Příčné Mezi",
  "Na Radosti",
  "Na Radosti",
  "Na Rampách",
  "Na Rejdišti",
  "Na Roháčku",
  "Na Rokytce",
  "Na Rolích",
  "Na Rovinách",
  "Na Rovině",
  "Na Rovni",
  "Na Rovnosti",
  "Na Rovném",
  "Na Rozcestí",
  "Na Rozdílu",
  "Na Rozdílu",
  "Na Rozhledu",
  "Na Rozhraní",
  "Na Rozhraní",
  "Na Rozvodí",
  "Na Ročkově",
  "Na Rybníčku",
  "Na Rybářce",
  "Na Rybářce",
  "Na Rymáni",
  "Na Rynku",
  "Na Salabce",
  "Na Samotě",
  "Na Schodech",
  "Na Schůdkách",
  "Na Sedlišti",
  "Na Sekyrce",
  "Na Selském",
  "Na Seníku",
  "Na Skalce",
  "Na Skalách",
  "Na Sklonku",
  "Na Skále",
  "Na Slatince",
  "Na Slatinách",
  "Na Slatinách",
  "Na Slatinách",
  "Na Slavíkově",
  "Na Slovance",
  "Na Slupi",
  "Na Slupi",
  "Na Smetance",
  "Na Souvrati",
  "Na Souvrati",
  "Na Spojce",
  "Na Spádu",
  "Na Spáleništi",
  "Na Srpečku",
  "Na Srázu",
  "Na Srážku",
  "Na Staré",
  "Na Staré Cestě",
  "Na Staré Návsi",
  "Na Staré Silnici",
  "Na Staré Vinici",
  "Na Stezce",
  "Na Stezce",
  "Na Struze",
  "Na Stráni",
  "Na Stráňkách",
  "Na Stráži",
  "Na Stráži",
  "Na Strži",
  "Na Strži",
  "Na Stupních",
  "Na Stárce",
  "Na Stírce",
  "Na Střelnici",
  "Na Svahu",
  "Na Svěcence",
  "Na Sychrově",
  "Na Sychrově",
  "Na Sypkém",
  "Na Sypčině",
  "Na Sádce",
  "Na Terase",
  "Na Topolce",
  "Na Topolce",
  "Na Truhlářce",
  "Na Tržišti",
  "Na Tykačce",
  "Na Táboře",
  "Na Třebešíně",
  "Na Třebešíně",
  "Na Universitním Statku",
  "Na Usedlosti",
  "Na Vackově",
  "Na Valech",
  "Na Valentince",
  "Na Vartě",
  "Na Vaňhově",
  "Na Veselí",
  "Na Vidouli",
  "Na Viktorce",
  "Na Vinici",
  "Na Viničce",
  "Na Viničkách",
  "Na Viničních Horách",
  "Na Vinobraní",
  "Na Vinohradu",
  "Na Višňovce",
  "Na Vlasačce",
  "Na Vlastní Půdě",
  "Na Vlastním",
  "Na Vlku",
  "Na Vlčovce",
  "Na Volánové",
  "Na Vrchmezí",
  "Na Vrchmezí",
  "Na Vrchmezí",
  "Na Vrcholu",
  "Na Vrchu",
  "Na Vrchu",
  "Na Vrchách",
  "Na Vrchách",
  "Na Vrstevnici",
  "Na Vrstvách",
  "Na Vršku",
  "Na Vrškách",
  "Na Vrších",
  "Na Vrších",
  "Na Vydrholci",
  "Na Vyhlídce",
  "Na Vypichu",
  "Na Vypichu",
  "Na Vysoké I",
  "Na Vysoké I",
  "Na Vysoké Ii",
  "Na Vysočanských Vinicích",
  "Na Vysočině",
  "Na Václavce",
  "Na Vápence",
  "Na Vápenném",
  "Na Vítězné Pláni",
  "Na Výběžku",
  "Na Výhledech",
  "Na Výhonku",
  "Na Výrovně",
  "Na Výsledku I",
  "Na Výsledku Ii",
  "Na Výsluní",
  "Na Výspě",
  "Na Výspě",
  "Na Výstupu",
  "Na Výtoni",
  "Na Výši",
  "Na Výšince",
  "Na Výšinách",
  "Na Výšině",
  "Na Věnečku",
  "Na Větrníku",
  "Na Větrníku",
  "Na Větrově",
  "Na Větru",
  "Na Zahrádkách",
  "Na Zatlance",
  "Na Zavadilce",
  "Na Zbořenci",
  "Na Zderaze",
  "Na Zedníkové",
  "Na Zelené Louce",
  "Na Zemance",
  "Na Zkratce",
  "Na Zlatnici",
  "Na Zlaté",
  "Na Zlíchově",
  "Na Zlíchově",
  "Na Zmrzlíku",
  "Na Znělci",
  "Na Zvoničce",
  "Na Zábradlí",
  "Na Záhonech",
  "Na Zájezdu",
  "Na Zámecké",
  "Na Zámkách",
  "Na Zámyšli",
  "Na Zástřelu",
  "Na Zástřelu",
  "Na Zátorce",
  "Na Zátorách",
  "Na Závěji",
  "Na Úbočí",
  "Na Úhoru",
  "Na Úlehli",
  "Na Úseku",
  "Na Úspěchu",
  "Na Černé Hoře",
  "Na Černé Strouze",
  "Na Černém Vrchu",
  "Na Července",
  "Na Čečeličce",
  "Na Čihadle",
  "Na Čisté",
  "Na Říháku",
  "Na Šabatce",
  "Na Šachtě",
  "Na Šafránce",
  "Na Šancích",
  "Na Šedivé",
  "Na Šejdru",
  "Na Šejdru",
  "Na Šmukýřce",
  "Na Špejcharu",
  "Na Špitálce",
  "Na Špitálsku",
  "Na Štamberku",
  "Na Štěpnici",
  "Na Šubě",
  "Na Šumavě",
  "Na Šutce",
  "Na Švihance",
  "Na Šťáhlavce",
  "Na Žertvách",
  "Na Žvahově",
  "Naardenská",
  "Nad Akcízem",
  "Nad Akáty",
  "Nad Alejí",
  "Nad Belvederem",
  "Nad Belárií",
  "Nad Berounkou",
  "Nad Bertramkou",
  "Nad Botičem",
  "Nad Bořislavkou",
  "Nad Bořislavkou",
  "Nad Branickým Pivovarem",
  "Nad Brůdkem",
  "Nad Brůdkem",
  "Nad Buďánkami I",
  "Nad Buďánkami Ii",
  "Nad Buďánkami Iii",
  "Nad Cementárnou",
  "Nad Chaloupkami",
  "Nad Chuchlí",
  "Nad Cihelnou",
  "Nad Dalejským Údolím",
  "Nad Doly",
  "Nad Dolíky",
  "Nad Drahou",
  "Nad Dubovým Mlýnem",
  "Nad Dvorem",
  "Nad Dálnicí",
  "Nad Elektrárnou",
  "Nad Elektrárnou",
  "Nad Flajšnerkou",
  "Nad Habrovkou",
  "Nad Havlem",
  "Nad Helmrovkou",
  "Nad Hercovkou",
  "Nad Hercovkou",
  "Nad Hliníkem",
  "Nad Hliníkem",
  "Nad Horizontem",
  "Nad Hradním Potokem",
  "Nad Hradním Vodojemem",
  "Nad Husovými Sady",
  "Nad Hutěmi",
  "Nad Hutěmi",
  "Nad Hájem",
  "Nad Hřištěm",
  "Nad Jenerálkou",
  "Nad Jetelkou",
  "Nad Jezem",
  "Nad Jezerkou",
  "Nad Jordánkem",
  "Nad Kajetánkou",
  "Nad Kamínkou",
  "Nad Kaplankou",
  "Nad Kapličkou",
  "Nad Kavalírkou",
  "Nad Kazankou",
  "Nad Kazínem",
  "Nad Kelerkou",
  "Nad Kesnerkou",
  "Nad Klamovkou",
  "Nad Klikovkou",
  "Nad Klíčovem",
  "Nad Kolonií",
  "Nad Kolčavkou",
  "Nad Komornickou",
  "Nad Konečnou",
  "Nad Konvářkou",
  "Nad Kostelem",
  "Nad Kotlaskou I",
  "Nad Kotlaskou Ii",
  "Nad Kotlaskou Iii",
  "Nad Kotlaskou Iv",
  "Nad Kotlaskou V",
  "Nad Koulkou",
  "Nad Koupadly",
  "Nad Koupalištěm",
  "Nad Košinkou",
  "Nad Košíkem",
  "Nad Krocínkou",
  "Nad Krocínkou",
  "Nad Královskou Oborou",
  "Nad Kuliškou",
  "Nad Kundratkou",
  "Nad Kundratkou",
  "Nad Kundratkou",
  "Nad Křížkem",
  "Nad Laurovou",
  "Nad Lesem",
  "Nad Lesním Divadlem",
  "Nad Lesíkem",
  "Nad Libeňským Nádražím",
  "Nad Libeřským Potokem",
  "Nad Libušským Potokem",
  "Nad Libří",
  "Nad Lomem",
  "Nad Lomy",
  "Nad Lukami",
  "Nad Lávkou",
  "Nad Malým Mýtem",
  "Nad Manovkou",
  "Nad Markytou",
  "Nad Mazankou",
  "Nad Meandry",
  "Nad Mlynářkou",
  "Nad Mlýnem",
  "Nad Mlýnským Potokem",
  "Nad Mohylou",
  "Nad Mokřinou",
  "Nad Mostem",
  "Nad Motolskou Nemocnicí",
  "Nad Motolskou Nemocnicí",
  "Nad Mrázovkou",
  "Nad Mušlovkou",
  "Nad Mušlovkou",
  "Nad Novou Libní",
  "Nad Nuslemi",
  "Nad Nádražím",
  "Nad Nádrží",
  "Nad Náhonem",
  "Nad Náměstím",
  "Nad Návsí",
  "Nad Obcí I",
  "Nad Obcí Ii",
  "Nad Octárnou",
  "Nad Odbočkou",
  "Nad Ohradou",
  "Nad Okrouhlíkem",
  "Nad Olšinami",
  "Nad Olšinami",
  "Nad Ondřejovem",
  "Nad Opatovem",
  "Nad Ostrovem",
  "Nad Pahorkem",
  "Nad Palatou",
  "Nad Panenskou",
  "Nad Parkem",
  "Nad Parkánem",
  "Nad Paťankou",
  "Nad Pentlovkou",
  "Nad Petruskou",
  "Nad Petynkou",
  "Nad Plynovodem",
  "Nad Podbabskou Skálou",
  "Nad Pomníkem",
  "Nad Popelkou",
  "Nad Popelářkou",
  "Nad Potůčkem",
  "Nad Prahou",
  "Nad Pramenem",
  "Nad Primaskou",
  "Nad Primaskou",
  "Nad Propustí",
  "Nad Pruhy",
  "Nad Pískovnou",
  "Nad Přehradou",
  "Nad Přívozem",
  "Nad Radotínem",
  "Nad Rohatci",
  "Nad Roklí",
  "Nad Rokoskou",
  "Nad Rokytkou",
  "Nad Rybníkem",
  "Nad Rybníkem",
  "Nad Rybníčky",
  "Nad Ryšánkou",
  "Nad Rážákem",
  "Nad Sadem",
  "Nad Sady",
  "Nad Santoškou",
  "Nad Schody",
  "Nad Skálou",
  "Nad Slávií",
  "Nad Slávií",
  "Nad Smetankou",
  "Nad Sokolovnou",
  "Nad Soutokem",
  "Nad Soutokem",
  "Nad Splavem",
  "Nad Spádem",
  "Nad Spáleným Mlýnem",
  "Nad Stanicí",
  "Nad Starou Pískovnou",
  "Nad Statkem",
  "Nad Strakovkou",
  "Nad Strouhou",
  "Nad Strání",
  "Nad Strání",
  "Nad Studánkou",
  "Nad Svahem",
  "Nad Sýpkou",
  "Nad Tejnkou",
  "Nad Teplárnou",
  "Nad Topoly",
  "Nad Tratí",
  "Nad Trnkovem",
  "Nad Trojou",
  "Nad Turbovou",
  "Nad Třebešínem I",
  "Nad Třebešínem Ii",
  "Nad Třebešínem Ii",
  "Nad Třebešínem Iii",
  "Nad Třebešínem Iii",
  "Nad Vavrouškou",
  "Nad Vernerákem",
  "Nad Vinicí",
  "Nad Vinným Potokem",
  "Nad Vinným Potokem",
  "Nad Vinným Potokem",
  "Nad Vinohradem",
  "Nad Višňovkou",
  "Nad Vltavou",
  "Nad Vodovodem",
  "Nad Vodovodem",
  "Nad Vojenským Hřbitovem",
  "Nad Vokolky",
  "Nad Volyňkou",
  "Nad Vrbami",
  "Nad Vrstvami",
  "Nad Vršovskou Horou",
  "Nad Vsí",
  "Nad Vysočany",
  "Nad Václavkou",
  "Nad Výpustí",
  "Nad Výšinkou",
  "Nad Zahradnictvím",
  "Nad Zatáčkou",
  "Nad Zavážkou",
  "Nad Zbraslaví",
  "Nad Zbrojnicí",
  "Nad Zemankou",
  "Nad Zemankou",
  "Nad Zlatnicí",
  "Nad Zlíchovem",
  "Nad Záložnou",
  "Nad Zámečkem",
  "Nad Zámečnicí",
  "Nad Zátiším",
  "Nad Závodištěm",
  "Nad Závěrkou",
  "Nad Údolím",
  "Nad Údolím Hvězd",
  "Nad Úpadem",
  "Nad Úvozem",
  "Nad Úžlabinou",
  "Nad Úžlabinou",
  "Nad Šafránkou",
  "Nad Šancemi",
  "Nad Šauerovými Sady",
  "Nad Šeberákem",
  "Nad Šejdrem",
  "Nad Šestikopy",
  "Nad Šetelkou",
  "Nad Štolou",
  "Nad Šutkou",
  "Nad Šálkovnou",
  "Nad Šárkou",
  "Nad Želivkou",
  "Nad Žlábkem",
  "Nademlejnská",
  "Nadějovská",
  "Narcisová",
  "Naskové",
  "Natanaelka",
  "Navarova",
  "Navigátorů",
  "Navrátilova",
  "Načeradecká",
  "Načešická",
  "Neapolská",
  "Nebeského",
  "Nebovidská",
  "Nebozízek-Sady",
  "Nebušická",
  "Nechanická",
  "Nechanského",
  "Nechvalická",
  "Nechvílova",
  "Nechybova",
  "Nedašovská",
  "Nedbalova",
  "Nedokončená",
  "Nedokončená",
  "Nedošínské",
  "Nedražická",
  "Nedvědická",
  "Nedvědovo Nám.",
  "Nedvědovo Náměstí",
  "Nedvězská",
  "Neffova",
  "Nefritová",
  "Neherovská",
  "Nehvizdská",
  "Nehvizdská",
  "Nejdkova",
  "Neklanova",
  "Nekvasilova",
  "Nekázanka",
  "Nemocniční",
  "Nemošická",
  "Nepasické Nám.",
  "Nepasické Náměstí",
  "Nepelova",
  "Nepilova",
  "Nepomucká",
  "Nepomuckých",
  "Nepovolená",
  "Nepravidelná",
  "Neprůjezdná",
  "Nepálská",
  "Neratovická",
  "Nerudova",
  "Nerudova",
  "Nesměřická",
  "Nespecká",
  "Nesvadbova",
  "Netlucká",
  "Netluky",
  "Netolická",
  "Netušilská",
  "Netínská",
  "Netřebická",
  "Netřebská",
  "Neumannova",
  "Neustupného",
  "Neužilova",
  "Nevanova",
  "Neveklovská",
  "Newtonova",
  "Nezamyslova",
  "Nezdova",
  "Nezvalova",
  "Nečova",
  "Nešporova",
  "Nežárská",
  "Nickerleho",
  "Niederleho",
  "Nikodémova",
  "Nikoly Tesly",
  "Nikoly Vapcarova",
  "Niská",
  "Nitranská",
  "Nitranská",
  "Nivnická",
  "Nobelova",
  "Norbertov",
  "Norská",
  "Nosická",
  "Nosticova",
  "Notečská",
  "Noutonická",
  "Nouzov",
  "Nouzovské Nám.",
  "Nouzovské Náměstí",
  "Nouzová",
  "Novgorodská",
  "Novobohdalecká",
  "Novoborská",
  "Novoborská",
  "Novochuchelská",
  "Novodvorská",
  "Novodvorská",
  "Novodvorská",
  "Novodvorská",
  "Novohradská",
  "Novohrádecká",
  "Novohrádecká",
  "Novolhotská",
  "Novolipanská",
  "Novomeského",
  "Novomeského",
  "Novomlýnská",
  "Novopacká",
  "Novopetrovická",
  "Novorossijská",
  "Novosibřinská",
  "Novostrašnická",
  "Novosuchdolská",
  "Novosvětská",
  "Novotného Lávka",
  "Novoveská",
  "Novoveská",
  "Novovysočanská",
  "Novovysočanská",
  "Novovysočanská",
  "Novozámecká",
  "Novozámecká",
  "Novoškolská",
  "Novoštěrboholská",
  "Nová",
  "Nová Cesta",
  "Nová Kolonie",
  "Nová Ves",
  "Nová Ves",
  "Nová Šárka",
  "Novákovo Nám.",
  "Novákovo Náměstí",
  "Novákových",
  "Nové Domy",
  "Nové Dvory",
  "Nové Mlýny",
  "Nové Náměstí",
  "Nového",
  "Nový Lesík",
  "Nový Svět",
  "Nový Zlíchov",
  "Nový Zlíchov",
  "Nupacká",
  "Nuselská",
  "Nuselská",
  "Nučická",
  "Nušlova",
  "Nymburská",
  "Nábř. Edvarda Beneše",
  "Nábř. Edvarda Beneše",
  "Nábř. Edvarda Beneše",
  "Nábř. Kapitána Jaroše",
  "Nábř. Kapitána Jaroše",
  "Nábřežní",
  "Nábřeží Edvarda Beneše",
  "Nábřeží Edvarda Beneše",
  "Nábřeží Edvarda Beneše",
  "Nábřeží Kapitána Jaroše",
  "Nábřeží Ludvíka Svobody",
  "Náchodská",
  "Nádražní",
  "Nádražní",
  "Nádvorní",
  "Náhorní",
  "Nákupní",
  "Nám. 14. Října",
  "Nám. 25. Března",
  "Nám. Antonína Pecáka",
  "Nám. Barikád",
  "Nám. Bořislavka",
  "Nám. Bratří Synků",
  "Nám. Chuchelských Bojovníků",
  "Nám. Chuchleských Bojovníků",
  "Nám. Curieových",
  "Nám. Dr. V. Holého",
  "Nám. Franze Kafky",
  "Nám. Generála Kutlvašra",
  "Nám. Hrdinů",
  "Nám. I. P. Pavlova",
  "Nám. Interbrigády",
  "Nám. Jana Palacha",
  "Nám. Jana Palacha",
  "Nám. Jiřího Berana",
  "Nám. Jiřího Z Lobkovic",
  "Nám. Jiřího Z Poděbrad",
  "Nám. Jiřího Z Poděbrad",
  "Nám. Josefa Machka",
  "Nám. Kinských",
  "Nám. Kinských",
  "Nám. Mezi Zahrádkami",
  "Nám. Na Balabence",
  "Nám. Na Farkáně",
  "Nám. Na Lužinách",
  "Nám. Na Santince",
  "Nám. Na Stráži",
  "Nám. Omladiny",
  "Nám. Osvoboditelů",
  "Nám. Padlých",
  "Nám. Pod Kaštany",
  "Nám. Pod Lípou",
  "Nám. Prezidenta Masaryka",
  "Nám. Před Bateriemi",
  "Nám. Republiky",
  "Nám. Smiřických",
  "Nám. Svatopluka Čecha",
  "Nám. Svobody",
  "Nám. U Lva",
  "Nám. U Lípy Svobody",
  "Nám. U Svatého Jiří",
  "Nám. Winstona Churchilla",
  "Nám. Českého Povstání",
  "Nám.Organizace Spojených Národ",
  "Nám.Plukovníka Vlčka",
  "Náměstí 14. Října",
  "Náměstí 25. Března",
  "Náměstí Antonína Pecáka",
  "Náměstí Barikád",
  "Náměstí Bořislavka",
  "Náměstí Bořislavka",
  "Náměstí Bratří Jandusů",
  "Náměstí Bratří Synků",
  "Náměstí Chuchelských Bojovníků",
  "Náměstí Curieových",
  "Náměstí Dr. Václava Holého",
  "Náměstí Generála Kutlvašra",
  "Náměstí Hrdinů",
  "Náměstí I. P. Pavlova",
  "Náměstí Interbrigády",
  "Náměstí Jana Palacha",
  "Náměstí Jana Palacha",
  "Náměstí Jiřího Berana",
  "Náměstí Jiřího Z Lobkovic",
  "Náměstí Jiřího Z Poděbrad",
  "Náměstí Jiřího Z Poděbrad",
  "Náměstí Josefa Machka",
  "Náměstí Junkových",
  "Náměstí Kinských",
  "Náměstí Kinských",
  "Náměstí Kosmonautů",
  "Náměstí Mezi Zahrádkami",
  "Náměstí Míru",
  "Náměstí Na Balabence",
  "Náměstí Na Farkáně",
  "Náměstí Na Lužinách",
  "Náměstí Na Santince",
  "Náměstí Na Stráži",
  "Náměstí Omladiny",
  "Náměstí Organizace Spojených Národů",
  "Náměstí Osvoboditelů",
  "Náměstí Padlých",
  "Náměstí Plukovníka Vlčka",
  "Náměstí Pod Emauzy",
  "Náměstí Pod Kaštany",
  "Náměstí Pod Lípou",
  "Náměstí Prezidenta Masaryka",
  "Náměstí Protifašistických Bojovníků",
  "Náměstí Před Bateriemi",
  "Náměstí Přátelství",
  "Náměstí Republiky",
  "Náměstí Republiky",
  "Náměstí Smiřických",
  "Náměstí Sv. Petra A Pavla",
  "Náměstí Svatopluka Čecha",
  "Náměstí Svobody",
  "Náměstí U Lva",
  "Náměstí U Lípy Svobody",
  "Náměstí U Svatého Jiří",
  "Náměstí Winstona Churchilla",
  "Náměstí Zdenky Braunerové",
  "Náměstí Českého Povstání",
  "Náplavní",
  "Náprstkova",
  "Národní",
  "Národní",
  "Národní Obrany",
  "Národních Hrdinů",
  "Nárožní",
  "Násirovo Nám.",
  "Násirovo Náměstí",
  "Nástrojářská",
  "Návazná",
  "Návršní",
  "Návětrná",
  "Návětrná",
  "Názovská",
  "Nýdecká",
  "Nýrská",
  "Nýřanská",
  "Němčická",
  "Něvská",
  "Obchodní",
  "Obchodní Nám.",
  "Obchodní Náměstí",
  "Obilní",
  "Objízdná",
  "Oblouková",
  "Obora Hvězda",
  "Oborská",
  "Obrataňská",
  "Obrovského",
  "Obsiny",
  "Obslužná",
  "Obvodová",
  "Obědovická",
  "Obětí 6. Května",
  "Obětí 6.Května",
  "Ocelkova",
  "Ocelářská",
  "Ocelářská",
  "Ocelíkova",
  "Ochozská",
  "Ochranovská",
  "Od Rozcestí",
  "Od Vysoké",
  "Od Školy",
  "Odboje",
  "Odborů",
  "Odbočná",
  "Oddechová",
  "Oddělená",
  "Oderská",
  "Odlehlá",
  "Ohmova",
  "Ohnivcova",
  "Ohnišťanská",
  "Ohradní",
  "Ohradní",
  "Ohradská",
  "Ohradské Nám.",
  "Ohradské Náměstí",
  "Ohrobecká",
  "Okenská",
  "Okořská",
  "Okrajní",
  "Okrajová",
  "Okrajová",
  "Okrasná",
  "Okrouhlická",
  "Okrouhlíkova",
  "Okrová",
  "Okruhová",
  "Okružní",
  "Okružní",
  "Okřínecká",
  "Olbrachtova",
  "Olbramovická",
  "Oldřichova",
  "Olešnická",
  "Olešská",
  "Olgy Havlové",
  "Olivova",
  "Olomoucká",
  "Olympijská",
  "Olšanská",
  "Olšanské Nám.",
  "Olšanské Náměstí",
  "Olšovická",
  "Olšová",
  "Olštýnská",
  "Omladinářů",
  "Omská",
  "Ondřejovská",
  "Ondříčkova",
  "Ondříčkova",
  "Onšovecká",
  "Opata Konráda",
  "Opatovická",
  "Opatovská",
  "Opatovská",
  "Opatřilka",
  "Opatřilka",
  "Opařanská",
  "Oplanská",
  "Opletalova",
  "Opolská",
  "Opočenská",
  "Opočínská",
  "Opravářská",
  "Opuková",
  "Opálkova",
  "Opálová",
  "Oravská",
  "Ordovická",
  "Orebitská",
  "Orelská",
  "Orlická",
  "Ortenovo Náměstí",
  "Osadní",
  "Osamocená",
  "Osecká",
  "Osetá",
  "Osická",
  "Osiková",
  "Osinalická",
  "Osluněná",
  "Osmého Listopadu",
  "Osnická",
  "Osnická",
  "Osnická",
  "Ostravická",
  "Ostravská",
  "Ostromečská",
  "Ostrov Štvanice",
  "Ostrovní",
  "Ostrovského",
  "Ostruženská",
  "Ostružinová",
  "Ostrá",
  "Ostrčilovo Nám.",
  "Ostrčilovo Náměstí",
  "Ostředecká",
  "Ostřicová",
  "Osvobození",
  "Osvětová",
  "Otakara Vrby",
  "Otakarova",
  "Otavova",
  "Otavova",
  "Otavská",
  "Otevřená",
  "Otická",
  "Otlíkovská",
  "Otopašská",
  "Otovická",
  "Otradovická",
  "Ottova",
  "Otvovická",
  "Oty Pavla",
  "Otínská",
  "Otěšínská",
  "Ouholická",
  "Ouhrabkova",
  "Ovenecká",
  "Ovenecká",
  "Ovesná",
  "Ovocná",
  "Ovocnářská",
  "Ovocný Trh",
  "Ovsíková",
  "Oválová",
  "Ovčárská",
  "Ovčí Hájek",
  "Ořechová",
  "Ořešská",
  "Paběnická",
  "Paběnická",
  "Pacajevova",
  "Paceřická",
  "Pacholíkova",
  "Pacovská",
  "Paculova",
  "Padovská",
  "Pajerova",
  "Pakoměřická",
  "Palackého",
  "Palackého Nám.",
  "Palackého Náměstí",
  "Palmetová",
  "Palmovka",
  "Paláskova",
  "Pampelišková",
  "Pancířova",
  "Panelová",
  "Panenky",
  "Panenská",
  "Pankrácké Náměstí",
  "Panská",
  "Panská Zahrada",
  "Panský Dvůr",
  "Panuškova",
  "Paprsková",
  "Papírenská",
  "Papírníkova",
  "Parašutistů",
  "Pardubická",
  "Park Přátelství",
  "Parková",
  "Parléřova",
  "Parléřova",
  "Parmská",
  "Paroplavební",
  "Partyzánská",
  "Pasecká",
  "Pasteurova",
  "Pastevců",
  "Patočkova",
  "Patočkova",
  "Patočkova",
  "Pavelkova",
  "Pavla Beneše",
  "Pavla Švandy Ze Semčic",
  "Pavlická",
  "Pavlišovská",
  "Pavlovická",
  "Pavlovská",
  "Pavlíkova",
  "Pavrovského",
  "Paříkova",
  "Pařízkova",
  "Pařížská",
  "Pařížská",
  "Paškova",
  "Paťanka",
  "Peceradská",
  "Pecharova",
  "Pechlátova",
  "Pechlátova",
  "Pecháčkova",
  "Peckova",
  "Pejevové",
  "Pekařova",
  "Pekařova",
  "Pekařská",
  "Pekárenská",
  "Pekárkova",
  "Pelclova",
  "Pelechovská",
  "Pelhřimovská",
  "Pelikánova",
  "Pelléova",
  "Pelléova",
  "Pelnářova",
  "Pelušková",
  "Pelyňková",
  "Pelzova",
  "Penízovková",
  "Perlitová",
  "Perlitová",
  "Perlová",
  "Pernerova",
  "Pernerova",
  "Peroutkova",
  "Peroutkova",
  "Peroutkova",
  "Peroutkova",
  "Perspektivní",
  "Pertoldova",
  "Perucká",
  "Perunova",
  "Perštejnská",
  "Petra Bezruče",
  "Petra Rezka",
  "Petra Slezáka",
  "Petrbokova",
  "Petrklíčová",
  "Petrohradská",
  "Petrovická",
  "Petrovská",
  "Petrská",
  "Petrské Nám.",
  "Petrské Náměstí",
  "Petráčkova",
  "Petržílkova",
  "Petržílova",
  "Petýrkova",
  "Petříkova",
  "Petříkovská",
  "Petřínská",
  "Petřínská",
  "Petřínské Sady",
  "Petřínské Sady",
  "Pevnostní",
  "Pečárková",
  "Pešinova",
  "Peškova",
  "Pešlova",
  "Pešova",
  "Peštukova",
  "Pešákova",
  "Picassova",
  "Pickova",
  "Pihelská",
  "Pikovická",
  "Pikrtova",
  "Pilařská",
  "Pilníkovská",
  "Pilotů",
  "Pilovská",
  "Pilovská",
  "Pilská",
  "Pirinská",
  "Pirnerova",
  "Pitkovická",
  "Pitterova",
  "Pivcova",
  "Pivovarnická",
  "Pivovarská",
  "Pivoňková",
  "Pištěkova",
  "Placina",
  "Placina",
  "Plajnerova",
  "Plamínkové",
  "Plaská",
  "Platanová",
  "Platnéřská",
  "Platónova",
  "Plavecká",
  "Plavínová",
  "Plačická",
  "Plaňanská",
  "Plevenská",
  "Plečnikova",
  "Plhovská",
  "Plickova",
  "Plkovská",
  "Plojharova",
  "Ploskovická",
  "Ploučnická",
  "Plovdivská",
  "Plošná",
  "Ploštilova",
  "Plukovníka Mráze",
  "Plumlovská",
  "Plutova",
  "Plynární",
  "Plzeňská",
  "Plzeňská",
  "Plzeňská",
  "Plzeňská",
  "Plzeňská",
  "Plánická",
  "Pláničkova",
  "Poberova",
  "Pobočná",
  "Pobořská",
  "Poběžovická",
  "Pobřežní",
  "Pobřežní Cesta",
  "Pod Akáty",
  "Pod Altánem",
  "Pod Altánem",
  "Pod Andělkou",
  "Pod Areálem",
  "Pod Aritmou",
  "Pod Ateliéry",
  "Pod Bahnivkou",
  "Pod Balkánem",
  "Pod Barvířkou",
  "Pod Bateriemi",
  "Pod Baštami",
  "Pod Belvederem",
  "Pod Belárií",
  "Pod Beránkem",
  "Pod Beránkou",
  "Pod Betání",
  "Pod Bohdalcem I",
  "Pod Bohdalcem I",
  "Pod Bohdalcem Ii",
  "Pod Brentovou",
  "Pod Bruskou",
  "Pod Buďánkou",
  "Pod Bání",
  "Pod Březinou",
  "Pod Chaloupkami",
  "Pod Chodovem",
  "Pod Cihelnou",
  "Pod Cihelnou",
  "Pod Cukrákem",
  "Pod Císařkou",
  "Pod Dlážděnkou",
  "Pod Domky",
  "Pod Drinopolem",
  "Pod Dráhou",
  "Pod Duby",
  "Pod Dvorem",
  "Pod Dálnicí",
  "Pod Děkankou",
  "Pod Děkankou",
  "Pod Děvínem",
  "Pod Farou",
  "Pod Fialkou",
  "Pod Formankou",
  "Pod Fořtem",
  "Pod Garážemi",
  "Pod Habrovkou",
  "Pod Habrovou",
  "Pod Haltýřem",
  "Pod Harfou",
  "Pod Havlínem",
  "Pod Havránkou",
  "Pod Havránkou",
  "Pod Hliništěm",
  "Pod Hloubětínskou Zastávkou",
  "Pod Hláskem",
  "Pod Homolkou",
  "Pod Hotelem",
  "Pod Hořavkou",
  "Pod Hrachovkou",
  "Pod Hradbami",
  "Pod Hradem",
  "Pod Hranicí",
  "Pod Hrází",
  "Pod Hvězdou",
  "Pod Hvězdárnou",
  "Pod Hvězdárnou",
  "Pod Hybšmankou",
  "Pod Hájem",
  "Pod Hájkem",
  "Pod Hájovnou",
  "Pod Hřbitovem",
  "Pod Hřištěm",
  "Pod Jalovým Dvorem",
  "Pod Jankovem",
  "Pod Jarovem",
  "Pod Javory",
  "Pod Jiráskovou Čtvrtí",
  "Pod Juliskou",
  "Pod Kamínkou",
  "Pod Kapličkou",
  "Pod Kapličkou",
  "Pod Karlovarskou Silnicí",
  "Pod Karlovem",
  "Pod Kavalírkou",
  "Pod Kaštany",
  "Pod Kaštany",
  "Pod Kesnerkou",
  "Pod Kladenskou Silnicí",
  "Pod Klamovkou",
  "Pod Klapicí",
  "Pod Klaudiánkou",
  "Pod Klikovkou",
  "Pod Kopcem",
  "Pod Kostelem",
  "Pod Kotlaskou",
  "Pod Kotlářkou",
  "Pod Kotlářkou",
  "Pod Kotlářkou",
  "Pod Krejcárkem",
  "Pod Krocínkou",
  "Pod Královkou",
  "Pod Krčským Lesem",
  "Pod Kulturním Domem",
  "Pod Kynclovkou",
  "Pod Křížem",
  "Pod Křížkem",
  "Pod Labuťkou",
  "Pod Lahovskou",
  "Pod Lesem",
  "Pod Lesíkem",
  "Pod Letištěm",
  "Pod Lečí",
  "Pod Lipami",
  "Pod Lipkami",
  "Pod Lisem",
  "Pod Lisem",
  "Pod Lochkovem",
  "Pod Lomem",
  "Pod Lysinami",
  "Pod Lázní",
  "Pod Marjánkou",
  "Pod Markétou",
  "Pod Martinem",
  "Pod Meliškou",
  "Pod Mlýnkem",
  "Pod Mohylou",
  "Pod Mostem",
  "Pod Napětím",
  "Pod Nouzovem",
  "Pod Novou Školou",
  "Pod Novým Lesem",
  "Pod Novým Lesem",
  "Pod Nuselskými Schody",
  "Pod Náměstím",
  "Pod Náplavkou",
  "Pod Náplavkou",
  "Pod Náspem",
  "Pod Návsí",
  "Pod Oborou",
  "Pod Ovčínem",
  "Pod Ořechovkou",
  "Pod Palatou",
  "Pod Palírkou",
  "Pod Parukářkou",
  "Pod Paťankou",
  "Pod Paťankou",
  "Pod Pekařkou",
  "Pod Pekárnami",
  "Pod Petřinami",
  "Pod Plynojemem",
  "Pod Plynojemem",
  "Pod Plynojemem",
  "Pod Plískavou",
  "Pod Poštou",
  "Pod Pramenem",
  "Pod Prodejnou",
  "Pod Průsekem",
  "Pod Písečnou",
  "Pod Přehradou",
  "Pod Přesypem",
  "Pod Radnicí",
  "Pod Rapidem",
  "Pod Rapidem",
  "Pod Rapidem",
  "Pod Remízkem",
  "Pod Rovinou",
  "Pod Rozvodnou",
  "Pod Rybníkem",
  "Pod Rybníčkem",
  "Pod Sady",
  "Pod Salabkou",
  "Pod Sirénou",
  "Pod Skalkou",
  "Pod Skalou",
  "Pod Sklenářkou",
  "Pod Slovany",
  "Pod Smetankou",
  "Pod Sokolovnou",
  "Pod Soutratím",
  "Pod Spalovnou",
  "Pod Spiritkou",
  "Pod Spravedlností",
  "Pod Srázem",
  "Pod Stadiony",
  "Pod Stanicí",
  "Pod Starou Školou",
  "Pod Starákem",
  "Pod Statky",
  "Pod Strašnickou Vinicí",
  "Pod Strojírnami",
  "Pod Strání",
  "Pod Studánkou",
  "Pod Stupni",
  "Pod Stárkou",
  "Pod Stárkou",
  "Pod Stírkou",
  "Pod Svahem",
  "Pod Sychrovem I",
  "Pod Sychrovem I",
  "Pod Sychrovem I",
  "Pod Sychrovem Ii",
  "Pod Sídlištěm",
  "Pod Terasami",
  "Pod Terebkou",
  "Pod Topoly",
  "Pod Tratí",
  "Pod Turnovskou Tratí",
  "Pod Turnovskou Tratí",
  "Pod Táborem",
  "Pod Táborem",
  "Pod Třebešínem",
  "Pod Třešněmi",
  "Pod Třešňovkou",
  "Pod Urnovým Hájem",
  "Pod Valem",
  "Pod Vartou",
  "Pod Vavřincem",
  "Pod Velkým Hájem",
  "Pod Viaduktem",
  "Pod Vidoulí",
  "Pod Viktorkou",
  "Pod Vilami",
  "Pod Vinicemi",
  "Pod Vinicí",
  "Pod Vinohradem",
  "Pod Višňovkou",
  "Pod Vlachovkou",
  "Pod Vlastním Krovem",
  "Pod Vlkem",
  "Pod Vodojemem",
  "Pod Vodovodem",
  "Pod Vodárenskou Věží",
  "Pod Vrchem",
  "Pod Vrcholem",
  "Pod Vrstevnicí",
  "Pod Vrškem",
  "Pod Vrškem",
  "Pod Vršovickou Vodárnou I",
  "Pod Vršovickou Vodárnou Ii",
  "Pod Vršovickou Vodárnou Iii",
  "Pod Vsí",
  "Pod Vyhlídkou",
  "Pod Vysokou",
  "Pod Vysokou Mezí",
  "Pod Vysílačkou",
  "Pod Vyšehradem",
  "Pod Václavem",
  "Pod Vítkovem",
  "Pod Výtopnou",
  "Pod Výšinkou",
  "Pod Větrolamem",
  "Pod Větrovem",
  "Pod Věží",
  "Pod Zahradami",
  "Pod Zahrádkami",
  "Pod Zastávkou",
  "Pod Zatáčkou",
  "Pod Zbuzany",
  "Pod Zemankou",
  "Pod Zličínem",
  "Pod Zvonařkou",
  "Pod Zvoničkou",
  "Pod Zámečkem",
  "Pod Závěrkou",
  "Pod Útesy",
  "Pod Čertovou Skalou",
  "Pod Čihadlem",
  "Pod Čimickým Hájem",
  "Pod Šancemi",
  "Pod Školou",
  "Pod Šmukýřkou",
  "Pod Špejcharem",
  "Pod Špitálem",
  "Pod Štěpem",
  "Pod Žvahovem",
  "Podbabská",
  "Podbabská",
  "Podbělohorská",
  "Podbělová",
  "Podchýšská",
  "Podedvorská",
  "Podhajská Pole",
  "Podholí",
  "Podhorská",
  "Podhořská",
  "Podivínská",
  "Podjavorinské",
  "Podjezd",
  "Podkovářská",
  "Podkrkonošská",
  "Podkrkonošských Tkalců",
  "Podle Kačerova",
  "Podle Lomu",
  "Podle Lomu",
  "Podle Náhonu",
  "Podle Náhonu",
  "Podle Sadů",
  "Podle Trati",
  "Podlesek",
  "Podleská",
  "Podlesní",
  "Podlešínská",
  "Podlibská",
  "Podlipného",
  "Podlišovská",
  "Podlužanská",
  "Podléšková",
  "Podnikatelská",
  "Podnádražní",
  "Podohradská",
  "Podolanská",
  "Podolská",
  "Podolská",
  "Podolské Nábř.",
  "Podolské Nábřeží",
  "Podolské Schody",
  "Podpěrova",
  "Podskalská",
  "Podsychrovská",
  "Podvinný Mlýn",
  "Podvinný Mlýn",
  "Podzámecká",
  "Podéšťova",
  "Poděbradova",
  "Poděbradova",
  "Poděbradská",
  "Poděbradská",
  "Poděbradská",
  "Podůlší",
  "Pohledná",
  "Pohnertova",
  "Pohořelec",
  "Pohořelec",
  "Pokojná",
  "Pokorného",
  "Pokřivená",
  "Polabská",
  "Polabská",
  "Polaneckého",
  "Polední",
  "Polední",
  "Polenská",
  "Polepská",
  "Poleradská",
  "Polesná",
  "Polešovická",
  "Politických Vězňů",
  "Poličanská",
  "Poljanovova",
  "Polní",
  "Polovnická",
  "Polská",
  "Polygrafická",
  "Polákova",
  "Poláčkova",
  "Políkenská",
  "Polívkova",
  "Pomezní",
  "Pomněnková",
  "Pomořanská",
  "Ponrepova",
  "Poplužní",
  "Popovická",
  "Popovova",
  "Poslední",
  "Pospíchalova",
  "Pospíšilova",
  "Postlova",
  "Postranní",
  "Postupická",
  "Postřekovská",
  "Postřižínská",
  "Postřižínská",
  "Potocká",
  "Potoční",
  "Pouchova",
  "Poupětova",
  "Poustka",
  "Povltavská",
  "Povltavská",
  "Povltavská",
  "Povodňová",
  "Pozdeňská",
  "Poznaňská",
  "Počeradská",
  "Počernická",
  "Počernická",
  "Počátecká",
  "Počátecká",
  "Poříčanská",
  "Poříčanská",
  "Poříčská",
  "Pošepného Nám.",
  "Pošepného Náměstí",
  "Poštovská",
  "Požárnická",
  "Pplk. Nováčka",
  "Pplk. Sochora",
  "Prachatická",
  "Prachnerova",
  "Prachovická",
  "Prachovská",
  "Pramenná",
  "Pramenná",
  "Pravoúhlá",
  "Pravská",
  "Pravá",
  "Prašná",
  "Pražská",
  "Pražského",
  "Pražského Povstání",
  "Pražský Okruh",
  "Pražákovská",
  "Prefátova",
  "Preislerova",
  "Preláta",
  "Prelátská",
  "Preslova",
  "Primátorská",
  "Probluzská",
  "Proboštská",
  "Procházkova",
  "Prodloužená",
  "Prokofjevova",
  "Prokopka",
  "Prokopova",
  "Prokopovo Nám.",
  "Prokopovo Náměstí",
  "Prokopových",
  "Prokopská",
  "Prokopské Údolí",
  "Prokopské Údolí",
  "Prorektorská",
  "Prosecká",
  "Prosecká",
  "Prosecká",
  "Prosincová",
  "Prosluněná",
  "Prosná",
  "Prostřední",
  "Proti Proudu",
  "Protilehlá",
  "Protivínská",
  "Proutěná",
  "Prouzova",
  "Provaznická",
  "Provozní",
  "Prunéřovská",
  "Prusická",
  "Prusíkova",
  "Prušánecká",
  "Prvního Pluku",
  "Prvního Pluku",
  "Prvomájová",
  "Prácheňská",
  "Práčská",
  "Průběžná",
  "Průchodní",
  "Průchova",
  "Průhledová",
  "Průhonek",
  "Průhonek",
  "Průhonická",
  "Průhonská",
  "Průjezdná",
  "Průmyslová",
  "Průmyslová",
  "Průmyslová",
  "Průmyslová",
  "Průtažní",
  "Průčelní",
  "Průškova",
  "Psohlavců",
  "Pstružná",
  "Psárská",
  "Ptáčnická",
  "Puchmajerova",
  "Puchmajerova",
  "Pujmanové",
  "Pujmanové",
  "Pujmanové",
  "Purkrabská",
  "Purkyňova",
  "Putimská",
  "Pučova",
  "Puškinovo Nám.",
  "Puškinovo Náměstí",
  "Pyšelská",
  "Pálavská",
  "Pálkařská",
  "Pámelníková",
  "Pánkova",
  "Pátkova",
  "Pávovské Náměstí",
  "Písecká",
  "Píseckého",
  "Písečná",
  "Pískařská",
  "Pískovcová",
  "Pískovna",
  "Písková",
  "Písnická",
  "Písnická",
  "Písnické Zahrady",
  "Písčitá",
  "Píškova",
  "Píšovická",
  "Pöslova",
  "Púchovská",
  "Púchovská",
  "Pýchavková",
  "Pýrová",
  "Pěnkaví",
  "Pěstitelská",
  "Pětidomí",
  "Pětipeského",
  "Pěší",
  "Přecechtělova",
  "Přechodní",
  "Před Cibulkami",
  "Před Dráhou",
  "Před Mosty",
  "Před Nádražím",
  "Před Oborou",
  "Před Rybníkem",
  "Před Skalkami I",
  "Před Skalkami Ii",
  "Před Skálou",
  "Před Sokolovnou",
  "Před Tratí",
  "Před Ústavem",
  "Předbořská",
  "Předměřická",
  "Přední",
  "Předpolní",
  "Předposlední",
  "Předvoje",
  "Předvoje",
  "Předškolní",
  "Přeletová",
  "Přeloučská",
  "Přemyslova",
  "Přemyslovská",
  "Přemyslovská",
  "Přemyšlenská",
  "Přerušená",
  "Přesličková",
  "Přespolní",
  "Přetlucká",
  "Přeučilova",
  "Převoznická",
  "Přezletická",
  "Přeštická",
  "Přeštínská",
  "Přeťatá",
  "Při Hranici",
  "Při Hranici",
  "Při Trati",
  "Přibyslavská",
  "Přibíkova",
  "Přistoupimská",
  "Přádova",
  "Přátelství",
  "Příborská",
  "Příbramská",
  "Příběnická",
  "Příchovická",
  "Přídolská",
  "Příkrá",
  "Přílepská",
  "Přímské Nám.",
  "Přímské Náměstí",
  "Přímá",
  "Přímětická",
  "Přípotoční",
  "Přípřežní",
  "Přírodní",
  "Přístavní",
  "Přívorská",
  "Přívozní",
  "Příčka",
  "Příčná",
  "Pšeničná",
  "Pšenčíkova",
  "Pšovanská",
  "Pštrossova",
  "Půdova",
  "Půlkruhová",
  "Půlnoční",
  "Půtova",
  "R.A. Dvorského",
  "Rabasova",
  "Rabyňská",
  "Rackova",
  "Rackova Zahrada",
  "Radbuzská",
  "Radechovská",
  "Radešovská",
  "Radhošťská",
  "Radhošťská",
  "Radimova",
  "Radimovická",
  "Radimská",
  "Radiová",
  "Radiová",
  "Radistů",
  "Radkovská",
  "Radlická",
  "Radlická",
  "Radlická",
  "Radnické Schody",
  "Radomská",
  "Radonická",
  "Radostavická",
  "Radostná",
  "Radotínská",
  "Radotínská",
  "Radouňova",
  "Radouňova",
  "Radouňova",
  "Radova",
  "Radovská",
  "Radošovická",
  "Radvanická",
  "Radúzova",
  "Radčina",
  "Radějovská",
  "Raffaelova",
  "Raichlova",
  "Raisova",
  "Rajhradská",
  "Rajmonova",
  "Rajská",
  "Rakousova",
  "Rakovnická",
  "Rakovského",
  "Randova",
  "Ranská",
  "Ratajova",
  "Ratajská",
  "Ratbořská",
  "Ratibořická",
  "Ratibořská",
  "Ratibořská",
  "Ravennská",
  "Račická",
  "Račiněveská",
  "Rašilovova",
  "Rašova",
  "Rašovická",
  "Rašovská",
  "Rašínovo Nábř.",
  "Rašínovo Nábř.",
  "Rašínovo Nábřeží",
  "Rašínovo Nábřeží",
  "Rašínská",
  "Ražická",
  "Reinerova",
  "Rejchova",
  "Rejskova",
  "Rekreační",
  "Rektorská",
  "Rembrandtova",
  "Remízková",
  "Renoirova",
  "Resslova",
  "Revoluce",
  "Revoluční",
  "Revoluční",
  "Rezedová",
  "Rezlerova",
  "Rečkova",
  "Richtrova",
  "Riegrova",
  "Riegrovy Sady",
  "Rilská",
  "Ringhofferova",
  "Ringhofferova",
  "Rižská",
  "Roblínská",
  "Rochovská",
  "Rochovská",
  "Rodopská",
  "Rodovská",
  "Rodvinovská",
  "Roentgenova",
  "Rohanovská",
  "Rohanské Nábřeží",
  "Rohanský Ostrov",
  "Rohatecká",
  "Rohenická",
  "Rohlovská",
  "Rohová",
  "Rohozecká",
  "Rohožnická",
  "Roháčova",
  "Roithova",
  "Rojická",
  "Roklova",
  "Rokycanova",
  "Rokycanská",
  "Rokytnická",
  "Rokytná",
  "Rolnická",
  "Rolní",
  "Romaina Rollanda",
  "Romana Blahníka",
  "Ronalda Reagana",
  "Ronešova",
  "Ronkova",
  "Ronovská",
  "Rooseveltova",
  "Rorýsová",
  "Rosečská",
  "Rosická",
  "Rostislavova",
  "Rostoklatská",
  "Rostovská",
  "Rotavská",
  "Rotenská",
  "Roudnická",
  "Rousovická",
  "Rousínovská",
  "Rovenská",
  "Rovnoběžná",
  "Rovná",
  "Rozdělená",
  "Rozdělovská",
  "Rozhovická",
  "Rozkošného",
  "Rozkošská",
  "Rozmarýnová",
  "Rozrazilová",
  "Roztocká",
  "Roztylská",
  "Roztylské Náměstí",
  "Roztylské Sady",
  "Rozvadovská",
  "Rozvodova",
  "Rozvojová",
  "Rozárčina",
  "Rozýnova",
  "Rozšířená",
  "Ročovská",
  "Rošických",
  "Roškotova",
  "Rošovická",
  "Rožmberská",
  "Rožmitálská",
  "Rožnovská",
  "Rožďalovická",
  "Rtyňská",
  "Rubensova",
  "Rubeška",
  "Rubešova",
  "Rubličova",
  "Rubínová",
  "Rudečská",
  "Rudníkovská",
  "Rudolfa Holeky",
  "Rudoltická",
  "Rudoltická",
  "Rujanská",
  "Rumburská",
  "Rumunská",
  "Rumunská",
  "Ruprechtická",
  "Ruská",
  "Ruská",
  "Ruzyňská",
  "Ruzyňská",
  "Ruzyňské Schody",
  "Ružinovská",
  "Rybalkova",
  "Rybalkova",
  "Rybalkova",
  "Rybničná",
  "Rybná",
  "Rybova",
  "Rybářská",
  "Rybízová",
  "Rychnovská",
  "Rychtáře Petříka",
  "Rychtáře Šimona",
  "Rychtářská",
  "Rypkova",
  "Rytířova",
  "Rytířská",
  "Ryzcová",
  "Ryzlinková",
  "Ryšánkova",
  "Rájecká",
  "Rámová",
  "Rápošovská",
  "Rážova",
  "Révová",
  "Rýmařovská",
  "Rýnská",
  "Rýznerova",
  "Růženínová",
  "Růženínská",
  "Růženínská",
  "Růžová",
  "S. K. Neumanna",
  "Sabinova",
  "Sadařská",
  "Sadová",
  "Sadská",
  "Sadská",
  "Sady Bratří Čapků",
  "Safírová",
  "Salabova",
  "Salačova",
  "Salmovská",
  "Salvátorská",
  "Samcova",
  "Samohelova",
  "Samota U Podleského Rybníka",
  "Sarajevská",
  "Saratovská",
  "Sartoriova",
  "Sasanková",
  "Saská",
  "Satalická",
  "Saturnova",
  "Saudkova",
  "Sauerova",
  "Saveljevova",
  "Savojská",
  "Sazečská",
  "Sazečská",
  "Sazovická",
  "Sbíhavá I",
  "Sbíhavá Ii",
  "Schnirchova",
  "Schodišťová",
  "Schodová",
  "Schoellerova",
  "Schoellerova",
  "Schulhoffova",
  "Schwaigerova",
  "Schwarzenberská",
  "Schöfflerova",
  "Sdružení",
  "Sechterova",
  "Sedlecká",
  "Sedlovická",
  "Sedloňovská",
  "Sedlčanská",
  "Sedmidomky",
  "Sedmidomky",
  "Sedmikrásková",
  "Sedmnáctého Listopadu",
  "Seidlova",
  "Seifertova",
  "Sekaninova",
  "Sekeřická",
  "Sekorova",
  "Selmická",
  "Selská",
  "Selských Baterií",
  "Semanského",
  "Semická",
  "Semilská",
  "Semilská",
  "Seminární",
  "Seminářská",
  "Seminářská Zahrada",
  "Semonická",
  "Semtínská",
  "Semčická",
  "Sendražická",
  "Senegalská",
  "Senohrabská",
  "Senovážná",
  "Senovážné Nám.",
  "Senovážné Náměstí",
  "Senožatská",
  "Sestupná",
  "Sestupná",
  "Setbová",
  "Sevastopolská",
  "Severní I",
  "Severní Ii",
  "Severní Iii",
  "Severní Iv",
  "Severní Ix",
  "Severní V",
  "Severní Vi",
  "Severní Vii",
  "Severní Viii",
  "Severní X",
  "Severní Xi",
  "Severovýchodní I",
  "Severovýchodní Ii",
  "Severovýchodní Iii",
  "Severovýchodní Iv",
  "Severovýchodní V",
  "Severovýchodní Vi",
  "Severozápadní I",
  "Severozápadní Ii",
  "Severozápadní Iii",
  "Severozápadní Iv",
  "Severozápadní V",
  "Severozápadní Vi",
  "Severýnova",
  "Sevřená",
  "Seydlerova",
  "Sezemická",
  "Sezemínská",
  "Sezimova",
  "Sečská",
  "Sibeliova",
  "Sibiřské Nám.",
  "Sibiřské Náměstí",
  "Sicherova",
  "Sichrovského",
  "Siemensova",
  "Silurská",
  "Sinkulova",
  "Sinkulova",
  "Sitteho",
  "Siwiecova",
  "Skalecká",
  "Skalnatá",
  "Skalnická",
  "Skalní",
  "Skalská",
  "Skaláků",
  "Skandinávská",
  "Skandinávská",
  "Skautská",
  "Sklenská",
  "Skloněná",
  "Sklářská",
  "Skokanská",
  "Skorkovská",
  "Skorkovská",
  "Skotská",
  "Skořepka",
  "Skořicová",
  "Skryjská",
  "Skupova",
  "Skuteckého",
  "Skálova",
  "Skřivanova",
  "Skřivanská",
  "Skřivánčí",
  "Sladkovského Nám.",
  "Sladkovského Náměstí",
  "Sladovnická",
  "Slancova",
  "Slaná",
  "Slapská",
  "Slatinová",
  "Slatinská",
  "Slatiny",
  "Slatiňanská",
  "Slavatova",
  "Slaviborské Nám.",
  "Slaviborské Náměstí",
  "Slavická",
  "Slavičí",
  "Slavičínská",
  "Slavníkova",
  "Slavojova",
  "Slavonická",
  "Slavíkova",
  "Slavíkova",
  "Slavíkova",
  "Slavínského",
  "Slavíčkova",
  "Slavětínská",
  "Slepá I",
  "Slepá Ii",
  "Slezanů",
  "Slezská",
  "Slezská",
  "Sliačská",
  "Sliačská",
  "Slibná",
  "Slinková",
  "Slivenecká",
  "Slovanský Ostrov",
  "Slovačíkova",
  "Slovenská",
  "Slovenská",
  "Slovinská",
  "Slunečnicová",
  "Slunečná",
  "Sluneční",
  "Sluneční Nám.",
  "Sluneční Náměstí",
  "Slunná",
  "Sluštická",
  "Služeb",
  "Služeb",
  "Služská",
  "Sládkova",
  "Sládkovičova",
  "Slámova",
  "Slánská",
  "Slávy Horníka",
  "Slévačská",
  "Slévačská",
  "Slévačská",
  "Slídová",
  "Slívová",
  "Smaragdová",
  "Smetanovo Nábř.",
  "Smetanovo Nábřeží",
  "Smetáčkova",
  "Smidarská",
  "Smikova",
  "Smiřická",
  "Smiřického",
  "Smolenská",
  "Smolkova",
  "Smolíkova",
  "Smotlachova",
  "Smotlachova",
  "Smrková",
  "Smrčinská",
  "Smržovská",
  "Smržová",
  "Smíchovská",
  "Smíchovská",
  "Smíchovská",
  "Smírná",
  "Snopkova",
  "Sněmovní",
  "Sněženková",
  "Sněžná",
  "Sobolákova",
  "Soborská",
  "Sobotecká",
  "Sobínská",
  "Soběslavova",
  "Soběslavská",
  "Sobětická",
  "Sobětušská",
  "Soběšínská",
  "Sochařská",
  "Socháňova",
  "Sodomkova",
  "Sofijské Nám.",
  "Sofijské Náměstí",
  "Sojkovská",
  "Sojovická",
  "Sojčí",
  "Sojčí",
  "Sokolovská",
  "Sokolovská",
  "Sokolovská",
  "Sokolovská",
  "Sokolská",
  "Sokratova",
  "Solidarity",
  "Solnická",
  "Solná",
  "Sopotská",
  "Sosnovecká",
  "Souběžná I",
  "Souběžná Ii",
  "Souběžná Iii",
  "Souběžná Iv",
  "Soudní",
  "Soukalova",
  "Soukenická",
  "Soumarská",
  "Sousední",
  "Sousední",
  "Sousedská",
  "Sousedíkova",
  "Soustružnická",
  "Soustružnická",
  "Souvratní",
  "Součkova",
  "Sovenická",
  "Sovova",
  "Sovákova",
  "Soví Vršek",
  "Spinozova",
  "Spiritka",
  "Splavná",
  "Spodní",
  "Spojařů",
  "Spojenců",
  "Spojená",
  "Spojná",
  "Spojovací",
  "Spojovací",
  "Spojovací",
  "Spojovací",
  "Spojová",
  "Společná",
  "Spolská",
  "Spolupráce",
  "Sportovců",
  "Sportovců",
  "Sportovní",
  "Spotřebitelská",
  "Spořická",
  "Spořilovská",
  "Spytihněvova",
  "Spádná",
  "Spádová",
  "Spálená",
  "Spálená",
  "Spálený Mlýn",
  "Srbova",
  "Srbská",
  "Srbínská",
  "Srnečkova",
  "Srnčí",
  "Srnčí",
  "Srpnová",
  "Srázná",
  "Stachova",
  "Stadická",
  "Stadionová",
  "Stadiónová",
  "Stallichova",
  "Stamicova",
  "Staniční",
  "Starobylá",
  "Starochodovská",
  "Starochuchelská",
  "Starodejvická",
  "Starodubečská",
  "Starodvorská",
  "Staroklánovická",
  "Starokolínská",
  "Starokošířská",
  "Starolázeňská",
  "Staromlýnská",
  "Staromodřanská",
  "Staroměstské Nám.",
  "Staroměstské Náměstí",
  "Staropacká",
  "Staropramenná",
  "Starostrašnická",
  "Starostřešovická",
  "Starosuchdolská",
  "Staroújezdská",
  "Staročeská",
  "Stará Cesta",
  "Stará Náves",
  "Stará Obec",
  "Stará Spojovací",
  "Stará Stodůlecká",
  "Staré Nám.",
  "Staré Náměstí",
  "Staré Zámecké Schody",
  "Staré Zámecké Schody",
  "Starého",
  "Starý Lis",
  "Statenická",
  "Statková",
  "Stavbařů",
  "Stavební",
  "Stavitelská",
  "Stavovská",
  "Staňkova",
  "Staňkovka",
  "Staňkovská",
  "Stehlíkova",
  "Steinerova",
  "Stejskalova",
  "Stiessova",
  "Stinkovská",
  "Stochovská",
  "Stodůlecká",
  "Stojická",
  "Stoličkova",
  "Stoliňská",
  "Stoupající",
  "Stoupající",
  "Stradonická",
  "Strahovská",
  "Strahovské Nádvoří",
  "Strakatého",
  "Strakonická",
  "Strakonická",
  "Strakonická",
  "Strakonická",
  "Strakonická",
  "Strakonická",
  "Strakošová",
  "Strančická",
  "Stratovská",
  "Strašnická",
  "Strašnická",
  "Strašovská",
  "Strašínská",
  "Strmá",
  "Strmý Vrch",
  "Strnadova",
  "Strnady",
  "Strojická",
  "Strojnická",
  "Strojírenská",
  "Stromovka",
  "Stromovka",
  "Stropnická",
  "Stropnická",
  "Stropnická",
  "Strossmayerovo Nám.",
  "Strossmayerovo Náměstí",
  "Strouhalova",
  "Stroupežnického",
  "Struhařovská",
  "Strunkovská",
  "Stružky",
  "Stružná",
  "Strážkovická",
  "Strážnická",
  "Strážní",
  "Strážovská",
  "Stržná",
  "Studenecká",
  "Studentská",
  "Studená",
  "Studnická",
  "Studničkova",
  "Studniční",
  "Studánková",
  "Stulíková",
  "Stupická",
  "Stupkova",
  "Stupská",
  "Stupňová",
  "Stádlecká",
  "Stárkova",
  "Stýblova",
  "Střední",
  "Středohorská",
  "Středová",
  "Střekovská",
  "Střelecký Ostrov",
  "Střelečská",
  "Střelničná",
  "Střelničná",
  "Střemchová",
  "Střešovická",
  "Střešovická",
  "Střimelická",
  "Stříbrná",
  "Stříbrského",
  "Stříbrského",
  "Střížkovská",
  "Střížkovská",
  "Střížkovská",
  "Suchardova",
  "Suchdolská",
  "Suchdolská",
  "Suchdolská",
  "Suchdolské Nám.",
  "Suchdolské Náměstí",
  "Suchý Vršek",
  "Sudkova",
  "Sudoměřská",
  "Sudějovická",
  "Sukova",
  "Sulanského",
  "Sulická",
  "Sulická",
  "Sulova",
  "Sulovická",
  "Sumova",
  "Suppého",
  "Suttnerové",
  "Sušická",
  "Sušilova",
  "Svahová",
  "Svatavina",
  "Svatojánská",
  "Svatoplukova",
  "Svatoslavova",
  "Svatovítská",
  "Svatovítská",
  "Svatoňovická",
  "Svažitá",
  "Svijanská",
  "Svitavská",
  "Svitákova",
  "Svobodova",
  "Svobodova",
  "Svojetická",
  "Svojsíkova",
  "Svojšická",
  "Svojšovická",
  "Svornosti",
  "Svratecká",
  "Svárovská",
  "Svátkova",
  "Svážná",
  "Svépomoci",
  "Svépomocná",
  "Svépravická",
  "Svépravická",
  "Svídnická",
  "Svěceného",
  "Světická",
  "Světova",
  "Světská",
  "Sychrovská",
  "Symfonická",
  "Synkovická",
  "Synkovská",
  "Syrská",
  "Sádky",
  "Sádovská",
  "Sámova",
  "Sárská",
  "Sárská",
  "Sárská",
  "Sázavská",
  "Sáňkařská",
  "Sídlištní",
  "Sídlištní",
  "Sídliště",
  "Súdánská",
  "Sýkorčí",
  "Sýkovecká",
  "Tachlovická",
  "Tachovská",
  "Tachovské Nám.",
  "Tachovské Náměstí",
  "Tadrova",
  "Tajovského",
  "Talafúsova",
  "Talichova",
  "Talmberská",
  "Tanvaldská",
  "Tasovská",
  "Tatarkova",
  "Tatranská",
  "Tauerova",
  "Tauferova",
  "Taussigova",
  "Tavolníková",
  "Tařicová",
  "Taškentská",
  "Technická",
  "Technologická",
  "Tehovská",
  "Tejnická",
  "Tejnka",
  "Telčská",
  "Templová",
  "Tenisová",
  "Teplická",
  "Teplárenská",
  "Teplárenská",
  "Terasovitá",
  "Tererova",
  "Terezínská",
  "Terronská",
  "Tesaříkova",
  "Tetínská",
  "Theinova",
  "Thomayerova",
  "Thunovská",
  "Thurnova",
  "Thákurova",
  "Thámova",
  "Tibetská",
  "Tichnova",
  "Tichnova",
  "Tichonická",
  "Tichá",
  "Tichého",
  "Tigridova",
  "Tikovská",
  "Tilleho Nám.",
  "Tilleho Náměstí",
  "Tilschové",
  "Tiskařská",
  "Tismická",
  "Tišická",
  "Tlumačovská",
  "Tlustého",
  "Tobrucká",
  "Tolstého",
  "Tomanova",
  "Tomická",
  "Tomkova",
  "Tomsova",
  "Tomáškova",
  "Tomášská",
  "Tomíčkova",
  "Topasová",
  "Topolová",
  "Toruňská",
  "Toulovská",
  "Toušeňská",
  "Toušická",
  "Toužimská",
  "Toužimská",
  "Tovarova",
  "Tovačovského",
  "Tovární",
  "Točenská",
  "Točitá",
  "Trabantská",
  "Trachtova",
  "Trampotova",
  "Travnatá",
  "Travná",
  "Travná",
  "Trenčínská",
  "Trhanovské Náměstí",
  "Trmická",
  "Trnavská",
  "Trnavská",
  "Trnitá",
  "Trnkovo Nám.",
  "Trnkovo Náměstí",
  "Trnková",
  "Trnovanská",
  "Trní",
  "Trocnovská",
  "Troilova",
  "Trojanova",
  "Trojanův Mlýn",
  "Trojdílná",
  "Trojická",
  "Trojmezní",
  "Trojmezní",
  "Trojská",
  "Trojská",
  "Trojská",
  "Trojská",
  "Troskovická",
  "Trousilova",
  "Truhlářka",
  "Truhlářova",
  "Truhlářská",
  "Trutnovská",
  "Tryskovická",
  "Tryskovická",
  "Trytova",
  "Trávnická",
  "Trávníčkova",
  "Tréglova",
  "Tržiště",
  "Tuchoměřická",
  "Tuchorazská",
  "Tuchotická",
  "Tuháňská",
  "Tuklatská",
  "Tulešická",
  "Tulipánová",
  "Tulkova",
  "Tulská",
  "Tunelářů",
  "Tuniská",
  "Tupolevova",
  "Turgeněvova",
  "Turistická",
  "Turkmenská",
  "Turkovická",
  "Turkovská",
  "Turnovská",
  "Turnovského",
  "Turská",
  "Turínská",
  "Tusarova",
  "Tuřická",
  "Tušimická",
  "Tužebníková",
  "Tvrdonická",
  "Tvrdého",
  "Tychonova",
  "Tylišovská",
  "Tylovická",
  "Tylovo Nám.",
  "Tylovo Náměstí",
  "Tymiánová",
  "Tyrkysová",
  "Tyršova",
  "Táboritská",
  "Táborská",
  "Tádžická",
  "Táhlá",
  "Tálínská",
  "Türkova",
  "Týmlova",
  "Týmlova",
  "Týn",
  "Týnecká",
  "Týnská",
  "Týnská Ulička",
  "Týřovická",
  "Tělovýchovná",
  "Těšnov",
  "Těšovická",
  "Těšíkova",
  "Těšínská",
  "Třanovského",
  "Třebanická",
  "Třebechovická",
  "Třebenická",
  "Třebešovská",
  "Třebihošťská",
  "Třebohostická",
  "Třebonická",
  "Třeboradická",
  "Třebotovská",
  "Třeboňská",
  "Třebízského",
  "Třebějická",
  "Třebětínská",
  "Třešňová",
  "Třešňová",
  "Třešňová",
  "Třinecká",
  "Třtinová",
  "Třídomá",
  "Třístoličná",
  "Tůmova",
  "U Akademie",
  "U Akátů",
  "U Albrechtova Vrchu",
  "U Andělky",
  "U Arborky",
  "U Bakaláře",
  "U Balabenky",
  "U Bazénu",
  "U Bažantnice",
  "U Berounky",
  "U Beránky",
  "U Besedy",
  "U Blaženky",
  "U Boroviček",
  "U Botiče",
  "U Botiče",
  "U Božích Bojovníků",
  "U Branek",
  "U Bruských Kasáren",
  "U Brusnice",
  "U Brusnice",
  "U Bubce",
  "U Bulhara",
  "U Bulhara",
  "U Bílého Mlýnku",
  "U Břehu",
  "U Chaloupek",
  "U Chmelnice",
  "U Chodovského Hřbitova",
  "U Cibulky",
  "U Cihelny",
  "U Cikánky",
  "U Cukrovaru",
  "U Císařské Cesty",
  "U Dejvického Rybníčku",
  "U Demartinky",
  "U Divadla",
  "U Divadla",
  "U Dobešky",
  "U Dobráků",
  "U Dobráků",
  "U Dobřenských",
  "U Domu Služeb",
  "U Drahaně",
  "U Druhé Baterie",
  "U Druhé Baterie",
  "U Drupolu",
  "U Družstev",
  "U Družstva Ideál",
  "U Družstva Klid",
  "U Družstva Práce",
  "U Družstva Práce",
  "U Družstva Repo",
  "U Družstva Tempo",
  "U Družstva Život",
  "U Dráhy",
  "U Dráhy",
  "U Drážky",
  "U Drůbežárny",
  "U Dubečské Tvrze",
  "U Dubu",
  "U Dvojdomů",
  "U Dvora",
  "U Dvou Srpů",
  "U Dálnice",
  "U Dívčích Hradů",
  "U Dívčích Hradů",
  "U Děkanky",
  "U Dělnického Cvičiště",
  "U Dětského Domova",
  "U Dětského Hřiště",
  "U Elektry",
  "U Elektry",
  "U Elektrárny",
  "U Floriána",
  "U Fořta",
  "U Gabrielky",
  "U Garáží",
  "U Golfu",
  "U Gymnázia",
  "U Habeše",
  "U Habrovky",
  "U Hadovky",
  "U Harfy",
  "U Hasičské Zbrojnice",
  "U Hasičské Zbrojnice",
  "U Havlíčkových Sadů",
  "U Hellady",
  "U Hercovky",
  "U Hliníku",
  "U Hodin",
  "U Homolky",
  "U Hostavického Potoka",
  "U Hostivařského Nádraží",
  "U Hostivařského Nádraží",
  "U Hotelu",
  "U Hranic",
  "U Hrnčířského Rybníka",
  "U Hrocha",
  "U Hrušky",
  "U Hráze",
  "U Hudební Školy",
  "U Hvozdu",
  "U Hvězdy",
  "U Hvězdy",
  "U Háje",
  "U Hájku",
  "U Hájovny",
  "U Házů",
  "U Hřbitovů",
  "U Hřiště",
  "U Invalidovny",
  "U Jamské",
  "U Jankovky",
  "U Javoru",
  "U Jedličkova Ústavu",
  "U Jednoty",
  "U Jeslí",
  "U Jezera",
  "U Jezerky",
  "U Jezu",
  "U Jezírka",
  "U Jinonického Rybníčka",
  "U Jirkovské",
  "U Jizby",
  "U Járku",
  "U Jízdárny",
  "U Kabelovny",
  "U Kabelovny",
  "U Kaménky",
  "U Kamýku",
  "U Kanálky",
  "U Kapliček",
  "U Kapličky",
  "U Karlova Stánku",
  "U Kasáren",
  "U Kavalírky",
  "U Kazína",
  "U Kašny",
  "U Kaštanu",
  "U Kempinku",
  "U Kina",
  "U Klavírky",
  "U Klikovky",
  "U Klimentky",
  "U Kloubových Domů",
  "U Klubovny",
  "U Klubu",
  "U Kněžské Louky",
  "U Kola",
  "U Kolejí",
  "U Kolejí",
  "U Koloděj",
  "U Kolonie",
  "U Koloniálu",
  "U Kombinátu",
  "U Konečné",
  "U Koní",
  "U Kosinů",
  "U Kostela",
  "U Kostrounku",
  "U Kotlářky",
  "U Koupadel",
  "U Košíku",
  "U Krbu",
  "U Krbu",
  "U Krelovy Studánky",
  "U Kruhovky",
  "U Královské Louky",
  "U Krčské Vodárny",
  "U Krčského Nádraží",
  "U Kublova",
  "U Kunratického Lesa",
  "U Křižovatky",
  "U Kříže",
  "U Kříže",
  "U Křížku",
  "U Laboratoře",
  "U Ladronky",
  "U Lanové Dráhy",
  "U Ledáren",
  "U Lesa",
  "U Lesa",
  "U Lesíka",
  "U Letenského Sadu",
  "U Letiště",
  "U Letohrádku Královny Anny",
  "U Libeňského Pivovaru",
  "U Libeňského Zámku",
  "U Libušiných Lázní",
  "U Libušské Sokolovny",
  "U Lidového Domu",
  "U Lip",
  "U Lipové Aleje",
  "U Lisu",
  "U Loděnice",
  "U Lomu",
  "U Loskotů",
  "U Louky",
  "U Lužického Semináře",
  "U Lázeňky",
  "U Lázní",
  "U Lékárny",
  "U Líhní",
  "U Lípy",
  "U Malvazinky",
  "U Malé Řeky",
  "U Markéty",
  "U Mateřské Školy",
  "U Matěje",
  "U Maří Magdaleny",
  "U Meteoru",
  "U Mezníku",
  "U Michelské Školy",
  "U Michelského Lesa",
  "U Michelského Lesa",
  "U Michelského Mlýna",
  "U Milosrdných",
  "U Mlýna",
  "U Mlýna",
  "U Mlýnského Rybníka",
  "U Modré Školy",
  "U Modřanské Školy",
  "U Močálu",
  "U Mrázovky",
  "U Mydlárny",
  "U Myslivny",
  "U Městských Domů",
  "U Měšťanského Pivovaru",
  "U Měšťanských Škol",
  "U Nadýmače",
  "U Nemocenské Pojišťovny",
  "U Nemocnice",
  "U Nesypky",
  "U Nikolajky",
  "U Nové Dálnice",
  "U Nové Louky",
  "U Nové Školy",
  "U Nového Dvora",
  "U Nového Suchdola",
  "U Nového Suchdola",
  "U Nových Domů I",
  "U Nových Domů Ii",
  "U Nových Domů Iii",
  "U Nových Vil",
  "U Nádražní Lávky",
  "U Nádraží",
  "U Nádrže",
  "U Náhonu",
  "U Náhonu",
  "U Nákladového Nádraží",
  "U Nákladového Nádraží",
  "U Národní Galerie",
  "U Nás",
  "U Obce",
  "U Obecního Domu",
  "U Obecního Dvora",
  "U Obory",
  "U Okrouhlíku",
  "U Olšiček",
  "U Opatrovny",
  "U Ovčína",
  "U Palaty",
  "U Paliárky",
  "U Paloučku",
  "U Památníku",
  "U Panské Zahrady",
  "U Papírny",
  "U Parku",
  "U Parkánu",
  "U Parního Mlýna",
  "U Pastoušky",
  "U Pavilónu",
  "U Pazderek",
  "U Pejřárny",
  "U Pekařky",
  "U Pekáren",
  "U Pentlovky",
  "U Pergamenky",
  "U Pernikářky",
  "U Pernštejnských",
  "U Petřin",
  "U Pily",
  "U Plovárny",
  "U Plynárny",
  "U Plynárny",
  "U Plátenice",
  "U Podchodu",
  "U Podjezdu",
  "U Podolského Hřbitova",
  "U Podolského Sanatoria",
  "U Pohádky",
  "U Polikliniky",
  "U Pomníku",
  "U Potoka",
  "U Poustek",
  "U Poštovky",
  "U Pošty",
  "U Pramene",
  "U Prašné Brány",
  "U Prašného Mostu",
  "U Prašného Mostu",
  "U Pražských Lomů",
  "U Prefy",
  "U Prioru",
  "U Prknovky",
  "U Prodejny",
  "U Propusti",
  "U Prosecké Školy",
  "U Proseckého Kostela",
  "U První Baterie",
  "U První Baterie",
  "U Prádelny",
  "U Průhonu",
  "U Průseku",
  "U Pumpy",
  "U Párníků",
  "U Páté Baterie",
  "U Páté Baterie",
  "U Písecké Brány",
  "U Pískovny",
  "U Přechodu",
  "U Přehrady",
  "U Přejezdu",
  "U Půjčovny",
  "U Radiály",
  "U Radnice",
  "U Rajské Zahrady",
  "U Rakovky",
  "U Roháčových Kasáren",
  "U Rokytky",
  "U Rokytky",
  "U Rokytky",
  "U Rozkoše",
  "U Roztockého Háje",
  "U Rybníka",
  "U Rybníčka",
  "U Rybářství",
  "U Rychty",
  "U Rychty",
  "U Ryšánky",
  "U Ryšánky",
  "U Sadu",
  "U Sanatoria",
  "U Sanopzu",
  "U Santošky",
  "U Schodů",
  "U Sedlecké Školy",
  "U Seřadiště",
  "U Sila",
  "U Silnice",
  "U Silnice",
  "U Skalky",
  "U Skladu",
  "U Skládky",
  "U Skopců",
  "U Skály",
  "U Sladovny",
  "U Slavie",
  "U Sloupu",
  "U Slovanky",
  "U Slovanské Pojišťovny",
  "U Sluncové",
  "U Slévárny",
  "U Smaltovny",
  "U Smetanky",
  "U Smolnic",
  "U Smíchovského Hřbitova",
  "U Sokolovny",
  "U Soutoku",
  "U Sovových Mlýnů",
  "U Sparty",
  "U Splavu",
  "U Spojky",
  "U Spojů",
  "U Společenské Zahrady",
  "U Sportoviště",
  "U Spořitelny",
  "U Stanice",
  "U Staré Cihelny",
  "U Staré Plynárny",
  "U Staré Pošty",
  "U Staré Skládky",
  "U Staré Sokolovny",
  "U Staré Studánky",
  "U Staré Tvrze",
  "U Staré Školy",
  "U Staré Školy",
  "U Starého Hřbitova",
  "U Starého Hřiště",
  "U Starého Mlýna",
  "U Starého Nádraží",
  "U Starého Splavu",
  "U Starého Stadionu",
  "U Starého Stadiónu",
  "U Starého Židovského Hřbitova",
  "U Starého Židovského Hřbitova",
  "U Statku",
  "U Stavoservisu",
  "U Stojanu",
  "U Strouhy",
  "U Strže",
  "U Studny",
  "U Studánky",
  "U Studánky",
  "U Stárovny",
  "U Státní Dráhy",
  "U Státní Dráhy",
  "U Stírky",
  "U Střediska",
  "U Střešovických Hřišť",
  "U Sušičky",
  "U Svahu",
  "U Svatého Ducha",
  "U Svobodárny",
  "U Svodnice",
  "U Svornosti",
  "U Svépomoci",
  "U Světličky",
  "U Synagogy",
  "U Sádek",
  "U Sídliště",
  "U Tabulky",
  "U Technoplynu",
  "U Tenisu",
  "U Teplárny",
  "U Topíren",
  "U Továren",
  "U Transformační Stanice",
  "U Transformátoru",
  "U Trati",
  "U Trativodu",
  "U Trezorky",
  "U Trojice",
  "U Trojského Zámku",
  "U Trpce",
  "U Tržnice",
  "U Tvrze",
  "U Tyrše",
  "U Tyršovky",
  "U Tyršovy Školy",
  "U Třetí Baterie",
  "U Třešňovky",
  "U Třešňového Sadu",
  "U Tůně",
  "U Uhříněveské Obory",
  "U Uranie",
  "U Učiliště",
  "U Valu",
  "U Velké Skály",
  "U Vesny",
  "U Viktorky",
  "U Vinice",
  "U Viniček",
  "U Vinné Révy",
  "U Vinných Sklepů",
  "U Vinohradské Nemocnice",
  "U Vinohradského Hřbitova",
  "U Vinohradského Hřbitova",
  "U Vizerky",
  "U Višňovky",
  "U Višňovky",
  "U Vlachovky",
  "U Vlasačky",
  "U Vlečky",
  "U Vlečky",
  "U Vltavy",
  "U Voborníků",
  "U Vodice",
  "U Vodojemu",
  "U Vodojemu",
  "U Vodotoku",
  "U Vody",
  "U Vodárny",
  "U Vojanky",
  "U Vojenské Nemocnice",
  "U Vojtěšky",
  "U Vokovické Školy",
  "U Vorlíků",
  "U Vozovny",
  "U Vrbiček",
  "U Vrby",
  "U Vrtilky",
  "U Vršovického Hřbitova",
  "U Vršovického Hřbitova",
  "U Vršovického Nádraží",
  "U Vysočanského Cukrovaru",
  "U Vysočanského Pivovaru",
  "U Václava",
  "U Váhy",
  "U Vápenice",
  "U Vápenky",
  "U Vápenné Skály",
  "U Výkupního Střediska",
  "U Výstavby",
  "U Výstaviště",
  "U Výstaviště",
  "U Výzkumu",
  "U Včely",
  "U Větrníku",
  "U Větrolamu",
  "U Větrolamu",
  "U Věže",
  "U Waltrovky",
  "U Zahradnictví",
  "U Zahradního Města",
  "U Zahrady",
  "U Zahrádek",
  "U Zahrádkářské Kolonie",
  "U Zastávky",
  "U Zbrojnice",
  "U Zdravotního Ústavu",
  "U Zeleného Ptáka",
  "U Zemníku",
  "U Zeměpisného Ústavu",
  "U Zlaté Studně",
  "U Zličína",
  "U Zličína",
  "U Zličínského Hřiště",
  "U Zvonařky",
  "U Zvoničky",
  "U Záběhlického Zámku",
  "U Zájezdku",
  "U Zákrutu",
  "U Zámeckého Parku",
  "U Zámečku",
  "U Zámečnice",
  "U Zásobní Zahrady",
  "U Zátiší",
  "U Závodiště",
  "U Závor",
  "U Úlů",
  "U Čekárny",
  "U Černé Rokle",
  "U Červeného Mlýnku",
  "U Červeného Mlýnku",
  "U Českých Loděnic",
  "U Čihadel",
  "U Čističky",
  "U Čokoládoven",
  "U Čtvrté Baterie",
  "U Čtyř Domů",
  "U Řempa",
  "U Říčanky",
  "U Šalamounky",
  "U Šalamounky",
  "U Šesté Baterie",
  "U Šesté Baterie",
  "U Školičky",
  "U Školky",
  "U Školního Pole",
  "U Školské Zahrady",
  "U Školy",
  "U Štěpu",
  "U Šumavy",
  "U Šumavěnky",
  "U Šálkovny",
  "U Šíchů",
  "U Šípků",
  "U Železnice",
  "U Železničního Mostu",
  "U Železné Lávky",
  "U Želivky",
  "U Židovského Hřbitova",
  "U Žlábku",
  "U Županských",
  "Uhelný Trh",
  "Uherská",
  "Uhříněveská",
  "Ukončená",
  "Ukrajinská",
  "Uljanovská",
  "Ulrychova",
  "Ulčova",
  "Umělecká",
  "Ungarova",
  "Unhošťská",
  "Univerzitní",
  "Upolínová",
  "Upravená",
  "Uralská",
  "Urbanická",
  "Urbanova",
  "Urbánkova",
  "Urešova",
  "Uruguayská",
  "Urxova",
  "Utěšilova",
  "Uzavřená",
  "Uzbecká",
  "Uzoučká",
  "Učitelská",
  "Učňovská",
  "Užocká",
  "V Aleji",
  "V Alejích",
  "V Americe",
  "V Babyku",
  "V Bambouskách",
  "V Bažinách",
  "V Benátkách",
  "V Bezpečí",
  "V Bokách I",
  "V Bokách Ii",
  "V Bokách Iii",
  "V Borovičkách",
  "V Botanice",
  "V Brance",
  "V Brůdku",
  "V Brůdku",
  "V Bytovkách",
  "V Bílce",
  "V Březinkách",
  "V Březině",
  "V Březí",
  "V Břízkách",
  "V Celnici",
  "V Cestičkách",
  "V Cestkách",
  "V Chaloupkách",
  "V Chaloupkách",
  "V Chatách",
  "V Chotejně",
  "V Cibulkách",
  "V Cihelně",
  "V Cípu",
  "V Dolinách",
  "V Dolině",
  "V Dolině",
  "V Dolích",
  "V Domcích",
  "V Domově",
  "V Doubcích",
  "V Dílcích",
  "V Edenu",
  "V Haltýři",
  "V Hliništi",
  "V Hluboké",
  "V Hodkovičkách",
  "V Holešovičkách",
  "V Honu",
  "V Horkách",
  "V Horní Stromce",
  "V Hrobech",
  "V Humenci",
  "V Humenci",
  "V Humnech",
  "V Háji",
  "V Hájkách",
  "V Hájích",
  "V Hůrkách",
  "V Jahodách",
  "V Javorech",
  "V Javoříčku",
  "V Jehličině",
  "V Jehličí",
  "V Jezerách",
  "V Jezevčinách",
  "V Jezírkách",
  "V Jirchářích",
  "V Jámě",
  "V Kališti",
  "V Kališti",
  "V Kapslovně",
  "V Klukovicích",
  "V Kole",
  "V Kolkovně",
  "V Korytech",
  "V Korytech",
  "V Kotcích",
  "V Koutku",
  "V Koutě",
  "V Kratinách",
  "V Kruhu",
  "V Kuťatech",
  "V Kálku",
  "V Křepelkách",
  "V Křovinách",
  "V Křížkách",
  "V Ladech",
  "V Lesíčku",
  "V Lipinách",
  "V Lipinách",
  "V Lipkách",
  "V Lipách",
  "V Listnáčích",
  "V Lomech",
  "V Louce",
  "V Luhu",
  "V Lukách",
  "V Lučinách",
  "V Lužích",
  "V Lánech",
  "V Lázních",
  "V Lískách",
  "V Malých Domech I",
  "V Malých Domech Ii",
  "V Malých Domech Iii",
  "V Mezihoří",
  "V Milíři",
  "V Mokřinách",
  "V Mydlinkách",
  "V Nové Hostivaři",
  "V Nové Vsi",
  "V Nové Vsi",
  "V Nové Čtvrti",
  "V Novém Hloubětíně",
  "V Novém Hloubětíně",
  "V Nových Bohnicích",
  "V Nových Domcích",
  "V Nových Vokovicích",
  "V Náklích",
  "V Násypu",
  "V Nížinách",
  "V Oblouku",
  "V Občanském Domově",
  "V Obůrkách",
  "V Ochozu",
  "V Ohradě",
  "V Ohybu",
  "V Okruží",
  "V Okálech",
  "V Olšinách",
  "V Olšinách",
  "V Olšině",
  "V Ondřejově",
  "V Opatově",
  "V Osikách",
  "V Ostružiní",
  "V Oudolku",
  "V Ořeší",
  "V Pachmance",
  "V Padolině",
  "V Parcelách",
  "V Parku",
  "V Parníku",
  "V Pačátkách",
  "V Pařezinách",
  "V Pevnosti",
  "V Pevnosti",
  "V Pitkovičkách",
  "V Planinách",
  "V Platýzu",
  "V Pláni",
  "V Podbabě",
  "V Podhoří",
  "V Podhájí",
  "V Podhájí",
  "V Podluží",
  "V Podskalí",
  "V Podvrší",
  "V Podzámčí",
  "V Poli",
  "V Polích",
  "V Potokách",
  "V Potočinách",
  "V Potočkách",
  "V Prutinách",
  "V Průhledu",
  "V Průčelí",
  "V Pátém",
  "V Pískovně",
  "V Pěšinkách",
  "V Předním Hloubětíně",
  "V Předním Veleslavíně",
  "V Předpolí",
  "V Předpolí",
  "V Přelomu",
  "V Přístavu",
  "V Remízku",
  "V Rohožníku",
  "V Rohu",
  "V Roháčích",
  "V Rokli",
  "V Roklích",
  "V Rovinách",
  "V Rovinách",
  "V Rybníkách",
  "V Rybníčkách",
  "V Ráji",
  "V Ráji",
  "V Rákosí",
  "V Sadech",
  "V Sedlci",
  "V Sedlci",
  "V Slavětíně",
  "V Soudním",
  "V Stráni",
  "V Středu",
  "V Sudech",
  "V Sídlišti",
  "V Tehovičkách",
  "V Tišině",
  "V Trninách",
  "V Třešňovce",
  "V Tůních",
  "V Uličce",
  "V Uličkách",
  "V Zahradní Čtvrti",
  "V Zahradách",
  "V Zahrádkách",
  "V Zatáčce",
  "V Zeleni",
  "V Zeleném Údolí",
  "V Záhorském",
  "V Záhybu",
  "V Zákopech",
  "V Zákoutí",
  "V Zálesí",
  "V Zálomu",
  "V Zámcích",
  "V Zápolí",
  "V Zátiší",
  "V Zátočce",
  "V Závitu",
  "V Závětří",
  "V Zářezu",
  "V Údolí",
  "V Údolí Hvězd",
  "V Úhlu",
  "V Úhoru",
  "V Úvalu",
  "V Úvoze",
  "V Úzké",
  "V Úžlabině",
  "V Úžlabině",
  "V Čeňku",
  "V Štíhlách",
  "V Šáreckém Údolí",
  "V Žabokřiku",
  "V Žáčku",
  "V. P. Čkalova",
  "V. P. Čkalova",
  "Vachkova",
  "Vackova",
  "Vacovská",
  "Vacínova",
  "Vacínovská",
  "Vajdova",
  "Vajgarská",
  "Valcířská",
  "Valdická",
  "Valdovská",
  "Valdštejnská",
  "Valdštejnské Nám.",
  "Valdštejnské Náměstí",
  "Valentinská",
  "Valentinská",
  "Valentova",
  "Valečovská",
  "Valská",
  "Valtická",
  "Valtínovská",
  "Valčíkova",
  "Valšovská",
  "Vamberská",
  "Vanická",
  "Vaníčkova",
  "Vaníčkova",
  "Varhulíkové",
  "Varnsdorfská",
  "Varšavská",
  "Vavákova",
  "Vavřenova",
  "Vavřinecká",
  "Vazovova",
  "Vačkářova",
  "Vaňkova",
  "Vaňkova",
  "Vašátkova",
  "Ve Dvoře",
  "Ve Lhotce",
  "Ve Lhotce",
  "Ve Skalkách",
  "Ve Skalách",
  "Ve Skále",
  "Ve Slatinách",
  "Ve Smečkách",
  "Ve Smrčině",
  "Ve Stromořadí",
  "Ve Struhách",
  "Ve Struhách",
  "Ve Stráni",
  "Ve Studeném",
  "Ve Stínu",
  "Ve Střešovičkách",
  "Ve Střešovičkách",
  "Ve Svahu",
  "Ve Vilkách",
  "Ve Vilách",
  "Ve Višňovce",
  "Ve Vratech",
  "Ve Vrbách",
  "Ve Vrchu",
  "Ve Vrších",
  "Ve Výhledu",
  "Ve Výhledu",
  "Ve Výrech",
  "Ve Zliči",
  "Ve Štěpnici",
  "Ve Žlíbku",
  "Vedlejší",
  "Vehlovická",
  "Vejražkova",
  "Vejvanovského",
  "Vejvodova",
  "Velebného",
  "Velehradská",
  "Velemínská",
  "Velemínská",
  "Velenická",
  "Velenovského",
  "Veleslavínova",
  "Veleslavínská",
  "Veleslavínská",
  "Veletovská",
  "Veletržní",
  "Veletržní",
  "Veleňská",
  "Velešínská",
  "Velfloviců",
  "Velflíkova",
  "Velhartická",
  "Velichovská",
  "Velimská",
  "Velkoborská",
  "Velkoosecká",
  "Velkopřevorské Nám.",
  "Velkopřevorské Náměstí",
  "Velká Lada",
  "Velká Lada",
  "Velká Skála",
  "Velké Kunratické",
  "Veltruská",
  "Veltěžská",
  "Velvarská",
  "Velínská",
  "Venušina",
  "Verdiho",
  "Verdunská",
  "Verneřická",
  "Verneřická",
  "Vernéřovská",
  "Veronské Nám.",
  "Veselská",
  "Veská",
  "Veslařský Ostrov",
  "Vestavěná",
  "Vestecká",
  "Veverkova",
  "Večerní",
  "Vidimova",
  "Vidimská",
  "Vidlicová",
  "Vidlák",
  "Vidonická",
  "Vidoulská",
  "Vidovická",
  "Vietnamská",
  "Viklefova",
  "Vikova",
  "Viktora Huga",
  "Viktorinova",
  "Viktorčina",
  "Vikářská",
  "Vilová",
  "Vilímkova",
  "Vilímovská",
  "Vimperské Náměstí",
  "Vinařického",
  "Vinařská",
  "Viničná",
  "Vinohradská",
  "Vinohradská",
  "Vinohradská",
  "Vinohradská",
  "Vinohradská",
  "Vinohradská",
  "Vinohradská",
  "Vinohrady",
  "Vinopalnická",
  "Vinořská",
  "Vinořské Nám.",
  "Vinořské Náměstí",
  "Vinšova",
  "Violková",
  "Vitošská",
  "Vitíkova",
  "Vitějovská",
  "Vizovická",
  "Višňovka",
  "Višňovka",
  "Višňová",
  "Vlachova",
  "Vladimírova",
  "Vladislava Vančury",
  "Vladislavova",
  "Vladivostocká",
  "Vladycká",
  "Vlastibořská",
  "Vlastina",
  "Vlastina",
  "Vlastislavova",
  "Vlasty Buriana",
  "Vlasty Hilské",
  "Vlasty Průchové",
  "Vlasákova",
  "Vlašimská",
  "Vlašská",
  "Vlašská",
  "Vlaštovčí",
  "Vlkanovská",
  "Vlkova",
  "Vlkovická",
  "Vlnitá",
  "Vltavanů",
  "Vltavanů",
  "Vltavanů",
  "Vltavická",
  "Vltavská",
  "Vltavínová",
  "Vlárská",
  "Vlásenická",
  "Vlčická",
  "Vlčkova",
  "Vlčnovská",
  "Vnislavova",
  "Vnitřní",
  "Vnoučkova",
  "Vnější",
  "Voborského",
  "Vobrubova",
  "Vocelova",
  "Voctářova",
  "Voctářova",
  "Vodická",
  "Vodičkova",
  "Vodičkova",
  "Vodnická",
  "Vodní",
  "Vodochodská",
  "Vodojemská",
  "Vodácká",
  "Vodárenská",
  "Voděradská",
  "Vodňanská",
  "Vodňanského",
  "Vojenova",
  "Vojetická",
  "Vojická",
  "Vojkovická",
  "Vojslavická",
  "Vojtova",
  "Vojtíškova",
  "Vojtěšská",
  "Vojáčkova",
  "Vokovická",
  "Vokovická",
  "Vokrojova",
  "Vokáčova",
  "Vokřínská",
  "Volarská",
  "Volavkova",
  "Voleníkova",
  "Volkova",
  "Volkovova",
  "Voltova",
  "Volutová",
  "Volyňská",
  "Volšovská",
  "Volšovská",
  "Vondroušova",
  "Vorařská",
  "Voroněžská",
  "Voroněžská",
  "Voráčovská",
  "Voršilská",
  "Voskova",
  "Voskovcova",
  "Vosmíkových",
  "Vostrovská",
  "Vostrého",
  "Vosátkova",
  "Votavova",
  "Votická",
  "Votočkova",
  "Votrubova",
  "Votuzská",
  "Vozová",
  "Vozová",
  "Voňkova",
  "Voříškova",
  "Vošahlíkova",
  "Vožická",
  "Vrabčí",
  "Vranická",
  "Vranovská",
  "Vranská",
  "Vratimovská",
  "Vratislavova",
  "Vratislavská",
  "Vratičová",
  "Vraňanská",
  "Vrbenského",
  "Vrbická",
  "Vrbková",
  "Vrbova",
  "Vrbčanská",
  "Vrchlabská",
  "Vrchlického",
  "Vrchlického Sady",
  "Vrchovinská",
  "Vrátenská",
  "Vrátkovská",
  "Vrázova",
  "Vrážská",
  "Vrútecká",
  "Vršní",
  "Vršovická",
  "Vršovické Nám.",
  "Vršovické Náměstí",
  "Vršovka",
  "Vsetínská",
  "Vstavačová",
  "Vstupní",
  "Vybíralova",
  "Vycpálkova",
  "Vyderská",
  "Vydrova",
  "Vyhlídkova",
  "Vykoukových",
  "Vykáňská",
  "Vyskočilova",
  "Vysokovská",
  "Vysokoškolská",
  "Vysoká Cesta",
  "Vysočanská",
  "Vysočanská",
  "Vysočanská",
  "Vysočanské Nám.",
  "Vysočanské Náměstí",
  "Vyvýšená",
  "Vyšebrodská",
  "Vyšehradská",
  "Vyšší",
  "Vyžlovská",
  "Vzdušná",
  "Vzdálená",
  "Vzestupná",
  "Vzpoury",
  "Váchalova",
  "Václava Balého",
  "Václava Kovaříka",
  "Václava Rady",
  "Václava Trojana",
  "Václava Špačka",
  "Václavická",
  "Václavkova",
  "Václavská",
  "Václavské Nám.",
  "Václavské Náměstí",
  "Vágnerova",
  "Vánková",
  "Vápencová",
  "Vápenná",
  "Vápeníkova",
  "Vášova",
  "Vážská",
  "Vídeňská",
  "Vídeňská",
  "Vídeňská",
  "Vírská",
  "Víta Nejedlého",
  "Vítkova",
  "Vítkovická",
  "Vítovcova",
  "Vítovcova",
  "Vítězná",
  "Vítězná",
  "Vítězné Nám.",
  "Vítězné Nám.",
  "Vítězné Náměstí",
  "Vítězné Náměstí",
  "Východní",
  "Východní Nám.",
  "Východní Náměstí",
  "Výchozí",
  "Výhledová",
  "Výhledské Nám.",
  "Výhledské Náměstí",
  "Výjezdní",
  "Výjezdová",
  "Výletní",
  "Výletní",
  "Výmarova",
  "Výmolova",
  "Výpadová",
  "Výpadová",
  "Výravská",
  "Výrobní",
  "Výstaviště",
  "Výstavní",
  "Výstupní",
  "Výtoňská",
  "Výtvarnická",
  "Výtvarná",
  "Výzkumníků",
  "Včelařská",
  "Včelničná",
  "Věkova",
  "Věstonická",
  "Větrná",
  "Větrovcova",
  "Větrová",
  "Větrušická",
  "Vězeňská",
  "Vězeňská",
  "Věštínská",
  "Věšínova",
  "Věžická",
  "Vřesovická",
  "Vřesová",
  "Všehrdova",
  "Všejanská",
  "Všelipská",
  "Všerubská",
  "Všestarská",
  "Všetatská",
  "Všeňská",
  "Wagnerova",
  "Waldesova",
  "Washingtonova",
  "Wassermannova",
  "Wattova",
  "Weberova",
  "Weberova",
  "Weilova",
  "Weissova",
  "Wenzigova",
  "Wenzigova",
  "Werichova",
  "Wichterlova",
  "Wiedermannova",
  "Wiesenthalova",
  "Wilsonova",
  "Wilsonova",
  "Winklerova",
  "Wolfova",
  "Wolkerova",
  "Wuchterlova",
  "Xaveriova",
  "Xaverovská",
  "Za Archivem",
  "Za Arielem",
  "Za Avií",
  "Za Bažantnicí",
  "Za Botičem",
  "Za Brankou",
  "Za Brumlovkou",
  "Za Brůdkem",
  "Za Břízami",
  "Za Chalupami",
  "Za Cukrovarem",
  "Za Císařským Mlýnem",
  "Za Dolejšákem",
  "Za Drahou",
  "Za Dvorem",
  "Za Dálnicí",
  "Za Dálnicí",
  "Za Elektrárnou",
  "Za Elektrárnou",
  "Za Farou",
  "Za Fořtem",
  "Za Hanspaulkou",
  "Za Haštalem",
  "Za Hládkovem",
  "Za Horou",
  "Za Horou",
  "Za Hospodou",
  "Za Hrází",
  "Za Humny",
  "Za Hájem",
  "Za Hájem",
  "Za Hájovnou",
  "Za Hřbitovem",
  "Za Invalidovnou",
  "Za Jalovým Dvorem",
  "Za Jednotou",
  "Za Kajetánkou",
  "Za Kapličkou",
  "Za Karlínským Přístavem",
  "Za Kačabkou",
  "Za Klíčovem",
  "Za Knotkem",
  "Za Knotkem",
  "Za Kostelem",
  "Za Kovárnou",
  "Za Kovářským Rybníkem",
  "Za Křížem",
  "Za Křížkem",
  "Za Lesíkem",
  "Za Lidovým Domem",
  "Za Luhem",
  "Za Lužinami",
  "Za Lány",
  "Za Lázeňkou",
  "Za Mlýnem",
  "Za Mosty",
  "Za Mosty",
  "Za Mototechnou",
  "Za Můstkem",
  "Za Nadýmačem",
  "Za Novákovou Zahradou",
  "Za Návsí",
  "Za Obecním Úřadem",
  "Za Oborou",
  "Za Opravnou",
  "Za Opusem",
  "Za Ovčínem",
  "Za Papírnou",
  "Za Parkem",
  "Za Pavilónem",
  "Za Pekařkou",
  "Za Pekárnou",
  "Za Pivovarem",
  "Za Ploty",
  "Za Podjezdem",
  "Za Pohořelcem",
  "Za Pohádkou",
  "Za Potokem",
  "Za Poříčskou Branou",
  "Za Poříčskou Bránou",
  "Za Poštou",
  "Za Poštovskou Zahradou",
  "Za Poštovskou Zahradou",
  "Za Prodejnou",
  "Za Pruhy",
  "Za Průsekem",
  "Za Pískovnou",
  "Za Radostí",
  "Za Rokytkou",
  "Za Rybníkem",
  "Za Rybníčky",
  "Za Rybářstvím",
  "Za Rájem",
  "Za Sadem",
  "Za Sedmidomky",
  "Za Skalkou",
  "Za Skalkou",
  "Za Slatinami",
  "Za Slovankou",
  "Za Sokolovnou",
  "Za Stadionem",
  "Za Statkem",
  "Za Statky",
  "Za Stodolami",
  "Za Stodolou",
  "Za Strahovem",
  "Za Strašnickou Vozovnou",
  "Za Strašnickou Vozovnou",
  "Za Strojírnami",
  "Za Studánkou",
  "Za Střelnicí",
  "Za Sídlištěm",
  "Za Teplárnou",
  "Za Tratí",
  "Za Tratí",
  "Za Třebešínem",
  "Za Vackovem",
  "Za Valem",
  "Za Viaduktem",
  "Za Vinicí",
  "Za Vlasačkou",
  "Za Vodárnou",
  "Za Vokovickou Vozovnou",
  "Za Vokovickou Vozovnou",
  "Za Větrem",
  "Za Zahradami",
  "Za Zahradou",
  "Za Zastávkou",
  "Za Zelenou Liškou",
  "Za Zámečkem",
  "Za Černým Mostem",
  "Za Černým Mostem",
  "Za Černým Mostem",
  "Za Školkou",
  "Za Školou",
  "Za Šmatlíkem",
  "Za Železnicí",
  "Za Ženskými Domovy",
  "Za Žižkovskou Vozovnou",
  "Zacharská",
  "Zachova",
  "Zadní",
  "Zahrada Na Baště",
  "Zahradnická",
  "Zahradní",
  "Zahradníčkova",
  "Zahradníčkova",
  "Zahrádecká",
  "Zahrádecká",
  "Zahrádkářská",
  "Zahrádkářů",
  "Zaječická",
  "Zaječí",
  "Zaječí",
  "Zakouřilova",
  "Zakrytá",
  "Zakšínská",
  "Zalešanská",
  "Zalinská",
  "Zamašská",
  "Zamenhofova",
  "Zapadlá",
  "Zapomenutá",
  "Zapova",
  "Zapských",
  "Zastavěná",
  "Zastrčená",
  "Zavadilova",
  "Zavátá",
  "Zaříčanská",
  "Zbečenská",
  "Zborovská",
  "Zborovská",
  "Zbraslavská",
  "Zbraslavská",
  "Zbraslavské Nám.",
  "Zbraslavské Náměstí",
  "Zbrojnická",
  "Zbudovská",
  "Zbuzanská",
  "Zbuzkova",
  "Zbynická",
  "Zbyslavská",
  "Zbytinská",
  "Zbýšovská",
  "Zdaru",
  "Zdařilá",
  "Zderazská",
  "Zdeňky Nyplové",
  "Zdibská",
  "Zdická",
  "Zdiměřická",
  "Zdislavická",
  "Zdobnická",
  "Zdoňovská",
  "Zdíkovská",
  "Zelenečská",
  "Zelenečská",
  "Zelenkova",
  "Zelenky-Hajského",
  "Zelenohorská",
  "Zelená",
  "Zelená",
  "Zelená Louka",
  "Zelený Pruh",
  "Zelený Pruh",
  "Zelený Pruh",
  "Zelinářská",
  "Zemanka",
  "Zemské Právo",
  "Zemědělská",
  "Zengrova",
  "Zenklova",
  "Zenklova",
  "Zeyerova Alej",
  "Zhořelecká",
  "Zikova",
  "Zimova",
  "Zimákova",
  "Zkrácená",
  "Zlatnice",
  "Zlatnická",
  "Zlatokorunská",
  "Zlatá",
  "Zlatá Ulička U Daliborky",
  "Zlenická",
  "Zlešická",
  "Zlivská",
  "Zličínská",
  "Zličínská",
  "Zlonická",
  "Zlonínská",
  "Zlončická",
  "Zlíchovská",
  "Znojemská",
  "Zoubkova",
  "Zrzavého",
  "Ztracená",
  "Zubatého",
  "Zubrnická",
  "Zvolenská",
  "Zvolská",
  "Zvolská",
  "Zvonařova",
  "Zvonařovská",
  "Zvonařská",
  "Zvoncovitá",
  "Zvonická",
  "Zvonková",
  "Zvoníčkova",
  "Zvánovická",
  "Zvíkovská",
  "Záblatská",
  "Záblatská",
  "Zábranská",
  "Zábrodí",
  "Záběhlická",
  "Zádražanská",
  "Záhornická",
  "Záhorského",
  "Záhořanská",
  "Záhořanského",
  "Záhřebská",
  "Zájezdní",
  "Zákolanská",
  "Zákostelní",
  "Zákupská",
  "Zálesí",
  "Zálesí",
  "Zálesí",
  "Záluské",
  "Zálužanského",
  "Zálužická",
  "Zálužská",
  "Zálužská",
  "Zámecká",
  "Zámecké Schody",
  "Zámezí",
  "Zámišova",
  "Zámělská",
  "Západní",
  "Zápasnická",
  "Zápolská",
  "Zápotoční",
  "Zápská",
  "Zárubova",
  "Zárybnická",
  "Zárybničná",
  "Zárybská",
  "Zásadská",
  "Zásmucká",
  "Zátišská",
  "Zátiší",
  "Zátopkova",
  "Zátoňská",
  "Závadova",
  "Záveská",
  "Závist",
  "Závišova",
  "Závišova",
  "Závodní",
  "Závrchy",
  "Závěrka",
  "Zázvorkova",
  "Zářijová",
  "Zítkova",
  "Zívrova",
  "Zúžená",
  "Údlická",
  "Údolní",
  "Údolní",
  "Údolí Hvězd",
  "Úhlavská",
  "Úhlová",
  "Újezd",
  "Újezd",
  "Újezdská",
  "Úlibická",
  "Únorová",
  "Únětická",
  "Únětická",
  "Úpická",
  "Úprkova",
  "Úpská",
  "Úslavská",
  "Ústavní",
  "Ústecká",
  "Ústecká",
  "Ústřední",
  "Útulná",
  "Útulná",
  "Úvalská",
  "Úvoz",
  "Úvoz",
  "Úvozová",
  "Úzká",
  "Čajkovského",
  "Čakovická",
  "Čakovická",
  "Čankovská",
  "Čapkova",
  "Častavina",
  "Častonická",
  "Čechova",
  "Čechtická",
  "Čechurova",
  "Čedičová",
  "Čejetická",
  "Čejkovická",
  "Čekanková",
  "Čekanková",
  "Čekanovská",
  "Čelakovského Sady",
  "Čelakovského Sady",
  "Čeljabinská",
  "Čelkovická",
  "Čelná",
  "Čelákovická",
  "Čenkovská",
  "Čenovická",
  "Čentická",
  "Čenětická",
  "Čeperská",
  "Čeradická",
  "Čerchovská",
  "Čermákova",
  "Černická",
  "Černilovská",
  "Černičná",
  "Černochova",
  "Černockého",
  "Černohorského",
  "Černokostelecká",
  "Černokostelecká",
  "Černokostelecká",
  "Černomořská",
  "Černotínská",
  "Černovická",
  "Černošická",
  "Černá",
  "Černého",
  "Černínova",
  "Černínská",
  "Čerpadlová",
  "Čertouská",
  "Čertouská",
  "Čertův Vršek",
  "Červencová",
  "Červenkova",
  "Červená",
  "Červená Báň",
  "Červený Mlýn",
  "Červeňanského",
  "Červnová",
  "Čerčanská",
  "Českobratrská",
  "Českobrodská",
  "Českobrodská",
  "Českobrodská",
  "Českobrodská",
  "Českobrodská",
  "Českobrodská",
  "Českobrodská",
  "Českobrodská",
  "Českodubská",
  "Českolipská",
  "Českolipská",
  "Českomalínská",
  "Českomoravská",
  "Českomoravská",
  "Československého Exilu",
  "Československého Exilu",
  "Česká",
  "České Družiny",
  "Českého Červeného Kříže",
  "Čestlická",
  "Čestmírova",
  "Česákova",
  "Čečelická",
  "Čeňkova",
  "Češovská",
  "Čibuzská",
  "Čihákova",
  "Čiklova",
  "Čiklova",
  "Čimelická",
  "Čimická",
  "Čimická",
  "Čimická",
  "Čimická",
  "Čirůvková",
  "Čistovická",
  "Čmelická",
  "Čs. Armády",
  "Čs. Tankistů",
  "Čtyřdílná",
  "Čtyřkolská",
  "Čumpelíkova",
  "Čuprova",
  "Čábelecká",
  "Čápova",
  "Čáslavská",
  "Čílova",
  "Čílova",
  "Čínská",
  "Čínská",
  "Čížovská",
  "Ďáblická",
  "Ďáblická",
  "Ďáblická",
  "Řadová",
  "Řehořova",
  "Řepečská",
  "Řepná",
  "Řeporyjská",
  "Řeporyjská",
  "Řeporyjská",
  "Řeporyjské Náměstí",
  "Řepová",
  "Řepská",
  "Řepíková",
  "Řepínská",
  "Řepčická",
  "Řepčická",
  "Řetězokovářů",
  "Řetězová",
  "Řevnická",
  "Řevnická",
  "Řeznická",
  "Řezáčovo Nám.",
  "Řezáčovo Náměstí",
  "Řečického",
  "Řešetovská",
  "Řešovská",
  "Řipská",
  "Řipská",
  "Řásnovka",
  "Říjnová",
  "Římovská",
  "Římovská",
  "Římská",
  "Říčanova",
  "Říčanská",
  "Říční",
  "Šachovská",
  "Šafaříkova",
  "Šafránecká",
  "Šafránkova",
  "Šafránová",
  "Šafářova",
  "Šakvická",
  "Šaldova",
  "Šalounova",
  "Šalvějová",
  "Šanovská",
  "Šantrochova",
  "Šatrova",
  "Šatrova",
  "Šebelova",
  "Šeberovská",
  "Šebestiánská",
  "Šebkova",
  "Šedivého",
  "Šedova",
  "Šejbalové",
  "Šemberova",
  "Šenovská",
  "Šermířská",
  "Šermířská",
  "Šestajovická",
  "Šestajovická",
  "Šestidomí",
  "Šetelíkova",
  "Ševce Matouše",
  "Ševčenkova",
  "Ševčíkova",
  "Šeříková",
  "Šeříková",
  "Šibřinská",
  "Šikmá",
  "Šimanovská",
  "Šimkova",
  "Šimonova",
  "Šimáčkova",
  "Šimůnkova",
  "Šircova",
  "Široká",
  "Široká",
  "Šiškova",
  "Školní",
  "Školská",
  "Škroupovo Nám.",
  "Škroupovo Náměstí",
  "Škrétova",
  "Škvorecká",
  "Škábova",
  "Šlechtitelská",
  "Šlejnická",
  "Šlikova",
  "Šlitrova",
  "Šluknovská",
  "Šmeralova",
  "Šmilovského",
  "Šmolíkova",
  "Šolínova",
  "Šostakovičovo Nám.",
  "Šostakovičovo Náměstí",
  "Španielova",
  "Španělská",
  "Špačkova",
  "Špeciánova",
  "Šperlova",
  "Špirkova",
  "Špitálská",
  "Šplechnerova",
  "Šporkova",
  "Špotzova",
  "Špálova",
  "Šrobárova",
  "Šrobárova",
  "Šromova",
  "Štamberk",
  "Štefkova",
  "Štefánikova",
  "Štemberova",
  "Šternberkova",
  "Šternova",
  "Šternovská",
  "Štichova",
  "Štiplova",
  "Štičkova",
  "Štiřínská",
  "Štochlova",
  "Štolbova",
  "Štolcova",
  "Štolmířská",
  "Štolmířská",
  "Štorchova",
  "Štorkánova",
  "Štramberská",
  "Štulcova",
  "Štupartská",
  "Štursova",
  "Štverákova",
  "Štychova",
  "Štychova",
  "Štíbrova",
  "Štíhlická",
  "Štítného",
  "Štítová",
  "Štúrova",
  "Štúrova",
  "Štěchovická",
  "Štěpanická",
  "Štěpařská",
  "Štěpničná",
  "Štěpánkova",
  "Štěpánovská",
  "Štěpánská",
  "Štěpánská",
  "Štěrboholská",
  "Štěrková",
  "Štětkova",
  "Štětínská",
  "Šubertova",
  "Šulcova",
  "Šultysova",
  "Šumavská",
  "Šumavského",
  "Šumberova",
  "Šumenská",
  "Šumická",
  "Šumperská",
  "Šustova",
  "Švabinského",
  "Švecova",
  "Švehlova",
  "Švehlova",
  "Švejcarovo Náměstí",
  "Švestková",
  "Švestková",
  "Švestková",
  "Švihovská",
  "Švábky",
  "Švábova",
  "Švédská",
  "Šárecká",
  "Šárovo Kolo",
  "Šárčina",
  "Šátalská",
  "Šífařská",
  "Šímova",
  "Šípková",
  "Šítkova",
  "Šťastného",
  "Šůrova",
  "Žabovřeská",
  "Žacléřská",
  "Žalanského",
  "Žalmanova",
  "Žalovská",
  "Žamberská",
  "Žampašská",
  "Žampiónová",
  "Žandovská",
  "Žatecká",
  "Žatecká",
  "Žateckých",
  "Ždírnická",
  "Žehuňská",
  "Žehušická",
  "Želetavská",
  "Železniční",
  "Železničářů",
  "Železnobrodská",
  "Železná",
  "Želivecká",
  "Želivka",
  "Želivská",
  "Želkovická",
  "Želnavská",
  "Ženíškova",
  "Žeretická",
  "Žermanická",
  "Žernosecká",
  "Žernovská",
  "Žerotínova",
  "Žherská",
  "Žichlínská",
  "Židlického",
  "Žilinská",
  "Žilovská",
  "Žinkovská",
  "Žirovnická",
  "Žitavská",
  "Žitavského",
  "Žitná",
  "Žitná",
  "Žitomírská",
  "Živanická",
  "Živcová",
  "Živcových",
  "Živonínská",
  "Žiželická",
  "Žižkova",
  "Žižkovo Nám.",
  "Žižkovo Náměstí",
  "Žlebská",
  "Žluťásková",
  "Žofie Podlipské",
  "Žufanova",
  "Žukovského",
  "Žukovského",
  "Žulová",
  "Županovická",
  "Žvahovská",
  "Žábova",
  "Žákovská",
  "Žárovická",
  "Žíšovská",
  "Žďárská",
];

},{}],209:[function(require,module,exports){
module["exports"] = [
  "#{street_name} #{building_number}"
];

},{}],210:[function(require,module,exports){
module["exports"] = [
  "#{street}"
];

},{}],211:[function(require,module,exports){
module["exports"] = [
  "Pacific/Midway",
  "Pacific/Pago_Pago",
  "Pacific/Honolulu",
  "America/Juneau",
  "America/Los_Angeles",
  "America/Tijuana",
  "America/Denver",
  "America/Phoenix",
  "America/Chihuahua",
  "America/Mazatlan",
  "America/Chicago",
  "America/Regina",
  "America/Mexico_City",
  "America/Mexico_City",
  "America/Monterrey",
  "America/Guatemala",
  "America/New_York",
  "America/Indiana/Indianapolis",
  "America/Bogota",
  "America/Lima",
  "America/Lima",
  "America/Halifax",
  "America/Caracas",
  "America/La_Paz",
  "America/Santiago",
  "America/St_Johns",
  "America/Sao_Paulo",
  "America/Argentina/Buenos_Aires",
  "America/Guyana",
  "America/Godthab",
  "Atlantic/South_Georgia",
  "Atlantic/Azores",
  "Atlantic/Cape_Verde",
  "Europe/Dublin",
  "Europe/London",
  "Europe/Lisbon",
  "Europe/London",
  "Africa/Casablanca",
  "Africa/Monrovia",
  "Etc/UTC",
  "Europe/Belgrade",
  "Europe/Bratislava",
  "Europe/Budapest",
  "Europe/Ljubljana",
  "Europe/Prague",
  "Europe/Sarajevo",
  "Europe/Skopje",
  "Europe/Warsaw",
  "Europe/Zagreb",
  "Europe/Brussels",
  "Europe/Copenhagen",
  "Europe/Madrid",
  "Europe/Paris",
  "Europe/Amsterdam",
  "Europe/Berlin",
  "Europe/Berlin",
  "Europe/Rome",
  "Europe/Stockholm",
  "Europe/Vienna",
  "Africa/Algiers",
  "Europe/Bucharest",
  "Africa/Cairo",
  "Europe/Helsinki",
  "Europe/Kiev",
  "Europe/Riga",
  "Europe/Sofia",
  "Europe/Tallinn",
  "Europe/Vilnius",
  "Europe/Athens",
  "Europe/Istanbul",
  "Europe/Minsk",
  "Asia/Jerusalem",
  "Africa/Harare",
  "Africa/Johannesburg",
  "Europe/Moscow",
  "Europe/Moscow",
  "Europe/Moscow",
  "Asia/Kuwait",
  "Asia/Riyadh",
  "Africa/Nairobi",
  "Asia/Baghdad",
  "Asia/Tehran",
  "Asia/Muscat",
  "Asia/Muscat",
  "Asia/Baku",
  "Asia/Tbilisi",
  "Asia/Yerevan",
  "Asia/Kabul",
  "Asia/Yekaterinburg",
  "Asia/Karachi",
  "Asia/Karachi",
  "Asia/Tashkent",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kathmandu",
  "Asia/Dhaka",
  "Asia/Dhaka",
  "Asia/Colombo",
  "Asia/Almaty",
  "Asia/Novosibirsk",
  "Asia/Rangoon",
  "Asia/Bangkok",
  "Asia/Bangkok",
  "Asia/Jakarta",
  "Asia/Krasnoyarsk",
  "Asia/Shanghai",
  "Asia/Chongqing",
  "Asia/Hong_Kong",
  "Asia/Urumqi",
  "Asia/Kuala_Lumpur",
  "Asia/Singapore",
  "Asia/Taipei",
  "Australia/Perth",
  "Asia/Irkutsk",
  "Asia/Ulaanbaatar",
  "Asia/Seoul",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Yakutsk",
  "Australia/Darwin",
  "Australia/Adelaide",
  "Australia/Melbourne",
  "Australia/Melbourne",
  "Australia/Sydney",
  "Australia/Brisbane",
  "Australia/Hobart",
  "Asia/Vladivostok",
  "Pacific/Guam",
  "Pacific/Port_Moresby",
  "Asia/Magadan",
  "Asia/Magadan",
  "Pacific/Noumea",
  "Pacific/Fiji",
  "Asia/Kamchatka",
  "Pacific/Majuro",
  "Pacific/Auckland",
  "Pacific/Auckland",
  "Pacific/Tongatapu",
  "Pacific/Fakaofo",
  "Pacific/Apia"
];

},{}],212:[function(require,module,exports){
module["exports"] = [
  "Adaptive",
  "Advanced",
  "Ameliorated",
  "Assimilated",
  "Automated",
  "Balanced",
  "Business-focused",
  "Centralized",
  "Cloned",
  "Compatible",
  "Configurable",
  "Cross-group",
  "Cross-platform",
  "Customer-focused",
  "Customizable",
  "Decentralized",
  "De-engineered",
  "Devolved",
  "Digitized",
  "Distributed",
  "Diverse",
  "Down-sized",
  "Enhanced",
  "Enterprise-wide",
  "Ergonomic",
  "Exclusive",
  "Expanded",
  "Extended",
  "Face to face",
  "Focused",
  "Front-line",
  "Fully-configurable",
  "Function-based",
  "Fundamental",
  "Future-proofed",
  "Grass-roots",
  "Horizontal",
  "Implemented",
  "Innovative",
  "Integrated",
  "Intuitive",
  "Inverse",
  "Managed",
  "Mandatory",
  "Monitored",
  "Multi-channelled",
  "Multi-lateral",
  "Multi-layered",
  "Multi-tiered",
  "Networked",
  "Object-based",
  "Open-architected",
  "Open-source",
  "Operative",
  "Optimized",
  "Optional",
  "Organic",
  "Organized",
  "Persevering",
  "Persistent",
  "Phased",
  "Polarised",
  "Pre-emptive",
  "Proactive",
  "Profit-focused",
  "Profound",
  "Programmable",
  "Progressive",
  "Public-key",
  "Quality-focused",
  "Reactive",
  "Realigned",
  "Re-contextualized",
  "Re-engineered",
  "Reduced",
  "Reverse-engineered",
  "Right-sized",
  "Robust",
  "Seamless",
  "Secured",
  "Self-enabling",
  "Sharable",
  "Stand-alone",
  "Streamlined",
  "Switchable",
  "Synchronised",
  "Synergistic",
  "Synergized",
  "Team-oriented",
  "Total",
  "Triple-buffered",
  "Universal",
  "Up-sized",
  "Upgradable",
  "User-centric",
  "User-friendly",
  "Versatile",
  "Virtual",
  "Visionary",
  "Vision-oriented"
];

},{}],213:[function(require,module,exports){
module["exports"] = [
  "clicks-and-mortar",
  "value-added",
  "vertical",
  "proactive",
  "robust",
  "revolutionary",
  "scalable",
  "leading-edge",
  "innovative",
  "intuitive",
  "strategic",
  "e-business",
  "mission-critical",
  "sticky",
  "one-to-one",
  "24/7",
  "end-to-end",
  "global",
  "B2B",
  "B2C",
  "granular",
  "frictionless",
  "virtual",
  "viral",
  "dynamic",
  "24/365",
  "best-of-breed",
  "killer",
  "magnetic",
  "bleeding-edge",
  "web-enabled",
  "interactive",
  "dot-com",
  "sexy",
  "back-end",
  "real-time",
  "efficient",
  "front-end",
  "distributed",
  "seamless",
  "extensible",
  "turn-key",
  "world-class",
  "open-source",
  "cross-platform",
  "cross-media",
  "synergistic",
  "bricks-and-clicks",
  "out-of-the-box",
  "enterprise",
  "integrated",
  "impactful",
  "wireless",
  "transparent",
  "next-generation",
  "cutting-edge",
  "user-centric",
  "visionary",
  "customized",
  "ubiquitous",
  "plug-and-play",
  "collaborative",
  "compelling",
  "holistic",
  "rich",
  "synergies",
  "web-readiness",
  "paradigms",
  "markets",
  "partnerships",
  "infrastructures",
  "platforms",
  "initiatives",
  "channels",
  "eyeballs",
  "communities",
  "ROI",
  "solutions",
  "e-tailers",
  "e-services",
  "action-items",
  "portals",
  "niches",
  "technologies",
  "content",
  "vortals",
  "supply-chains",
  "convergence",
  "relationships",
  "architectures",
  "interfaces",
  "e-markets",
  "e-commerce",
  "systems",
  "bandwidth",
  "infomediaries",
  "models",
  "mindshare",
  "deliverables",
  "users",
  "schemas",
  "networks",
  "applications",
  "metrics",
  "e-business",
  "functionalities",
  "experiences",
  "web services",
  "methodologies"
];

},{}],214:[function(require,module,exports){
module["exports"] = [
  "implement",
  "utilize",
  "integrate",
  "streamline",
  "optimize",
  "evolve",
  "transform",
  "embrace",
  "enable",
  "orchestrate",
  "leverage",
  "reinvent",
  "aggregate",
  "architect",
  "enhance",
  "incentivize",
  "morph",
  "empower",
  "envisioneer",
  "monetize",
  "harness",
  "facilitate",
  "seize",
  "disintermediate",
  "synergize",
  "strategize",
  "deploy",
  "brand",
  "grow",
  "target",
  "syndicate",
  "synthesize",
  "deliver",
  "mesh",
  "incubate",
  "engage",
  "maximize",
  "benchmark",
  "expedite",
  "reintermediate",
  "whiteboard",
  "visualize",
  "repurpose",
  "innovate",
  "scale",
  "unleash",
  "drive",
  "extend",
  "engineer",
  "revolutionize",
  "generate",
  "exploit",
  "transition",
  "e-enable",
  "iterate",
  "cultivate",
  "matrix",
  "productize",
  "redefine",
  "recontextualize"
];

},{}],215:[function(require,module,exports){
module["exports"] = [
  "24 hour",
  "24/7",
  "3rd generation",
  "4th generation",
  "5th generation",
  "6th generation",
  "actuating",
  "analyzing",
  "asymmetric",
  "asynchronous",
  "attitude-oriented",
  "background",
  "bandwidth-monitored",
  "bi-directional",
  "bifurcated",
  "bottom-line",
  "clear-thinking",
  "client-driven",
  "client-server",
  "coherent",
  "cohesive",
  "composite",
  "context-sensitive",
  "contextually-based",
  "content-based",
  "dedicated",
  "demand-driven",
  "didactic",
  "directional",
  "discrete",
  "disintermediate",
  "dynamic",
  "eco-centric",
  "empowering",
  "encompassing",
  "even-keeled",
  "executive",
  "explicit",
  "exuding",
  "fault-tolerant",
  "foreground",
  "fresh-thinking",
  "full-range",
  "global",
  "grid-enabled",
  "heuristic",
  "high-level",
  "holistic",
  "homogeneous",
  "human-resource",
  "hybrid",
  "impactful",
  "incremental",
  "intangible",
  "interactive",
  "intermediate",
  "leading edge",
  "local",
  "logistical",
  "maximized",
  "methodical",
  "mission-critical",
  "mobile",
  "modular",
  "motivating",
  "multimedia",
  "multi-state",
  "multi-tasking",
  "national",
  "needs-based",
  "neutral",
  "next generation",
  "non-volatile",
  "object-oriented",
  "optimal",
  "optimizing",
  "radical",
  "real-time",
  "reciprocal",
  "regional",
  "responsive",
  "scalable",
  "secondary",
  "solution-oriented",
  "stable",
  "static",
  "systematic",
  "systemic",
  "system-worthy",
  "tangible",
  "tertiary",
  "transitional",
  "uniform",
  "upward-trending",
  "user-facing",
  "value-added",
  "web-enabled",
  "well-modulated",
  "zero administration",
  "zero defect",
  "zero tolerance"
];

},{}],216:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjective = require("./adjective");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.bs_noun = require("./bs_noun");
company.name = require("./name");

},{"./adjective":212,"./bs_noun":213,"./bs_verb":214,"./descriptor":215,"./name":217,"./noun":218,"./suffix":219}],217:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name} #{suffix}",
  "#{Name.man_last_name} a #{Name.man_last_name} #{suffix}"
];

},{}],218:[function(require,module,exports){
module["exports"] = [
  "ability",
  "access",
  "adapter",
  "algorithm",
  "alliance",
  "analyzer",
  "application",
  "approach",
  "architecture",
  "archive",
  "artificial intelligence",
  "array",
  "attitude",
  "benchmark",
  "budgetary management",
  "capability",
  "capacity",
  "challenge",
  "circuit",
  "collaboration",
  "complexity",
  "concept",
  "conglomeration",
  "contingency",
  "core",
  "customer loyalty",
  "database",
  "data-warehouse",
  "definition",
  "emulation",
  "encoding",
  "encryption",
  "extranet",
  "firmware",
  "flexibility",
  "focus group",
  "forecast",
  "frame",
  "framework",
  "function",
  "functionalities",
  "Graphic Interface",
  "groupware",
  "Graphical User Interface",
  "hardware",
  "help-desk",
  "hierarchy",
  "hub",
  "implementation",
  "info-mediaries",
  "infrastructure",
  "initiative",
  "installation",
  "instruction set",
  "interface",
  "internet solution",
  "intranet",
  "knowledge user",
  "knowledge base",
  "local area network",
  "leverage",
  "matrices",
  "matrix",
  "methodology",
  "middleware",
  "migration",
  "model",
  "moderator",
  "monitoring",
  "moratorium",
  "neural-net",
  "open architecture",
  "open system",
  "orchestration",
  "paradigm",
  "parallelism",
  "policy",
  "portal",
  "pricing structure",
  "process improvement",
  "product",
  "productivity",
  "project",
  "projection",
  "protocol",
  "secured line",
  "service-desk",
  "software",
  "solution",
  "standardization",
  "strategy",
  "structure",
  "success",
  "superstructure",
  "support",
  "synergy",
  "system engine",
  "task-force",
  "throughput",
  "time-frame",
  "toolset",
  "utilisation",
  "website",
  "workforce"
];

},{}],219:[function(require,module,exports){
module["exports"] = [
  "s.r.o.",
  "a.s.",
  "v.o.s."
];

},{}],220:[function(require,module,exports){
arguments[4][181][0].apply(exports,arguments)
},{"./month":221,"./weekday":222,"dup":181}],221:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799
module["exports"] = {
  wide: [
    "Leden",
    "Únor",
    "Březen",
    "Duben",
    "Květen",
    "Červen",
    "Červenec",
    "Srpen",
    "Září",
    "Říjen",
    "Listopad",
    "Prosinec"
  ],
  // Property "wide_context" is optional, if not set then "wide" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  wide_context: [
    "Leden",
    "Únor",
    "Březen",
    "Duben",
    "Květen",
    "Červen",
    "Červenec",
    "Srpen",
    "Září",
    "Říjen",
    "Listopad",
    "Prosinec"
  ],
  abbr: [
    "Led",
    "Úno",
    "Bře",
    "Dub",
    "Kvě",
    "Čer",
    "Črc",
    "Srp",
    "Zář",
    "Říj",
    "Lis",
    "Pro"
  ],
  // Property "abbr_context" is optional, if not set then "abbr" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  abbr_context: [
    "Led",
    "Úno",
    "Bře",
    "Dub",
    "Kvě",
    "Čer",
    "Črc",
    "Srp",
    "Zář",
    "Říj",
    "Lis",
    "Pro"
  ]
};

},{}],222:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1847
module["exports"] = {
  wide: [
    "Pondělí",
    "Úterý",
    "Středa",
    "čtvrtek",
    "Pátek",
    "Sobota",
    "Neděle"
  ],
  // Property "wide_context" is optional, if not set then "wide" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  wide_context: [
    "Pondělí",
    "Úterý",
    "Středa",
    "čtvrtek",
    "Pátek",
    "Sobota",
    "Neděle"
  ],
  abbr: [
    "Po",
    "Út",
    "St",
    "čt",
    "Pá",
    "So",
    "Ne"
  ],
  // Property "abbr_context" is optional, if not set then "abbr" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  abbr_context: [
    "Po",
    "Út",
    "St",
    "čt",
    "Pá",
    "So",
    "Ne"
  ]
};

},{}],223:[function(require,module,exports){
var cz = {};
module['exports'] = cz;
cz.title = "Czech";
cz.address = require("./address");
cz.company = require("./company");
cz.internet = require("./internet");
cz.lorem = require("./lorem");
cz.name = require("./name");
cz.phone_number = require("./phone_number");
cz.date = require("./date");

},{"./address":203,"./company":216,"./date":220,"./internet":226,"./lorem":227,"./name":232,"./phone_number":240}],224:[function(require,module,exports){
module["exports"] = [
  "cz",
  "com",
  "net",
  "eu",
  "org"
];

},{}],225:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "seznam.cz",
  "centrum.cz",
  "volny.cz",
  "atlas.cz"
];

},{}],226:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":224,"./free_email":225,"dup":187}],227:[function(require,module,exports){
var lorem = {};
module['exports'] = lorem;
lorem.words = require("./words");
lorem.supplemental = require("./supplemental");

},{"./supplemental":228,"./words":229}],228:[function(require,module,exports){
module["exports"] = [
  "abbas",
  "abduco",
  "abeo",
  "abscido",
  "absconditus",
  "absens",
  "absorbeo",
  "absque",
  "abstergo",
  "absum",
  "abundans",
  "abutor",
  "accedo",
  "accendo",
  "acceptus",
  "accipio",
  "accommodo",
  "accusator",
  "acer",
  "acerbitas",
  "acervus",
  "acidus",
  "acies",
  "acquiro",
  "acsi",
  "adamo",
  "adaugeo",
  "addo",
  "adduco",
  "ademptio",
  "adeo",
  "adeptio",
  "adfectus",
  "adfero",
  "adficio",
  "adflicto",
  "adhaero",
  "adhuc",
  "adicio",
  "adimpleo",
  "adinventitias",
  "adipiscor",
  "adiuvo",
  "administratio",
  "admiratio",
  "admitto",
  "admoneo",
  "admoveo",
  "adnuo",
  "adopto",
  "adsidue",
  "adstringo",
  "adsuesco",
  "adsum",
  "adulatio",
  "adulescens",
  "adultus",
  "aduro",
  "advenio",
  "adversus",
  "advoco",
  "aedificium",
  "aeger",
  "aegre",
  "aegrotatio",
  "aegrus",
  "aeneus",
  "aequitas",
  "aequus",
  "aer",
  "aestas",
  "aestivus",
  "aestus",
  "aetas",
  "aeternus",
  "ager",
  "aggero",
  "aggredior",
  "agnitio",
  "agnosco",
  "ago",
  "ait",
  "aiunt",
  "alienus",
  "alii",
  "alioqui",
  "aliqua",
  "alius",
  "allatus",
  "alo",
  "alter",
  "altus",
  "alveus",
  "amaritudo",
  "ambitus",
  "ambulo",
  "amicitia",
  "amiculum",
  "amissio",
  "amita",
  "amitto",
  "amo",
  "amor",
  "amoveo",
  "amplexus",
  "amplitudo",
  "amplus",
  "ancilla",
  "angelus",
  "angulus",
  "angustus",
  "animadverto",
  "animi",
  "animus",
  "annus",
  "anser",
  "ante",
  "antea",
  "antepono",
  "antiquus",
  "aperio",
  "aperte",
  "apostolus",
  "apparatus",
  "appello",
  "appono",
  "appositus",
  "approbo",
  "apto",
  "aptus",
  "apud",
  "aqua",
  "ara",
  "aranea",
  "arbitro",
  "arbor",
  "arbustum",
  "arca",
  "arceo",
  "arcesso",
  "arcus",
  "argentum",
  "argumentum",
  "arguo",
  "arma",
  "armarium",
  "armo",
  "aro",
  "ars",
  "articulus",
  "artificiose",
  "arto",
  "arx",
  "ascisco",
  "ascit",
  "asper",
  "aspicio",
  "asporto",
  "assentator",
  "astrum",
  "atavus",
  "ater",
  "atqui",
  "atrocitas",
  "atrox",
  "attero",
  "attollo",
  "attonbitus",
  "auctor",
  "auctus",
  "audacia",
  "audax",
  "audentia",
  "audeo",
  "audio",
  "auditor",
  "aufero",
  "aureus",
  "auris",
  "aurum",
  "aut",
  "autem",
  "autus",
  "auxilium",
  "avaritia",
  "avarus",
  "aveho",
  "averto",
  "avoco",
  "baiulus",
  "balbus",
  "barba",
  "bardus",
  "basium",
  "beatus",
  "bellicus",
  "bellum",
  "bene",
  "beneficium",
  "benevolentia",
  "benigne",
  "bestia",
  "bibo",
  "bis",
  "blandior",
  "bonus",
  "bos",
  "brevis",
  "cado",
  "caecus",
  "caelestis",
  "caelum",
  "calamitas",
  "calcar",
  "calco",
  "calculus",
  "callide",
  "campana",
  "candidus",
  "canis",
  "canonicus",
  "canto",
  "capillus",
  "capio",
  "capitulus",
  "capto",
  "caput",
  "carbo",
  "carcer",
  "careo",
  "caries",
  "cariosus",
  "caritas",
  "carmen",
  "carpo",
  "carus",
  "casso",
  "caste",
  "casus",
  "catena",
  "caterva",
  "cattus",
  "cauda",
  "causa",
  "caute",
  "caveo",
  "cavus",
  "cedo",
  "celebrer",
  "celer",
  "celo",
  "cena",
  "cenaculum",
  "ceno",
  "censura",
  "centum",
  "cerno",
  "cernuus",
  "certe",
  "certo",
  "certus",
  "cervus",
  "cetera",
  "charisma",
  "chirographum",
  "cibo",
  "cibus",
  "cicuta",
  "cilicium",
  "cimentarius",
  "ciminatio",
  "cinis",
  "circumvenio",
  "cito",
  "civis",
  "civitas",
  "clam",
  "clamo",
  "claro",
  "clarus",
  "claudeo",
  "claustrum",
  "clementia",
  "clibanus",
  "coadunatio",
  "coaegresco",
  "coepi",
  "coerceo",
  "cogito",
  "cognatus",
  "cognomen",
  "cogo",
  "cohaero",
  "cohibeo",
  "cohors",
  "colligo",
  "colloco",
  "collum",
  "colo",
  "color",
  "coma",
  "combibo",
  "comburo",
  "comedo",
  "comes",
  "cometes",
  "comis",
  "comitatus",
  "commemoro",
  "comminor",
  "commodo",
  "communis",
  "comparo",
  "compello",
  "complectus",
  "compono",
  "comprehendo",
  "comptus",
  "conatus",
  "concedo",
  "concido",
  "conculco",
  "condico",
  "conduco",
  "confero",
  "confido",
  "conforto",
  "confugo",
  "congregatio",
  "conicio",
  "coniecto",
  "conitor",
  "coniuratio",
  "conor",
  "conqueror",
  "conscendo",
  "conservo",
  "considero",
  "conspergo",
  "constans",
  "consuasor",
  "contabesco",
  "contego",
  "contigo",
  "contra",
  "conturbo",
  "conventus",
  "convoco",
  "copia",
  "copiose",
  "cornu",
  "corona",
  "corpus",
  "correptius",
  "corrigo",
  "corroboro",
  "corrumpo",
  "coruscus",
  "cotidie",
  "crapula",
  "cras",
  "crastinus",
  "creator",
  "creber",
  "crebro",
  "credo",
  "creo",
  "creptio",
  "crepusculum",
  "cresco",
  "creta",
  "cribro",
  "crinis",
  "cruciamentum",
  "crudelis",
  "cruentus",
  "crur",
  "crustulum",
  "crux",
  "cubicularis",
  "cubitum",
  "cubo",
  "cui",
  "cuius",
  "culpa",
  "culpo",
  "cultellus",
  "cultura",
  "cum",
  "cunabula",
  "cunae",
  "cunctatio",
  "cupiditas",
  "cupio",
  "cuppedia",
  "cupressus",
  "cur",
  "cura",
  "curatio",
  "curia",
  "curiositas",
  "curis",
  "curo",
  "curriculum",
  "currus",
  "cursim",
  "curso",
  "cursus",
  "curto",
  "curtus",
  "curvo",
  "curvus",
  "custodia",
  "damnatio",
  "damno",
  "dapifer",
  "debeo",
  "debilito",
  "decens",
  "decerno",
  "decet",
  "decimus",
  "decipio",
  "decor",
  "decretum",
  "decumbo",
  "dedecor",
  "dedico",
  "deduco",
  "defaeco",
  "defendo",
  "defero",
  "defessus",
  "defetiscor",
  "deficio",
  "defigo",
  "defleo",
  "defluo",
  "defungo",
  "degenero",
  "degero",
  "degusto",
  "deinde",
  "delectatio",
  "delego",
  "deleo",
  "delibero",
  "delicate",
  "delinquo",
  "deludo",
  "demens",
  "demergo",
  "demitto",
  "demo",
  "demonstro",
  "demoror",
  "demulceo",
  "demum",
  "denego",
  "denique",
  "dens",
  "denuncio",
  "denuo",
  "deorsum",
  "depereo",
  "depono",
  "depopulo",
  "deporto",
  "depraedor",
  "deprecator",
  "deprimo",
  "depromo",
  "depulso",
  "deputo",
  "derelinquo",
  "derideo",
  "deripio",
  "desidero",
  "desino",
  "desipio",
  "desolo",
  "desparatus",
  "despecto",
  "despirmatio",
  "infit",
  "inflammatio",
  "paens",
  "patior",
  "patria",
  "patrocinor",
  "patruus",
  "pauci",
  "paulatim",
  "pauper",
  "pax",
  "peccatus",
  "pecco",
  "pecto",
  "pectus",
  "pecunia",
  "pecus",
  "peior",
  "pel",
  "ocer",
  "socius",
  "sodalitas",
  "sol",
  "soleo",
  "solio",
  "solitudo",
  "solium",
  "sollers",
  "sollicito",
  "solum",
  "solus",
  "solutio",
  "solvo",
  "somniculosus",
  "somnus",
  "sonitus",
  "sono",
  "sophismata",
  "sopor",
  "sordeo",
  "sortitus",
  "spargo",
  "speciosus",
  "spectaculum",
  "speculum",
  "sperno",
  "spero",
  "spes",
  "spiculum",
  "spiritus",
  "spoliatio",
  "sponte",
  "stabilis",
  "statim",
  "statua",
  "stella",
  "stillicidium",
  "stipes",
  "stips",
  "sto",
  "strenuus",
  "strues",
  "studio",
  "stultus",
  "suadeo",
  "suasoria",
  "sub",
  "subito",
  "subiungo",
  "sublime",
  "subnecto",
  "subseco",
  "substantia",
  "subvenio",
  "succedo",
  "succurro",
  "sufficio",
  "suffoco",
  "suffragium",
  "suggero",
  "sui",
  "sulum",
  "sum",
  "summa",
  "summisse",
  "summopere",
  "sumo",
  "sumptus",
  "supellex",
  "super",
  "suppellex",
  "supplanto",
  "suppono",
  "supra",
  "surculus",
  "surgo",
  "sursum",
  "suscipio",
  "suspendo",
  "sustineo",
  "suus",
  "synagoga",
  "tabella",
  "tabernus",
  "tabesco",
  "tabgo",
  "tabula",
  "taceo",
  "tactus",
  "taedium",
  "talio",
  "talis",
  "talus",
  "tam",
  "tamdiu",
  "tamen",
  "tametsi",
  "tamisium",
  "tamquam",
  "tandem",
  "tantillus",
  "tantum",
  "tardus",
  "tego",
  "temeritas",
  "temperantia",
  "templum",
  "temptatio",
  "tempus",
  "tenax",
  "tendo",
  "teneo",
  "tener",
  "tenuis",
  "tenus",
  "tepesco",
  "tepidus",
  "ter",
  "terebro",
  "teres",
  "terga",
  "tergeo",
  "tergiversatio",
  "tergo",
  "tergum",
  "termes",
  "terminatio",
  "tero",
  "terra",
  "terreo",
  "territo",
  "terror",
  "tersus",
  "tertius",
  "testimonium",
  "texo",
  "textilis",
  "textor",
  "textus",
  "thalassinus",
  "theatrum",
  "theca",
  "thema",
  "theologus",
  "thermae",
  "thesaurus",
  "thesis",
  "thorax",
  "thymbra",
  "thymum",
  "tibi",
  "timidus",
  "timor",
  "titulus",
  "tolero",
  "tollo",
  "tondeo",
  "tonsor",
  "torqueo",
  "torrens",
  "tot",
  "totidem",
  "toties",
  "totus",
  "tracto",
  "trado",
  "traho",
  "trans",
  "tredecim",
  "tremo",
  "trepide",
  "tres",
  "tribuo",
  "tricesimus",
  "triduana",
  "triginta",
  "tripudio",
  "tristis",
  "triumphus",
  "trucido",
  "truculenter",
  "tubineus",
  "tui",
  "tum",
  "tumultus",
  "tunc",
  "turba",
  "turbo",
  "turpe",
  "turpis",
  "tutamen",
  "tutis",
  "tyrannus",
  "uberrime",
  "ubi",
  "ulciscor",
  "ullus",
  "ulterius",
  "ultio",
  "ultra",
  "umbra",
  "umerus",
  "umquam",
  "una",
  "unde",
  "undique",
  "universe",
  "unus",
  "urbanus",
  "urbs",
  "uredo",
  "usitas",
  "usque",
  "ustilo",
  "ustulo",
  "usus",
  "uter",
  "uterque",
  "utilis",
  "utique",
  "utor",
  "utpote",
  "utrimque",
  "utroque",
  "utrum",
  "uxor",
  "vaco",
  "vacuus",
  "vado",
  "vae",
  "valde",
  "valens",
  "valeo",
  "valetudo",
  "validus",
  "vallum",
  "vapulus",
  "varietas",
  "varius",
  "vehemens",
  "vel",
  "velociter",
  "velum",
  "velut",
  "venia",
  "venio",
  "ventito",
  "ventosus",
  "ventus",
  "venustas",
  "ver",
  "verbera",
  "verbum",
  "vere",
  "verecundia",
  "vereor",
  "vergo",
  "veritas",
  "vero",
  "versus",
  "verto",
  "verumtamen",
  "verus",
  "vesco",
  "vesica",
  "vesper",
  "vespillo",
  "vester",
  "vestigium",
  "vestrum",
  "vetus",
  "via",
  "vicinus",
  "vicissitudo",
  "victoria",
  "victus",
  "videlicet",
  "video",
  "viduata",
  "viduo",
  "vigilo",
  "vigor",
  "vilicus",
  "vilis",
  "vilitas",
  "villa",
  "vinco",
  "vinculum",
  "vindico",
  "vinitor",
  "vinum",
  "vir",
  "virga",
  "virgo",
  "viridis",
  "viriliter",
  "virtus",
  "vis",
  "viscus",
  "vita",
  "vitiosus",
  "vitium",
  "vito",
  "vivo",
  "vix",
  "vobis",
  "vociferor",
  "voco",
  "volaticus",
  "volo",
  "volubilis",
  "voluntarius",
  "volup",
  "volutabrum",
  "volva",
  "vomer",
  "vomica",
  "vomito",
  "vorago",
  "vorax",
  "voro",
  "vos",
  "votum",
  "voveo",
  "vox",
  "vulariter",
  "vulgaris",
  "vulgivagus",
  "vulgo",
  "vulgus",
  "vulnero",
  "vulnus",
  "vulpes",
  "vulticulus",
  "vultuosus",
  "xiphias"
];

},{}],229:[function(require,module,exports){
module["exports"] = [
  "alias",
  "consequatur",
  "aut",
  "perferendis",
  "sit",
  "voluptatem",
  "accusantium",
  "doloremque",
  "aperiam",
  "eaque",
  "ipsa",
  "quae",
  "ab",
  "illo",
  "inventore",
  "veritatis",
  "et",
  "quasi",
  "architecto",
  "beatae",
  "vitae",
  "dicta",
  "sunt",
  "explicabo",
  "aspernatur",
  "aut",
  "odit",
  "aut",
  "fugit",
  "sed",
  "quia",
  "consequuntur",
  "magni",
  "dolores",
  "eos",
  "qui",
  "ratione",
  "voluptatem",
  "sequi",
  "nesciunt",
  "neque",
  "dolorem",
  "ipsum",
  "quia",
  "dolor",
  "sit",
  "amet",
  "consectetur",
  "adipisci",
  "velit",
  "sed",
  "quia",
  "non",
  "numquam",
  "eius",
  "modi",
  "tempora",
  "incidunt",
  "ut",
  "labore",
  "et",
  "dolore",
  "magnam",
  "aliquam",
  "quaerat",
  "voluptatem",
  "ut",
  "enim",
  "ad",
  "minima",
  "veniam",
  "quis",
  "nostrum",
  "exercitationem",
  "ullam",
  "corporis",
  "nemo",
  "enim",
  "ipsam",
  "voluptatem",
  "quia",
  "voluptas",
  "sit",
  "suscipit",
  "laboriosam",
  "nisi",
  "ut",
  "aliquid",
  "ex",
  "ea",
  "commodi",
  "consequatur",
  "quis",
  "autem",
  "vel",
  "eum",
  "iure",
  "reprehenderit",
  "qui",
  "in",
  "ea",
  "voluptate",
  "velit",
  "esse",
  "quam",
  "nihil",
  "molestiae",
  "et",
  "iusto",
  "odio",
  "dignissimos",
  "ducimus",
  "qui",
  "blanditiis",
  "praesentium",
  "laudantium",
  "totam",
  "rem",
  "voluptatum",
  "deleniti",
  "atque",
  "corrupti",
  "quos",
  "dolores",
  "et",
  "quas",
  "molestias",
  "excepturi",
  "sint",
  "occaecati",
  "cupiditate",
  "non",
  "provident",
  "sed",
  "ut",
  "perspiciatis",
  "unde",
  "omnis",
  "iste",
  "natus",
  "error",
  "similique",
  "sunt",
  "in",
  "culpa",
  "qui",
  "officia",
  "deserunt",
  "mollitia",
  "animi",
  "id",
  "est",
  "laborum",
  "et",
  "dolorum",
  "fuga",
  "et",
  "harum",
  "quidem",
  "rerum",
  "facilis",
  "est",
  "et",
  "expedita",
  "distinctio",
  "nam",
  "libero",
  "tempore",
  "cum",
  "soluta",
  "nobis",
  "est",
  "eligendi",
  "optio",
  "cumque",
  "nihil",
  "impedit",
  "quo",
  "porro",
  "quisquam",
  "est",
  "qui",
  "minus",
  "id",
  "quod",
  "maxime",
  "placeat",
  "facere",
  "possimus",
  "omnis",
  "voluptas",
  "assumenda",
  "est",
  "omnis",
  "dolor",
  "repellendus",
  "temporibus",
  "autem",
  "quibusdam",
  "et",
  "aut",
  "consequatur",
  "vel",
  "illum",
  "qui",
  "dolorem",
  "eum",
  "fugiat",
  "quo",
  "voluptas",
  "nulla",
  "pariatur",
  "at",
  "vero",
  "eos",
  "et",
  "accusamus",
  "officiis",
  "debitis",
  "aut",
  "rerum",
  "necessitatibus",
  "saepe",
  "eveniet",
  "ut",
  "et",
  "voluptates",
  "repudiandae",
  "sint",
  "et",
  "molestiae",
  "non",
  "recusandae",
  "itaque",
  "earum",
  "rerum",
  "hic",
  "tenetur",
  "a",
  "sapiente",
  "delectus",
  "ut",
  "aut",
  "reiciendis",
  "voluptatibus",
  "maiores",
  "doloribus",
  "asperiores",
  "repellat"
];

},{}],230:[function(require,module,exports){
module["exports"] = [
  "Abigail",
  "Ada",
  "Adalberta",
  "Adéla",
  "Adelaida",
  "Adina",
  "Adolfa",
  "Adolfína",
  "Adriana",
  "Adriána",
  "Adriena",
  "Afra",
  "Agáta",
  "Aglaja",
  "Aida",
  "Alana",
  "Albena",
  "Alberta",
  "Albertina",
  "Albertýna",
  "Albína",
  "Alena",
  "Aleška",
  "Alexandra",
  "Alfréda",
  "Alice",
  "Alida",
  "Alina",
  "Alma",
  "Aloisie",
  "Alojzije",
  "Alžběta",
  "Amálie",
  "Amanda",
  "Amáta",
  "Amélie",
  "Anabela",
  "Anastázie",
  "Anatázie",
  "Anatolie",
  "Anatólie",
  "Anděla",
  "Andělína",
  "Andrea",
  "Aneta",
  "Anežka",
  "Angela",
  "Angelika",
  "Anita",
  "Anna",
  "Anselma",
  "Antonie",
  "Apolena",
  "Arabela",
  "Aranka",
  "Areta",
  "Ariadna",
  "Ariana",
  "Ariela",
  "Arleta",
  "Armida",
  "Arna",
  "Arnolda",
  "Arnoštka",
  "Astrid",
  "Astrida",
  "Atanázie",
  "Augusta",
  "Augustina",
  "Augustýna",
  "Aura",
  "Aurélie",
  "Aurora",
  "Babeta",
  "Barbara",
  "Barbora",
  "Beáta",
  "Beatrice",
  "Bedřiška",
  "Bela",
  "Běla",
  "Belinda",
  "Benedikta",
  "Berenika",
  "Berit",
  "Bernarda",
  "Berta",
  "Bertolda",
  "Bianka",
  "Bibiana",
  "Birgit",
  "Birgita",
  "Blahomila",
  "Blahomíra",
  "Blahoslava",
  "Blanka",
  "Blažena",
  "Bohdana",
  "Bohumila",
  "Bohumíra",
  "Bohuna",
  "Bohuslava",
  "Bohuše",
  "Bojana",
  "Bojislava",
  "Boleslava",
  "Borislava",
  "Bořislava",
  "Božena",
  "Božetěcha",
  "Božidara",
  "Branimíra",
  "Branislava",
  "Bratislava",
  "Brenda",
  "Brigita",
  "Brita",
  "Bronislava",
  "Bruna",
  "Brunhilda",
  "Břetislava",
  "Cecilie",
  "Cecílie",
  "Celestina",
  "Celestýna",
  "Celie",
  "Celina",
  "Ctibora",
  "Ctirada",
  "Ctislava",
  "Cyntie",
  "Cyrila",
  "Čeňka",
  "Čestmíra",
  "Čistoslava",
  "Dagmar",
  "Dagmara",
  "Dalibora",
  "Dalida",
  "Dalie",
  "Dalila",
  "Dalimila",
  "Dalimíra",
  "Damaris",
  "Damiana",
  "Damiána",
  "Dana",
  "Danica",
  "Daniela",
  "Danuše",
  "Danuta",
  "Daria",
  "Darie",
  "Darina",
  "Darja",
  "Davida",
  "Debora",
  "Delie",
  "Denisa",
  "Diana",
  "Dina",
  "Dita",
  "Diviška",
  "Dobrava",
  "Dobromila",
  "Dobromíra",
  "Dobroslava",
  "Dominika",
  "Donalda",
  "Donáta",
  "Dora",
  "Doris",
  "Dorota",
  "Doubrava",
  "Doubravka",
  "Drahomila",
  "Drahomíra",
  "Drahoslava",
  "Drahotína",
  "Drahuše",
  "Dulcinea",
  "Dušana",
  "Edita",
  "Eduarda",
  "Edvarda",
  "Egona",
  "Ela",
  "Elektra",
  "Elena",
  "Eleonora",
  "Elfrída",
  "Eliška",
  "Elsa",
  "Elvíra",
  "Elza",
  "Ema",
  "Emanuela",
  "Emilie",
  "Emílie",
  "Erika",
  "Erna",
  "Ervína",
  "Estela",
  "Ester",
  "Estera",
  "Etela",
  "Eufrozina",
  "Eufrozína",
  "Eugenie",
  "Eulálie",
  "Eunika",
  "Eusebie",
  "Eva",
  "Evelina",
  "Evelína",
  "Evženie",
  "Fabiána",
  "Fabie",
  "Fatima",
  "Faustina",
  "Faustýna",
  "Féba",
  "Fedora",
  "Felicie",
  "Felície",
  "Felicita",
  "Ferdinanda",
  "Fidelie",
  "Filipa",
  "Filoména",
  "Flavie",
  "Flora",
  "Flóra",
  "Florentina",
  "Florentýna",
  "Františka",
  "Frída",
  "Gabriela",
  "Gaja",
  "Gajana",
  "Galina",
  "Garika",
  "Gema",
  "Geralda",
  "Geraldina",
  "Gerarda",
  "Gerardina",
  "Gerda",
  "Gerharda",
  "Gertruda",
  "Gilberta",
  "Gina",
  "Gisela",
  "Gita",
  "Gizela",
  "Glorie",
  "Gordana",
  "Graciána",
  "Gracie",
  "Grácie",
  "Gražina",
  "Gréta",
  "Griselda",
  "Grizelda",
  "Gudrun",
  "Gustava",
  "Gvendolina",
  "Gvendolína",
  "Halina",
  "Hana",
  "Háta",
  "Havla",
  "Heda",
  "Hedvika",
  "Heidrun",
  "Helena",
  "Helga",
  "Herberta",
  "Hermína",
  "Herta",
  "Hilda",
  "Hortensie",
  "Hortenzie",
  "Horymíra",
  "Hostimila",
  "Hostimíra",
  "Hostislava",
  "Hvězdoslava",
  "Hyacinta",
  "Chranislava",
  "Iboja",
  "Ida",
  "Ignácie",
  "Ignáta",
  "Ildika",
  "Iljana",
  "Ilona",
  "Ilsa",
  "Ilza",
  "Ines",
  "Inesa",
  "Inéz",
  "Ingeborg",
  "Ingeborga",
  "Ingrid",
  "Ingrida",
  "Inka",
  "Irena",
  "Iris",
  "Irma",
  "Isabela",
  "Isidora",
  "Isolda",
  "Iva",
  "Ivana",
  "Iveta",
  "Ivona",
  "Izabela",
  "Izidora",
  "Izolda",
  "Jadrana",
  "Jadranka",
  "Jakuba",
  "Jakubka",
  "Jana",
  "Jarmila",
  "Jarolíma",
  "Jaromíra",
  "Jaroslava",
  "Jasmína",
  "Jasna",
  "Jasněna",
  "Jelena",
  "Jenovéfa",
  "Jesika",
  "Jindra",
  "Jindřiška",
  "Jiřina",
  "Jitka",
  "Johana",
  "Jolana",
  "Jolanta",
  "Jordana",
  "Jorga",
  "Josefa",
  "Josefína",
  "Jovana",
  "Jozefa",
  "Jozefína",
  "Judita",
  "Juliana",
  "Juliána",
  "Julie",
  "Justina",
  "Justýna",
  "Juta",
  "Kamila",
  "Karin",
  "Karina",
  "Karla",
  "Karmela",
  "Karmen",
  "Karolina",
  "Karolína",
  "Kateřina",
  "Katrin",
  "Katrina",
  "Kazi",
  "Kazimíra",
  "Kira",
  "Klára",
  "Klaudie",
  "Klementina",
  "Klementýna",
  "Kleopatra",
  "Klotylda",
  "Koleta",
  "Kolombína",
  "Kolumbína",
  "Konstance",
  "Konstancie",
  "Konsuela",
  "Konzuela",
  "Kora",
  "Kordula",
  "Korina",
  "Kornélie",
  "Krasava",
  "Krasomila",
  "Kristina",
  "Kristýna",
  "Kunhuta",
  "Květa",
  "Květoslava",
  "Květuše",
  "Lada",
  "Ladislava",
  "Larisa",
  "Laura",
  "Laurencie",
  "Lea",
  "Léda",
  "Leila",
  "Lejla",
  "Lena",
  "Lenka",
  "Leokádie",
  "Leona",
  "Leonora",
  "Leontina",
  "Leontýna",
  "Leopolda",
  "Leopoldina",
  "Leopoldýna",
  "Leticie",
  "Lia",
  "Liana",
  "Liběna",
  "Libora",
  "Liboslava",
  "Libuše",
  "Lidmila",
  "Liliana",
  "Lina",
  "Linda",
  "Livie",
  "Ljuba",
  "Lola",
  "Loreta",
  "Lorna",
  "Lota",
  "Lubomíra",
  "Luboslava",
  "Luciána",
  "Lucie",
  "Ludiše",
  "Luďka",
  "Ludmila",
  "Ludomíra",
  "Ludoslava",
  "Ludvika",
  "Ludvíka",
  "Luisa",
  "Lujza",
  "Lukrécie",
  "Lumíra",
  "Lydie",
  "Lýdie",
  "Mabel",
  "Mabela",
  "Magda",
  "Magdalena",
  "Magdaléna",
  "Mahulena",
  "Maja",
  "Mája",
  "Malvína",
  "Manon",
  "Manona",
  "Manuela",
  "Marcela",
  "Marcelína",
  "Margit",
  "Margita",
  "Mariana",
  "Marie",
  "Marieta",
  "Marika",
  "Marilyn",
  "Marina",
  "Mariola",
  "Marion",
  "Marisa",
  "Marita",
  "Markéta",
  "Marlena",
  "Marta",
  "Martina",
  "Matylda",
  "Maud",
  "Maxima",
  "Mečislava",
  "Medea",
  "Médea",
  "Melánie",
  "Melinda",
  "Melisa",
  "Melita",
  "Mercedes",
  "Michaela",
  "Michala",
  "Milada",
  "Milana",
  "Milena",
  "Miloslava",
  "Milred",
  "Miluše",
  "Mína",
  "Mira",
  "Mirabela",
  "Miranda",
  "Mirela",
  "Miriam",
  "Mirjam",
  "Mirka",
  "Miromila",
  "Miroslava",
  "Mnislava",
  "Mona",
  "Monika",
  "Muriel",
  "Muriela",
  "Myrna",
  "Naďa",
  "Naděžda",
  "Naneta",
  "Narcisa",
  "Natalie",
  "Natálie",
  "Nataša",
  "Neda",
  "Nela",
  "Nevena",
  "Nika",
  "Niké",
  "Nikodéma",
  "Nikol",
  "Nikola",
  "Nila",
  "Nina",
  "Noema",
  "Noemi",
  "Nona",
  "Nora",
  "Norberta",
  "Norma",
  "Odeta",
  "Ofélie",
  "Oktavie",
  "Oktávie",
  "Oldřiška",
  "Olga",
  "Oliva",
  "Olivie",
  "Olympie",
  "Ondřejka",
  "Otakara",
  "Otilie",
  "Otýlie",
  "Oxana",
  "Palmira",
  "Pamela",
  "Paskala",
  "Patricie",
  "Pavla",
  "Pavlína",
  "Pelagie",
  "Penelopa",
  "Perla",
  "Persida",
  "Perzida",
  "Petra",
  "Petrana",
  "Petronela",
  "Petronila",
  "Petruše",
  "Petula",
  "Pilar",
  "Polyxena",
  "Pravdomila",
  "Pravomila",
  "Pravoslav",
  "Pravoslava",
  "Priscila",
  "Priska",
  "Prokopa",
  "Přibyslava",
  "Radana",
  "Radimíra",
  "Radislava",
  "Radka",
  "Radmila",
  "Radomila",
  "Radomíra",
  "Radoslava",
  "Radovana",
  "Radslava",
  "Rafaela",
  "Ráchel",
  "Raisa",
  "Rajsa",
  "Ramona",
  "Rastislava",
  "Rebeka",
  "Regina",
  "Regína",
  "Renata",
  "Renáta",
  "René",
  "Ria",
  "Riana",
  "Richarda",
  "Rina",
  "Rita",
  "Roberta",
  "Robina",
  "Romana",
  "Rosa",
  "Rosalinda",
  "Rosamunda",
  "Rosana",
  "Rostislava",
  "Rovena",
  "Roxana",
  "Róza",
  "Rozálie",
  "Rozalinda",
  "Rozamunda",
  "Rozana",
  "Rozina",
  "Rozita",
  "Rozvita",
  "Rudolfa",
  "Rudolfina",
  "Rudolfína",
  "Rut",
  "Rút",
  "Růžena",
  "Řehořka",
  "Sabina",
  "Sabrina",
  "Salomea",
  "Salomena",
  "Samuela",
  "Sandra",
  "Sára",
  "Saskia",
  "Saskie",
  "Saxona",
  "Selena",
  "Selma",
  "Senta",
  "Serafína",
  "Serena",
  "Scholastika",
  "Sibyla",
  "Sidonie",
  "Silvána",
  "Silvie",
  "Simeona",
  "Simona",
  "Skarlet",
  "Skarleta",
  "Slavěna",
  "Slávka",
  "Slavomila",
  "Slavomíra",
  "Soběslava",
  "Sofie",
  "Sofronie",
  "Solveig",
  "Solveiga",
  "Soňa",
  "Sotira",
  "Stanislava",
  "Stáza",
  "Stela",
  "Svatava",
  "Svatoslava",
  "Světla",
  "Světlana",
  "Světluše",
  "Sylva",
  "Sylvie",
  "Sylvie",
  "Šárka",
  "Šarlota",
  "Šimona",
  "Štěpána",
  "Štěpánka",
  "Tamara",
  "Táňa",
  "Taťána",
  "Tea",
  "Tekla",
  "Teodora",
  "Teodozie",
  "Teofila",
  "Tereza",
  "Terezie",
  "Thea",
  "Theodora",
  "Theodosie",
  "Theofila",
  "Tomáška",
  "Toska",
  "Ulrika",
  "Una",
  "Uršula",
  "Václava",
  "Valburga",
  "Valdemara",
  "Valentina",
  "Valentýna",
  "Valerie",
  "Valérie",
  "Vanda",
  "Vanesa",
  "Věduna",
  "Veleslava",
  "Velislava",
  "Věnceslava",
  "Vendelína",
  "Vendula",
  "Vendulka",
  "Věnka",
  "Venuše",
  "Věra",
  "Verona",
  "Veronika",
  "Věroslava",
  "Věslava",
  "Vesna",
  "Viktorie",
  "Viléma",
  "Vilemína",
  "Vilma",
  "Vincencie",
  "Viola",
  "Violeta",
  "Virginie",
  "Virgínie",
  "Víta",
  "Vítězslava",
  "Viviana",
  "Vladana",
  "Vladěna",
  "Vladimíra",
  "Vladislava",
  "Vlasta",
  "Vlastimila",
  "Vlastimíra",
  "Vlastislava",
  "Vojmíra",
  "Vojslava",
  "Vojtěška",
  "Voršila",
  "Vratislava",
  "Xaverie",
  "Xenie",
  "Zaida",
  "Zaira",
  "Zbyhněva",
  "Zbyňka",
  "Zbyslava",
  "Zbyška",
  "Zdena",
  "Zdenka",
  "Zdeňka",
  "Zdeslava",
  "Zdislava",
  "Zenobie",
  "Zina",
  "Zinaida",
  "Zita",
  "Zlata",
  "Zlatomíra",
  "Zlatuše",
  "Zoe",
  "Zoja",
  "Zora",
  "Zoroslava",
  "Zuzana",
  "Zvonimíra",
  "Žakelina",
  "Žakelína",
  "Žaneta",
  "Ždana",
  "Želimíra",
  "Želislava",
  "Želmíra",
  "Žitomíra",
  "Žitoslava",
  "Živa",
  "Živana",
  "Žofie",
];

},{}],231:[function(require,module,exports){
module["exports"] = [
  "Adamová",
  "Adamcová",
  "Adámková",
  "Albrechtová",
  "Ambrožová",
  "Andělová",
  "Andrleová",
  "Antošová",
  "Bajrová",
  "Balážová",
  "Balcarová",
  "Balogová",
  "Balounová",
  "Baráková",
  "Baranová",
  "Barešová",
  "Bártová",
  "Bartáková",
  "Bartoňová",
  "Bartošová",
  "Bartošková",
  "Bartůněková",
  "Baštová",
  "Baurová",
  "Bayrová",
  "Bažantová",
  "Bečková",
  "Bečvářová",
  "Bednářová",
  "Bednaříková",
  "Bělohlávková",
  "Bendová",
  "Benešová",
  "Beranová",
  "Beránková",
  "Bergrová",
  "Berková",
  "Berkyová",
  "Bernardová",
  "Bezděková",
  "Bílková",
  "Bílýová",
  "Bínová",
  "Bittnrová",
  "Blahová",
  "Bláhová",
  "Blažková",
  "Blechová",
  "Bobková",
  "Bočková",
  "Boháčová",
  "Boháčková",
  "Böhmová",
  "Borovičková",
  "Boučková",
  "Boudová",
  "Boušková",
  "Brabcová",
  "Brabencová",
  "Bradová",
  "Bradáčová",
  "Braunová",
  "Brázdová",
  "Brázdilová",
  "Brejchová",
  "Březinová",
  "Břízová",
  "Brožová",
  "Brožková",
  "Brychtová",
  "Bubeníková",
  "Bučková",
  "Buchtová",
  "Burdová",
  "Burešová",
  "Burianová",
  "Buriánková",
  "Byrtusová",
  "čadová",
  "Cahová",
  "čápová",
  "čapková",
  "čechová",
  "čejková",
  "čermáková",
  "černíková",
  "černochová",
  "černohorskýová",
  "černýová",
  "červeňáková",
  "červenková",
  "červenýová",
  "červinková",
  "Chaloupková",
  "Chalupová",
  "Charvátová",
  "Chládková",
  "Chlupová",
  "Chmelařová",
  "Chmelíková",
  "Chovancová",
  "Chromýová",
  "Chudobová",
  "Chvátalová",
  "Chvojková",
  "Chytilová",
  "Cibulková",
  "čiháková",
  "Cihlářová",
  "Císařová",
  "čížková",
  "čonková",
  "Coufalová",
  "čurdová",
  "Daněková",
  "Danilová",
  "Danišová",
  "Davidová",
  "Dědková",
  "Demetrová",
  "Dittrichová",
  "Divišová",
  "Dlouhýová",
  "Dobešová",
  "Dobiášová",
  "Dobrovolnýová",
  "Dočekalová",
  "Dočkalová",
  "Dohnalová",
  "Dokoupilová",
  "Dolečková",
  "Dolejšová",
  "Dolejšíová",
  "Doležalová",
  "Doležlová",
  "Doskočilová",
  "Dostálová",
  "Doubková",
  "Doubravová",
  "Doušová",
  "Drábková",
  "Drozdová",
  "Dubskýová",
  "Duchoňová",
  "Dudová",
  "Dudková",
  "Dufková",
  "Dunková",
  "Dušková",
  "Dvořáčková",
  "Dvořáková",
  "Dvorskýová",
  "Eliášová",
  "Erbnová",
  "Fabiánová",
  "Fantová",
  "Farkašová",
  "Fejfarová",
  "Fenclová",
  "Ferencová",
  "Ferkoová",
  "Fialová",
  "Fiedlrová",
  "Filipová",
  "Fischrová",
  "Fišrová",
  "Floriánová",
  "Fojtíková",
  "Foltýnová",
  "Formanová",
  "Formánková",
  "Fořtová",
  "Fousková",
  "Francová",
  "Franěková",
  "Franková",
  "Fridrichová",
  "Frydrychová",
  "Fuchsová",
  "Fučíková",
  "Fuksová",
  "Gáborová",
  "Gabrilová",
  "Gajdošová",
  "Gažiová",
  "Gottwaldová",
  "Gregorová",
  "Grubrová",
  "Grundzová",
  "Grygarová",
  "Hájková",
  "Hajnýová",
  "Hálová",
  "Hamplová",
  "Hánová",
  "Hanáčková",
  "Hanáková",
  "Hanousková",
  "Hanusová",
  "Hanušová",
  "Hanzalová",
  "Hanzlová",
  "Hanzlíková",
  "Hartmanová",
  "Hašková",
  "Havlová",
  "Havelková",
  "Havlíčková",
  "Havlíková",
  "Havránková",
  "Heczkoová",
  "Hegrová",
  "Hejdová",
  "Hejduková",
  "Hejlová",
  "Hejnová",
  "Hendrychová",
  "Hermanová",
  "Heřmanová",
  "Heřmánková",
  "Hladíková",
  "Hladkýová",
  "Hlaváčová",
  "Hlaváčková",
  "Hlavatýová",
  "Hlávková",
  "Hloušková",
  "Hoffmannová",
  "Hofmanová",
  "Holanová",
  "Holasová",
  "Holcová",
  "Holečková",
  "Holíková",
  "Holoubková",
  "Holubová",
  "Holýová",
  "Homolová",
  "Homolková",
  "Horová",
  "Horáčková",
  "Horáková",
  "Hořejšíová",
  "Horkýová",
  "Horňáková",
  "Horníčková",
  "Horníková",
  "Horskýová",
  "Horvátová",
  "Horváthová",
  "Hošková",
  "Houdková",
  "Houšková",
  "Hovorková",
  "Hrabalová",
  "Hrabovskýová",
  "Hradeckýová",
  "Hradilová",
  "Hrbáčková",
  "Hrbková",
  "Hrdinová",
  "Hrdličková",
  "Hrdýová",
  "Hrnčířová",
  "Hrochová",
  "Hromádková",
  "Hronová",
  "Hrubešová",
  "Hrubýová",
  "Hrušková",
  "Hrůzová",
  "Hubáčková",
  "Hudcová",
  "Hudečková",
  "Hůlková",
  "Humlová",
  "Husáková",
  "Hušková",
  "Hýblová",
  "Hynková",
  "Jahodová",
  "Jakešová",
  "Jaklová",
  "Jakoubková",
  "Jakubcová",
  "Janáčková",
  "Janáková",
  "Janatová",
  "Jančová",
  "Jančíková",
  "Jandová",
  "Janečková",
  "Janečková",
  "Janíčková",
  "Janíková",
  "Jankůová",
  "Janotová",
  "Janoušková",
  "Janovskýová",
  "Jansová",
  "Jánskýová",
  "Janůová",
  "Jarešová",
  "Jarošová",
  "Jašková",
  "Javůrková",
  "Jechová",
  "Jedličková",
  "Jelnová",
  "Jelínková",
  "Jeníčková",
  "Jeřábková",
  "Ježová",
  "Ježková",
  "Jílková",
  "Jindrová",
  "Jírová",
  "Jiráková",
  "Jiránková",
  "Jirásková",
  "Jiříková",
  "Jirková",
  "Jirkůová",
  "Jiroušková",
  "Jirsová",
  "Johnová",
  "Jonášová",
  "Junková",
  "Jurčíková",
  "Jurečková",
  "Juřicová",
  "Juříková",
  "Kabátová",
  "Kačírková",
  "Kadeřábková",
  "Kadlcová",
  "Kafková",
  "Kaisrová",
  "Kalová",
  "Kalábová",
  "Kalašová",
  "Kalinová",
  "Kalivodová",
  "Kalousová",
  "Kalousková",
  "Kameníková",
  "Kaňová",
  "Káňová",
  "Kaňková",
  "Kantorová",
  "Kaplanová",
  "Karasová",
  "Karásková",
  "Karbanová",
  "Karlová",
  "Karlíková",
  "Kasalová",
  "Kašíková",
  "Kašparová",
  "Kašpárková",
  "Kavková",
  "Kazdová",
  "Kindlová",
  "Klečková",
  "Kleinová",
  "Klementová",
  "Klímová",
  "Klimentová",
  "Klimešová",
  "Kloučková",
  "Kloudová",
  "Knapová",
  "Knotková",
  "Kochová",
  "Kočíová",
  "Kociánová",
  "Kocmanová",
  "Kocourková",
  "Kohoutová",
  "Kohoutková",
  "Koláčková",
  "Kolářová",
  "Kolaříková",
  "Kolková",
  "Kolmanová",
  "Komárková",
  "Komínková",
  "Konečnýová",
  "Koníčková",
  "Kopalová",
  "Kopečková",
  "Kopeckýová",
  "Kopečnýová",
  "Kopřivová",
  "Korblová",
  "Kořínková",
  "Kosová",
  "Kosíková",
  "Kosinová",
  "Košťálová",
  "Kostková",
  "Kotasová",
  "Kotková",
  "Kotlárová",
  "Kotrbová",
  "Koubová",
  "Koubková",
  "Koudelová",
  "Koudelková",
  "Koukalová",
  "Kouřilová",
  "Koutnýová",
  "Kováčová",
  "Kovářová",
  "Kovaříková",
  "Kováříková",
  "Kozáková",
  "Kozlová",
  "Krajíčková",
  "Králová",
  "Králíčková",
  "Králíková",
  "Krátkýová",
  "Kratochvílová",
  "Krausová",
  "Krčmářová",
  "Křečková",
  "Krejčíová",
  "Krejčíková",
  "Krejčířová",
  "Křenková",
  "Krištofová",
  "Křivánková",
  "Křížová",
  "Křížková",
  "Kropáčková",
  "Kroupová",
  "Krupová",
  "Krupičková",
  "Krupková",
  "Kubová",
  "Kubánková",
  "Kubátová",
  "Kubcová",
  "Kubelková",
  "Kubešová",
  "Kubicová",
  "Kubíčková",
  "Kubíková",
  "Kubínová",
  "Kubišová",
  "Kučová",
  "Kučerová",
  "Kuchařová",
  "Kuchtová",
  "Kudláčková",
  "Kudrnová",
  "Kuklová",
  "Kulhánková",
  "Kulhavýová",
  "Kuncová",
  "Kunešová",
  "Kupcová",
  "Kupková",
  "Kurková",
  "Kužlová",
  "Kvapilová",
  "Kvasničková",
  "Kynclová",
  "Kyselová",
  "Lacinová",
  "Lackoová",
  "Lakatošová",
  "Landová",
  "Langová",
  "Langrová",
  "Langrová",
  "Látalová",
  "Lavičková",
  "Leová",
  "Lebedová",
  "Levýová",
  "Líbalová",
  "Linhartová",
  "Lišková",
  "Lorencová",
  "Loudová",
  "Ludvíková",
  "Lukáčová",
  "Lukášová",
  "Lukášková",
  "Lukešová",
  "Macáková",
  "Macková",
  "Machová",
  "Máchová",
  "Machačová",
  "Macháčová",
  "Macháčková",
  "Machalová",
  "Machálková",
  "Macurová",
  "Majrová",
  "Malečková",
  "Málková",
  "Malíková",
  "Malinová",
  "Malýová",
  "Maňáková",
  "Marečková",
  "Marková",
  "Marešová",
  "Maříková",
  "Maršálková",
  "Maršíková",
  "Martincová",
  "Martinková",
  "Martínková",
  "Mašková",
  "Masopustová",
  "Matějíčková",
  "Matějková",
  "Matoušová",
  "Matoušková",
  "Matulová",
  "Matušková",
  "Matyášová",
  "Matysová",
  "Maxová",
  "Mayrová",
  "Mazánková",
  "Medková",
  "Melicharová",
  "Menclová",
  "Menšíková",
  "Mertová",
  "Michalová",
  "Michalcová",
  "Michálková",
  "Michalíková",
  "Michnová",
  "Mičková",
  "Miková",
  "Míková",
  "Mikešová",
  "Mikoová",
  "Mikulová",
  "Mikulášková",
  "Minářová",
  "Minaříková",
  "Mirgová",
  "Mládková",
  "Mlčochová",
  "Mlejnková",
  "Mojžíšová",
  "Mokrýová",
  "Molnárová",
  "Moravcová",
  "Morávková",
  "Motlová",
  "Motyčková",
  "Moučková",
  "Moudrýová",
  "Mráčková",
  "Mrázová",
  "Mrázková",
  "Mrkvičková",
  "Muchová",
  "Müllrová",
  "Műllrová",
  "Musilová",
  "Mužíková",
  "Myšková",
  "Nagyová",
  "Najmanová",
  "Navrátilová",
  "Nečasová",
  "Nedbalová",
  "Nedomová",
  "Nedvědová",
  "Nejedlýová",
  "Němcová",
  "Němečková",
  "Nešporová",
  "Nesvadbová",
  "Neubaurová",
  "Neumanová",
  "Neumannová",
  "Nguynová",
  "Nguyen vanová",
  "Nosková",
  "Nováčková",
  "Nováková",
  "Novosadová",
  "Novotnýová",
  "Novýová",
  "Odehnalová",
  "Oláhová",
  "Olivová",
  "Ondrová",
  "Ondráčková",
  "Orságová",
  "Otáhalová",
  "Palečková",
  "Pánková",
  "Papežová",
  "Pařízková",
  "Pašková",
  "Pátková",
  "Patočková",
  "Paulová",
  "Pavlová",
  "Pavelková",
  "Pavelková",
  "Pavlasová",
  "Pavlicová",
  "Pavlíčková",
  "Pavlíková",
  "Pavlůová",
  "Pazderová",
  "Pechová",
  "Pechová",
  "Pecháčková",
  "Pecková",
  "Pekařová",
  "Pekárková",
  "Pelcová",
  "Pelikánová",
  "Peřinová",
  "Pernicová",
  "Peroutková",
  "Pešková",
  "Pešková",
  "Peštová",
  "Peterková",
  "Petrová",
  "Petráková",
  "Petrášová",
  "Petříčková",
  "Petříková",
  "Petrůová",
  "Phamová",
  "Píchová",
  "Pilařová",
  "Pilátová",
  "Píšová",
  "Pivoňková",
  "Plačková",
  "Plachýová",
  "Plšková",
  "Pluhařová",
  "Podzimková",
  "Pohlová",
  "Pokornýová",
  "Poláčková",
  "Poláchová",
  "Poláková",
  "Polanskýová",
  "Polášková",
  "Polívková",
  "Popelková",
  "Pospíchalová",
  "Pospíšilová",
  "Potůčková",
  "Pourová",
  "Prachařová",
  "Prášková",
  "Pražáková",
  "Prchalová",
  "Přibylová",
  "Příhodová",
  "Přikrylová",
  "Procházková",
  "Prokešová",
  "Prokopová",
  "Prošková",
  "Provazníková",
  "Průchová",
  "Průšová",
  "Pšeničková",
  "Ptáčková",
  "Rácová",
  "Radová",
  "Raková",
  "Rambousková",
  "Rašková",
  "Ratajová",
  "řeháčková",
  "řeháková",
  "řehořová",
  "Remešová",
  "řezáčová",
  "Rezková",
  "řezníčková",
  "Richtrová",
  "Richtrová",
  "říhová",
  "Roubalová",
  "Rousová",
  "Rozsypalová",
  "Rudolfová",
  "Růžková",
  "Růžičková",
  "Rybová",
  "Rybářová",
  "Rýdlová",
  "Ryšavýová",
  "Sadílková",
  "šafářová",
  "šafaříková",
  "šafránková",
  "šálková",
  "Samková",
  "šandová",
  "šašková",
  "Schejbalová",
  "Schmidtová",
  "Schneidrová",
  "Schwarzová",
  "šebková",
  "šebelová",
  "šebestová",
  "šedová",
  "šedivýová",
  "Sedláčková",
  "Sedláková",
  "Sedlářová",
  "Sehnalová",
  "Seidlová",
  "Seifertová",
  "Sekaninová",
  "Semerádová",
  "šenková",
  "šestáková",
  "ševčíková",
  "Severová",
  "Sikorová",
  "šilhavýová",
  "šímová",
  "šimáčková",
  "šimáková",
  "šimánková",
  "šimčíková",
  "šimečková",
  "šimková",
  "šimonová",
  "šimůnková",
  "šindelářová",
  "šindlrová",
  "šípová",
  "šípková",
  "šírová",
  "širokýová",
  "šišková",
  "Siváková",
  "Skáclová",
  "Skalová",
  "Skálová",
  "Skalickýová",
  "Sklenářová",
  "škodová",
  "Skopalová",
  "Skořepová",
  "škrabalová",
  "Skřivánková",
  "Slabýová",
  "Sládková",
  "Sladkýová",
  "Slámová",
  "Slaninová",
  "Slavíčková",
  "Slavíková",
  "šlechtová",
  "Slezáková",
  "Slováčková",
  "Slováková",
  "Sluková",
  "Smejkalová",
  "šmejkalová",
  "Smékalová",
  "šmerdová",
  "Smetanová",
  "šmídová",
  "Smolová",
  "Smolíková",
  "Smolková",
  "Smrčková",
  "Smržová",
  "Smutnýová",
  "šnajdrová",
  "Sobková",
  "Sobotková",
  "Sochorová",
  "Sojková",
  "Sokolová",
  "šolcová",
  "Sommrová",
  "Součková",
  "Soukupová",
  "Sovová",
  "špačková",
  "Spáčilová",
  "špičková",
  "šplíchalová",
  "Spurnýová",
  "šrámková",
  "Srbová",
  "Staněková",
  "Stárková",
  "Starýová",
  "šťastnýová",
  "štefanová",
  "štefková",
  "šteflová",
  "Stehlíková",
  "Steinrová",
  "Stejskalová",
  "štěpánová",
  "štěpánková",
  "štěrbová",
  "Stiborová",
  "Stoklasová",
  "Straková",
  "Stránskýová",
  "Strejčková",
  "Strnadová",
  "Strouhalová",
  "Stuchlíková",
  "Studenýová",
  "Studničková",
  "Stupková",
  "šubrtová",
  "Suchánková",
  "Suchomlová",
  "Suchýová",
  "Suková",
  "šulcová",
  "šustrová",
  "švábová",
  "Svačinová",
  "švandová",
  "švarcová",
  "Svatoňová",
  "Svatošová",
  "švcová",
  "švehlová",
  "švejdová",
  "švestková",
  "Světlíková",
  "Svitáková",
  "Svobodová",
  "Svozilová",
  "Sýkorová",
  "Synková",
  "Syrovýová",
  "Táborskýová",
  "Tancošová",
  "Teplýová",
  "Tesařová",
  "Tichýová",
  "Tomanová",
  "Tománková",
  "Tomášová",
  "Tomášková",
  "Tomečková",
  "Tomková",
  "Tomešová",
  "Tóthová",
  "Tranová",
  "Trávníčková",
  "Trčková",
  "Třísková",
  "Trnková",
  "Trojanová",
  "Truhlářová",
  "Tučková",
  "Tůmová",
  "Turečková",
  "Turková",
  "Tvrdíková",
  "Tvrdýová",
  "Uhrová",
  "Uhlířová",
  "Ulrichová",
  "Urbanová",
  "Urbancová",
  "Urbánková",
  "Vacková",
  "Váchová",
  "Václavková",
  "Václavíková",
  "Vaculíková",
  "Vágnrová",
  "Valová",
  "Valášková",
  "Válková",
  "Valentová",
  "Valešová",
  "Váňová",
  "Vančurová",
  "Vaněčková",
  "Vaněková",
  "Vaníčková",
  "Vargová",
  "Vašáková",
  "Vašková",
  "Vašíčková",
  "Vávrová",
  "Vavříková",
  "Večeřová",
  "Vejvodová",
  "Vernrová",
  "Veselýová",
  "Veverková",
  "Víchová",
  "Vilímková",
  "Vinšová",
  "Víšková",
  "Vítová",
  "Vitásková",
  "Vítková",
  "Vlachová",
  "Vlasáková",
  "Vlčková",
  "Vlková",
  "Vobořilová",
  "Vodáková",
  "Vodičková",
  "Vodrážková",
  "Vojáčková",
  "Vojtová",
  "Vojtěchová",
  "Vojtková",
  "Vojtíšková",
  "Vokounová",
  "Volková",
  "Volfová",
  "Volnýová",
  "Vondrová",
  "Vondráčková",
  "Vondráková",
  "Voráčková",
  "Vorlová",
  "Voříšková",
  "Vorlíčková",
  "Votavová",
  "Votrubová",
  "Vrabcová",
  "Vránová",
  "Vrbová",
  "Vrzalová",
  "Vybíralová",
  "Vydrová",
  "Vymazalová",
  "Vyskočilová",
  "Vysloužilová",
  "Wagnrová",
  "Waltrová",
  "Webrová",
  "Weissová",
  "Winklrová",
  "Wolfová",
  "Zábranskýová",
  "žáčková",
  "Zachová",
  "Zahrádková",
  "Zahradníková",
  "Zajícová",
  "Zajíčková",
  "žáková",
  "Zálešáková",
  "Zámečníková",
  "Zapletalová",
  "Zárubová",
  "Zatloukalová",
  "Zavadilová",
  "Zavřlová",
  "Zbořilová",
  "žďárskýová",
  "Zdražilová",
  "Zedníková",
  "Zelenková",
  "Zelenýová",
  "Zelinková",
  "Zemanová",
  "Zemánková",
  "žemličková",
  "Zezulová",
  "žídková",
  "žigová",
  "Zíková",
  "Zikmundová",
  "Zimová",
  "žižková",
  "Zlámalová",
  "Zoubková",
  "Zouharová",
  "žůrková",
  "Zvěřinová",
];

},{}],232:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.female_first_name = require("./female_first_name");
name.male_last_name = require("./male_last_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.title = require("./title");
name.name = require("./name");

},{"./female_first_name":230,"./female_last_name":231,"./male_first_name":233,"./male_last_name":234,"./name":235,"./prefix":236,"./suffix":237,"./title":238}],233:[function(require,module,exports){
module["exports"] = [
  "Abadon",
  "Abdon",
  "Ábel",
  "Abelard",
  "Abraham",
  "Abrahám",
  "Absolon",
  "Absolón",
  "Adalbert",
  "Adam",
  "Adin",
  "Adolf",
  "Adrian",
  "Adrián",
  "Agaton",
  "Achil",
  "Achiles",
  "Alan",
  "Alban",
  "Albert",
  "Albín",
  "Albrecht",
  "Aldo",
  "Alen",
  "Aleš",
  "Alexandr",
  "Alexej",
  "Alfons",
  "Alfréd",
  "Alois",
  "Alojz",
  "Alva",
  "Alvar",
  "Alvin",
  "Amadeus",
  "Amand",
  "Amát",
  "Ambrož",
  "Amos",
  "Ámos",
  "Anastáz",
  "Anatol",
  "Anděl",
  "Andělín",
  "Andrej",
  "Anselm",
  "Antal",
  "Antonín",
  "Aram",
  "Ariel",
  "Aristid",
  "Arkád",
  "Armand",
  "Armin",
  "Arne",
  "Arnold",
  "Arnošt",
  "Áron",
  "Árón",
  "Arpád",
  "Arsen",
  "Artur",
  "Artuš",
  "Arzen",
  "Atanas",
  "Atanáš",
  "Atila",
  "August",
  "Augustin",
  "Augustýn",
  "Aurel",
  "Aurelián",
  "Axel",
  "Baltazar",
  "Barnabáš",
  "Bartoloměj",
  "Basil",
  "Bazil",
  "Beatus",
  "Bedřich",
  "Benedikt",
  "Benjamin",
  "Benjamín",
  "Bernard",
  "Bertold",
  "Bertram",
  "Bivoj",
  "Blahomil",
  "Blahomír",
  "Blahoslav",
  "Blažej",
  "Bohdan",
  "Bohuchval",
  "Bohumil",
  "Bohumír",
  "Bohun",
  "Bohuslav",
  "Bohuš",
  "Bojan",
  "Bolemír",
  "Boleslav",
  "Bonifác",
  "Borek",
  "Boris",
  "Borislav",
  "Bořek",
  "Bořislav",
  "Bořivoj",
  "Božetěch",
  "Božidar",
  "Božislav",
  "Branimír",
  "Branislav",
  "Bratislav",
  "Bret",
  "Brian",
  "Brit",
  "Bronislav",
  "Bruno",
  "Břetislav",
  "Budimír",
  "Budislav",
  "Budivoj",
  "Cecil",
  "Cedrik",
  "Celestin",
  "Celestýn",
  "César",
  "Cézar",
  "Ctibor",
  "Ctirad",
  "Ctislav",
  "Cyprián",
  "Cyril",
  "Čeněk",
  "Čestmír",
  "Čistoslav",
  "Dag",
  "Dalibor",
  "Dalimil",
  "Dalimír",
  "Damián",
  "Dan",
  "Daniel",
  "Darek",
  "Darius",
  "David",
  "Denis",
  "Děpold",
  "Dětmar",
  "Dětřich",
  "Dezider",
  "Dimitrij",
  "Dino",
  "Dionýz",
  "Dionýzos",
  "Diviš",
  "Dluhoš",
  "Dobromil",
  "Dobromír",
  "Dobroslav",
  "Dominik",
  "Donald",
  "Donát",
  "Dorian",
  "Dorián",
  "Drahomil",
  "Drahomír",
  "Drahoň",
  "Drahoslav",
  "Drahoš",
  "Drahotín",
  "Drahutin",
  "Dušan",
  "Edgar",
  "Edmond",
  "Edmund",
  "Eduard",
  "Edvard",
  "Edvin",
  "Edvín",
  "Egmont",
  "Egon",
  "Eliáš",
  "Elizej",
  "Elizeus",
  "Elmar",
  "Elvis",
  "Emanuel",
  "Emanuel",
  "Emerich",
  "Emil",
  "Emilián",
  "Engelbert",
  "Erazim",
  "Erazmus",
  "Erhard",
  "Erich",
  "Erik",
  "Ernest",
  "Ernst",
  "Ervín",
  "Eugen",
  "Eusebius",
  "Evald",
  "Evan",
  "Evarist",
  "Evžen",
  "Ezechiel",
  "Ezra",
  "Fabián",
  "Faust",
  "Faustin",
  "Faustýn",
  "Fedor",
  "Felicián",
  "Felix",
  "Ferdinand",
  "Fidel",
  "Fidelius",
  "Filemon",
  "Filibert",
  "Filip",
  "Filomen",
  "Flavián",
  "Flavius",
  "Florentin",
  "Florentýn",
  "Florián",
  "Fortunát",
  "Fráňa",
  "Franc",
  "František",
  "Fridolín",
  "Gabin",
  "Gabriel",
  "Gál",
  "Garik",
  "Gaston",
  "Gedeon",
  "Gejza",
  "Genadij",
  "Gerald",
  "Gerard",
  "Gerazim",
  "Gerhard",
  "Géza",
  "Gilbert",
  "Gleb",
  "Glen",
  "Gorazd",
  "Gordon",
  "Gothard",
  "Gracián",
  "Grant",
  "Gunter",
  "Gűnter",
  "Gustav",
  "Hanuš",
  "Harald",
  "Harold",
  "Haštal",
  "Havel",
  "Helmut",
  "Herbert",
  "Herman",
  "Heřman",
  "Hilar",
  "Hilarius",
  "Hjalmar",
  "Homér",
  "Honor",
  "Honorius",
  "Horác",
  "Horst",
  "Horymír",
  "Hostimil",
  "Hostimír",
  "Hostislav",
  "Hostivít",
  "Hovard",
  "Hubert",
  "Hugo",
  "Hvězdoslav",
  "Hyacint",
  "Hynek",
  "Hypolit",
  "Chrabroš",
  "Chraniboj",
  "Chranibor",
  "Chranislav",
  "Chrudoš",
  "Chval",
  "Ignác",
  "Ignát",
  "Igor",
  "Ilja",
  "Inocenc",
  "Irenej",
  "Ireneus",
  "Irvin",
  "Isidor",
  "Ivan",
  "Ivar",
  "Ivo",
  "Ivor",
  "Izaiáš",
  "Izák",
  "Izidor",
  "Izmael",
  "Jacek",
  "Jáchym",
  "Jakub",
  "Jan",
  "Jarmil",
  "Jarolím",
  "Jaromil",
  "Jaromír",
  "Jaroslav",
  "Jason",
  "Jasoň",
  "Jeremiáš",
  "Jeroným",
  "Jiljí",
  "Jimram",
  "Jindřich",
  "Jiří",
  "Job",
  "Joel",
  "Jonáš",
  "Jonatan",
  "Jonathan",
  "Jordan",
  "Josef",
  "Jošt",
  "Jozef",
  "Jozue",
  "Juda",
  "Julián",
  "Julius",
  "Justin",
  "Justýn",
  "Kajetán",
  "Kamil",
  "Karel",
  "Kasián",
  "Kastor",
  "Kašpar",
  "Kazimír",
  "Kilián",
  "Kim",
  "Klaudián",
  "Klaudius",
  "Klement",
  "Kliment",
  "Knut",
  "Koloman",
  "Kolombín",
  "Kolumbán",
  "Kolumbín",
  "Konrád",
  "Konstantin",
  "Konstantýn",
  "Kornel",
  "Kornelius",
  "Kosma",
  "Kosmas",
  "Krasomil",
  "Krasoslav",
  "Kristián",
  "Kryšpín",
  "Kryštof",
  "Křesomysl",
  "Křišťan",
  "Kurt",
  "Květoň",
  "Květoslav",
  "Květoš",
  "Kvido",
  "Ladislav",
  "Lambert",
  "Lars",
  "Laurenc",
  "Lazar",
  "Leander",
  "Leandr",
  "Leo",
  "Leodegar",
  "Leon",
  "Leonard",
  "Leonid",
  "Leontýn",
  "Leopold",
  "Leoš",
  "Lešek",
  "Lev",
  "Libor",
  "Liboslav",
  "Lionel",
  "Livius",
  "Lorenc",
  "Lotar",
  "Lothar",
  "Lubomír",
  "Lubor",
  "Luboslav",
  "Luboš",
  "Lucián",
  "Lucius",
  "Luděk",
  "Ludivoj",
  "Ludomír",
  "Ludoslav",
  "Ludvík",
  "Lukáš",
  "Lukrecius",
  "Lumír",
  "Lutibor",
  "Lutobor",
  "Magnus",
  "Makar",
  "Manfred",
  "Manfréd",
  "Mansvet",
  "Manuel",
  "Marcel",
  "Marek",
  "Marian",
  "Marián",
  "Marin",
  "Mario",
  "Marius",
  "Martin",
  "Matěj",
  "Matouš",
  "Matyáš",
  "Max",
  "Maxim",
  "Maximilián",
  "Maxmilián",
  "Mečislav",
  "Medard",
  "Melichar",
  "Merlin",
  "Mervin",
  "Metod",
  "Metoděj",
  "Michael",
  "Michal",
  "Mikoláš",
  "Mikuláš",
  "Milan",
  "Milíč",
  "Milík",
  "Milivoj",
  "Miloň",
  "Milorad",
  "Miloslav",
  "Miloš",
  "Milota",
  "Milouš",
  "Milovan",
  "Milovín",
  "Milutín",
  "Mirek",
  "Mirko",
  "Miromil",
  "Miron",
  "Miroslav",
  "Mirtil",
  "Mlad",
  "Mladen",
  "Mnata",
  "Mnislav",
  "Modest",
  "Mojmír",
  "Mojžíš",
  "Morgan",
  "Moric",
  "Moris",
  "Mořic",
  "Mstislav",
  "Myron",
  "Myrtil",
  "Napoleon",
  "Narcis",
  "Natan",
  "Natanael",
  "Nathan",
  "Nathanael",
  "Něhoslav",
  "Neklan",
  "Nepomuk",
  "Nezamysl",
  "Nikita",
  "Nikodém",
  "Nikola",
  "Nikolas",
  "Norbert",
  "Norman",
  "Odolen",
  "Odon",
  "Oktavián",
  "Oktavius",
  "Olaf",
  "Olbram",
  "Oldřich",
  "Oleg",
  "Oliver",
  "Omar",
  "Ondřej",
  "Orest",
  "Oskar",
  "Osvald",
  "Ota",
  "Otakar",
  "Otmar",
  "Oto",
  "Otokar",
  "Otomar",
  "Ovidius",
  "Palmiro",
  "Pankrác",
  "Pantaleon",
  "Paris",
  "Parsival",
  "Paskal",
  "Patrik",
  "Pavel",
  "Pavlín",
  "Pelhřim",
  "Perikles",
  "Petr",
  "Petronius",
  "Pius",
  "Platon",
  "Platón",
  "Polykarp",
  "Pravdomil",
  "Pravomil",
  "Prokop",
  "Prosper",
  "Přemysl",
  "Přibyslav",
  "Radan",
  "Radegast",
  "Radek",
  "Radhost",
  "Radim",
  "Radimír",
  "Radislav",
  "Radivoj",
  "Radko",
  "Radmil",
  "Radomil",
  "Radomír",
  "Radoslav",
  "Radoš",
  "Radovan",
  "Radúz",
  "Radvan",
  "Rafael",
  "Raimund",
  "Rainald",
  "Rainer",
  "Rainhard",
  "Rainold",
  "Rajko",
  "Ralf",
  "Ramon",
  "Randolf",
  "Ranek",
  "Ranko",
  "Rastislav",
  "Ratibor",
  "Ratmír",
  "Redmond",
  "Reginald",
  "Remig",
  "Remus",
  "Renát",
  "René",
  "Richard",
  "Robert",
  "Robin",
  "Robinson",
  "Rodan",
  "Roderik",
  "Rodrigo",
  "Roger",
  "Roch",
  "Roland",
  "Rolf",
  "Roman",
  "Romeo",
  "Romuald",
  "Romul",
  "Romulus",
  "Ronald",
  "Rostislav",
  "Ruben",
  "Rudolf",
  "Rufus",
  "Rupert",
  "Ruprecht",
  "Ruslan",
  "Řehoř",
  "Sába",
  "Sámo",
  "Samson",
  "Samuel",
  "Saturnin",
  "Saul",
  "Sáva",
  "Sebastian",
  "Sebastián",
  "Sebestian",
  "Sedrik",
  "Serafín",
  "Serenus",
  "Sergej",
  "Servác",
  "Severín",
  "Sidon",
  "Sigfríd",
  "Silvan",
  "Silván",
  "Silvestr",
  "Silvius",
  "Simeon",
  "Simon",
  "Sinkler",
  "Sixt",
  "Sixtus",
  "Slávek",
  "Slaviboj",
  "Slavibor",
  "Slavoboj",
  "Slavoj",
  "Slavomil",
  "Slavomír",
  "Smil",
  "Soběslav",
  "Sokrat",
  "Soter",
  "Spytihněv",
  "Stanimír",
  "Stanislav",
  "Stojan",
  "Stojmír",
  "Svatoboj",
  "Svatobor",
  "Svatomír",
  "Svatopluk",
  "Svatoslav",
  "Sven",
  "Svetozar",
  "Šalamoun",
  "Šalomoun",
  "Šavel",
  "Šebastián",
  "Šimon",
  "Šťasta",
  "Štefan",
  "Štěpán",
  "Tadeáš",
  "Tankred",
  "Taras",
  "Teobald",
  "Teodor",
  "Teodorik",
  "Teodoz",
  "Teofan",
  "Teofil",
  "Terenc",
  "Terencius",
  "Theobald",
  "Theodor",
  "Theodorik",
  "Theofan",
  "Theofil",
  "Tiber",
  "Tiberius",
  "Tibor",
  "Tiburcius",
  "Tichomil",
  "Tichomír",
  "Tichon",
  "Timon",
  "Timotej",
  "Timoteus",
  "Timur",
  "Titus",
  "Tobiáš",
  "Tomáš",
  "Tomislav",
  "Tor",
  "Torkvát",
  "Torsten",
  "Tristan",
  "Udo",
  "Ulrich",
  "Upton",
  "Urban",
  "Uve",
  "Václav",
  "Vadim",
  "Valdemar",
  "Valentin",
  "Valentýn",
  "Valerián",
  "Valter",
  "Valtr",
  "Vasil",
  "Vavřinec",
  "Veleslav",
  "Velimír",
  "Velislav",
  "Věnceslav",
  "Vendelín",
  "Věnek",
  "Verner",
  "Věroslav",
  "Vidor",
  "Viktor",
  "Viktorin",
  "Viktorín",
  "Vilém",
  "Vilibald",
  "Vilmar",
  "Vincenc",
  "Virgil",
  "Virgin",
  "Vít",
  "Vítězslav",
  "Vitold",
  "Vítoslav",
  "Vivian",
  "Vladan",
  "Vladimír",
  "Vladislav",
  "Vladivoj",
  "Vlastimil",
  "Vlastimír",
  "Vlastislav",
  "Vlk",
  "Vojen",
  "Vojmil",
  "Vojmír",
  "Vojslav",
  "Vojtěch",
  "Vok",
  "Volfgang",
  "Vratislav",
  "Vsevolod",
  "Všeboj",
  "Všebor",
  "Všerad",
  "Všeslav",
  "Xaver",
  "Xaverius",
  "Záboj",
  "Zachar",
  "Zachariáš",
  "Záviš",
  "Zbislav",
  "Zbyhněv",
  "Zbyněk",
  "Zbyslav",
  "Zbyšek",
  "Zdeněk",
  "Zderad",
  "Zdeslav",
  "Zdík",
  "Zdirad",
  "Zdislav",
  "Zeno",
  "Zenon",
  "Zikmund",
  "Zlatan",
  "Zlatko",
  "Zlatomír",
  "Zoltán",
  "Zoran",
  "Zoroslav",
  "Zosim",
  "Zvonimír",
  "Žarko",
  "Ždan",
  "Želibor",
  "Želimír",
  "Želislav",
  "Želmír",
  "Žitomír",
  "Žitoslav",
  "Živan",
];

},{}],234:[function(require,module,exports){
module["exports"] = [
  "Adam",
  "Adamec",
  "Adámek",
  "Albrecht",
  "Ambrož",
  "Anděl",
  "Andrle",
  "Antoš",
  "Bajer",
  "Baláž",
  "Balcar",
  "Balog",
  "Baloun",
  "Barák",
  "Baran",
  "Bareš",
  "Bárta",
  "Barták",
  "Bartoň",
  "Bartoš",
  "Bartošek",
  "Bartůněk",
  "Bašta",
  "Bauer",
  "Bayer",
  "Bažant",
  "Bečka",
  "Bečvář",
  "Bednář",
  "Bednařík",
  "Bělohlávek",
  "Benda",
  "Beneš",
  "Beran",
  "Beránek",
  "Berger",
  "Berka",
  "Berky",
  "Bernard",
  "Bezděk",
  "Bílek",
  "Bílý",
  "Bína",
  "Bittner",
  "Blaha",
  "Bláha",
  "Blažek",
  "Blecha",
  "Bobek",
  "Boček",
  "Boháč",
  "Boháček",
  "Böhm",
  "Borovička",
  "Bouček",
  "Bouda",
  "Bouška",
  "Brabec",
  "Brabenec",
  "Brada",
  "Bradáč",
  "Braun",
  "Brázda",
  "Brázdil",
  "Brejcha",
  "Březina",
  "Bříza",
  "Brož",
  "Brožek",
  "Brychta",
  "Bubeník",
  "Buček",
  "Buchta",
  "Burda",
  "Bureš",
  "Burian",
  "Buriánek",
  "Byrtus",
  "čada",
  "Caha",
  "čáp",
  "čapek",
  "čech",
  "čejka",
  "čermák",
  "černík",
  "černoch",
  "černohorský",
  "černý",
  "červeňák",
  "červenka",
  "červený",
  "červinka",
  "Chaloupka",
  "Chalupa",
  "Charvát",
  "Chládek",
  "Chlup",
  "Chmelař",
  "Chmelík",
  "Chovanec",
  "Chromý",
  "Chudoba",
  "Chvátal",
  "Chvojka",
  "Chytil",
  "Cibulka",
  "čihák",
  "Cihlář",
  "Císař",
  "čížek",
  "čonka",
  "Coufal",
  "čurda",
  "Daněk",
  "Daniel",
  "Daniš",
  "David",
  "Dědek",
  "Demeter",
  "Dittrich",
  "Diviš",
  "Dlouhý",
  "Dobeš",
  "Dobiáš",
  "Dobrovolný",
  "Dočekal",
  "Dočkal",
  "Dohnal",
  "Dokoupil",
  "Doleček",
  "Dolejš",
  "Dolejší",
  "Doležal",
  "Doležel",
  "Doskočil",
  "Dostál",
  "Doubek",
  "Doubrava",
  "Douša",
  "Drábek",
  "Drozd",
  "Dubský",
  "Duchoň",
  "Duda",
  "Dudek",
  "Dufek",
  "Dunka",
  "Dušek",
  "Dvořáček",
  "Dvořák",
  "Dvorský",
  "Eliáš",
  "Erben",
  "Fabián",
  "Fanta",
  "Farkaš",
  "Fejfar",
  "Fencl",
  "Ferenc",
  "Ferko",
  "Fiala",
  "Fiedler",
  "Filip",
  "Fischer",
  "Fišer",
  "Florián",
  "Fojtík",
  "Foltýn",
  "Forman",
  "Formánek",
  "Fořt",
  "Fousek",
  "Franc",
  "Franěk",
  "Frank",
  "Fridrich",
  "Frydrych",
  "Fuchs",
  "Fučík",
  "Fuksa",
  "Gábor",
  "Gabriel",
  "Gajdoš",
  "Gaži",
  "Gottwald",
  "Gregor",
  "Gruber",
  "Grundza",
  "Grygar",
  "Hájek",
  "Hajný",
  "Hála",
  "Hampl",
  "Hána",
  "Hanáček",
  "Hanák",
  "Hanousek",
  "Hanus",
  "Hanuš",
  "Hanzal",
  "Hanzl",
  "Hanzlík",
  "Hartman",
  "Hašek",
  "Havel",
  "Havelka",
  "Havlíček",
  "Havlík",
  "Havránek",
  "Heczko",
  "Heger",
  "Hejda",
  "Hejduk",
  "Hejl",
  "Hejna",
  "Hendrych",
  "Herman",
  "Heřman",
  "Heřmánek",
  "Hladík",
  "Hladký",
  "Hlaváč",
  "Hlaváček",
  "Hlavatý",
  "Hlávka",
  "Hloušek",
  "Hoffmann",
  "Hofman",
  "Holan",
  "Holas",
  "Holec",
  "Holeček",
  "Holík",
  "Holoubek",
  "Holub",
  "Holý",
  "Homola",
  "Homolka",
  "Hora",
  "Horáček",
  "Horák",
  "Hořejší",
  "Horký",
  "Horňák",
  "Horníček",
  "Horník",
  "Horský",
  "Horvát",
  "Horváth",
  "Hošek",
  "Houdek",
  "Houška",
  "Hovorka",
  "Hrabal",
  "Hrabovský",
  "Hradecký",
  "Hradil",
  "Hrbáček",
  "Hrbek",
  "Hrdina",
  "Hrdlička",
  "Hrdý",
  "Hrnčíř",
  "Hroch",
  "Hromádka",
  "Hron",
  "Hrubeš",
  "Hrubý",
  "Hruška",
  "Hrůza",
  "Hubáček",
  "Hudec",
  "Hudeček",
  "Hůlka",
  "Huml",
  "Husák",
  "Hušek",
  "Hýbl",
  "Hynek",
  "Jahoda",
  "Jakeš",
  "Jakl",
  "Jakoubek",
  "Jakubec",
  "Janáček",
  "Janák",
  "Janata",
  "Janča",
  "Jančík",
  "Janda",
  "Janeček",
  "Janečka",
  "Janíček",
  "Janík",
  "Janků",
  "Janota",
  "Janoušek",
  "Janovský",
  "Jansa",
  "Jánský",
  "Janů",
  "Jareš",
  "Jaroš",
  "Jašek",
  "Javůrek",
  "Jech",
  "Jedlička",
  "Jelen",
  "Jelínek",
  "Jeníček",
  "Jeřábek",
  "Jež",
  "Ježek",
  "Jílek",
  "Jindra",
  "Jíra",
  "Jirák",
  "Jiránek",
  "Jirásek",
  "Jiřík",
  "Jirka",
  "Jirků",
  "Jiroušek",
  "Jirsa",
  "John",
  "Jonáš",
  "Junek",
  "Jurčík",
  "Jurečka",
  "Juřica",
  "Juřík",
  "Kabát",
  "Kačírek",
  "Kadeřábek",
  "Kadlec",
  "Kafka",
  "Kaiser",
  "Kala",
  "Kaláb",
  "Kalaš",
  "Kalina",
  "Kalivoda",
  "Kalous",
  "Kalousek",
  "Kameník",
  "Kaňa",
  "Káňa",
  "Kaňka",
  "Kantor",
  "Kaplan",
  "Karas",
  "Karásek",
  "Karban",
  "Karel",
  "Karlík",
  "Kasal",
  "Kašík",
  "Kašpar",
  "Kašpárek",
  "Kavka",
  "Kazda",
  "Kindl",
  "Klečka",
  "Klein",
  "Klement",
  "Klíma",
  "Kliment",
  "Klimeš",
  "Klouček",
  "Klouda",
  "Knap",
  "Knotek",
  "Koch",
  "Kočí",
  "Kocián",
  "Kocman",
  "Kocourek",
  "Kohout",
  "Kohoutek",
  "Koláček",
  "Kolář",
  "Kolařík",
  "Kolek",
  "Kolman",
  "Komárek",
  "Komínek",
  "Konečný",
  "Koníček",
  "Kopal",
  "Kopeček",
  "Kopecký",
  "Kopečný",
  "Kopřiva",
  "Korbel",
  "Kořínek",
  "Kos",
  "Kosík",
  "Kosina",
  "Košťál",
  "Kostka",
  "Kotas",
  "Kotek",
  "Kotlár",
  "Kotrba",
  "Kouba",
  "Koubek",
  "Koudela",
  "Koudelka",
  "Koukal",
  "Kouřil",
  "Koutný",
  "Kováč",
  "Kovář",
  "Kovařík",
  "Kovářík",
  "Kozák",
  "Kozel",
  "Krajíček",
  "Král",
  "Králíček",
  "Králík",
  "Krátký",
  "Kratochvíl",
  "Kraus",
  "Krčmář",
  "Křeček",
  "Krejčí",
  "Krejčík",
  "Krejčíř",
  "Křenek",
  "Krištof",
  "Křivánek",
  "Kříž",
  "Křížek",
  "Kropáček",
  "Kroupa",
  "Krupa",
  "Krupička",
  "Krupka",
  "Kuba",
  "Kubánek",
  "Kubát",
  "Kubec",
  "Kubelka",
  "Kubeš",
  "Kubica",
  "Kubíček",
  "Kubík",
  "Kubín",
  "Kubiš",
  "Kuča",
  "Kučera",
  "Kuchař",
  "Kuchta",
  "Kudláček",
  "Kudrna",
  "Kukla",
  "Kulhánek",
  "Kulhavý",
  "Kunc",
  "Kuneš",
  "Kupec",
  "Kupka",
  "Kurka",
  "Kužel",
  "Kvapil",
  "Kvasnička",
  "Kyncl",
  "Kysela",
  "Lacina",
  "Lacko",
  "Lakatoš",
  "Landa",
  "Lang",
  "Langer",
  "Langr",
  "Látal",
  "Lavička",
  "Le",
  "Lebeda",
  "Levý",
  "Líbal",
  "Linhart",
  "Liška",
  "Lorenc",
  "Louda",
  "Ludvík",
  "Lukáč",
  "Lukáš",
  "Lukášek",
  "Lukeš",
  "Macák",
  "Macek",
  "Mach",
  "Mácha",
  "Machač",
  "Macháč",
  "Macháček",
  "Machala",
  "Machálek",
  "Macura",
  "Majer",
  "Maleček",
  "Málek",
  "Malík",
  "Malina",
  "Malý",
  "Maňák",
  "Mareček",
  "Marek",
  "Mareš",
  "Mařík",
  "Maršálek",
  "Maršík",
  "Martinec",
  "Martinek",
  "Martínek",
  "Mašek",
  "Masopust",
  "Matějíček",
  "Matějka",
  "Matouš",
  "Matoušek",
  "Matula",
  "Matuška",
  "Matyáš",
  "Matys",
  "Maxa",
  "Mayer",
  "Mazánek",
  "Medek",
  "Melichar",
  "Mencl",
  "Menšík",
  "Merta",
  "Michal",
  "Michalec",
  "Michálek",
  "Michalík",
  "Michna",
  "Mička",
  "Mika",
  "Míka",
  "Mikeš",
  "Miko",
  "Mikula",
  "Mikulášek",
  "Minář",
  "Minařík",
  "Mirga",
  "Mládek",
  "Mlčoch",
  "Mlejnek",
  "Mojžíš",
  "Mokrý",
  "Molnár",
  "Moravec",
  "Morávek",
  "Motl",
  "Motyčka",
  "Moučka",
  "Moudrý",
  "Mráček",
  "Mráz",
  "Mrázek",
  "Mrkvička",
  "Mucha",
  "Müller",
  "Műller",
  "Musil",
  "Mužík",
  "Myška",
  "Nagy",
  "Najman",
  "Navrátil",
  "Nečas",
  "Nedbal",
  "Nedoma",
  "Nedvěd",
  "Nejedlý",
  "Němec",
  "Němeček",
  "Nešpor",
  "Nesvadba",
  "Neubauer",
  "Neuman",
  "Neumann",
  "Nguyen",
  "Nguyen van",
  "Nosek",
  "Nováček",
  "Novák",
  "Novosad",
  "Novotný",
  "Nový",
  "Odehnal",
  "Oláh",
  "Oliva",
  "Ondra",
  "Ondráček",
  "Orság",
  "Otáhal",
  "Paleček",
  "Pánek",
  "Papež",
  "Pařízek",
  "Pašek",
  "Pátek",
  "Patočka",
  "Paul",
  "Pavel",
  "Pavelek",
  "Pavelka",
  "Pavlas",
  "Pavlica",
  "Pavlíček",
  "Pavlík",
  "Pavlů",
  "Pazdera",
  "Pech",
  "Pecha",
  "Pecháček",
  "Pecka",
  "Pekař",
  "Pekárek",
  "Pelc",
  "Pelikán",
  "Peřina",
  "Pernica",
  "Peroutka",
  "Pešek",
  "Peška",
  "Pešta",
  "Peterka",
  "Petr",
  "Petrák",
  "Petráš",
  "Petříček",
  "Petřík",
  "Petrů",
  "Pham",
  "Pícha",
  "Pilař",
  "Pilát",
  "Píša",
  "Pivoňka",
  "Plaček",
  "Plachý",
  "Plšek",
  "Pluhař",
  "Podzimek",
  "Pohl",
  "Pokorný",
  "Poláček",
  "Polách",
  "Polák",
  "Polanský",
  "Polášek",
  "Polívka",
  "Popelka",
  "Pospíchal",
  "Pospíšil",
  "Potůček",
  "Pour",
  "Prachař",
  "Prášek",
  "Pražák",
  "Prchal",
  "Přibyl",
  "Příhoda",
  "Přikryl",
  "Procházka",
  "Prokeš",
  "Prokop",
  "Prošek",
  "Provazník",
  "Průcha",
  "Průša",
  "Pšenička",
  "Ptáček",
  "Rác",
  "Rada",
  "Rak",
  "Rambousek",
  "Raška",
  "Rataj",
  "řeháček",
  "řehák",
  "řehoř",
  "Remeš",
  "řezáč",
  "Rezek",
  "řezníček",
  "Richter",
  "Richtr",
  "říha",
  "Roubal",
  "Rous",
  "Rozsypal",
  "Rudolf",
  "Růžek",
  "Růžička",
  "Ryba",
  "Rybář",
  "Rýdl",
  "Ryšavý",
  "Sadílek",
  "šafář",
  "šafařík",
  "šafránek",
  "šálek",
  "Samek",
  "šanda",
  "šašek",
  "Schejbal",
  "Schmidt",
  "Schneider",
  "Schwarz",
  "šebek",
  "šebela",
  "šebesta",
  "šeda",
  "šedivý",
  "Sedláček",
  "Sedlák",
  "Sedlář",
  "Sehnal",
  "Seidl",
  "Seifert",
  "Sekanina",
  "Semerád",
  "šenk",
  "šesták",
  "ševčík",
  "Severa",
  "Sikora",
  "šilhavý",
  "šíma",
  "šimáček",
  "šimák",
  "šimánek",
  "šimčík",
  "šimeček",
  "šimek",
  "šimon",
  "šimůnek",
  "šindelář",
  "šindler",
  "šíp",
  "šípek",
  "šír",
  "široký",
  "šiška",
  "Sivák",
  "Skácel",
  "Skala",
  "Skála",
  "Skalický",
  "Sklenář",
  "škoda",
  "Skopal",
  "Skořepa",
  "škrabal",
  "Skřivánek",
  "Slabý",
  "Sládek",
  "Sladký",
  "Sláma",
  "Slanina",
  "Slavíček",
  "Slavík",
  "šlechta",
  "Slezák",
  "Slováček",
  "Slovák",
  "Sluka",
  "Smejkal",
  "šmejkal",
  "Smékal",
  "šmerda",
  "Smetana",
  "šmíd",
  "Smola",
  "Smolík",
  "Smolka",
  "Smrčka",
  "Smrž",
  "Smutný",
  "šnajdr",
  "Sobek",
  "Sobotka",
  "Sochor",
  "Sojka",
  "Sokol",
  "šolc",
  "Sommer",
  "Souček",
  "Soukup",
  "Sova",
  "špaček",
  "Spáčil",
  "špička",
  "šplíchal",
  "Spurný",
  "šrámek",
  "Srb",
  "Staněk",
  "Stárek",
  "Starý",
  "šťastný",
  "štefan",
  "štefek",
  "štefl",
  "Stehlík",
  "Steiner",
  "Stejskal",
  "štěpán",
  "štěpánek",
  "štěrba",
  "Stibor",
  "Stoklasa",
  "Straka",
  "Stránský",
  "Strejček",
  "Strnad",
  "Strouhal",
  "Stuchlík",
  "Studený",
  "Studnička",
  "Stupka",
  "šubrt",
  "Suchánek",
  "Suchomel",
  "Suchý",
  "Suk",
  "šulc",
  "šustr",
  "šváb",
  "Svačina",
  "švanda",
  "švarc",
  "Svatoň",
  "Svatoš",
  "švec",
  "švehla",
  "švejda",
  "švestka",
  "Světlík",
  "Sviták",
  "Svoboda",
  "Svozil",
  "Sýkora",
  "Synek",
  "Syrový",
  "Táborský",
  "Tancoš",
  "Teplý",
  "Tesař",
  "Tichý",
  "Toman",
  "Tománek",
  "Tomáš",
  "Tomášek",
  "Tomeček",
  "Tomek",
  "Tomeš",
  "Tóth",
  "Tran",
  "Trávníček",
  "Trčka",
  "Tříska",
  "Trnka",
  "Trojan",
  "Truhlář",
  "Tuček",
  "Tůma",
  "Tureček",
  "Turek",
  "Tvrdík",
  "Tvrdý",
  "Uher",
  "Uhlíř",
  "Ulrich",
  "Urban",
  "Urbanec",
  "Urbánek",
  "Vacek",
  "Vácha",
  "Václavek",
  "Václavík",
  "Vaculík",
  "Vágner",
  "Vala",
  "Valášek",
  "Válek",
  "Valenta",
  "Valeš",
  "Váňa",
  "Vančura",
  "Vaněček",
  "Vaněk",
  "Vaníček",
  "Varga",
  "Vašák",
  "Vašek",
  "Vašíček",
  "Vávra",
  "Vavřík",
  "Večeřa",
  "Vejvoda",
  "Verner",
  "Veselý",
  "Veverka",
  "Vícha",
  "Vilímek",
  "Vinš",
  "Víšek",
  "Vít",
  "Vitásek",
  "Vítek",
  "Vlach",
  "Vlasák",
  "Vlček",
  "Vlk",
  "Vobořil",
  "Vodák",
  "Vodička",
  "Vodrážka",
  "Vojáček",
  "Vojta",
  "Vojtěch",
  "Vojtek",
  "Vojtíšek",
  "Vokoun",
  "Volek",
  "Volf",
  "Volný",
  "Vondra",
  "Vondráček",
  "Vondrák",
  "Voráček",
  "Vorel",
  "Voříšek",
  "Vorlíček",
  "Votava",
  "Votruba",
  "Vrabec",
  "Vrána",
  "Vrba",
  "Vrzal",
  "Vybíral",
  "Vydra",
  "Vymazal",
  "Vyskočil",
  "Vysloužil",
  "Wagner",
  "Walter",
  "Weber",
  "Weiss",
  "Winkler",
  "Wolf",
  "Zábranský",
  "žáček",
  "Zach",
  "Zahrádka",
  "Zahradník",
  "Zajíc",
  "Zajíček",
  "žák",
  "Zálešák",
  "Zámečník",
  "Zapletal",
  "Záruba",
  "Zatloukal",
  "Zavadil",
  "Zavřel",
  "Zbořil",
  "žďárský",
  "Zdražil",
  "Zedník",
  "Zelenka",
  "Zelený",
  "Zelinka",
  "Zeman",
  "Zemánek",
  "žemlička",
  "Zezula",
  "žídek",
  "žiga",
  "Zíka",
  "Zikmund",
  "Zima",
  "žižka",
  "Zlámal",
  "Zoubek",
  "Zouhar",
  "žůrek",
  "Zvěřina",
];

},{}],235:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{man_first_name} #{man_last_name}",
  "#{prefix} #{woman_first_name} #{woman_last_name}",
  "#{man_first_name} #{man_last_name} #{suffix}",
  "#{woman_first_name} #{woman_last_name} #{suffix}",
  "#{man_first_name} #{man_last_name}",
  "#{man_first_name} #{man_last_name}",
  "#{man_first_name} #{man_last_name}",
  "#{woman_first_name} #{woman_last_name}",
  "#{woman_first_name} #{woman_last_name}",
  "#{woman_first_name} #{woman_last_name}"
];

},{}],236:[function(require,module,exports){
module["exports"] = [
  "Ing.",
  "Mgr.",
  "JUDr.",
  "MUDr."
];

},{}],237:[function(require,module,exports){
module["exports"] = [
  "Phd."
];

},{}],238:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Lead",
    "Senior",
    "Direct",
    "Corporate",
    "Dynamic",
    "Future",
    "Product",
    "National",
    "Regional",
    "District",
    "Central",
    "Global",
    "Customer",
    "Investor",
    "Dynamic",
    "International",
    "Legacy",
    "Forward",
    "Internal",
    "Human",
    "Chief",
    "Principal"
  ],
  "level": [
    "Solutions",
    "Program",
    "Brand",
    "Security",
    "Research",
    "Marketing",
    "Directives",
    "Implementation",
    "Integration",
    "Functionality",
    "Response",
    "Paradigm",
    "Tactics",
    "Identity",
    "Markets",
    "Group",
    "Division",
    "Applications",
    "Optimization",
    "Operations",
    "Infrastructure",
    "Intranet",
    "Communications",
    "Web",
    "Branding",
    "Quality",
    "Assurance",
    "Mobility",
    "Accounts",
    "Data",
    "Creative",
    "Configuration",
    "Accountability",
    "Interactions",
    "Factors",
    "Usability",
    "Metrics"
  ],
  "job": [
    "Supervisor",
    "Associate",
    "Executive",
    "Liason",
    "Officer",
    "Manager",
    "Engineer",
    "Specialist",
    "Director",
    "Coordinator",
    "Administrator",
    "Architect",
    "Analyst",
    "Designer",
    "Planner",
    "Orchestrator",
    "Technician",
    "Developer",
    "Producer",
    "Consultant",
    "Assistant",
    "Facilitator",
    "Agent",
    "Representative",
    "Strategist"
  ]
};

},{}],239:[function(require,module,exports){
module["exports"] = [
  "601 ### ###",
  "737 ### ###",
  "736 ### ###",
  "### ### ###",
  "+420 ### ### ###",
  "00420 ### ### ###"
];

},{}],240:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":239,"dup":197}],241:[function(require,module,exports){
module["exports"] = [
  "###",
  "##",
  "#",
  "##a",
  "##b",
  "##c"
];

},{}],242:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix} #{Name.first_name}#{city_suffix}",
  "#{city_prefix} #{Name.first_name}",
  "#{Name.first_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}"
];

},{}],243:[function(require,module,exports){
module["exports"] = [
  "Nord",
  "Ost",
  "West",
  "Süd",
  "Neu",
  "Alt",
  "Bad"
];

},{}],244:[function(require,module,exports){
module["exports"] = [
  "stadt",
  "dorf",
  "land",
  "scheid",
  "burg"
];

},{}],245:[function(require,module,exports){
module["exports"] = [
  "Ägypten",
  "Äquatorialguinea",
  "Äthiopien",
  "Österreich",
  "Afghanistan",
  "Albanien",
  "Algerien",
  "Amerikanisch-Samoa",
  "Amerikanische Jungferninseln",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antarktis",
  "Antigua und Barbuda",
  "Argentinien",
  "Armenien",
  "Aruba",
  "Aserbaidschan",
  "Australien",
  "Bahamas",
  "Bahrain",
  "Bangladesch",
  "Barbados",
  "Belarus",
  "Belgien",
  "Belize",
  "Benin",
  "die Bermudas",
  "Bhutan",
  "Bolivien",
  "Bosnien und Herzegowina",
  "Botsuana",
  "Bouvetinsel",
  "Brasilien",
  "Britische Jungferninseln",
  "Britisches Territorium im Indischen Ozean",
  "Brunei Darussalam",
  "Bulgarien",
  "Burkina Faso",
  "Burundi",
  "Chile",
  "China",
  "Cookinseln",
  "Costa Rica",
  "Dänemark",
  "Demokratische Republik Kongo",
  "Demokratische Volksrepublik Korea",
  "Deutschland",
  "Dominica",
  "Dominikanische Republik",
  "Dschibuti",
  "Ecuador",
  "El Salvador",
  "Eritrea",
  "Estland",
  "Färöer",
  "Falklandinseln",
  "Fidschi",
  "Finnland",
  "Frankreich",
  "Französisch-Guayana",
  "Französisch-Polynesien",
  "Französische Gebiete im südlichen Indischen Ozean",
  "Gabun",
  "Gambia",
  "Georgien",
  "Ghana",
  "Gibraltar",
  "Grönland",
  "Grenada",
  "Griechenland",
  "Guadeloupe",
  "Guam",
  "Guatemala",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Heard und McDonaldinseln",
  "Honduras",
  "Hongkong",
  "Indien",
  "Indonesien",
  "Irak",
  "Iran",
  "Irland",
  "Island",
  "Israel",
  "Italien",
  "Jamaika",
  "Japan",
  "Jemen",
  "Jordanien",
  "Jugoslawien",
  "Kaimaninseln",
  "Kambodscha",
  "Kamerun",
  "Kanada",
  "Kap Verde",
  "Kasachstan",
  "Katar",
  "Kenia",
  "Kirgisistan",
  "Kiribati",
  "Kleinere amerikanische Überseeinseln",
  "Kokosinseln",
  "Kolumbien",
  "Komoren",
  "Kongo",
  "Kroatien",
  "Kuba",
  "Kuwait",
  "Laos",
  "Lesotho",
  "Lettland",
  "Libanon",
  "Liberia",
  "Libyen",
  "Liechtenstein",
  "Litauen",
  "Luxemburg",
  "Macau",
  "Madagaskar",
  "Malawi",
  "Malaysia",
  "Malediven",
  "Mali",
  "Malta",
  "ehemalige jugoslawische Republik Mazedonien",
  "Marokko",
  "Marshallinseln",
  "Martinique",
  "Mauretanien",
  "Mauritius",
  "Mayotte",
  "Mexiko",
  "Mikronesien",
  "Monaco",
  "Mongolei",
  "Montserrat",
  "Mosambik",
  "Myanmar",
  "Nördliche Marianen",
  "Namibia",
  "Nauru",
  "Nepal",
  "Neukaledonien",
  "Neuseeland",
  "Nicaragua",
  "Niederländische Antillen",
  "Niederlande",
  "Niger",
  "Nigeria",
  "Niue",
  "Norfolkinsel",
  "Norwegen",
  "Oman",
  "Osttimor",
  "Pakistan",
  "Palau",
  "Panama",
  "Papua-Neuguinea",
  "Paraguay",
  "Peru",
  "Philippinen",
  "Pitcairninseln",
  "Polen",
  "Portugal",
  "Puerto Rico",
  "Réunion",
  "Republik Korea",
  "Republik Moldau",
  "Ruanda",
  "Rumänien",
  "Russische Föderation",
  "São Tomé und Príncipe",
  "Südafrika",
  "Südgeorgien und Südliche Sandwichinseln",
  "Salomonen",
  "Sambia",
  "Samoa",
  "San Marino",
  "Saudi-Arabien",
  "Schweden",
  "Schweiz",
  "Senegal",
  "Seychellen",
  "Sierra Leone",
  "Simbabwe",
  "Singapur",
  "Slowakei",
  "Slowenien",
  "Somalien",
  "Spanien",
  "Sri Lanka",
  "St. Helena",
  "St. Kitts und Nevis",
  "St. Lucia",
  "St. Pierre und Miquelon",
  "St. Vincent und die Grenadinen",
  "Sudan",
  "Surinam",
  "Svalbard und Jan Mayen",
  "Swasiland",
  "Syrien",
  "Türkei",
  "Tadschikistan",
  "Taiwan",
  "Tansania",
  "Thailand",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad und Tobago",
  "Tschad",
  "Tschechische Republik",
  "Tunesien",
  "Turkmenistan",
  "Turks- und Caicosinseln",
  "Tuvalu",
  "Uganda",
  "Ukraine",
  "Ungarn",
  "Uruguay",
  "Usbekistan",
  "Vanuatu",
  "Vatikanstadt",
  "Venezuela",
  "Vereinigte Arabische Emirate",
  "Vereinigte Staaten",
  "Vereinigtes Königreich",
  "Vietnam",
  "Wallis und Futuna",
  "Weihnachtsinsel",
  "Westsahara",
  "Zentralafrikanische Republik",
  "Zypern"
];

},{}],246:[function(require,module,exports){
module["exports"] = [
  "Deutschland"
];

},{}],247:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.street_root = require("./street_root");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":241,"./city":242,"./city_prefix":243,"./city_suffix":244,"./country":245,"./default_country":246,"./postcode":248,"./secondary_address":249,"./state":250,"./state_abbr":251,"./street_address":252,"./street_name":253,"./street_root":254}],248:[function(require,module,exports){
module["exports"] = [
  "#####",
  "#####"
];

},{}],249:[function(require,module,exports){
module["exports"] = [
  "Apt. ###",
  "Zimmer ###",
  "# OG"
];

},{}],250:[function(require,module,exports){
module["exports"] = [
  "Baden-Württemberg",
  "Bayern",
  "Berlin",
  "Brandenburg",
  "Bremen",
  "Hamburg",
  "Hessen",
  "Mecklenburg-Vorpommern",
  "Niedersachsen",
  "Nordrhein-Westfalen",
  "Rheinland-Pfalz",
  "Saarland",
  "Sachsen",
  "Sachsen-Anhalt",
  "Schleswig-Holstein",
  "Thüringen"
];

},{}],251:[function(require,module,exports){
module["exports"] = [
  "BW",
  "BY",
  "BE",
  "BB",
  "HB",
  "HH",
  "HE",
  "MV",
  "NI",
  "NW",
  "RP",
  "SL",
  "SN",
  "ST",
  "SH",
  "TH"
];

},{}],252:[function(require,module,exports){
arguments[4][209][0].apply(exports,arguments)
},{"dup":209}],253:[function(require,module,exports){
module["exports"] = [
  "#{street_root}"
];

},{}],254:[function(require,module,exports){
module["exports"] = [
  "Ackerweg",
  "Adalbert-Stifter-Str.",
  "Adalbertstr.",
  "Adolf-Baeyer-Str.",
  "Adolf-Kaschny-Str.",
  "Adolf-Reichwein-Str.",
  "Adolfsstr.",
  "Ahornweg",
  "Ahrstr.",
  "Akazienweg",
  "Albert-Einstein-Str.",
  "Albert-Schweitzer-Str.",
  "Albertus-Magnus-Str.",
  "Albert-Zarthe-Weg",
  "Albin-Edelmann-Str.",
  "Albrecht-Haushofer-Str.",
  "Aldegundisstr.",
  "Alexanderstr.",
  "Alfred-Delp-Str.",
  "Alfred-Kubin-Str.",
  "Alfred-Stock-Str.",
  "Alkenrather Str.",
  "Allensteiner Str.",
  "Alsenstr.",
  "Alt Steinbücheler Weg",
  "Alte Garten",
  "Alte Heide",
  "Alte Landstr.",
  "Alte Ziegelei",
  "Altenberger Str.",
  "Altenhof",
  "Alter Grenzweg",
  "Altstadtstr.",
  "Am Alten Gaswerk",
  "Am Alten Schafstall",
  "Am Arenzberg",
  "Am Benthal",
  "Am Birkenberg",
  "Am Blauen Berg",
  "Am Borsberg",
  "Am Brungen",
  "Am Büchelter Hof",
  "Am Buttermarkt",
  "Am Ehrenfriedhof",
  "Am Eselsdamm",
  "Am Falkenberg",
  "Am Frankenberg",
  "Am Gesundheitspark",
  "Am Gierlichshof",
  "Am Graben",
  "Am Hagelkreuz",
  "Am Hang",
  "Am Heidkamp",
  "Am Hemmelrather Hof",
  "Am Hofacker",
  "Am Hohen Ufer",
  "Am Höllers Eck",
  "Am Hühnerberg",
  "Am Jägerhof",
  "Am Junkernkamp",
  "Am Kemperstiegel",
  "Am Kettnersbusch",
  "Am Kiesberg",
  "Am Klösterchen",
  "Am Knechtsgraben",
  "Am Köllerweg",
  "Am Köttersbach",
  "Am Kreispark",
  "Am Kronefeld",
  "Am Küchenhof",
  "Am Kühnsbusch",
  "Am Lindenfeld",
  "Am Märchen",
  "Am Mittelberg",
  "Am Mönchshof",
  "Am Mühlenbach",
  "Am Neuenhof",
  "Am Nonnenbruch",
  "Am Plattenbusch",
  "Am Quettinger Feld",
  "Am Rosenhügel",
  "Am Sandberg",
  "Am Scherfenbrand",
  "Am Schokker",
  "Am Silbersee",
  "Am Sonnenhang",
  "Am Sportplatz",
  "Am Stadtpark",
  "Am Steinberg",
  "Am Telegraf",
  "Am Thelenhof",
  "Am Vogelkreuz",
  "Am Vogelsang",
  "Am Vogelsfeldchen",
  "Am Wambacher Hof",
  "Am Wasserturm",
  "Am Weidenbusch",
  "Am Weiher",
  "Am Weingarten",
  "Am Werth",
  "Amselweg",
  "An den Irlen",
  "An den Rheinauen",
  "An der Bergerweide",
  "An der Dingbank",
  "An der Evangelischen Kirche",
  "An der Evgl. Kirche",
  "An der Feldgasse",
  "An der Fettehenne",
  "An der Kante",
  "An der Laach",
  "An der Lehmkuhle",
  "An der Lichtenburg",
  "An der Luisenburg",
  "An der Robertsburg",
  "An der Schmitten",
  "An der Schusterinsel",
  "An der Steinrütsch",
  "An St. Andreas",
  "An St. Remigius",
  "Andreasstr.",
  "Ankerweg",
  "Annette-Kolb-Str.",
  "Apenrader Str.",
  "Arnold-Ohletz-Str.",
  "Atzlenbacher Str.",
  "Auerweg",
  "Auestr.",
  "Auf dem Acker",
  "Auf dem Blahnenhof",
  "Auf dem Bohnbüchel",
  "Auf dem Bruch",
  "Auf dem End",
  "Auf dem Forst",
  "Auf dem Herberg",
  "Auf dem Lehn",
  "Auf dem Stein",
  "Auf dem Weierberg",
  "Auf dem Weiherhahn",
  "Auf den Reien",
  "Auf der Donnen",
  "Auf der Grieße",
  "Auf der Ohmer",
  "Auf der Weide",
  "Auf'm Berg",
  "Auf'm Kamp",
  "Augustastr.",
  "August-Kekulé-Str.",
  "A.-W.-v.-Hofmann-Str.",
  "Bahnallee",
  "Bahnhofstr.",
  "Baltrumstr.",
  "Bamberger Str.",
  "Baumberger Str.",
  "Bebelstr.",
  "Beckers Kämpchen",
  "Beerenstr.",
  "Beethovenstr.",
  "Behringstr.",
  "Bendenweg",
  "Bensberger Str.",
  "Benzstr.",
  "Bergische Landstr.",
  "Bergstr.",
  "Berliner Platz",
  "Berliner Str.",
  "Bernhard-Letterhaus-Str.",
  "Bernhard-Lichtenberg-Str.",
  "Bernhard-Ridder-Str.",
  "Bernsteinstr.",
  "Bertha-Middelhauve-Str.",
  "Bertha-von-Suttner-Str.",
  "Bertolt-Brecht-Str.",
  "Berzeliusstr.",
  "Bielertstr.",
  "Biesenbach",
  "Billrothstr.",
  "Birkenbergstr.",
  "Birkengartenstr.",
  "Birkenweg",
  "Bismarckstr.",
  "Bitterfelder Str.",
  "Blankenburg",
  "Blaukehlchenweg",
  "Blütenstr.",
  "Boberstr.",
  "Böcklerstr.",
  "Bodelschwinghstr.",
  "Bodestr.",
  "Bogenstr.",
  "Bohnenkampsweg",
  "Bohofsweg",
  "Bonifatiusstr.",
  "Bonner Str.",
  "Borkumstr.",
  "Bornheimer Str.",
  "Borsigstr.",
  "Borussiastr.",
  "Bracknellstr.",
  "Brahmsweg",
  "Brandenburger Str.",
  "Breidenbachstr.",
  "Breslauer Str.",
  "Bruchhauser Str.",
  "Brückenstr.",
  "Brucknerstr.",
  "Brüder-Bonhoeffer-Str.",
  "Buchenweg",
  "Bürgerbuschweg",
  "Burgloch",
  "Burgplatz",
  "Burgstr.",
  "Burgweg",
  "Bürriger Weg",
  "Burscheider Str.",
  "Buschkämpchen",
  "Butterheider Str.",
  "Carl-Duisberg-Platz",
  "Carl-Duisberg-Str.",
  "Carl-Leverkus-Str.",
  "Carl-Maria-von-Weber-Platz",
  "Carl-Maria-von-Weber-Str.",
  "Carlo-Mierendorff-Str.",
  "Carl-Rumpff-Str.",
  "Carl-von-Ossietzky-Str.",
  "Charlottenburger Str.",
  "Christian-Heß-Str.",
  "Claasbruch",
  "Clemens-Winkler-Str.",
  "Concordiastr.",
  "Cranachstr.",
  "Dahlemer Str.",
  "Daimlerstr.",
  "Damaschkestr.",
  "Danziger Str.",
  "Debengasse",
  "Dechant-Fein-Str.",
  "Dechant-Krey-Str.",
  "Deichtorstr.",
  "Dhünnberg",
  "Dhünnstr.",
  "Dianastr.",
  "Diedenhofener Str.",
  "Diepental",
  "Diepenthaler Str.",
  "Dieselstr.",
  "Dillinger Str.",
  "Distelkamp",
  "Dohrgasse",
  "Domblick",
  "Dönhoffstr.",
  "Dornierstr.",
  "Drachenfelsstr.",
  "Dr.-August-Blank-Str.",
  "Dresdener Str.",
  "Driescher Hecke",
  "Drosselweg",
  "Dudweilerstr.",
  "Dünenweg",
  "Dünfelder Str.",
  "Dünnwalder Grenzweg",
  "Düppeler Str.",
  "Dürerstr.",
  "Dürscheider Weg",
  "Düsseldorfer Str.",
  "Edelrather Weg",
  "Edmund-Husserl-Str.",
  "Eduard-Spranger-Str.",
  "Ehrlichstr.",
  "Eichenkamp",
  "Eichenweg",
  "Eidechsenweg",
  "Eifelstr.",
  "Eifgenstr.",
  "Eintrachtstr.",
  "Elbestr.",
  "Elisabeth-Langgässer-Str.",
  "Elisabethstr.",
  "Elisabeth-von-Thadden-Str.",
  "Elisenstr.",
  "Elsa-Brändström-Str.",
  "Elsbachstr.",
  "Else-Lasker-Schüler-Str.",
  "Elsterstr.",
  "Emil-Fischer-Str.",
  "Emil-Nolde-Str.",
  "Engelbertstr.",
  "Engstenberger Weg",
  "Entenpfuhl",
  "Erbelegasse",
  "Erftstr.",
  "Erfurter Str.",
  "Erich-Heckel-Str.",
  "Erich-Klausener-Str.",
  "Erich-Ollenhauer-Str.",
  "Erlenweg",
  "Ernst-Bloch-Str.",
  "Ernst-Ludwig-Kirchner-Str.",
  "Erzbergerstr.",
  "Eschenallee",
  "Eschenweg",
  "Esmarchstr.",
  "Espenweg",
  "Euckenstr.",
  "Eulengasse",
  "Eulenkamp",
  "Ewald-Flamme-Str.",
  "Ewald-Röll-Str.",
  "Fährstr.",
  "Farnweg",
  "Fasanenweg",
  "Faßbacher Hof",
  "Felderstr.",
  "Feldkampstr.",
  "Feldsiefer Weg",
  "Feldsiefer Wiesen",
  "Feldstr.",
  "Feldtorstr.",
  "Felix-von-Roll-Str.",
  "Ferdinand-Lassalle-Str.",
  "Fester Weg",
  "Feuerbachstr.",
  "Feuerdornweg",
  "Fichtenweg",
  "Fichtestr.",
  "Finkelsteinstr.",
  "Finkenweg",
  "Fixheider Str.",
  "Flabbenhäuschen",
  "Flensburger Str.",
  "Fliederweg",
  "Florastr.",
  "Florianweg",
  "Flotowstr.",
  "Flurstr.",
  "Föhrenweg",
  "Fontanestr.",
  "Forellental",
  "Fortunastr.",
  "Franz-Esser-Str.",
  "Franz-Hitze-Str.",
  "Franz-Kail-Str.",
  "Franz-Marc-Str.",
  "Freiburger Str.",
  "Freiheitstr.",
  "Freiherr-vom-Stein-Str.",
  "Freudenthal",
  "Freudenthaler Weg",
  "Fridtjof-Nansen-Str.",
  "Friedenberger Str.",
  "Friedensstr.",
  "Friedhofstr.",
  "Friedlandstr.",
  "Friedlieb-Ferdinand-Runge-Str.",
  "Friedrich-Bayer-Str.",
  "Friedrich-Bergius-Platz",
  "Friedrich-Ebert-Platz",
  "Friedrich-Ebert-Str.",
  "Friedrich-Engels-Str.",
  "Friedrich-List-Str.",
  "Friedrich-Naumann-Str.",
  "Friedrich-Sertürner-Str.",
  "Friedrichstr.",
  "Friedrich-Weskott-Str.",
  "Friesenweg",
  "Frischenberg",
  "Fritz-Erler-Str.",
  "Fritz-Henseler-Str.",
  "Fröbelstr.",
  "Fürstenbergplatz",
  "Fürstenbergstr.",
  "Gabriele-Münter-Str.",
  "Gartenstr.",
  "Gebhardstr.",
  "Geibelstr.",
  "Gellertstr.",
  "Georg-von-Vollmar-Str.",
  "Gerhard-Domagk-Str.",
  "Gerhart-Hauptmann-Str.",
  "Gerichtsstr.",
  "Geschwister-Scholl-Str.",
  "Gezelinallee",
  "Gierener Weg",
  "Ginsterweg",
  "Gisbert-Cremer-Str.",
  "Glücksburger Str.",
  "Gluckstr.",
  "Gneisenaustr.",
  "Goetheplatz",
  "Goethestr.",
  "Golo-Mann-Str.",
  "Görlitzer Str.",
  "Görresstr.",
  "Graebestr.",
  "Graf-Galen-Platz",
  "Gregor-Mendel-Str.",
  "Greifswalder Str.",
  "Grillenweg",
  "Gronenborner Weg",
  "Große Kirchstr.",
  "Grunder Wiesen",
  "Grundermühle",
  "Grundermühlenhof",
  "Grundermühlenweg",
  "Grüner Weg",
  "Grunewaldstr.",
  "Grünstr.",
  "Günther-Weisenborn-Str.",
  "Gustav-Freytag-Str.",
  "Gustav-Heinemann-Str.",
  "Gustav-Radbruch-Str.",
  "Gut Reuschenberg",
  "Gutenbergstr.",
  "Haberstr.",
  "Habichtgasse",
  "Hafenstr.",
  "Hagenauer Str.",
  "Hahnenblecher",
  "Halenseestr.",
  "Halfenleimbach",
  "Hallesche Str.",
  "Halligstr.",
  "Hamberger Str.",
  "Hammerweg",
  "Händelstr.",
  "Hannah-Höch-Str.",
  "Hans-Arp-Str.",
  "Hans-Gerhard-Str.",
  "Hans-Sachs-Str.",
  "Hans-Schlehahn-Str.",
  "Hans-von-Dohnanyi-Str.",
  "Hardenbergstr.",
  "Haselweg",
  "Hauptstr.",
  "Haus-Vorster-Str.",
  "Hauweg",
  "Havelstr.",
  "Havensteinstr.",
  "Haydnstr.",
  "Hebbelstr.",
  "Heckenweg",
  "Heerweg",
  "Hegelstr.",
  "Heidberg",
  "Heidehöhe",
  "Heidestr.",
  "Heimstättenweg",
  "Heinrich-Böll-Str.",
  "Heinrich-Brüning-Str.",
  "Heinrich-Claes-Str.",
  "Heinrich-Heine-Str.",
  "Heinrich-Hörlein-Str.",
  "Heinrich-Lübke-Str.",
  "Heinrich-Lützenkirchen-Weg",
  "Heinrichstr.",
  "Heinrich-Strerath-Str.",
  "Heinrich-von-Kleist-Str.",
  "Heinrich-von-Stephan-Str.",
  "Heisterbachstr.",
  "Helenenstr.",
  "Helmestr.",
  "Hemmelrather Weg",
  "Henry-T.-v.-Böttinger-Str.",
  "Herderstr.",
  "Heribertstr.",
  "Hermann-Ehlers-Str.",
  "Hermann-Hesse-Str.",
  "Hermann-König-Str.",
  "Hermann-Löns-Str.",
  "Hermann-Milde-Str.",
  "Hermann-Nörrenberg-Str.",
  "Hermann-von-Helmholtz-Str.",
  "Hermann-Waibel-Str.",
  "Herzogstr.",
  "Heymannstr.",
  "Hindenburgstr.",
  "Hirzenberg",
  "Hitdorfer Kirchweg",
  "Hitdorfer Str.",
  "Höfer Mühle",
  "Höfer Weg",
  "Hohe Str.",
  "Höhenstr.",
  "Höltgestal",
  "Holunderweg",
  "Holzer Weg",
  "Holzer Wiesen",
  "Hornpottweg",
  "Hubertusweg",
  "Hufelandstr.",
  "Hufer Weg",
  "Humboldtstr.",
  "Hummelsheim",
  "Hummelweg",
  "Humperdinckstr.",
  "Hüscheider Gärten",
  "Hüscheider Str.",
  "Hütte",
  "Ilmstr.",
  "Im Bergischen Heim",
  "Im Bruch",
  "Im Buchenhain",
  "Im Bühl",
  "Im Burgfeld",
  "Im Dorf",
  "Im Eisholz",
  "Im Friedenstal",
  "Im Frohental",
  "Im Grunde",
  "Im Hederichsfeld",
  "Im Jücherfeld",
  "Im Kalkfeld",
  "Im Kirberg",
  "Im Kirchfeld",
  "Im Kreuzbruch",
  "Im Mühlenfeld",
  "Im Nesselrader Kamp",
  "Im Oberdorf",
  "Im Oberfeld",
  "Im Rosengarten",
  "Im Rottland",
  "Im Scheffengarten",
  "Im Staderfeld",
  "Im Steinfeld",
  "Im Weidenblech",
  "Im Winkel",
  "Im Ziegelfeld",
  "Imbach",
  "Imbacher Weg",
  "Immenweg",
  "In den Blechenhöfen",
  "In den Dehlen",
  "In der Birkenau",
  "In der Dasladen",
  "In der Felderhütten",
  "In der Hartmannswiese",
  "In der Höhle",
  "In der Schaafsdellen",
  "In der Wasserkuhl",
  "In der Wüste",
  "In Holzhausen",
  "Insterstr.",
  "Jacob-Fröhlen-Str.",
  "Jägerstr.",
  "Jahnstr.",
  "Jakob-Eulenberg-Weg",
  "Jakobistr.",
  "Jakob-Kaiser-Str.",
  "Jenaer Str.",
  "Johannes-Baptist-Str.",
  "Johannes-Dott-Str.",
  "Johannes-Popitz-Str.",
  "Johannes-Wislicenus-Str.",
  "Johannisburger Str.",
  "Johann-Janssen-Str.",
  "Johann-Wirtz-Weg",
  "Josefstr.",
  "Jüch",
  "Julius-Doms-Str.",
  "Julius-Leber-Str.",
  "Kaiserplatz",
  "Kaiserstr.",
  "Kaiser-Wilhelm-Allee",
  "Kalkstr.",
  "Kämpchenstr.",
  "Kämpenwiese",
  "Kämper Weg",
  "Kamptalweg",
  "Kanalstr.",
  "Kandinskystr.",
  "Kantstr.",
  "Kapellenstr.",
  "Karl-Arnold-Str.",
  "Karl-Bosch-Str.",
  "Karl-Bückart-Str.",
  "Karl-Carstens-Ring",
  "Karl-Friedrich-Goerdeler-Str.",
  "Karl-Jaspers-Str.",
  "Karl-König-Str.",
  "Karl-Krekeler-Str.",
  "Karl-Marx-Str.",
  "Karlstr.",
  "Karl-Ulitzka-Str.",
  "Karl-Wichmann-Str.",
  "Karl-Wingchen-Str.",
  "Käsenbrod",
  "Käthe-Kollwitz-Str.",
  "Katzbachstr.",
  "Kerschensteinerstr.",
  "Kiefernweg",
  "Kieler Str.",
  "Kieselstr.",
  "Kiesweg",
  "Kinderhausen",
  "Kleiberweg",
  "Kleine Kirchstr.",
  "Kleingansweg",
  "Kleinheider Weg",
  "Klief",
  "Kneippstr.",
  "Knochenbergsweg",
  "Kochergarten",
  "Kocherstr.",
  "Kockelsberg",
  "Kolberger Str.",
  "Kolmarer Str.",
  "Kölner Gasse",
  "Kölner Str.",
  "Kolpingstr.",
  "Königsberger Platz",
  "Konrad-Adenauer-Platz",
  "Köpenicker Str.",
  "Kopernikusstr.",
  "Körnerstr.",
  "Köschenberg",
  "Köttershof",
  "Kreuzbroicher Str.",
  "Kreuzkamp",
  "Krummer Weg",
  "Kruppstr.",
  "Kuhlmannweg",
  "Kump",
  "Kumper Weg",
  "Kunstfeldstr.",
  "Küppersteger Str.",
  "Kursiefen",
  "Kursiefer Weg",
  "Kurtekottenweg",
  "Kurt-Schumacher-Ring",
  "Kyllstr.",
  "Langenfelder Str.",
  "Längsleimbach",
  "Lärchenweg",
  "Legienstr.",
  "Lehner Mühle",
  "Leichlinger Str.",
  "Leimbacher Hof",
  "Leinestr.",
  "Leineweberstr.",
  "Leipziger Str.",
  "Lerchengasse",
  "Lessingstr.",
  "Libellenweg",
  "Lichstr.",
  "Liebigstr.",
  "Lindenstr.",
  "Lingenfeld",
  "Linienstr.",
  "Lippe",
  "Löchergraben",
  "Löfflerstr.",
  "Loheweg",
  "Lohrbergstr.",
  "Lohrstr.",
  "Löhstr.",
  "Lortzingstr.",
  "Lötzener Str.",
  "Löwenburgstr.",
  "Lucasstr.",
  "Ludwig-Erhard-Platz",
  "Ludwig-Girtler-Str.",
  "Ludwig-Knorr-Str.",
  "Luisenstr.",
  "Lupinenweg",
  "Lurchenweg",
  "Lützenkirchener Str.",
  "Lycker Str.",
  "Maashofstr.",
  "Manforter Str.",
  "Marc-Chagall-Str.",
  "Maria-Dresen-Str.",
  "Maria-Terwiel-Str.",
  "Marie-Curie-Str.",
  "Marienburger Str.",
  "Mariendorfer Str.",
  "Marienwerderstr.",
  "Marie-Schlei-Str.",
  "Marktplatz",
  "Markusweg",
  "Martin-Buber-Str.",
  "Martin-Heidegger-Str.",
  "Martin-Luther-Str.",
  "Masurenstr.",
  "Mathildenweg",
  "Maurinusstr.",
  "Mauspfad",
  "Max-Beckmann-Str.",
  "Max-Delbrück-Str.",
  "Max-Ernst-Str.",
  "Max-Holthausen-Platz",
  "Max-Horkheimer-Str.",
  "Max-Liebermann-Str.",
  "Max-Pechstein-Str.",
  "Max-Planck-Str.",
  "Max-Scheler-Str.",
  "Max-Schönenberg-Str.",
  "Maybachstr.",
  "Meckhofer Feld",
  "Meisenweg",
  "Memelstr.",
  "Menchendahler Str.",
  "Mendelssohnstr.",
  "Merziger Str.",
  "Mettlacher Str.",
  "Metzer Str.",
  "Michaelsweg",
  "Miselohestr.",
  "Mittelstr.",
  "Mohlenstr.",
  "Moltkestr.",
  "Monheimer Str.",
  "Montanusstr.",
  "Montessoriweg",
  "Moosweg",
  "Morsbroicher Str.",
  "Moselstr.",
  "Moskauer Str.",
  "Mozartstr.",
  "Mühlenweg",
  "Muhrgasse",
  "Muldestr.",
  "Mülhausener Str.",
  "Mülheimer Str.",
  "Münsters Gäßchen",
  "Münzstr.",
  "Müritzstr.",
  "Myliusstr.",
  "Nachtigallenweg",
  "Nauener Str.",
  "Neißestr.",
  "Nelly-Sachs-Str.",
  "Netzestr.",
  "Neuendriesch",
  "Neuenhausgasse",
  "Neuenkamp",
  "Neujudenhof",
  "Neukronenberger Str.",
  "Neustadtstr.",
  "Nicolai-Hartmann-Str.",
  "Niederblecher",
  "Niederfeldstr.",
  "Nietzschestr.",
  "Nikolaus-Groß-Str.",
  "Nobelstr.",
  "Norderneystr.",
  "Nordstr.",
  "Ober dem Hof",
  "Obere Lindenstr.",
  "Obere Str.",
  "Oberölbach",
  "Odenthaler Str.",
  "Oderstr.",
  "Okerstr.",
  "Olof-Palme-Str.",
  "Ophovener Str.",
  "Opladener Platz",
  "Opladener Str.",
  "Ortelsburger Str.",
  "Oskar-Moll-Str.",
  "Oskar-Schlemmer-Str.",
  "Oststr.",
  "Oswald-Spengler-Str.",
  "Otto-Dix-Str.",
  "Otto-Grimm-Str.",
  "Otto-Hahn-Str.",
  "Otto-Müller-Str.",
  "Otto-Stange-Str.",
  "Ottostr.",
  "Otto-Varnhagen-Str.",
  "Otto-Wels-Str.",
  "Ottweilerstr.",
  "Oulustr.",
  "Overfeldweg",
  "Pappelweg",
  "Paracelsusstr.",
  "Parkstr.",
  "Pastor-Louis-Str.",
  "Pastor-Scheibler-Str.",
  "Pastorskamp",
  "Paul-Klee-Str.",
  "Paul-Löbe-Str.",
  "Paulstr.",
  "Peenestr.",
  "Pescher Busch",
  "Peschstr.",
  "Pestalozzistr.",
  "Peter-Grieß-Str.",
  "Peter-Joseph-Lenné-Str.",
  "Peter-Neuenheuser-Str.",
  "Petersbergstr.",
  "Peterstr.",
  "Pfarrer-Jekel-Str.",
  "Pfarrer-Klein-Str.",
  "Pfarrer-Röhr-Str.",
  "Pfeilshofstr.",
  "Philipp-Ott-Str.",
  "Piet-Mondrian-Str.",
  "Platanenweg",
  "Pommernstr.",
  "Porschestr.",
  "Poststr.",
  "Potsdamer Str.",
  "Pregelstr.",
  "Prießnitzstr.",
  "Pützdelle",
  "Quarzstr.",
  "Quettinger Str.",
  "Rat-Deycks-Str.",
  "Rathenaustr.",
  "Ratherkämp",
  "Ratiborer Str.",
  "Raushofstr.",
  "Regensburger Str.",
  "Reinickendorfer Str.",
  "Renkgasse",
  "Rennbaumplatz",
  "Rennbaumstr.",
  "Reuschenberger Str.",
  "Reusrather Str.",
  "Reuterstr.",
  "Rheinallee",
  "Rheindorfer Str.",
  "Rheinstr.",
  "Rhein-Wupper-Platz",
  "Richard-Wagner-Str.",
  "Rilkestr.",
  "Ringstr.",
  "Robert-Blum-Str.",
  "Robert-Koch-Str.",
  "Robert-Medenwald-Str.",
  "Rolandstr.",
  "Romberg",
  "Röntgenstr.",
  "Roonstr.",
  "Ropenstall",
  "Ropenstaller Weg",
  "Rosenthal",
  "Rostocker Str.",
  "Rotdornweg",
  "Röttgerweg",
  "Rückertstr.",
  "Rudolf-Breitscheid-Str.",
  "Rudolf-Mann-Platz",
  "Rudolf-Stracke-Str.",
  "Ruhlachplatz",
  "Ruhlachstr.",
  "Rüttersweg",
  "Saalestr.",
  "Saarbrücker Str.",
  "Saarlauterner Str.",
  "Saarstr.",
  "Salamanderweg",
  "Samlandstr.",
  "Sanddornstr.",
  "Sandstr.",
  "Sauerbruchstr.",
  "Schäfershütte",
  "Scharnhorststr.",
  "Scheffershof",
  "Scheidemannstr.",
  "Schellingstr.",
  "Schenkendorfstr.",
  "Schießbergstr.",
  "Schillerstr.",
  "Schlangenhecke",
  "Schlebuscher Heide",
  "Schlebuscher Str.",
  "Schlebuschrath",
  "Schlehdornstr.",
  "Schleiermacherstr.",
  "Schloßstr.",
  "Schmalenbruch",
  "Schnepfenflucht",
  "Schöffenweg",
  "Schöllerstr.",
  "Schöne Aussicht",
  "Schöneberger Str.",
  "Schopenhauerstr.",
  "Schubertplatz",
  "Schubertstr.",
  "Schulberg",
  "Schulstr.",
  "Schumannstr.",
  "Schwalbenweg",
  "Schwarzastr.",
  "Sebastianusweg",
  "Semmelweisstr.",
  "Siebelplatz",
  "Siemensstr.",
  "Solinger Str.",
  "Sonderburger Str.",
  "Spandauer Str.",
  "Speestr.",
  "Sperberweg",
  "Sperlingsweg",
  "Spitzwegstr.",
  "Sporrenberger Mühle",
  "Spreestr.",
  "St. Ingberter Str.",
  "Starenweg",
  "Stauffenbergstr.",
  "Stefan-Zweig-Str.",
  "Stegerwaldstr.",
  "Steglitzer Str.",
  "Steinbücheler Feld",
  "Steinbücheler Str.",
  "Steinstr.",
  "Steinweg",
  "Stephan-Lochner-Str.",
  "Stephanusstr.",
  "Stettiner Str.",
  "Stixchesstr.",
  "Stöckenstr.",
  "Stralsunder Str.",
  "Straßburger Str.",
  "Stresemannplatz",
  "Strombergstr.",
  "Stromstr.",
  "Stüttekofener Str.",
  "Sudestr.",
  "Sürderstr.",
  "Syltstr.",
  "Talstr.",
  "Tannenbergstr.",
  "Tannenweg",
  "Taubenweg",
  "Teitscheider Weg",
  "Telegrafenstr.",
  "Teltower Str.",
  "Tempelhofer Str.",
  "Theodor-Adorno-Str.",
  "Theodor-Fliedner-Str.",
  "Theodor-Gierath-Str.",
  "Theodor-Haubach-Str.",
  "Theodor-Heuss-Ring",
  "Theodor-Storm-Str.",
  "Theodorstr.",
  "Thomas-Dehler-Str.",
  "Thomas-Morus-Str.",
  "Thomas-von-Aquin-Str.",
  "Tönges Feld",
  "Torstr.",
  "Treptower Str.",
  "Treuburger Str.",
  "Uhlandstr.",
  "Ulmenweg",
  "Ulmer Str.",
  "Ulrichstr.",
  "Ulrich-von-Hassell-Str.",
  "Umlag",
  "Unstrutstr.",
  "Unter dem Schildchen",
  "Unterölbach",
  "Unterstr.",
  "Uppersberg",
  "Van\\'t-Hoff-Str.",
  "Veit-Stoß-Str.",
  "Vereinsstr.",
  "Viktor-Meyer-Str.",
  "Vincent-van-Gogh-Str.",
  "Virchowstr.",
  "Voigtslach",
  "Volhardstr.",
  "Völklinger Str.",
  "Von-Brentano-Str.",
  "Von-Diergardt-Str.",
  "Von-Eichendorff-Str.",
  "Von-Ketteler-Str.",
  "Von-Knoeringen-Str.",
  "Von-Pettenkofer-Str.",
  "Von-Siebold-Str.",
  "Wacholderweg",
  "Waldstr.",
  "Walter-Flex-Str.",
  "Walter-Hempel-Str.",
  "Walter-Hochapfel-Str.",
  "Walter-Nernst-Str.",
  "Wannseestr.",
  "Warnowstr.",
  "Warthestr.",
  "Weddigenstr.",
  "Weichselstr.",
  "Weidenstr.",
  "Weidfeldstr.",
  "Weiherfeld",
  "Weiherstr.",
  "Weinhäuser Str.",
  "Weißdornweg",
  "Weißenseestr.",
  "Weizkamp",
  "Werftstr.",
  "Werkstättenstr.",
  "Werner-Heisenberg-Str.",
  "Werrastr.",
  "Weyerweg",
  "Widdauener Str.",
  "Wiebertshof",
  "Wiehbachtal",
  "Wiembachallee",
  "Wiesdorfer Platz",
  "Wiesenstr.",
  "Wilhelm-Busch-Str.",
  "Wilhelm-Hastrich-Str.",
  "Wilhelm-Leuschner-Str.",
  "Wilhelm-Liebknecht-Str.",
  "Wilhelmsgasse",
  "Wilhelmstr.",
  "Willi-Baumeister-Str.",
  "Willy-Brandt-Ring",
  "Winand-Rossi-Str.",
  "Windthorststr.",
  "Winkelweg",
  "Winterberg",
  "Wittenbergstr.",
  "Wolf-Vostell-Str.",
  "Wolkenburgstr.",
  "Wupperstr.",
  "Wuppertalstr.",
  "Wüstenhof",
  "Yitzhak-Rabin-Str.",
  "Zauberkuhle",
  "Zedernweg",
  "Zehlendorfer Str.",
  "Zehntenweg",
  "Zeisigweg",
  "Zeppelinstr.",
  "Zschopaustr.",
  "Zum Claashäuschen",
  "Zündhütchenweg",
  "Zur Alten Brauerei",
  "Zur alten Fabrik"
];

},{}],255:[function(require,module,exports){
module["exports"] = [
  "+49-1##-#######",
  "+49-1###-########"
];

},{}],256:[function(require,module,exports){
var cell_phone = {};
module['exports'] = cell_phone;
cell_phone.formats = require("./formats");

},{"./formats":255}],257:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.legal_form = require("./legal_form");
company.name = require("./name");

},{"./legal_form":258,"./name":259,"./suffix":260}],258:[function(require,module,exports){
module["exports"] = [
  "GmbH",
  "AG",
  "Gruppe",
  "KG",
  "GmbH & Co. KG",
  "UG",
  "OHG"
];

},{}],259:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} und #{Name.last_name}"
];

},{}],260:[function(require,module,exports){
arguments[4][258][0].apply(exports,arguments)
},{"dup":258}],261:[function(require,module,exports){
var de = {};
module['exports'] = de;
de.title = "German";
de.address = require("./address");
de.company = require("./company");
de.internet = require("./internet");
de.lorem = require("./lorem");
de.name = require("./name");
de.phone_number = require("./phone_number");
de.cell_phone = require("./cell_phone");
},{"./address":247,"./cell_phone":256,"./company":257,"./internet":264,"./lorem":265,"./name":268,"./phone_number":274}],262:[function(require,module,exports){
module["exports"] = [
  "com",
  "info",
  "name",
  "net",
  "org",
  "de",
  "ch"
];

},{}],263:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],264:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":262,"./free_email":263,"dup":187}],265:[function(require,module,exports){
var lorem = {};
module['exports'] = lorem;
lorem.words = require("./words");

},{"./words":266}],266:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"dup":229}],267:[function(require,module,exports){
module["exports"] = [
  "Aaron",
  "Abdul",
  "Abdullah",
  "Adam",
  "Adrian",
  "Adriano",
  "Ahmad",
  "Ahmed",
  "Ahmet",
  "Alan",
  "Albert",
  "Alessandro",
  "Alessio",
  "Alex",
  "Alexander",
  "Alfred",
  "Ali",
  "Amar",
  "Amir",
  "Amon",
  "Andre",
  "Andreas",
  "Andrew",
  "Angelo",
  "Ansgar",
  "Anthony",
  "Anton",
  "Antonio",
  "Arda",
  "Arian",
  "Armin",
  "Arne",
  "Arno",
  "Arthur",
  "Artur",
  "Arved",
  "Arvid",
  "Ayman",
  "Baran",
  "Baris",
  "Bastian",
  "Batuhan",
  "Bela",
  "Ben",
  "Benedikt",
  "Benjamin",
  "Bennet",
  "Bennett",
  "Benno",
  "Bent",
  "Berat",
  "Berkay",
  "Bernd",
  "Bilal",
  "Bjarne",
  "Björn",
  "Bo",
  "Boris",
  "Brandon",
  "Brian",
  "Bruno",
  "Bryan",
  "Burak",
  "Calvin",
  "Can",
  "Carl",
  "Carlo",
  "Carlos",
  "Caspar",
  "Cedric",
  "Cedrik",
  "Cem",
  "Charlie",
  "Chris",
  "Christian",
  "Christiano",
  "Christoph",
  "Christopher",
  "Claas",
  "Clemens",
  "Colin",
  "Collin",
  "Conner",
  "Connor",
  "Constantin",
  "Corvin",
  "Curt",
  "Damian",
  "Damien",
  "Daniel",
  "Danilo",
  "Danny",
  "Darian",
  "Dario",
  "Darius",
  "Darren",
  "David",
  "Davide",
  "Davin",
  "Dean",
  "Deniz",
  "Dennis",
  "Denny",
  "Devin",
  "Diego",
  "Dion",
  "Domenic",
  "Domenik",
  "Dominic",
  "Dominik",
  "Dorian",
  "Dustin",
  "Dylan",
  "Ecrin",
  "Eddi",
  "Eddy",
  "Edgar",
  "Edwin",
  "Efe",
  "Ege",
  "Elia",
  "Eliah",
  "Elias",
  "Elijah",
  "Emanuel",
  "Emil",
  "Emilian",
  "Emilio",
  "Emir",
  "Emirhan",
  "Emre",
  "Enes",
  "Enno",
  "Enrico",
  "Eren",
  "Eric",
  "Erik",
  "Etienne",
  "Fabian",
  "Fabien",
  "Fabio",
  "Fabrice",
  "Falk",
  "Felix",
  "Ferdinand",
  "Fiete",
  "Filip",
  "Finlay",
  "Finley",
  "Finn",
  "Finnley",
  "Florian",
  "Francesco",
  "Franz",
  "Frederic",
  "Frederick",
  "Frederik",
  "Friedrich",
  "Fritz",
  "Furkan",
  "Fynn",
  "Gabriel",
  "Georg",
  "Gerrit",
  "Gian",
  "Gianluca",
  "Gino",
  "Giuliano",
  "Giuseppe",
  "Gregor",
  "Gustav",
  "Hagen",
  "Hamza",
  "Hannes",
  "Hanno",
  "Hans",
  "Hasan",
  "Hassan",
  "Hauke",
  "Hendrik",
  "Hennes",
  "Henning",
  "Henri",
  "Henrick",
  "Henrik",
  "Henry",
  "Hugo",
  "Hussein",
  "Ian",
  "Ibrahim",
  "Ilias",
  "Ilja",
  "Ilyas",
  "Immanuel",
  "Ismael",
  "Ismail",
  "Ivan",
  "Iven",
  "Jack",
  "Jacob",
  "Jaden",
  "Jakob",
  "Jamal",
  "James",
  "Jamie",
  "Jan",
  "Janek",
  "Janis",
  "Janne",
  "Jannek",
  "Jannes",
  "Jannik",
  "Jannis",
  "Jano",
  "Janosch",
  "Jared",
  "Jari",
  "Jarne",
  "Jarno",
  "Jaron",
  "Jason",
  "Jasper",
  "Jay",
  "Jayden",
  "Jayson",
  "Jean",
  "Jens",
  "Jeremias",
  "Jeremie",
  "Jeremy",
  "Jermaine",
  "Jerome",
  "Jesper",
  "Jesse",
  "Jim",
  "Jimmy",
  "Joe",
  "Joel",
  "Joey",
  "Johann",
  "Johannes",
  "John",
  "Johnny",
  "Jon",
  "Jona",
  "Jonah",
  "Jonas",
  "Jonathan",
  "Jonte",
  "Joost",
  "Jordan",
  "Joris",
  "Joscha",
  "Joschua",
  "Josef",
  "Joseph",
  "Josh",
  "Joshua",
  "Josua",
  "Juan",
  "Julian",
  "Julien",
  "Julius",
  "Juri",
  "Justin",
  "Justus",
  "Kaan",
  "Kai",
  "Kalle",
  "Karim",
  "Karl",
  "Karlo",
  "Kay",
  "Keanu",
  "Kenan",
  "Kenny",
  "Keno",
  "Kerem",
  "Kerim",
  "Kevin",
  "Kian",
  "Kilian",
  "Kim",
  "Kimi",
  "Kjell",
  "Klaas",
  "Klemens",
  "Konrad",
  "Konstantin",
  "Koray",
  "Korbinian",
  "Kurt",
  "Lars",
  "Lasse",
  "Laurence",
  "Laurens",
  "Laurenz",
  "Laurin",
  "Lean",
  "Leander",
  "Leandro",
  "Leif",
  "Len",
  "Lenn",
  "Lennard",
  "Lennart",
  "Lennert",
  "Lennie",
  "Lennox",
  "Lenny",
  "Leo",
  "Leon",
  "Leonard",
  "Leonardo",
  "Leonhard",
  "Leonidas",
  "Leopold",
  "Leroy",
  "Levent",
  "Levi",
  "Levin",
  "Lewin",
  "Lewis",
  "Liam",
  "Lian",
  "Lias",
  "Lino",
  "Linus",
  "Lio",
  "Lion",
  "Lionel",
  "Logan",
  "Lorenz",
  "Lorenzo",
  "Loris",
  "Louis",
  "Luan",
  "Luc",
  "Luca",
  "Lucas",
  "Lucian",
  "Lucien",
  "Ludwig",
  "Luis",
  "Luiz",
  "Luk",
  "Luka",
  "Lukas",
  "Luke",
  "Lutz",
  "Maddox",
  "Mads",
  "Magnus",
  "Maik",
  "Maksim",
  "Malik",
  "Malte",
  "Manuel",
  "Marc",
  "Marcel",
  "Marco",
  "Marcus",
  "Marek",
  "Marian",
  "Mario",
  "Marius",
  "Mark",
  "Marko",
  "Markus",
  "Marlo",
  "Marlon",
  "Marten",
  "Martin",
  "Marvin",
  "Marwin",
  "Mateo",
  "Mathis",
  "Matis",
  "Mats",
  "Matteo",
  "Mattes",
  "Matthias",
  "Matthis",
  "Matti",
  "Mattis",
  "Maurice",
  "Max",
  "Maxim",
  "Maximilian",
  "Mehmet",
  "Meik",
  "Melvin",
  "Merlin",
  "Mert",
  "Michael",
  "Michel",
  "Mick",
  "Miguel",
  "Mika",
  "Mikail",
  "Mike",
  "Milan",
  "Milo",
  "Mio",
  "Mirac",
  "Mirco",
  "Mirko",
  "Mohamed",
  "Mohammad",
  "Mohammed",
  "Moritz",
  "Morten",
  "Muhammed",
  "Murat",
  "Mustafa",
  "Nathan",
  "Nathanael",
  "Nelson",
  "Neo",
  "Nevio",
  "Nick",
  "Niclas",
  "Nico",
  "Nicolai",
  "Nicolas",
  "Niels",
  "Nikita",
  "Niklas",
  "Niko",
  "Nikolai",
  "Nikolas",
  "Nils",
  "Nino",
  "Noah",
  "Noel",
  "Norman",
  "Odin",
  "Oke",
  "Ole",
  "Oliver",
  "Omar",
  "Onur",
  "Oscar",
  "Oskar",
  "Pascal",
  "Patrice",
  "Patrick",
  "Paul",
  "Peer",
  "Pepe",
  "Peter",
  "Phil",
  "Philip",
  "Philipp",
  "Pierre",
  "Piet",
  "Pit",
  "Pius",
  "Quentin",
  "Quirin",
  "Rafael",
  "Raik",
  "Ramon",
  "Raphael",
  "Rasmus",
  "Raul",
  "Rayan",
  "René",
  "Ricardo",
  "Riccardo",
  "Richard",
  "Rick",
  "Rico",
  "Robert",
  "Robin",
  "Rocco",
  "Roman",
  "Romeo",
  "Ron",
  "Ruben",
  "Ryan",
  "Said",
  "Salih",
  "Sam",
  "Sami",
  "Sammy",
  "Samuel",
  "Sandro",
  "Santino",
  "Sascha",
  "Sean",
  "Sebastian",
  "Selim",
  "Semih",
  "Shawn",
  "Silas",
  "Simeon",
  "Simon",
  "Sinan",
  "Sky",
  "Stefan",
  "Steffen",
  "Stephan",
  "Steve",
  "Steven",
  "Sven",
  "Sönke",
  "Sören",
  "Taha",
  "Tamino",
  "Tammo",
  "Tarik",
  "Tayler",
  "Taylor",
  "Teo",
  "Theo",
  "Theodor",
  "Thies",
  "Thilo",
  "Thomas",
  "Thorben",
  "Thore",
  "Thorge",
  "Tiago",
  "Til",
  "Till",
  "Tillmann",
  "Tim",
  "Timm",
  "Timo",
  "Timon",
  "Timothy",
  "Tino",
  "Titus",
  "Tizian",
  "Tjark",
  "Tobias",
  "Tom",
  "Tommy",
  "Toni",
  "Tony",
  "Torben",
  "Tore",
  "Tristan",
  "Tyler",
  "Tyron",
  "Umut",
  "Valentin",
  "Valentino",
  "Veit",
  "Victor",
  "Viktor",
  "Vin",
  "Vincent",
  "Vito",
  "Vitus",
  "Wilhelm",
  "Willi",
  "William",
  "Willy",
  "Xaver",
  "Yannic",
  "Yannick",
  "Yannik",
  "Yannis",
  "Yasin",
  "Youssef",
  "Yunus",
  "Yusuf",
  "Yven",
  "Yves",
  "Ömer",
  "Aaliyah",
  "Abby",
  "Abigail",
  "Ada",
  "Adelina",
  "Adriana",
  "Aileen",
  "Aimee",
  "Alana",
  "Alea",
  "Alena",
  "Alessa",
  "Alessia",
  "Alexa",
  "Alexandra",
  "Alexia",
  "Alexis",
  "Aleyna",
  "Alia",
  "Alica",
  "Alice",
  "Alicia",
  "Alina",
  "Alisa",
  "Alisha",
  "Alissa",
  "Aliya",
  "Aliyah",
  "Allegra",
  "Alma",
  "Alyssa",
  "Amalia",
  "Amanda",
  "Amelia",
  "Amelie",
  "Amina",
  "Amira",
  "Amy",
  "Ana",
  "Anabel",
  "Anastasia",
  "Andrea",
  "Angela",
  "Angelina",
  "Angelique",
  "Anja",
  "Ann",
  "Anna",
  "Annabel",
  "Annabell",
  "Annabelle",
  "Annalena",
  "Anne",
  "Anneke",
  "Annelie",
  "Annemarie",
  "Anni",
  "Annie",
  "Annika",
  "Anny",
  "Anouk",
  "Antonia",
  "Arda",
  "Ariana",
  "Ariane",
  "Arwen",
  "Ashley",
  "Asya",
  "Aurelia",
  "Aurora",
  "Ava",
  "Ayleen",
  "Aylin",
  "Ayse",
  "Azra",
  "Betty",
  "Bianca",
  "Bianka",
  "Caitlin",
  "Cara",
  "Carina",
  "Carla",
  "Carlotta",
  "Carmen",
  "Carolin",
  "Carolina",
  "Caroline",
  "Cassandra",
  "Catharina",
  "Catrin",
  "Cecile",
  "Cecilia",
  "Celia",
  "Celina",
  "Celine",
  "Ceyda",
  "Ceylin",
  "Chantal",
  "Charleen",
  "Charlotta",
  "Charlotte",
  "Chayenne",
  "Cheyenne",
  "Chiara",
  "Christin",
  "Christina",
  "Cindy",
  "Claire",
  "Clara",
  "Clarissa",
  "Colleen",
  "Collien",
  "Cora",
  "Corinna",
  "Cosima",
  "Dana",
  "Daniela",
  "Daria",
  "Darleen",
  "Defne",
  "Delia",
  "Denise",
  "Diana",
  "Dilara",
  "Dina",
  "Dorothea",
  "Ecrin",
  "Eda",
  "Eileen",
  "Ela",
  "Elaine",
  "Elanur",
  "Elea",
  "Elena",
  "Eleni",
  "Eleonora",
  "Eliana",
  "Elif",
  "Elina",
  "Elisa",
  "Elisabeth",
  "Ella",
  "Ellen",
  "Elli",
  "Elly",
  "Elsa",
  "Emelie",
  "Emely",
  "Emilia",
  "Emilie",
  "Emily",
  "Emma",
  "Emmely",
  "Emmi",
  "Emmy",
  "Enie",
  "Enna",
  "Enya",
  "Esma",
  "Estelle",
  "Esther",
  "Eva",
  "Evelin",
  "Evelina",
  "Eveline",
  "Evelyn",
  "Fabienne",
  "Fatima",
  "Fatma",
  "Felicia",
  "Felicitas",
  "Felina",
  "Femke",
  "Fenja",
  "Fine",
  "Finia",
  "Finja",
  "Finnja",
  "Fiona",
  "Flora",
  "Florentine",
  "Francesca",
  "Franka",
  "Franziska",
  "Frederike",
  "Freya",
  "Frida",
  "Frieda",
  "Friederike",
  "Giada",
  "Gina",
  "Giulia",
  "Giuliana",
  "Greta",
  "Hailey",
  "Hana",
  "Hanna",
  "Hannah",
  "Heidi",
  "Helen",
  "Helena",
  "Helene",
  "Helin",
  "Henriette",
  "Henrike",
  "Hermine",
  "Ida",
  "Ilayda",
  "Imke",
  "Ina",
  "Ines",
  "Inga",
  "Inka",
  "Irem",
  "Isa",
  "Isabel",
  "Isabell",
  "Isabella",
  "Isabelle",
  "Ivonne",
  "Jacqueline",
  "Jamie",
  "Jamila",
  "Jana",
  "Jane",
  "Janin",
  "Janina",
  "Janine",
  "Janna",
  "Janne",
  "Jara",
  "Jasmin",
  "Jasmina",
  "Jasmine",
  "Jella",
  "Jenna",
  "Jennifer",
  "Jenny",
  "Jessica",
  "Jessy",
  "Jette",
  "Jil",
  "Jill",
  "Joana",
  "Joanna",
  "Joelina",
  "Joeline",
  "Joelle",
  "Johanna",
  "Joleen",
  "Jolie",
  "Jolien",
  "Jolin",
  "Jolina",
  "Joline",
  "Jona",
  "Jonah",
  "Jonna",
  "Josefin",
  "Josefine",
  "Josephin",
  "Josephine",
  "Josie",
  "Josy",
  "Joy",
  "Joyce",
  "Judith",
  "Judy",
  "Jule",
  "Julia",
  "Juliana",
  "Juliane",
  "Julie",
  "Julienne",
  "Julika",
  "Julina",
  "Juna",
  "Justine",
  "Kaja",
  "Karina",
  "Karla",
  "Karlotta",
  "Karolina",
  "Karoline",
  "Kassandra",
  "Katarina",
  "Katharina",
  "Kathrin",
  "Katja",
  "Katrin",
  "Kaya",
  "Kayra",
  "Kiana",
  "Kiara",
  "Kim",
  "Kimberley",
  "Kimberly",
  "Kira",
  "Klara",
  "Korinna",
  "Kristin",
  "Kyra",
  "Laila",
  "Lana",
  "Lara",
  "Larissa",
  "Laura",
  "Laureen",
  "Lavinia",
  "Lea",
  "Leah",
  "Leana",
  "Leandra",
  "Leann",
  "Lee",
  "Leila",
  "Lena",
  "Lene",
  "Leni",
  "Lenia",
  "Lenja",
  "Lenya",
  "Leona",
  "Leoni",
  "Leonie",
  "Leonora",
  "Leticia",
  "Letizia",
  "Levke",
  "Leyla",
  "Lia",
  "Liah",
  "Liana",
  "Lili",
  "Lilia",
  "Lilian",
  "Liliana",
  "Lilith",
  "Lilli",
  "Lillian",
  "Lilly",
  "Lily",
  "Lina",
  "Linda",
  "Lindsay",
  "Line",
  "Linn",
  "Linnea",
  "Lisa",
  "Lisann",
  "Lisanne",
  "Liv",
  "Livia",
  "Liz",
  "Lola",
  "Loreen",
  "Lorena",
  "Lotta",
  "Lotte",
  "Louisa",
  "Louise",
  "Luana",
  "Luca",
  "Lucia",
  "Lucie",
  "Lucienne",
  "Lucy",
  "Luisa",
  "Luise",
  "Luka",
  "Luna",
  "Luzie",
  "Lya",
  "Lydia",
  "Lyn",
  "Lynn",
  "Madeleine",
  "Madita",
  "Madleen",
  "Madlen",
  "Magdalena",
  "Maike",
  "Mailin",
  "Maira",
  "Maja",
  "Malena",
  "Malia",
  "Malin",
  "Malina",
  "Mandy",
  "Mara",
  "Marah",
  "Mareike",
  "Maren",
  "Maria",
  "Mariam",
  "Marie",
  "Marieke",
  "Mariella",
  "Marika",
  "Marina",
  "Marisa",
  "Marissa",
  "Marit",
  "Marla",
  "Marleen",
  "Marlen",
  "Marlena",
  "Marlene",
  "Marta",
  "Martha",
  "Mary",
  "Maryam",
  "Mathilda",
  "Mathilde",
  "Matilda",
  "Maxi",
  "Maxima",
  "Maxine",
  "Maya",
  "Mayra",
  "Medina",
  "Medine",
  "Meike",
  "Melanie",
  "Melek",
  "Melike",
  "Melina",
  "Melinda",
  "Melis",
  "Melisa",
  "Melissa",
  "Merle",
  "Merve",
  "Meryem",
  "Mette",
  "Mia",
  "Michaela",
  "Michelle",
  "Mieke",
  "Mila",
  "Milana",
  "Milena",
  "Milla",
  "Mina",
  "Mira",
  "Miray",
  "Miriam",
  "Mirja",
  "Mona",
  "Monique",
  "Nadine",
  "Nadja",
  "Naemi",
  "Nancy",
  "Naomi",
  "Natalia",
  "Natalie",
  "Nathalie",
  "Neele",
  "Nela",
  "Nele",
  "Nelli",
  "Nelly",
  "Nia",
  "Nicole",
  "Nika",
  "Nike",
  "Nikita",
  "Nila",
  "Nina",
  "Nisa",
  "Noemi",
  "Nora",
  "Olivia",
  "Patricia",
  "Patrizia",
  "Paula",
  "Paulina",
  "Pauline",
  "Penelope",
  "Philine",
  "Phoebe",
  "Pia",
  "Rahel",
  "Rania",
  "Rebecca",
  "Rebekka",
  "Riana",
  "Rieke",
  "Rike",
  "Romina",
  "Romy",
  "Ronja",
  "Rosa",
  "Rosalie",
  "Ruby",
  "Sabrina",
  "Sahra",
  "Sally",
  "Salome",
  "Samantha",
  "Samia",
  "Samira",
  "Sandra",
  "Sandy",
  "Sanja",
  "Saphira",
  "Sara",
  "Sarah",
  "Saskia",
  "Selin",
  "Selina",
  "Selma",
  "Sena",
  "Sidney",
  "Sienna",
  "Silja",
  "Sina",
  "Sinja",
  "Smilla",
  "Sofia",
  "Sofie",
  "Sonja",
  "Sophia",
  "Sophie",
  "Soraya",
  "Stefanie",
  "Stella",
  "Stephanie",
  "Stina",
  "Sude",
  "Summer",
  "Susanne",
  "Svea",
  "Svenja",
  "Sydney",
  "Tabea",
  "Talea",
  "Talia",
  "Tamara",
  "Tamia",
  "Tamina",
  "Tanja",
  "Tara",
  "Tarja",
  "Teresa",
  "Tessa",
  "Thalea",
  "Thalia",
  "Thea",
  "Theresa",
  "Tia",
  "Tina",
  "Tomke",
  "Tuana",
  "Valentina",
  "Valeria",
  "Valerie",
  "Vanessa",
  "Vera",
  "Veronika",
  "Victoria",
  "Viktoria",
  "Viola",
  "Vivian",
  "Vivien",
  "Vivienne",
  "Wibke",
  "Wiebke",
  "Xenia",
  "Yara",
  "Yaren",
  "Yasmin",
  "Ylvi",
  "Ylvie",
  "Yvonne",
  "Zara",
  "Zehra",
  "Zeynep",
  "Zoe",
  "Zoey",
  "Zoé"
];

},{}],268:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.nobility_title_prefix = require("./nobility_title_prefix");
name.name = require("./name");

},{"./first_name":267,"./last_name":269,"./name":270,"./nobility_title_prefix":271,"./prefix":272}],269:[function(require,module,exports){
module["exports"] = [
  "Abel",
  "Abicht",
  "Abraham",
  "Abramovic",
  "Abt",
  "Achilles",
  "Achkinadze",
  "Ackermann",
  "Adam",
  "Adams",
  "Ade",
  "Agostini",
  "Ahlke",
  "Ahrenberg",
  "Ahrens",
  "Aigner",
  "Albert",
  "Albrecht",
  "Alexa",
  "Alexander",
  "Alizadeh",
  "Allgeyer",
  "Amann",
  "Amberg",
  "Anding",
  "Anggreny",
  "Apitz",
  "Arendt",
  "Arens",
  "Arndt",
  "Aryee",
  "Aschenbroich",
  "Assmus",
  "Astafei",
  "Auer",
  "Axmann",
  "Baarck",
  "Bachmann",
  "Badane",
  "Bader",
  "Baganz",
  "Bahl",
  "Bak",
  "Balcer",
  "Balck",
  "Balkow",
  "Balnuweit",
  "Balzer",
  "Banse",
  "Barr",
  "Bartels",
  "Barth",
  "Barylla",
  "Baseda",
  "Battke",
  "Bauer",
  "Bauermeister",
  "Baumann",
  "Baumeister",
  "Bauschinger",
  "Bauschke",
  "Bayer",
  "Beavogui",
  "Beck",
  "Beckel",
  "Becker",
  "Beckmann",
  "Bedewitz",
  "Beele",
  "Beer",
  "Beggerow",
  "Beh",
  "Behr",
  "Behrenbruch",
  "Belz",
  "Bender",
  "Benecke",
  "Benner",
  "Benninger",
  "Benzing",
  "Berends",
  "Berger",
  "Berner",
  "Berning",
  "Bertenbreiter",
  "Best",
  "Bethke",
  "Betz",
  "Beushausen",
  "Beutelspacher",
  "Beyer",
  "Biba",
  "Bichler",
  "Bickel",
  "Biedermann",
  "Bieler",
  "Bielert",
  "Bienasch",
  "Bienias",
  "Biesenbach",
  "Bigdeli",
  "Birkemeyer",
  "Bittner",
  "Blank",
  "Blaschek",
  "Blassneck",
  "Bloch",
  "Blochwitz",
  "Blockhaus",
  "Blum",
  "Blume",
  "Bock",
  "Bode",
  "Bogdashin",
  "Bogenrieder",
  "Bohge",
  "Bolm",
  "Borgschulze",
  "Bork",
  "Bormann",
  "Bornscheuer",
  "Borrmann",
  "Borsch",
  "Boruschewski",
  "Bos",
  "Bosler",
  "Bourrouag",
  "Bouschen",
  "Boxhammer",
  "Boyde",
  "Bozsik",
  "Brand",
  "Brandenburg",
  "Brandis",
  "Brandt",
  "Brauer",
  "Braun",
  "Brehmer",
  "Breitenstein",
  "Bremer",
  "Bremser",
  "Brenner",
  "Brettschneider",
  "Breu",
  "Breuer",
  "Briesenick",
  "Bringmann",
  "Brinkmann",
  "Brix",
  "Broening",
  "Brosch",
  "Bruckmann",
  "Bruder",
  "Bruhns",
  "Brunner",
  "Bruns",
  "Bräutigam",
  "Brömme",
  "Brüggmann",
  "Buchholz",
  "Buchrucker",
  "Buder",
  "Bultmann",
  "Bunjes",
  "Burger",
  "Burghagen",
  "Burkhard",
  "Burkhardt",
  "Burmeister",
  "Busch",
  "Buschbaum",
  "Busemann",
  "Buss",
  "Busse",
  "Bussmann",
  "Byrd",
  "Bäcker",
  "Böhm",
  "Bönisch",
  "Börgeling",
  "Börner",
  "Böttner",
  "Büchele",
  "Bühler",
  "Büker",
  "Büngener",
  "Bürger",
  "Bürklein",
  "Büscher",
  "Büttner",
  "Camara",
  "Carlowitz",
  "Carlsohn",
  "Caspari",
  "Caspers",
  "Chapron",
  "Christ",
  "Cierpinski",
  "Clarius",
  "Cleem",
  "Cleve",
  "Co",
  "Conrad",
  "Cordes",
  "Cornelsen",
  "Cors",
  "Cotthardt",
  "Crews",
  "Cronjäger",
  "Crosskofp",
  "Da",
  "Dahm",
  "Dahmen",
  "Daimer",
  "Damaske",
  "Danneberg",
  "Danner",
  "Daub",
  "Daubner",
  "Daudrich",
  "Dauer",
  "Daum",
  "Dauth",
  "Dautzenberg",
  "De",
  "Decker",
  "Deckert",
  "Deerberg",
  "Dehmel",
  "Deja",
  "Delonge",
  "Demut",
  "Dengler",
  "Denner",
  "Denzinger",
  "Derr",
  "Dertmann",
  "Dethloff",
  "Deuschle",
  "Dieckmann",
  "Diedrich",
  "Diekmann",
  "Dienel",
  "Dies",
  "Dietrich",
  "Dietz",
  "Dietzsch",
  "Diezel",
  "Dilla",
  "Dingelstedt",
  "Dippl",
  "Dittmann",
  "Dittmar",
  "Dittmer",
  "Dix",
  "Dobbrunz",
  "Dobler",
  "Dohring",
  "Dolch",
  "Dold",
  "Dombrowski",
  "Donie",
  "Doskoczynski",
  "Dragu",
  "Drechsler",
  "Drees",
  "Dreher",
  "Dreier",
  "Dreissigacker",
  "Dressler",
  "Drews",
  "Duma",
  "Dutkiewicz",
  "Dyett",
  "Dylus",
  "Dächert",
  "Döbel",
  "Döring",
  "Dörner",
  "Dörre",
  "Dück",
  "Eberhard",
  "Eberhardt",
  "Ecker",
  "Eckhardt",
  "Edorh",
  "Effler",
  "Eggenmueller",
  "Ehm",
  "Ehmann",
  "Ehrig",
  "Eich",
  "Eichmann",
  "Eifert",
  "Einert",
  "Eisenlauer",
  "Ekpo",
  "Elbe",
  "Eleyth",
  "Elss",
  "Emert",
  "Emmelmann",
  "Ender",
  "Engel",
  "Engelen",
  "Engelmann",
  "Eplinius",
  "Erdmann",
  "Erhardt",
  "Erlei",
  "Erm",
  "Ernst",
  "Ertl",
  "Erwes",
  "Esenwein",
  "Esser",
  "Evers",
  "Everts",
  "Ewald",
  "Fahner",
  "Faller",
  "Falter",
  "Farber",
  "Fassbender",
  "Faulhaber",
  "Fehrig",
  "Feld",
  "Felke",
  "Feller",
  "Fenner",
  "Fenske",
  "Feuerbach",
  "Fietz",
  "Figl",
  "Figura",
  "Filipowski",
  "Filsinger",
  "Fincke",
  "Fink",
  "Finke",
  "Fischer",
  "Fitschen",
  "Fleischer",
  "Fleischmann",
  "Floder",
  "Florczak",
  "Flore",
  "Flottmann",
  "Forkel",
  "Forst",
  "Frahmeke",
  "Frank",
  "Franke",
  "Franta",
  "Frantz",
  "Franz",
  "Franzis",
  "Franzmann",
  "Frauen",
  "Frauendorf",
  "Freigang",
  "Freimann",
  "Freimuth",
  "Freisen",
  "Frenzel",
  "Frey",
  "Fricke",
  "Fried",
  "Friedek",
  "Friedenberg",
  "Friedmann",
  "Friedrich",
  "Friess",
  "Frisch",
  "Frohn",
  "Frosch",
  "Fuchs",
  "Fuhlbrügge",
  "Fusenig",
  "Fust",
  "Förster",
  "Gaba",
  "Gabius",
  "Gabler",
  "Gadschiew",
  "Gakstädter",
  "Galander",
  "Gamlin",
  "Gamper",
  "Gangnus",
  "Ganzmann",
  "Garatva",
  "Gast",
  "Gastel",
  "Gatzka",
  "Gauder",
  "Gebhardt",
  "Geese",
  "Gehre",
  "Gehrig",
  "Gehring",
  "Gehrke",
  "Geiger",
  "Geisler",
  "Geissler",
  "Gelling",
  "Gens",
  "Gerbennow",
  "Gerdel",
  "Gerhardt",
  "Gerschler",
  "Gerson",
  "Gesell",
  "Geyer",
  "Ghirmai",
  "Ghosh",
  "Giehl",
  "Gierisch",
  "Giesa",
  "Giesche",
  "Gilde",
  "Glatting",
  "Goebel",
  "Goedicke",
  "Goldbeck",
  "Goldfuss",
  "Goldkamp",
  "Goldkühle",
  "Goller",
  "Golling",
  "Gollnow",
  "Golomski",
  "Gombert",
  "Gotthardt",
  "Gottschalk",
  "Gotz",
  "Goy",
  "Gradzki",
  "Graf",
  "Grams",
  "Grasse",
  "Gratzky",
  "Grau",
  "Greb",
  "Green",
  "Greger",
  "Greithanner",
  "Greschner",
  "Griem",
  "Griese",
  "Grimm",
  "Gromisch",
  "Gross",
  "Grosser",
  "Grossheim",
  "Grosskopf",
  "Grothaus",
  "Grothkopp",
  "Grotke",
  "Grube",
  "Gruber",
  "Grundmann",
  "Gruning",
  "Gruszecki",
  "Gröss",
  "Grötzinger",
  "Grün",
  "Grüner",
  "Gummelt",
  "Gunkel",
  "Gunther",
  "Gutjahr",
  "Gutowicz",
  "Gutschank",
  "Göbel",
  "Göckeritz",
  "Göhler",
  "Görlich",
  "Görmer",
  "Götz",
  "Götzelmann",
  "Güldemeister",
  "Günther",
  "Günz",
  "Gürbig",
  "Haack",
  "Haaf",
  "Habel",
  "Hache",
  "Hackbusch",
  "Hackelbusch",
  "Hadfield",
  "Hadwich",
  "Haferkamp",
  "Hahn",
  "Hajek",
  "Hallmann",
  "Hamann",
  "Hanenberger",
  "Hannecker",
  "Hanniske",
  "Hansen",
  "Hardy",
  "Hargasser",
  "Harms",
  "Harnapp",
  "Harter",
  "Harting",
  "Hartlieb",
  "Hartmann",
  "Hartwig",
  "Hartz",
  "Haschke",
  "Hasler",
  "Hasse",
  "Hassfeld",
  "Haug",
  "Hauke",
  "Haupt",
  "Haverney",
  "Heberstreit",
  "Hechler",
  "Hecht",
  "Heck",
  "Hedermann",
  "Hehl",
  "Heidelmann",
  "Heidler",
  "Heinemann",
  "Heinig",
  "Heinke",
  "Heinrich",
  "Heinze",
  "Heiser",
  "Heist",
  "Hellmann",
  "Helm",
  "Helmke",
  "Helpling",
  "Hengmith",
  "Henkel",
  "Hennes",
  "Henry",
  "Hense",
  "Hensel",
  "Hentel",
  "Hentschel",
  "Hentschke",
  "Hepperle",
  "Herberger",
  "Herbrand",
  "Hering",
  "Hermann",
  "Hermecke",
  "Herms",
  "Herold",
  "Herrmann",
  "Herschmann",
  "Hertel",
  "Herweg",
  "Herwig",
  "Herzenberg",
  "Hess",
  "Hesse",
  "Hessek",
  "Hessler",
  "Hetzler",
  "Heuck",
  "Heydemüller",
  "Hiebl",
  "Hildebrand",
  "Hildenbrand",
  "Hilgendorf",
  "Hillard",
  "Hiller",
  "Hingsen",
  "Hingst",
  "Hinrichs",
  "Hirsch",
  "Hirschberg",
  "Hirt",
  "Hodea",
  "Hoffman",
  "Hoffmann",
  "Hofmann",
  "Hohenberger",
  "Hohl",
  "Hohn",
  "Hohnheiser",
  "Hold",
  "Holdt",
  "Holinski",
  "Holl",
  "Holtfreter",
  "Holz",
  "Holzdeppe",
  "Holzner",
  "Hommel",
  "Honz",
  "Hooss",
  "Hoppe",
  "Horak",
  "Horn",
  "Horna",
  "Hornung",
  "Hort",
  "Howard",
  "Huber",
  "Huckestein",
  "Hudak",
  "Huebel",
  "Hugo",
  "Huhn",
  "Hujo",
  "Huke",
  "Huls",
  "Humbert",
  "Huneke",
  "Huth",
  "Häber",
  "Häfner",
  "Höcke",
  "Höft",
  "Höhne",
  "Hönig",
  "Hördt",
  "Hübenbecker",
  "Hübl",
  "Hübner",
  "Hügel",
  "Hüttcher",
  "Hütter",
  "Ibe",
  "Ihly",
  "Illing",
  "Isak",
  "Isekenmeier",
  "Itt",
  "Jacob",
  "Jacobs",
  "Jagusch",
  "Jahn",
  "Jahnke",
  "Jakobs",
  "Jakubczyk",
  "Jambor",
  "Jamrozy",
  "Jander",
  "Janich",
  "Janke",
  "Jansen",
  "Jarets",
  "Jaros",
  "Jasinski",
  "Jasper",
  "Jegorov",
  "Jellinghaus",
  "Jeorga",
  "Jerschabek",
  "Jess",
  "John",
  "Jonas",
  "Jossa",
  "Jucken",
  "Jung",
  "Jungbluth",
  "Jungton",
  "Just",
  "Jürgens",
  "Kaczmarek",
  "Kaesmacher",
  "Kahl",
  "Kahlert",
  "Kahles",
  "Kahlmeyer",
  "Kaiser",
  "Kalinowski",
  "Kallabis",
  "Kallensee",
  "Kampf",
  "Kampschulte",
  "Kappe",
  "Kappler",
  "Karhoff",
  "Karrass",
  "Karst",
  "Karsten",
  "Karus",
  "Kass",
  "Kasten",
  "Kastner",
  "Katzinski",
  "Kaufmann",
  "Kaul",
  "Kausemann",
  "Kawohl",
  "Kazmarek",
  "Kedzierski",
  "Keil",
  "Keiner",
  "Keller",
  "Kelm",
  "Kempe",
  "Kemper",
  "Kempter",
  "Kerl",
  "Kern",
  "Kesselring",
  "Kesselschläger",
  "Kette",
  "Kettenis",
  "Keutel",
  "Kick",
  "Kiessling",
  "Kinadeter",
  "Kinzel",
  "Kinzy",
  "Kirch",
  "Kirst",
  "Kisabaka",
  "Klaas",
  "Klabuhn",
  "Klapper",
  "Klauder",
  "Klaus",
  "Kleeberg",
  "Kleiber",
  "Klein",
  "Kleinert",
  "Kleininger",
  "Kleinmann",
  "Kleinsteuber",
  "Kleiss",
  "Klemme",
  "Klimczak",
  "Klinger",
  "Klink",
  "Klopsch",
  "Klose",
  "Kloss",
  "Kluge",
  "Kluwe",
  "Knabe",
  "Kneifel",
  "Knetsch",
  "Knies",
  "Knippel",
  "Knobel",
  "Knoblich",
  "Knoll",
  "Knorr",
  "Knorscheidt",
  "Knut",
  "Kobs",
  "Koch",
  "Kochan",
  "Kock",
  "Koczulla",
  "Koderisch",
  "Koehl",
  "Koehler",
  "Koenig",
  "Koester",
  "Kofferschlager",
  "Koha",
  "Kohle",
  "Kohlmann",
  "Kohnle",
  "Kohrt",
  "Koj",
  "Kolb",
  "Koleiski",
  "Kolokas",
  "Komoll",
  "Konieczny",
  "Konig",
  "Konow",
  "Konya",
  "Koob",
  "Kopf",
  "Kosenkow",
  "Koster",
  "Koszewski",
  "Koubaa",
  "Kovacs",
  "Kowalick",
  "Kowalinski",
  "Kozakiewicz",
  "Krabbe",
  "Kraft",
  "Kral",
  "Kramer",
  "Krauel",
  "Kraus",
  "Krause",
  "Krauspe",
  "Kreb",
  "Krebs",
  "Kreissig",
  "Kresse",
  "Kreutz",
  "Krieger",
  "Krippner",
  "Krodinger",
  "Krohn",
  "Krol",
  "Kron",
  "Krueger",
  "Krug",
  "Kruger",
  "Krull",
  "Kruschinski",
  "Krämer",
  "Kröckert",
  "Kröger",
  "Krüger",
  "Kubera",
  "Kufahl",
  "Kuhlee",
  "Kuhnen",
  "Kulimann",
  "Kulma",
  "Kumbernuss",
  "Kummle",
  "Kunz",
  "Kupfer",
  "Kupprion",
  "Kuprion",
  "Kurnicki",
  "Kurrat",
  "Kurschilgen",
  "Kuschewitz",
  "Kuschmann",
  "Kuske",
  "Kustermann",
  "Kutscherauer",
  "Kutzner",
  "Kwadwo",
  "Kähler",
  "Käther",
  "Köhler",
  "Köhrbrück",
  "Köhre",
  "Kölotzei",
  "König",
  "Köpernick",
  "Köseoglu",
  "Kúhn",
  "Kúhnert",
  "Kühn",
  "Kühnel",
  "Kühnemund",
  "Kühnert",
  "Kühnke",
  "Küsters",
  "Küter",
  "Laack",
  "Lack",
  "Ladewig",
  "Lakomy",
  "Lammert",
  "Lamos",
  "Landmann",
  "Lang",
  "Lange",
  "Langfeld",
  "Langhirt",
  "Lanig",
  "Lauckner",
  "Lauinger",
  "Laurén",
  "Lausecker",
  "Laux",
  "Laws",
  "Lax",
  "Leberer",
  "Lehmann",
  "Lehner",
  "Leibold",
  "Leide",
  "Leimbach",
  "Leipold",
  "Leist",
  "Leiter",
  "Leiteritz",
  "Leitheim",
  "Leiwesmeier",
  "Lenfers",
  "Lenk",
  "Lenz",
  "Lenzen",
  "Leo",
  "Lepthin",
  "Lesch",
  "Leschnik",
  "Letzelter",
  "Lewin",
  "Lewke",
  "Leyckes",
  "Lg",
  "Lichtenfeld",
  "Lichtenhagen",
  "Lichtl",
  "Liebach",
  "Liebe",
  "Liebich",
  "Liebold",
  "Lieder",
  "Lienshöft",
  "Linden",
  "Lindenberg",
  "Lindenmayer",
  "Lindner",
  "Linke",
  "Linnenbaum",
  "Lippe",
  "Lipske",
  "Lipus",
  "Lischka",
  "Lobinger",
  "Logsch",
  "Lohmann",
  "Lohre",
  "Lohse",
  "Lokar",
  "Loogen",
  "Lorenz",
  "Losch",
  "Loska",
  "Lott",
  "Loy",
  "Lubina",
  "Ludolf",
  "Lufft",
  "Lukoschek",
  "Lutje",
  "Lutz",
  "Löser",
  "Löwa",
  "Lübke",
  "Maak",
  "Maczey",
  "Madetzky",
  "Madubuko",
  "Mai",
  "Maier",
  "Maisch",
  "Malek",
  "Malkus",
  "Mallmann",
  "Malucha",
  "Manns",
  "Manz",
  "Marahrens",
  "Marchewski",
  "Margis",
  "Markowski",
  "Marl",
  "Marner",
  "Marquart",
  "Marschek",
  "Martel",
  "Marten",
  "Martin",
  "Marx",
  "Marxen",
  "Mathes",
  "Mathies",
  "Mathiszik",
  "Matschke",
  "Mattern",
  "Matthes",
  "Matula",
  "Mau",
  "Maurer",
  "Mauroff",
  "May",
  "Maybach",
  "Mayer",
  "Mebold",
  "Mehl",
  "Mehlhorn",
  "Mehlorn",
  "Meier",
  "Meisch",
  "Meissner",
  "Meloni",
  "Melzer",
  "Menga",
  "Menne",
  "Mensah",
  "Mensing",
  "Merkel",
  "Merseburg",
  "Mertens",
  "Mesloh",
  "Metzger",
  "Metzner",
  "Mewes",
  "Meyer",
  "Michallek",
  "Michel",
  "Mielke",
  "Mikitenko",
  "Milde",
  "Minah",
  "Mintzlaff",
  "Mockenhaupt",
  "Moede",
  "Moedl",
  "Moeller",
  "Moguenara",
  "Mohr",
  "Mohrhard",
  "Molitor",
  "Moll",
  "Moller",
  "Molzan",
  "Montag",
  "Moormann",
  "Mordhorst",
  "Morgenstern",
  "Morhelfer",
  "Moritz",
  "Moser",
  "Motchebon",
  "Motzenbbäcker",
  "Mrugalla",
  "Muckenthaler",
  "Mues",
  "Muller",
  "Mulrain",
  "Mächtig",
  "Mäder",
  "Möcks",
  "Mögenburg",
  "Möhsner",
  "Möldner",
  "Möllenbeck",
  "Möller",
  "Möllinger",
  "Mörsch",
  "Mühleis",
  "Müller",
  "Münch",
  "Nabein",
  "Nabow",
  "Nagel",
  "Nannen",
  "Nastvogel",
  "Nau",
  "Naubert",
  "Naumann",
  "Ne",
  "Neimke",
  "Nerius",
  "Neubauer",
  "Neubert",
  "Neuendorf",
  "Neumair",
  "Neumann",
  "Neupert",
  "Neurohr",
  "Neuschwander",
  "Newton",
  "Ney",
  "Nicolay",
  "Niedermeier",
  "Nieklauson",
  "Niklaus",
  "Nitzsche",
  "Noack",
  "Nodler",
  "Nolte",
  "Normann",
  "Norris",
  "Northoff",
  "Nowak",
  "Nussbeck",
  "Nwachukwu",
  "Nytra",
  "Nöh",
  "Oberem",
  "Obergföll",
  "Obermaier",
  "Ochs",
  "Oeser",
  "Olbrich",
  "Onnen",
  "Ophey",
  "Oppong",
  "Orth",
  "Orthmann",
  "Oschkenat",
  "Osei",
  "Osenberg",
  "Ostendarp",
  "Ostwald",
  "Otte",
  "Otto",
  "Paesler",
  "Pajonk",
  "Pallentin",
  "Panzig",
  "Paschke",
  "Patzwahl",
  "Paukner",
  "Peselman",
  "Peter",
  "Peters",
  "Petzold",
  "Pfeiffer",
  "Pfennig",
  "Pfersich",
  "Pfingsten",
  "Pflieger",
  "Pflügner",
  "Philipp",
  "Pichlmaier",
  "Piesker",
  "Pietsch",
  "Pingpank",
  "Pinnock",
  "Pippig",
  "Pitschugin",
  "Plank",
  "Plass",
  "Platzer",
  "Plauk",
  "Plautz",
  "Pletsch",
  "Plotzitzka",
  "Poehn",
  "Poeschl",
  "Pogorzelski",
  "Pohl",
  "Pohland",
  "Pohle",
  "Polifka",
  "Polizzi",
  "Pollmächer",
  "Pomp",
  "Ponitzsch",
  "Porsche",
  "Porth",
  "Poschmann",
  "Poser",
  "Pottel",
  "Prah",
  "Prange",
  "Prediger",
  "Pressler",
  "Preuk",
  "Preuss",
  "Prey",
  "Priemer",
  "Proske",
  "Pusch",
  "Pöche",
  "Pöge",
  "Raabe",
  "Rabenstein",
  "Rach",
  "Radtke",
  "Rahn",
  "Ranftl",
  "Rangen",
  "Ranz",
  "Rapp",
  "Rath",
  "Rau",
  "Raubuch",
  "Raukuc",
  "Rautenkranz",
  "Rehwagen",
  "Reiber",
  "Reichardt",
  "Reichel",
  "Reichling",
  "Reif",
  "Reifenrath",
  "Reimann",
  "Reinberg",
  "Reinelt",
  "Reinhardt",
  "Reinke",
  "Reitze",
  "Renk",
  "Rentz",
  "Renz",
  "Reppin",
  "Restle",
  "Restorff",
  "Retzke",
  "Reuber",
  "Reumann",
  "Reus",
  "Reuss",
  "Reusse",
  "Rheder",
  "Rhoden",
  "Richards",
  "Richter",
  "Riedel",
  "Riediger",
  "Rieger",
  "Riekmann",
  "Riepl",
  "Riermeier",
  "Riester",
  "Riethmüller",
  "Rietmüller",
  "Rietscher",
  "Ringel",
  "Ringer",
  "Rink",
  "Ripken",
  "Ritosek",
  "Ritschel",
  "Ritter",
  "Rittweg",
  "Ritz",
  "Roba",
  "Rockmeier",
  "Rodehau",
  "Rodowski",
  "Roecker",
  "Roggatz",
  "Rohländer",
  "Rohrer",
  "Rokossa",
  "Roleder",
  "Roloff",
  "Roos",
  "Rosbach",
  "Roschinsky",
  "Rose",
  "Rosenauer",
  "Rosenbauer",
  "Rosenthal",
  "Rosksch",
  "Rossberg",
  "Rossler",
  "Roth",
  "Rother",
  "Ruch",
  "Ruckdeschel",
  "Rumpf",
  "Rupprecht",
  "Ruth",
  "Ryjikh",
  "Ryzih",
  "Rädler",
  "Räntsch",
  "Rödiger",
  "Röse",
  "Röttger",
  "Rücker",
  "Rüdiger",
  "Rüter",
  "Sachse",
  "Sack",
  "Saflanis",
  "Sagafe",
  "Sagonas",
  "Sahner",
  "Saile",
  "Sailer",
  "Salow",
  "Salzer",
  "Salzmann",
  "Sammert",
  "Sander",
  "Sarvari",
  "Sattelmaier",
  "Sauer",
  "Sauerland",
  "Saumweber",
  "Savoia",
  "Scc",
  "Schacht",
  "Schaefer",
  "Schaffarzik",
  "Schahbasian",
  "Scharf",
  "Schedler",
  "Scheer",
  "Schelk",
  "Schellenbeck",
  "Schembera",
  "Schenk",
  "Scherbarth",
  "Scherer",
  "Schersing",
  "Scherz",
  "Scheurer",
  "Scheuring",
  "Scheytt",
  "Schielke",
  "Schieskow",
  "Schildhauer",
  "Schilling",
  "Schima",
  "Schimmer",
  "Schindzielorz",
  "Schirmer",
  "Schirrmeister",
  "Schlachter",
  "Schlangen",
  "Schlawitz",
  "Schlechtweg",
  "Schley",
  "Schlicht",
  "Schlitzer",
  "Schmalzle",
  "Schmid",
  "Schmidt",
  "Schmidtchen",
  "Schmitt",
  "Schmitz",
  "Schmuhl",
  "Schneider",
  "Schnelting",
  "Schnieder",
  "Schniedermeier",
  "Schnürer",
  "Schoberg",
  "Scholz",
  "Schonberg",
  "Schondelmaier",
  "Schorr",
  "Schott",
  "Schottmann",
  "Schouren",
  "Schrader",
  "Schramm",
  "Schreck",
  "Schreiber",
  "Schreiner",
  "Schreiter",
  "Schroder",
  "Schröder",
  "Schuermann",
  "Schuff",
  "Schuhaj",
  "Schuldt",
  "Schult",
  "Schulte",
  "Schultz",
  "Schultze",
  "Schulz",
  "Schulze",
  "Schumacher",
  "Schumann",
  "Schupp",
  "Schuri",
  "Schuster",
  "Schwab",
  "Schwalm",
  "Schwanbeck",
  "Schwandke",
  "Schwanitz",
  "Schwarthoff",
  "Schwartz",
  "Schwarz",
  "Schwarzer",
  "Schwarzkopf",
  "Schwarzmeier",
  "Schwatlo",
  "Schweisfurth",
  "Schwennen",
  "Schwerdtner",
  "Schwidde",
  "Schwirkschlies",
  "Schwuchow",
  "Schäfer",
  "Schäffel",
  "Schäffer",
  "Schäning",
  "Schöckel",
  "Schönball",
  "Schönbeck",
  "Schönberg",
  "Schönebeck",
  "Schönenberger",
  "Schönfeld",
  "Schönherr",
  "Schönlebe",
  "Schötz",
  "Schüler",
  "Schüppel",
  "Schütz",
  "Schütze",
  "Seeger",
  "Seelig",
  "Sehls",
  "Seibold",
  "Seidel",
  "Seiders",
  "Seigel",
  "Seiler",
  "Seitz",
  "Semisch",
  "Senkel",
  "Sewald",
  "Siebel",
  "Siebert",
  "Siegling",
  "Sielemann",
  "Siemon",
  "Siener",
  "Sievers",
  "Siewert",
  "Sihler",
  "Sillah",
  "Simon",
  "Sinnhuber",
  "Sischka",
  "Skibicki",
  "Sladek",
  "Slotta",
  "Smieja",
  "Soboll",
  "Sokolowski",
  "Soller",
  "Sollner",
  "Sommer",
  "Somssich",
  "Sonn",
  "Sonnabend",
  "Spahn",
  "Spank",
  "Spelmeyer",
  "Spiegelburg",
  "Spielvogel",
  "Spinner",
  "Spitzmüller",
  "Splinter",
  "Sporrer",
  "Sprenger",
  "Spöttel",
  "Stahl",
  "Stang",
  "Stanger",
  "Stauss",
  "Steding",
  "Steffen",
  "Steffny",
  "Steidl",
  "Steigauf",
  "Stein",
  "Steinecke",
  "Steinert",
  "Steinkamp",
  "Steinmetz",
  "Stelkens",
  "Stengel",
  "Stengl",
  "Stenzel",
  "Stepanov",
  "Stephan",
  "Stern",
  "Steuk",
  "Stief",
  "Stifel",
  "Stoll",
  "Stolle",
  "Stolz",
  "Storl",
  "Storp",
  "Stoutjesdijk",
  "Stratmann",
  "Straub",
  "Strausa",
  "Streck",
  "Streese",
  "Strege",
  "Streit",
  "Streller",
  "Strieder",
  "Striezel",
  "Strogies",
  "Strohschank",
  "Strunz",
  "Strutz",
  "Stube",
  "Stöckert",
  "Stöppler",
  "Stöwer",
  "Stürmer",
  "Suffa",
  "Sujew",
  "Sussmann",
  "Suthe",
  "Sutschet",
  "Swillims",
  "Szendrei",
  "Sören",
  "Sürth",
  "Tafelmeier",
  "Tang",
  "Tasche",
  "Taufratshofer",
  "Tegethof",
  "Teichmann",
  "Tepper",
  "Terheiden",
  "Terlecki",
  "Teufel",
  "Theele",
  "Thieke",
  "Thimm",
  "Thiomas",
  "Thomas",
  "Thriene",
  "Thränhardt",
  "Thust",
  "Thyssen",
  "Thöne",
  "Tidow",
  "Tiedtke",
  "Tietze",
  "Tilgner",
  "Tillack",
  "Timmermann",
  "Tischler",
  "Tischmann",
  "Tittman",
  "Tivontschik",
  "Tonat",
  "Tonn",
  "Trampeli",
  "Trauth",
  "Trautmann",
  "Travan",
  "Treff",
  "Tremmel",
  "Tress",
  "Tsamonikian",
  "Tschiers",
  "Tschirch",
  "Tuch",
  "Tucholke",
  "Tudow",
  "Tuschmo",
  "Tächl",
  "Többen",
  "Töpfer",
  "Uhlemann",
  "Uhlig",
  "Uhrig",
  "Uibel",
  "Uliczka",
  "Ullmann",
  "Ullrich",
  "Umbach",
  "Umlauft",
  "Umminger",
  "Unger",
  "Unterpaintner",
  "Urban",
  "Urbaniak",
  "Urbansky",
  "Urhig",
  "Vahlensieck",
  "Van",
  "Vangermain",
  "Vater",
  "Venghaus",
  "Verniest",
  "Verzi",
  "Vey",
  "Viellehner",
  "Vieweg",
  "Voelkel",
  "Vogel",
  "Vogelgsang",
  "Vogt",
  "Voigt",
  "Vokuhl",
  "Volk",
  "Volker",
  "Volkmann",
  "Von",
  "Vona",
  "Vontein",
  "Wachenbrunner",
  "Wachtel",
  "Wagner",
  "Waibel",
  "Wakan",
  "Waldmann",
  "Wallner",
  "Wallstab",
  "Walter",
  "Walther",
  "Walton",
  "Walz",
  "Wanner",
  "Wartenberg",
  "Waschbüsch",
  "Wassilew",
  "Wassiluk",
  "Weber",
  "Wehrsen",
  "Weidlich",
  "Weidner",
  "Weigel",
  "Weight",
  "Weiler",
  "Weimer",
  "Weis",
  "Weiss",
  "Weller",
  "Welsch",
  "Welz",
  "Welzel",
  "Weniger",
  "Wenk",
  "Werle",
  "Werner",
  "Werrmann",
  "Wessel",
  "Wessinghage",
  "Weyel",
  "Wezel",
  "Wichmann",
  "Wickert",
  "Wiebe",
  "Wiechmann",
  "Wiegelmann",
  "Wierig",
  "Wiese",
  "Wieser",
  "Wilhelm",
  "Wilky",
  "Will",
  "Willwacher",
  "Wilts",
  "Wimmer",
  "Winkelmann",
  "Winkler",
  "Winter",
  "Wischek",
  "Wischer",
  "Wissing",
  "Wittich",
  "Wittl",
  "Wolf",
  "Wolfarth",
  "Wolff",
  "Wollenberg",
  "Wollmann",
  "Woytkowska",
  "Wujak",
  "Wurm",
  "Wyludda",
  "Wölpert",
  "Wöschler",
  "Wühn",
  "Wünsche",
  "Zach",
  "Zaczkiewicz",
  "Zahn",
  "Zaituc",
  "Zandt",
  "Zanner",
  "Zapletal",
  "Zauber",
  "Zeidler",
  "Zekl",
  "Zender",
  "Zeuch",
  "Zeyen",
  "Zeyhle",
  "Ziegler",
  "Zimanyi",
  "Zimmer",
  "Zimmermann",
  "Zinser",
  "Zintl",
  "Zipp",
  "Zipse",
  "Zschunke",
  "Zuber",
  "Zwiener",
  "Zümsande",
  "Östringer",
  "Überacker"
];

},{}],270:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{nobility_title_prefix} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],271:[function(require,module,exports){
module["exports"] = [
  "zu",
  "von",
  "vom",
  "von der"
];

},{}],272:[function(require,module,exports){
module["exports"] = [
  "Hr.",
  "Fr.",
  "Dr.",
  "Prof. Dr."
];

},{}],273:[function(require,module,exports){
module["exports"] = [
  "(0###) #########",
  "(0####) #######",
  "+49-###-#######",
  "+49-####-########"
];

},{}],274:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":273,"dup":197}],275:[function(require,module,exports){
arguments[4][241][0].apply(exports,arguments)
},{"dup":241}],276:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"dup":199}],277:[function(require,module,exports){
module["exports"] = [
  "Aigen im Mühlkreis",
  "Allerheiligen bei Wildon",
  "Altenfelden",
  "Arriach",
  "Axams",
  "Baumgartenberg",
  "Bergern im Dunkelsteinerwald",
  "Berndorf bei Salzburg",
  "Bregenz",
  "Breitenbach am Inn",
  "Deutsch-Wagram",
  "Dienten am Hochkönig",
  "Dietach",
  "Dornbirn",
  "Dürnkrut",
  "Eben im Pongau",
  "Ebenthal in Kärnten",
  "Eichgraben",
  "Eisenstadt",
  "Ellmau",
  "Feistritz am Wechsel",
  "Finkenberg",
  "Fiss",
  "Frantschach-St. Gertraud",
  "Fritzens",
  "Gams bei Hieflau",
  "Geiersberg",
  "Graz",
  "Großhöflein",
  "Gößnitz",
  "Hartl",
  "Hausleiten",
  "Herzogenburg",
  "Hinterhornbach",
  "Hochwolkersdorf",
  "Ilz",
  "Ilztal",
  "Innerbraz",
  "Innsbruck",
  "Itter",
  "Jagerberg",
  "Jeging",
  "Johnsbach",
  "Johnsdorf-Brunn",
  "Jungholz",
  "Kirchdorf am Inn",
  "Klagenfurt",
  "Kottes-Purk",
  "Krumau am Kamp",
  "Krumbach",
  "Lavamünd",
  "Lech",
  "Linz",
  "Ludesch",
  "Lödersdorf",
  "Marbach an der Donau",
  "Mattsee",
  "Mautern an der Donau",
  "Mauterndorf",
  "Mitterbach am Erlaufsee",
  "Neudorf bei Passail",
  "Neudorf bei Staatz",
  "Neukirchen an der Enknach",
  "Neustift an der Lafnitz",
  "Niederleis",
  "Oberndorf in Tirol",
  "Oberstorcha",
  "Oberwaltersdorf",
  "Oed-Oehling",
  "Ort im Innkreis",
  "Pilgersdorf",
  "Pitschgau",
  "Pollham",
  "Preitenegg",
  "Purbach am Neusiedler See",
  "Rabenwald",
  "Raiding",
  "Rastenfeld",
  "Ratten",
  "Rettenegg",
  "Salzburg",
  "Sankt Johann im Saggautal",
  "St. Peter am Kammersberg",
  "St. Pölten",
  "St. Veit an der Glan",
  "Taxenbach",
  "Tragwein",
  "Trebesing",
  "Trieben",
  "Turnau",
  "Ungerdorf",
  "Unterauersbach",
  "Unterstinkenbrunn",
  "Untertilliach",
  "Uttendorf",
  "Vals",
  "Velden am Wörther See",
  "Viehhofen",
  "Villach",
  "Vitis",
  "Waidhofen an der Thaya",
  "Waldkirchen am Wesen",
  "Weißkirchen an der Traun",
  "Wien",
  "Wimpassing im Schwarzatale",
  "Ybbs an der Donau",
  "Ybbsitz",
  "Yspertal",
  "Zeillern",
  "Zell am Pettenfirst",
  "Zell an der Pram",
  "Zerlach",
  "Zwölfaxing",
  "Öblarn",
  "Übelbach",
  "Überackern",
  "Übersaxen",
  "Übersbach"
];

},{}],278:[function(require,module,exports){
arguments[4][245][0].apply(exports,arguments)
},{"dup":245}],279:[function(require,module,exports){
module["exports"] = [
  "Österreich"
];

},{}],280:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.street_root = require("./street_root");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":275,"./city":276,"./city_name":277,"./country":278,"./default_country":279,"./postcode":281,"./secondary_address":282,"./state":283,"./state_abbr":284,"./street_address":285,"./street_name":286,"./street_root":287}],281:[function(require,module,exports){
module["exports"] = [
  "####"
];

},{}],282:[function(require,module,exports){
arguments[4][249][0].apply(exports,arguments)
},{"dup":249}],283:[function(require,module,exports){
module["exports"] = [
  "Burgenland",
  "Kärnten",
  "Niederösterreich",
  "Oberösterreich",
  "Salzburg",
  "Steiermark",
  "Tirol",
  "Vorarlberg",
  "Wien"
];

},{}],284:[function(require,module,exports){
module["exports"] = [
  "Bgld.",
  "Ktn.",
  "NÖ",
  "OÖ",
  "Sbg.",
  "Stmk.",
  "T",
  "Vbg.",
  "W"
];

},{}],285:[function(require,module,exports){
arguments[4][209][0].apply(exports,arguments)
},{"dup":209}],286:[function(require,module,exports){
arguments[4][253][0].apply(exports,arguments)
},{"dup":253}],287:[function(require,module,exports){
module["exports"] = [
  "Ahorn",
  "Ahorngasse (St. Andrä)",
  "Alleestraße (Poysbrunn)",
  "Alpenlandstraße",
  "Alte Poststraße",
  "Alte Ufergasse",
  "Am Kronawett (Hagenbrunn)",
  "Am Mühlwasser",
  "Am Rebenhang",
  "Am Sternweg",
  "Anton Wildgans-Straße",
  "Auer-von-Welsbach-Weg",
  "Auf der Stift",
  "Aufeldgasse",
  "Bahngasse",
  "Bahnhofstraße",
  "Bahnstraße (Gerhaus)",
  "Basteigasse",
  "Berggasse",
  "Bergstraße",
  "Birkenweg",
  "Blasiussteig",
  "Blattur",
  "Bruderhofgasse",
  "Brunnelligasse",
  "Bühelweg",
  "Darnautgasse",
  "Donaugasse",
  "Dorfplatz (Haselbach)",
  "Dr.-Oberreiter-Straße",
  "Dr.Karl Holoubek-Str.",
  "Drautal Bundesstraße",
  "Dürnrohrer Straße",
  "Ebenthalerstraße",
  "Eckgrabenweg",
  "Erlenstraße",
  "Erlenweg",
  "Eschenweg",
  "Etrichgasse",
  "Fassergasse",
  "Feichteggerwiese",
  "Feld-Weg",
  "Feldgasse",
  "Feldstapfe",
  "Fischpointweg",
  "Flachbergstraße",
  "Flurweg",
  "Franz Schubert-Gasse",
  "Franz-Schneeweiß-Weg",
  "Franz-von-Assisi-Straße",
  "Fritz-Pregl-Straße",
  "Fuchsgrubenweg",
  "Födlerweg",
  "Föhrenweg",
  "Fünfhaus (Paasdorf)",
  "Gabelsbergerstraße",
  "Gartenstraße",
  "Geigen",
  "Geigergasse",
  "Gemeindeaugasse",
  "Gemeindeplatz",
  "Georg-Aichinger-Straße",
  "Glanfeldbachweg",
  "Graben (Burgauberg)",
  "Grub",
  "Gröretgasse",
  "Grünbach",
  "Gösting",
  "Hainschwang",
  "Hans-Mauracher-Straße",
  "Hart",
  "Teichstraße",
  "Hauptplatz",
  "Hauptstraße",
  "Heideweg",
  "Heinrich Landauer Gasse",
  "Helenengasse",
  "Hermann von Gilmweg",
  "Hermann-Löns-Gasse",
  "Herminengasse",
  "Hernstorferstraße",
  "Hirsdorf",
  "Hochfeistritz",
  "Hochhaus Neue Donau",
  "Hof",
  "Hussovits Gasse",
  "Höggen",
  "Hütten",
  "Janzgasse",
  "Jochriemgutstraße",
  "Johann-Strauß-Gasse",
  "Julius-Raab-Straße",
  "Kahlenberger Straße",
  "Karl Kraft-Straße",
  "Kegelprielstraße",
  "Keltenberg-Eponaweg",
  "Kennedybrücke",
  "Kerpelystraße",
  "Kindergartenstraße",
  "Kinderheimgasse",
  "Kirchenplatz",
  "Kirchweg",
  "Klagenfurter Straße",
  "Klamm",
  "Kleinbaumgarten",
  "Klingergasse",
  "Koloniestraße",
  "Konrad-Duden-Gasse",
  "Krankenhausstraße",
  "Kubinstraße",
  "Köhldorfergasse",
  "Lackenweg",
  "Lange Mekotte",
  "Leifling",
  "Leopold Frank-Straße (Pellendorf)",
  "Lerchengasse (Pirka)",
  "Lichtensternsiedlung V",
  "Lindenhofstraße",
  "Lindenweg",
  "Luegstraße",
  "Maierhof",
  "Malerweg",
  "Mitterweg",
  "Mittlere Hauptstraße",
  "Moosbachgasse",
  "Morettigasse",
  "Musikpavillon Riezlern",
  "Mühlboden",
  "Mühle",
  "Mühlenweg",
  "Neustiftgasse",
  "Niederegg",
  "Niedergams",
  "Nordwestbahnbrücke",
  "Oberbödenalm",
  "Obere Berggasse",
  "Oedt",
  "Am Färberberg",
  "Ottogasse",
  "Paul Peters-Gasse",
  "Perspektivstraße",
  "Poppichl",
  "Privatweg",
  "Prixgasse",
  "Pyhra",
  "Radetzkystraße",
  "Raiden",
  "Reichensteinstraße",
  "Reitbauernstraße",
  "Reiterweg",
  "Reitschulgasse",
  "Ringweg",
  "Rupertistraße",
  "Römerstraße",
  "Römerweg",
  "Sackgasse",
  "Schaunbergerstraße",
  "Schloßweg",
  "Schulgasse (Langeck)",
  "Schönholdsiedlung",
  "Seeblick",
  "Seestraße",
  "Semriacherstraße",
  "Simling",
  "Sipbachzeller Straße",
  "Sonnenweg",
  "Spargelfeldgasse",
  "Spiesmayrweg",
  "Sportplatzstraße",
  "St.Ulrich",
  "Steilmannstraße",
  "Steingrüneredt",
  "Strassfeld",
  "Straßerau",
  "Stöpflweg",
  "Stüra",
  "Taferngasse",
  "Tennweg",
  "Thomas Koschat-Gasse",
  "Tiroler Straße",
  "Torrogasse",
  "Uferstraße (Schwarzau am Steinfeld)",
  "Unterdörfl",
  "Unterer Sonnrainweg",
  "Verwaltersiedlung",
  "Waldhang",
  "Wasen",
  "Weidenstraße",
  "Weiherweg",
  "Wettsteingasse",
  "Wiener Straße",
  "Windisch",
  "Zebragasse",
  "Zellerstraße",
  "Ziehrerstraße",
  "Zulechnerweg",
  "Zwergjoch",
  "Ötzbruck"
];

},{}],288:[function(require,module,exports){
module["exports"] = [
  "+43-6##-#######",
  "06##-########",
  "+436#########",
  "06##########"
];

},{}],289:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":288,"dup":256}],290:[function(require,module,exports){
arguments[4][257][0].apply(exports,arguments)
},{"./legal_form":291,"./name":292,"./suffix":293,"dup":257}],291:[function(require,module,exports){
arguments[4][258][0].apply(exports,arguments)
},{"dup":258}],292:[function(require,module,exports){
arguments[4][259][0].apply(exports,arguments)
},{"dup":259}],293:[function(require,module,exports){
arguments[4][258][0].apply(exports,arguments)
},{"dup":258}],294:[function(require,module,exports){
var de_AT = {};
module['exports'] = de_AT;
de_AT.title = "German (Austria)";
de_AT.address = require("./address");
de_AT.company = require("./company");
de_AT.internet = require("./internet");
de_AT.name = require("./name");
de_AT.phone_number = require("./phone_number");
de_AT.cell_phone = require("./cell_phone");

},{"./address":280,"./cell_phone":289,"./company":290,"./internet":297,"./name":299,"./phone_number":305}],295:[function(require,module,exports){
module["exports"] = [
  "com",
  "info",
  "name",
  "net",
  "org",
  "de",
  "ch",
  "at"
];

},{}],296:[function(require,module,exports){
arguments[4][263][0].apply(exports,arguments)
},{"dup":263}],297:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":295,"./free_email":296,"dup":187}],298:[function(require,module,exports){
arguments[4][267][0].apply(exports,arguments)
},{"dup":267}],299:[function(require,module,exports){
arguments[4][268][0].apply(exports,arguments)
},{"./first_name":298,"./last_name":300,"./name":301,"./nobility_title_prefix":302,"./prefix":303,"dup":268}],300:[function(require,module,exports){
arguments[4][269][0].apply(exports,arguments)
},{"dup":269}],301:[function(require,module,exports){
arguments[4][270][0].apply(exports,arguments)
},{"dup":270}],302:[function(require,module,exports){
arguments[4][271][0].apply(exports,arguments)
},{"dup":271}],303:[function(require,module,exports){
module["exports"] = [
  "Dr.",
  "Prof. Dr."
];

},{}],304:[function(require,module,exports){
module["exports"] = [
  "01 #######",
  "01#######",
  "+43-1-#######",
  "+431#######",
  "0#### ####",
  "0#########",
  "+43-####-####",
  "+43 ########"
];

},{}],305:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":304,"dup":197}],306:[function(require,module,exports){
module["exports"] = [
  "CH",
  "CH",
  "CH",
  "DE",
  "AT",
  "US",
  "LI",
  "US",
  "HK",
  "VN"
];

},{}],307:[function(require,module,exports){
module["exports"] = [
  "Schweiz"
];

},{}],308:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country_code = require("./country_code");
address.postcode = require("./postcode");
address.default_country = require("./default_country");

},{"./country_code":306,"./default_country":307,"./postcode":309}],309:[function(require,module,exports){
module["exports"] = [
  "1###",
  "2###",
  "3###",
  "4###",
  "5###",
  "6###",
  "7###",
  "8###",
  "9###"
];

},{}],310:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.name = require("./name");

},{"./name":311,"./suffix":312}],311:[function(require,module,exports){
arguments[4][259][0].apply(exports,arguments)
},{"dup":259}],312:[function(require,module,exports){
module["exports"] = [
  "AG",
  "GmbH",
  "und Söhne",
  "und Partner",
  "& Co.",
  "Gruppe",
  "LLC",
  "Inc."
];

},{}],313:[function(require,module,exports){
var de_CH = {};
module['exports'] = de_CH;
de_CH.title = "German (Switzerland)";
de_CH.address = require("./address");
de_CH.company = require("./company");
de_CH.internet = require("./internet");
de_CH.name = require("./name");
de_CH.phone_number = require("./phone_number");

},{"./address":308,"./company":310,"./internet":315,"./name":317,"./phone_number":322}],314:[function(require,module,exports){
module["exports"] = [
  "com",
  "net",
  "biz",
  "ch",
  "de",
  "li",
  "at",
  "ch",
  "ch"
];

},{}],315:[function(require,module,exports){
var internet = {};
module['exports'] = internet;
internet.domain_suffix = require("./domain_suffix");

},{"./domain_suffix":314}],316:[function(require,module,exports){
module["exports"] = [
    "Adolf",
    "Adrian",
    "Agnes",
    "Alain",
    "Albert",
    "Alberto",
    "Aldo",
    "Alex",
    "Alexander",
    "Alexandre",
    "Alfons",
    "Alfred",
    "Alice",
    "Alois",
    "André",
    "Andrea",
    "Andreas",
    "Angela",
    "Angelo",
    "Anita",
    "Anna",
    "Anne",
    "Anne-Marie",
    "Annemarie",
    "Antoine",
    "Anton",
    "Antonio",
    "Armin",
    "Arnold",
    "Arthur",
    "Astrid",
    "Barbara",
    "Beat",
    "Beatrice",
    "Beatrix",
    "Bernadette",
    "Bernard",
    "Bernhard",
    "Bettina",
    "Brigitta",
    "Brigitte",
    "Bruno",
    "Carlo",
    "Carmen",
    "Caroline",
    "Catherine",
    "Chantal",
    "Charles",
    "Charlotte",
    "Christa",
    "Christian",
    "Christiane",
    "Christina",
    "Christine",
    "Christoph",
    "Christophe",
    "Claire",
    "Claude",
    "Claudia",
    "Claudine",
    "Claudio",
    "Corinne",
    "Cornelia",
    "Daniel",
    "Daniela",
    "Daniele",
    "Danielle",
    "David",
    "Denis",
    "Denise",
    "Didier",
    "Dieter",
    "Dominik",
    "Dominique",
    "Dora",
    "Doris",
    "Edgar",
    "Edith",
    "Eduard",
    "Edwin",
    "Eliane",
    "Elisabeth",
    "Elsa",
    "Elsbeth",
    "Emil",
    "Enrico",
    "Eric",
    "Erica",
    "Erich",
    "Erika",
    "Ernst",
    "Erwin",
    "Esther",
    "Eugen",
    "Eva",
    "Eveline",
    "Evelyne",
    "Fabienne",
    "Felix",
    "Ferdinand",
    "Florence",
    "Francesco",
    "Francis",
    "Franco",
    "François",
    "Françoise",
    "Frank",
    "Franz",
    "Franziska",
    "Frédéric",
    "Fredy",
    "Fridolin",
    "Friedrich",
    "Fritz",
    "Gabriel",
    "Gabriela",
    "Gabrielle",
    "Georg",
    "Georges",
    "Gérald",
    "Gérard",
    "Gerhard",
    "Gertrud",
    "Gianni",
    "Gilbert",
    "Giorgio",
    "Giovanni",
    "Gisela",
    "Giuseppe",
    "Gottfried",
    "Guido",
    "Guy",
    "Hanna",
    "Hans",
    "Hans-Peter",
    "Hans-Rudolf",
    "Hans-Ulrich",
    "Hansjörg",
    "Hanspeter",
    "Hansruedi",
    "Hansueli",
    "Harry",
    "Heidi",
    "Heinrich",
    "Heinz",
    "Helen",
    "Helena",
    "Helene",
    "Helmut",
    "Henri",
    "Herbert",
    "Hermann",
    "Hildegard",
    "Hubert",
    "Hugo",
    "Ingrid",
    "Irene",
    "Iris",
    "Isabelle",
    "Jacqueline",
    "Jacques",
    "Jakob",
    "Jan",
    "Janine",
    "Jean",
    "Jean-Claude",
    "Jean-Daniel",
    "Jean-François",
    "Jean-Jacques",
    "Jean-Louis",
    "Jean-Luc",
    "Jean-Marc",
    "Jean-Marie",
    "Jean-Paul",
    "Jean-Pierre",
    "Johann",
    "Johanna",
    "Johannes",
    "John",
    "Jolanda",
    "Jörg",
    "Josef",
    "Joseph",
    "Josette",
    "Josiane",
    "Judith",
    "Julia",
    "Jürg",
    "Karin",
    "Karl",
    "Katharina",
    "Klaus",
    "Konrad",
    "Kurt",
    "Laura",
    "Laurence",
    "Laurent",
    "Leo",
    "Liliane",
    "Liselotte",
    "Louis",
    "Luca",
    "Luigi",
    "Lukas",
    "Lydia",
    "Madeleine",
    "Maja",
    "Manfred",
    "Manuel",
    "Manuela",
    "Marc",
    "Marcel",
    "Marco",
    "Margrit",
    "Margrith",
    "Maria",
    "Marianne",
    "Mario",
    "Marion",
    "Markus",
    "Marlène",
    "Marlies",
    "Marlis",
    "Martha",
    "Martin",
    "Martina",
    "Martine",
    "Massimo",
    "Matthias",
    "Maurice",
    "Max",
    "Maya",
    "Michael",
    "Michel",
    "Michele",
    "Micheline",
    "Monica",
    "Monika",
    "Monique",
    "Myriam",
    "Nadia",
    "Nadja",
    "Nathalie",
    "Nelly",
    "Nicolas",
    "Nicole",
    "Niklaus",
    "Norbert",
    "Olivier",
    "Oskar",
    "Otto",
    "Paola",
    "Paolo",
    "Pascal",
    "Patricia",
    "Patrick",
    "Paul",
    "Peter",
    "Petra",
    "Philipp",
    "Philippe",
    "Pia",
    "Pierre",
    "Pierre-Alain",
    "Pierre-André",
    "Pius",
    "Priska",
    "Rainer",
    "Raymond",
    "Regina",
    "Regula",
    "Reinhard",
    "Remo",
    "Renata",
    "Renate",
    "Renato",
    "Rene",
    "René",
    "Reto",
    "Richard",
    "Rita",
    "Robert",
    "Roberto",
    "Roger",
    "Roland",
    "Rolf",
    "Roman",
    "Rosa",
    "Rosemarie",
    "Rosmarie",
    "Rudolf",
    "Ruedi",
    "Ruth",
    "Sabine",
    "Samuel",
    "Sandra",
    "Sandro",
    "Serge",
    "Silvia",
    "Silvio",
    "Simon",
    "Simone",
    "Sonia",
    "Sonja",
    "Stefan",
    "Stephan",
    "Stéphane",
    "Stéphanie",
    "Susanna",
    "Susanne",
    "Suzanne",
    "Sylvia",
    "Sylvie",
    "Theo",
    "Theodor",
    "Therese",
    "Thomas",
    "Toni",
    "Ueli",
    "Ulrich",
    "Urs",
    "Ursula",
    "Verena",
    "Véronique",
    "Victor",
    "Viktor",
    "Vreni",
    "Walter",
    "Werner",
    "Willi",
    "Willy",
    "Wolfgang",
    "Yolande",
    "Yves",
    "Yvette",
    "Yvonne",

];

},{}],317:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.name = require("./name");

},{"./first_name":316,"./last_name":318,"./name":319,"./prefix":320}],318:[function(require,module,exports){
module["exports"] = [
    "Ackermann",
    "Aebi",
    "Albrecht",
    "Ammann",
    "Amrein",
    "Arnold",
    "Bachmann",
    "Bader",
    "Bär",
    "Bättig",
    "Bauer",
    "Baumann",
    "Baumgartner",
    "Baur",
    "Beck",
    "Benz",
    "Berger",
    "Bernasconi",
    "Betschart",
    "Bianchi",
    "Bieri",
    "Blaser",
    "Blum",
    "Bolliger",
    "Bosshard",
    "Braun",
    "Brun",
    "Brunner",
    "Bucher",
    "Bühler",
    "Bühlmann",
    "Burri",
    "Christen",
    "Egger",
    "Egli",
    "Eichenberger",
    "Erni",
    "Ernst",
    "Eugster",
    "Fankhauser",
    "Favre",
    "Fehr",
    "Felber",
    "Felder",
    "Ferrari",
    "Fischer",
    "Flückiger",
    "Forster",
    "Frei",
    "Frey",
    "Frick",
    "Friedli",
    "Fuchs",
    "Furrer",
    "Gasser",
    "Geiger",
    "Gerber",
    "Gfeller",
    "Giger",
    "Gloor",
    "Graf",
    "Grob",
    "Gross",
    "Gut",
    "Haas",
    "Häfliger",
    "Hafner",
    "Hartmann",
    "Hasler",
    "Hauser",
    "Hermann",
    "Herzog",
    "Hess",
    "Hirt",
    "Hodel",
    "Hofer",
    "Hoffmann",
    "Hofmann",
    "Hofstetter",
    "Hotz",
    "Huber",
    "Hug",
    "Hunziker",
    "Hürlimann",
    "Imhof",
    "Isler",
    "Iten",
    "Jäggi",
    "Jenni",
    "Jost",
    "Kägi",
    "Kaiser",
    "Kälin",
    "Käser",
    "Kaufmann",
    "Keller",
    "Kern",
    "Kessler",
    "Knecht",
    "Koch",
    "Kohler",
    "Kuhn",
    "Küng",
    "Kunz",
    "Lang",
    "Lanz",
    "Lehmann",
    "Leu",
    "Leunberger",
    "Lüscher",
    "Lustenberger",
    "Lüthi",
    "Lutz",
    "Mäder",
    "Maier",
    "Marti",
    "Martin",
    "Maurer",
    "Mayer",
    "Meier",
    "Meili",
    "Meister",
    "Merz",
    "Mettler",
    "Meyer",
    "Michel",
    "Moser",
    "Müller",
    "Näf",
    "Ott",
    "Peter",
    "Pfister",
    "Portmann",
    "Probst",
    "Rey",
    "Ritter",
    "Roos",
    "Roth",
    "Rüegg",
    "Schäfer",
    "Schaller",
    "Schär",
    "Schärer",
    "Schaub",
    "Scheidegger",
    "Schenk",
    "Scherrer",
    "Schlatter",
    "Schmid",
    "Schmidt",
    "Schneider",
    "Schnyder",
    "Schoch",
    "Schuler",
    "Schumacher",
    "Schürch",
    "Schwab",
    "Schwarz",
    "Schweizer",
    "Seiler",
    "Senn",
    "Sidler",
    "Siegrist",
    "Sigrist",
    "Spörri",
    "Stadelmann",
    "Stalder",
    "Staub",
    "Stauffer",
    "Steffen",
    "Steiger",
    "Steiner",
    "Steinmann",
    "Stettler",
    "Stocker",
    "Stöckli",
    "Stucki",
    "Studer",
    "Stutz",
    "Suter",
    "Sutter",
    "Tanner",
    "Thommen",
    "Tobler",
    "Vogel",
    "Vogt",
    "Wagner",
    "Walder",
    "Walter",
    "Weber",
    "Wegmann",
    "Wehrli",
    "Weibel",
    "Wenger",
    "Wettstein",
    "Widmer",
    "Winkler",
    "Wirth",
    "Wirz",
    "Wolf",
    "Wüthrich",
    "Wyss",
    "Zbinden",
    "Zehnder",
    "Ziegler",
    "Zimmermann",
    "Zingg",
    "Zollinger",
    "Zürcher"
];

},{}],319:[function(require,module,exports){
module["exports"] = [
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],320:[function(require,module,exports){
module["exports"] = [
  "Hr.",
  "Fr.",
  "Dr."
];

},{}],321:[function(require,module,exports){
module["exports"] = [
  "0800 ### ###",
  "0800 ## ## ##",
  "0## ### ## ##",
  "0## ### ## ##",
  "+41 ## ### ## ##",
  "0900 ### ###",
  "076 ### ## ##",
  "+4178 ### ## ##",
  "0041 79 ### ## ##"
];

},{}],322:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":321,"dup":197}],323:[function(require,module,exports){
module["exports"] = [
  "#####",
  "####",
  "###"
];

},{}],324:[function(require,module,exports){
arguments[4][242][0].apply(exports,arguments)
},{"dup":242}],325:[function(require,module,exports){
module["exports"] = [
  "North",
  "East",
  "West",
  "South",
  "New",
  "Lake",
  "Port"
];

},{}],326:[function(require,module,exports){
module["exports"] = [
  "town",
  "ton",
  "land",
  "ville",
  "berg",
  "burgh",
  "borough",
  "bury",
  "view",
  "port",
  "mouth",
  "stad",
  "furt",
  "chester",
  "mouth",
  "fort",
  "haven",
  "side",
  "shire"
];

},{}],327:[function(require,module,exports){
module["exports"] = [
  "Afghanistan",
  "Albania",
  "Algeria",
  "American Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antarctica (the territory South of 60 deg S)",
  "Antigua and Barbuda",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbaijan",
  "Bahamas",
  "Bahrain",
  "Bangladesh",
  "Barbados",
  "Belarus",
  "Belgium",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivia",
  "Bosnia and Herzegovina",
  "Botswana",
  "Bouvet Island (Bouvetoya)",
  "Brazil",
  "British Indian Ocean Territory (Chagos Archipelago)",
  "Brunei Darussalam",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Cambodia",
  "Cameroon",
  "Canada",
  "Cape Verde",
  "Cayman Islands",
  "Central African Republic",
  "Chad",
  "Chile",
  "China",
  "Christmas Island",
  "Cocos (Keeling) Islands",
  "Colombia",
  "Comoros",
  "Congo",
  "Cook Islands",
  "Costa Rica",
  "Cote d'Ivoire",
  "Croatia",
  "Cuba",
  "Cyprus",
  "Czech Republic",
  "Denmark",
  "Djibouti",
  "Dominica",
  "Dominican Republic",
  "Ecuador",
  "Egypt",
  "El Salvador",
  "Equatorial Guinea",
  "Eritrea",
  "Estonia",
  "Ethiopia",
  "Faroe Islands",
  "Falkland Islands (Malvinas)",
  "Fiji",
  "Finland",
  "France",
  "French Guiana",
  "French Polynesia",
  "French Southern Territories",
  "Gabon",
  "Gambia",
  "Georgia",
  "Germany",
  "Ghana",
  "Gibraltar",
  "Greece",
  "Greenland",
  "Grenada",
  "Guadeloupe",
  "Guam",
  "Guatemala",
  "Guernsey",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Heard Island and McDonald Islands",
  "Holy See (Vatican City State)",
  "Honduras",
  "Hong Kong",
  "Hungary",
  "Iceland",
  "India",
  "Indonesia",
  "Iran",
  "Iraq",
  "Ireland",
  "Isle of Man",
  "Israel",
  "Italy",
  "Jamaica",
  "Japan",
  "Jersey",
  "Jordan",
  "Kazakhstan",
  "Kenya",
  "Kiribati",
  "Democratic People's Republic of Korea",
  "Republic of Korea",
  "Kuwait",
  "Kyrgyz Republic",
  "Lao People's Democratic Republic",
  "Latvia",
  "Lebanon",
  "Lesotho",
  "Liberia",
  "Libyan Arab Jamahiriya",
  "Liechtenstein",
  "Lithuania",
  "Luxembourg",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malaysia",
  "Maldives",
  "Mali",
  "Malta",
  "Marshall Islands",
  "Martinique",
  "Mauritania",
  "Mauritius",
  "Mayotte",
  "Mexico",
  "Micronesia",
  "Moldova",
  "Monaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Morocco",
  "Mozambique",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Netherlands Antilles",
  "Netherlands",
  "New Caledonia",
  "New Zealand",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Niue",
  "Norfolk Island",
  "Northern Mariana Islands",
  "Norway",
  "Oman",
  "Pakistan",
  "Palau",
  "Palestinian Territory",
  "Panama",
  "Papua New Guinea",
  "Paraguay",
  "Peru",
  "Philippines",
  "Pitcairn Islands",
  "Poland",
  "Portugal",
  "Puerto Rico",
  "Qatar",
  "Reunion",
  "Romania",
  "Russian Federation",
  "Rwanda",
  "Saint Barthelemy",
  "Saint Helena",
  "Saint Kitts and Nevis",
  "Saint Lucia",
  "Saint Martin",
  "Saint Pierre and Miquelon",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tome and Principe",
  "Saudi Arabia",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leone",
  "Singapore",
  "Slovakia (Slovak Republic)",
  "Slovenia",
  "Solomon Islands",
  "Somalia",
  "South Africa",
  "South Georgia and the South Sandwich Islands",
  "Spain",
  "Sri Lanka",
  "Sudan",
  "Suriname",
  "Svalbard & Jan Mayen Islands",
  "Swaziland",
  "Sweden",
  "Switzerland",
  "Syrian Arab Republic",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Thailand",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad and Tobago",
  "Tunisia",
  "Turkey",
  "Turkmenistan",
  "Turks and Caicos Islands",
  "Tuvalu",
  "Uganda",
  "Ukraine",
  "United Arab Emirates",
  "United Kingdom",
  "United States of America",
  "United States Minor Outlying Islands",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Virgin Islands, British",
  "Virgin Islands, U.S.",
  "Wallis and Futuna",
  "Western Sahara",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],328:[function(require,module,exports){
module["exports"] = [
  "AD",
  "AE",
  "AF",
  "AG",
  "AI",
  "AL",
  "AM",
  "AO",
  "AQ",
  "AR",
  "AS",
  "AT",
  "AU",
  "AW",
  "AX",
  "AZ",
  "BA",
  "BB",
  "BD",
  "BE",
  "BF",
  "BG",
  "BH",
  "BI",
  "BJ",
  "BL",
  "BM",
  "BN",
  "BO",
  "BQ",
  "BQ",
  "BR",
  "BS",
  "BT",
  "BV",
  "BW",
  "BY",
  "BZ",
  "CA",
  "CC",
  "CD",
  "CF",
  "CG",
  "CH",
  "CI",
  "CK",
  "CL",
  "CM",
  "CN",
  "CO",
  "CR",
  "CU",
  "CV",
  "CW",
  "CX",
  "CY",
  "CZ",
  "DE",
  "DJ",
  "DK",
  "DM",
  "DO",
  "DZ",
  "EC",
  "EE",
  "EG",
  "EH",
  "ER",
  "ES",
  "ET",
  "FI",
  "FJ",
  "FK",
  "FM",
  "FO",
  "FR",
  "GA",
  "GB",
  "GD",
  "GE",
  "GF",
  "GG",
  "GH",
  "GI",
  "GL",
  "GM",
  "GN",
  "GP",
  "GQ",
  "GR",
  "GS",
  "GT",
  "GU",
  "GW",
  "GY",
  "HK",
  "HM",
  "HN",
  "HR",
  "HT",
  "HU",
  "ID",
  "IE",
  "IL",
  "IM",
  "IN",
  "IO",
  "IQ",
  "IR",
  "IS",
  "IT",
  "JE",
  "JM",
  "JO",
  "JP",
  "KE",
  "KG",
  "KH",
  "KI",
  "KM",
  "KN",
  "KP",
  "KR",
  "KW",
  "KY",
  "KZ",
  "LA",
  "LB",
  "LC",
  "LI",
  "LK",
  "LR",
  "LS",
  "LT",
  "LU",
  "LV",
  "LY",
  "MA",
  "MC",
  "MD",
  "ME",
  "MF",
  "MG",
  "MH",
  "MK",
  "ML",
  "MM",
  "MN",
  "MO",
  "MP",
  "MQ",
  "MR",
  "MS",
  "MT",
  "MU",
  "MV",
  "MW",
  "MX",
  "MY",
  "MZ",
  "NA",
  "NC",
  "NE",
  "NF",
  "NG",
  "NI",
  "NL",
  "NO",
  "NP",
  "NR",
  "NU",
  "NZ",
  "OM",
  "PA",
  "PE",
  "PF",
  "PG",
  "PH",
  "PK",
  "PL",
  "PM",
  "PN",
  "PR",
  "PS",
  "PT",
  "PW",
  "PY",
  "QA",
  "RE",
  "RO",
  "RS",
  "RU",
  "RW",
  "SA",
  "SB",
  "SC",
  "SD",
  "SE",
  "SG",
  "SH",
  "SI",
  "SJ",
  "SK",
  "SL",
  "SM",
  "SN",
  "SO",
  "SR",
  "SS",
  "ST",
  "SV",
  "SX",
  "SY",
  "SZ",
  "TC",
  "TD",
  "TF",
  "TG",
  "TH",
  "TJ",
  "TK",
  "TL",
  "TM",
  "TN",
  "TO",
  "TR",
  "TT",
  "TV",
  "TW",
  "TZ",
  "UA",
  "UG",
  "UM",
  "US",
  "UY",
  "UZ",
  "VA",
  "VC",
  "VE",
  "VG",
  "VI",
  "VN",
  "VU",
  "WF",
  "WS",
  "YE",
  "YT",
  "ZA",
  "ZM",
  "ZW"
];

},{}],329:[function(require,module,exports){
module["exports"] = [
  "Avon",
  "Bedfordshire",
  "Berkshire",
  "Borders",
  "Buckinghamshire",
  "Cambridgeshire"
];

},{}],330:[function(require,module,exports){
module["exports"] = [
  "United States of America"
];

},{}],331:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.county = require("./county");
address.country = require("./country");
address.country_code = require("./country_code");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.postcode_by_state = require("./postcode_by_state");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":323,"./city":324,"./city_prefix":325,"./city_suffix":326,"./country":327,"./country_code":328,"./county":329,"./default_country":330,"./postcode":332,"./postcode_by_state":333,"./secondary_address":334,"./state":335,"./state_abbr":336,"./street_address":337,"./street_name":338,"./street_suffix":339,"./time_zone":340}],332:[function(require,module,exports){
module["exports"] = [
  "#####",
  "#####-####"
];

},{}],333:[function(require,module,exports){
arguments[4][332][0].apply(exports,arguments)
},{"dup":332}],334:[function(require,module,exports){
arguments[4][205][0].apply(exports,arguments)
},{"dup":205}],335:[function(require,module,exports){
module["exports"] = [
  "Alabama",
  "Alaska",
  "Arizona",
  "Arkansas",
  "California",
  "Colorado",
  "Connecticut",
  "Delaware",
  "Florida",
  "Georgia",
  "Hawaii",
  "Idaho",
  "Illinois",
  "Indiana",
  "Iowa",
  "Kansas",
  "Kentucky",
  "Louisiana",
  "Maine",
  "Maryland",
  "Massachusetts",
  "Michigan",
  "Minnesota",
  "Mississippi",
  "Missouri",
  "Montana",
  "Nebraska",
  "Nevada",
  "New Hampshire",
  "New Jersey",
  "New Mexico",
  "New York",
  "North Carolina",
  "North Dakota",
  "Ohio",
  "Oklahoma",
  "Oregon",
  "Pennsylvania",
  "Rhode Island",
  "South Carolina",
  "South Dakota",
  "Tennessee",
  "Texas",
  "Utah",
  "Vermont",
  "Virginia",
  "Washington",
  "West Virginia",
  "Wisconsin",
  "Wyoming"
];

},{}],336:[function(require,module,exports){
module["exports"] = [
  "AL",
  "AK",
  "AZ",
  "AR",
  "CA",
  "CO",
  "CT",
  "DE",
  "FL",
  "GA",
  "HI",
  "ID",
  "IL",
  "IN",
  "IA",
  "KS",
  "KY",
  "LA",
  "ME",
  "MD",
  "MA",
  "MI",
  "MN",
  "MS",
  "MO",
  "MT",
  "NE",
  "NV",
  "NH",
  "NJ",
  "NM",
  "NY",
  "NC",
  "ND",
  "OH",
  "OK",
  "OR",
  "PA",
  "RI",
  "SC",
  "SD",
  "TN",
  "TX",
  "UT",
  "VT",
  "VA",
  "WA",
  "WV",
  "WI",
  "WY"
];

},{}],337:[function(require,module,exports){
module["exports"] = [
  "#{building_number} #{street_name}"
];

},{}],338:[function(require,module,exports){
module["exports"] = [
  "#{Name.first_name} #{street_suffix}",
  "#{Name.last_name} #{street_suffix}"
];

},{}],339:[function(require,module,exports){
module["exports"] = [
  "Alley",
  "Avenue",
  "Branch",
  "Bridge",
  "Brook",
  "Brooks",
  "Burg",
  "Burgs",
  "Bypass",
  "Camp",
  "Canyon",
  "Cape",
  "Causeway",
  "Center",
  "Centers",
  "Circle",
  "Circles",
  "Cliff",
  "Cliffs",
  "Club",
  "Common",
  "Corner",
  "Corners",
  "Course",
  "Court",
  "Courts",
  "Cove",
  "Coves",
  "Creek",
  "Crescent",
  "Crest",
  "Crossing",
  "Crossroad",
  "Curve",
  "Dale",
  "Dam",
  "Divide",
  "Drive",
  "Drive",
  "Drives",
  "Estate",
  "Estates",
  "Expressway",
  "Extension",
  "Extensions",
  "Fall",
  "Falls",
  "Ferry",
  "Field",
  "Fields",
  "Flat",
  "Flats",
  "Ford",
  "Fords",
  "Forest",
  "Forge",
  "Forges",
  "Fork",
  "Forks",
  "Fort",
  "Freeway",
  "Garden",
  "Gardens",
  "Gateway",
  "Glen",
  "Glens",
  "Green",
  "Greens",
  "Grove",
  "Groves",
  "Harbor",
  "Harbors",
  "Haven",
  "Heights",
  "Highway",
  "Hill",
  "Hills",
  "Hollow",
  "Inlet",
  "Inlet",
  "Island",
  "Island",
  "Islands",
  "Islands",
  "Isle",
  "Isle",
  "Junction",
  "Junctions",
  "Key",
  "Keys",
  "Knoll",
  "Knolls",
  "Lake",
  "Lakes",
  "Land",
  "Landing",
  "Lane",
  "Light",
  "Lights",
  "Loaf",
  "Lock",
  "Locks",
  "Locks",
  "Lodge",
  "Lodge",
  "Loop",
  "Mall",
  "Manor",
  "Manors",
  "Meadow",
  "Meadows",
  "Mews",
  "Mill",
  "Mills",
  "Mission",
  "Mission",
  "Motorway",
  "Mount",
  "Mountain",
  "Mountain",
  "Mountains",
  "Mountains",
  "Neck",
  "Orchard",
  "Oval",
  "Overpass",
  "Park",
  "Parks",
  "Parkway",
  "Parkways",
  "Pass",
  "Passage",
  "Path",
  "Pike",
  "Pine",
  "Pines",
  "Place",
  "Plain",
  "Plains",
  "Plains",
  "Plaza",
  "Plaza",
  "Point",
  "Points",
  "Port",
  "Port",
  "Ports",
  "Ports",
  "Prairie",
  "Prairie",
  "Radial",
  "Ramp",
  "Ranch",
  "Rapid",
  "Rapids",
  "Rest",
  "Ridge",
  "Ridges",
  "River",
  "Road",
  "Road",
  "Roads",
  "Roads",
  "Route",
  "Row",
  "Rue",
  "Run",
  "Shoal",
  "Shoals",
  "Shore",
  "Shores",
  "Skyway",
  "Spring",
  "Springs",
  "Springs",
  "Spur",
  "Spurs",
  "Square",
  "Square",
  "Squares",
  "Squares",
  "Station",
  "Station",
  "Stravenue",
  "Stravenue",
  "Stream",
  "Stream",
  "Street",
  "Street",
  "Streets",
  "Summit",
  "Summit",
  "Terrace",
  "Throughway",
  "Trace",
  "Track",
  "Trafficway",
  "Trail",
  "Trail",
  "Tunnel",
  "Tunnel",
  "Turnpike",
  "Turnpike",
  "Underpass",
  "Union",
  "Unions",
  "Valley",
  "Valleys",
  "Via",
  "Viaduct",
  "View",
  "Views",
  "Village",
  "Village",
  "Villages",
  "Ville",
  "Vista",
  "Vista",
  "Walk",
  "Walks",
  "Wall",
  "Way",
  "Ways",
  "Well",
  "Wells"
];

},{}],340:[function(require,module,exports){
arguments[4][211][0].apply(exports,arguments)
},{"dup":211}],341:[function(require,module,exports){
module["exports"] = [
  "#{Name.name}",
  "#{Company.name}"
];

},{}],342:[function(require,module,exports){
var app = {};
module['exports'] = app;
app.name = require("./name");
app.version = require("./version");
app.author = require("./author");

},{"./author":341,"./name":343,"./version":344}],343:[function(require,module,exports){
module["exports"] = [
  "Redhold",
  "Treeflex",
  "Trippledex",
  "Kanlam",
  "Bigtax",
  "Daltfresh",
  "Toughjoyfax",
  "Mat Lam Tam",
  "Otcom",
  "Tres-Zap",
  "Y-Solowarm",
  "Tresom",
  "Voltsillam",
  "Biodex",
  "Greenlam",
  "Viva",
  "Matsoft",
  "Temp",
  "Zoolab",
  "Subin",
  "Rank",
  "Job",
  "Stringtough",
  "Tin",
  "It",
  "Home Ing",
  "Zamit",
  "Sonsing",
  "Konklab",
  "Alpha",
  "Latlux",
  "Voyatouch",
  "Alphazap",
  "Holdlamis",
  "Zaam-Dox",
  "Sub-Ex",
  "Quo Lux",
  "Bamity",
  "Ventosanzap",
  "Lotstring",
  "Hatity",
  "Tempsoft",
  "Overhold",
  "Fixflex",
  "Konklux",
  "Zontrax",
  "Tampflex",
  "Span",
  "Namfix",
  "Transcof",
  "Stim",
  "Fix San",
  "Sonair",
  "Stronghold",
  "Fintone",
  "Y-find",
  "Opela",
  "Lotlux",
  "Ronstring",
  "Zathin",
  "Duobam",
  "Keylex"
];

},{}],344:[function(require,module,exports){
module["exports"] = [
  "0.#.#",
  "0.##",
  "#.##",
  "#.#",
  "#.#.#"
];

},{}],345:[function(require,module,exports){
module["exports"] = [
  "2011-10-12",
  "2012-11-12",
  "2015-11-11",
  "2013-9-12"
];

},{}],346:[function(require,module,exports){
module["exports"] = [
  "1234-2121-1221-1211",
  "1212-1221-1121-1234",
  "1211-1221-1234-2201",
  "1228-1221-1221-1431"
];

},{}],347:[function(require,module,exports){
module["exports"] = [
  "visa",
  "mastercard",
  "americanexpress",
  "discover"
];

},{}],348:[function(require,module,exports){
var business = {};
module['exports'] = business;
business.credit_card_numbers = require("./credit_card_numbers");
business.credit_card_expiry_dates = require("./credit_card_expiry_dates");
business.credit_card_types = require("./credit_card_types");

},{"./credit_card_expiry_dates":345,"./credit_card_numbers":346,"./credit_card_types":347}],349:[function(require,module,exports){
module["exports"] = [
  "###-###-####",
  "(###) ###-####",
  "1-###-###-####",
  "###.###.####"
];

},{}],350:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":349,"dup":256}],351:[function(require,module,exports){
module["exports"] = [
  "red",
  "green",
  "blue",
  "yellow",
  "purple",
  "mint green",
  "teal",
  "white",
  "black",
  "orange",
  "pink",
  "grey",
  "maroon",
  "violet",
  "turquoise",
  "tan",
  "sky blue",
  "salmon",
  "plum",
  "orchid",
  "olive",
  "magenta",
  "lime",
  "ivory",
  "indigo",
  "gold",
  "fuchsia",
  "cyan",
  "azure",
  "lavender",
  "silver"
];

},{}],352:[function(require,module,exports){
module["exports"] = [
  "Books",
  "Movies",
  "Music",
  "Games",
  "Electronics",
  "Computers",
  "Home",
  "Garden",
  "Tools",
  "Grocery",
  "Health",
  "Beauty",
  "Toys",
  "Kids",
  "Baby",
  "Clothing",
  "Shoes",
  "Jewelery",
  "Sports",
  "Outdoors",
  "Automotive",
  "Industrial"
];

},{}],353:[function(require,module,exports){
arguments[4][175][0].apply(exports,arguments)
},{"./color":351,"./department":352,"./product_name":354,"dup":175}],354:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Small",
    "Ergonomic",
    "Rustic",
    "Intelligent",
    "Gorgeous",
    "Incredible",
    "Fantastic",
    "Practical",
    "Sleek",
    "Awesome",
    "Generic",
    "Handcrafted",
    "Handmade",
    "Licensed",
    "Refined",
    "Unbranded",
    "Tasty"
  ],
  "material": [
    "Steel",
    "Wooden",
    "Concrete",
    "Plastic",
    "Cotton",
    "Granite",
    "Rubber",
    "Metal",
    "Soft",
    "Fresh",
    "Frozen"
  ],
  "product": [
    "Chair",
    "Car",
    "Computer",
    "Keyboard",
    "Mouse",
    "Bike",
    "Ball",
    "Gloves",
    "Pants",
    "Shirt",
    "Table",
    "Shoes",
    "Hat",
    "Towels",
    "Soap",
    "Tuna",
    "Chicken",
    "Fish",
    "Cheese",
    "Bacon",
    "Pizza",
    "Salad",
    "Sausages",
    "Chips"
  ]
};

},{}],355:[function(require,module,exports){
arguments[4][212][0].apply(exports,arguments)
},{"dup":212}],356:[function(require,module,exports){
module["exports"] = [
  "clicks-and-mortar",
  "value-added",
  "vertical",
  "proactive",
  "robust",
  "revolutionary",
  "scalable",
  "leading-edge",
  "innovative",
  "intuitive",
  "strategic",
  "e-business",
  "mission-critical",
  "sticky",
  "one-to-one",
  "24/7",
  "end-to-end",
  "global",
  "B2B",
  "B2C",
  "granular",
  "frictionless",
  "virtual",
  "viral",
  "dynamic",
  "24/365",
  "best-of-breed",
  "killer",
  "magnetic",
  "bleeding-edge",
  "web-enabled",
  "interactive",
  "dot-com",
  "sexy",
  "back-end",
  "real-time",
  "efficient",
  "front-end",
  "distributed",
  "seamless",
  "extensible",
  "turn-key",
  "world-class",
  "open-source",
  "cross-platform",
  "cross-media",
  "synergistic",
  "bricks-and-clicks",
  "out-of-the-box",
  "enterprise",
  "integrated",
  "impactful",
  "wireless",
  "transparent",
  "next-generation",
  "cutting-edge",
  "user-centric",
  "visionary",
  "customized",
  "ubiquitous",
  "plug-and-play",
  "collaborative",
  "compelling",
  "holistic",
  "rich"
];

},{}],357:[function(require,module,exports){
module["exports"] = [
  "synergies",
  "web-readiness",
  "paradigms",
  "markets",
  "partnerships",
  "infrastructures",
  "platforms",
  "initiatives",
  "channels",
  "eyeballs",
  "communities",
  "ROI",
  "solutions",
  "e-tailers",
  "e-services",
  "action-items",
  "portals",
  "niches",
  "technologies",
  "content",
  "vortals",
  "supply-chains",
  "convergence",
  "relationships",
  "architectures",
  "interfaces",
  "e-markets",
  "e-commerce",
  "systems",
  "bandwidth",
  "infomediaries",
  "models",
  "mindshare",
  "deliverables",
  "users",
  "schemas",
  "networks",
  "applications",
  "metrics",
  "e-business",
  "functionalities",
  "experiences",
  "web services",
  "methodologies"
];

},{}],358:[function(require,module,exports){
arguments[4][214][0].apply(exports,arguments)
},{"dup":214}],359:[function(require,module,exports){
arguments[4][215][0].apply(exports,arguments)
},{"dup":215}],360:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjective = require("./adjective");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.bs_adjective = require("./bs_adjective");
company.bs_noun = require("./bs_noun");
company.name = require("./name");

},{"./adjective":355,"./bs_adjective":356,"./bs_noun":357,"./bs_verb":358,"./descriptor":359,"./name":361,"./noun":362,"./suffix":363}],361:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} and #{Name.last_name}"
];

},{}],362:[function(require,module,exports){
arguments[4][218][0].apply(exports,arguments)
},{"dup":218}],363:[function(require,module,exports){
module["exports"] = [
  "Inc",
  "and Sons",
  "LLC",
  "Group"
];

},{}],364:[function(require,module,exports){
module["exports"] = [
  "/34##-######-####L/",
  "/37##-######-####L/"
];

},{}],365:[function(require,module,exports){
module["exports"] = [
  "/30[0-5]#-######-###L/",
  "/368#-######-###L/"
];

},{}],366:[function(require,module,exports){
module["exports"] = [
  "/6011-####-####-###L/",
  "/65##-####-####-###L/",
  "/64[4-9]#-####-####-###L/",
  "/6011-62##-####-####-###L/",
  "/65##-62##-####-####-###L/",
  "/64[4-9]#-62##-####-####-###L/"
];

},{}],367:[function(require,module,exports){
var credit_card = {};
module['exports'] = credit_card;
credit_card.visa = require("./visa");
credit_card.mastercard = require("./mastercard");
credit_card.discover = require("./discover");
credit_card.american_express = require("./american_express");
credit_card.diners_club = require("./diners_club");
credit_card.jcb = require("./jcb");
credit_card.switch = require("./switch");
credit_card.solo = require("./solo");
credit_card.maestro = require("./maestro");
credit_card.laser = require("./laser");

},{"./american_express":364,"./diners_club":365,"./discover":366,"./jcb":368,"./laser":369,"./maestro":370,"./mastercard":371,"./solo":372,"./switch":373,"./visa":374}],368:[function(require,module,exports){
module["exports"] = [
  "/3528-####-####-###L/",
  "/3529-####-####-###L/",
  "/35[3-8]#-####-####-###L/"
];

},{}],369:[function(require,module,exports){
module["exports"] = [
  "/6304###########L/",
  "/6706###########L/",
  "/6771###########L/",
  "/6709###########L/",
  "/6304#########{5,6}L/",
  "/6706#########{5,6}L/",
  "/6771#########{5,6}L/",
  "/6709#########{5,6}L/"
];

},{}],370:[function(require,module,exports){
module["exports"] = [
  "/50#{9,16}L/",
  "/5[6-8]#{9,16}L/",
  "/56##{9,16}L/"
];

},{}],371:[function(require,module,exports){
module["exports"] = [
  "/5[1-5]##-####-####-###L/",
  "/6771-89##-####-###L/"
];

},{}],372:[function(require,module,exports){
module["exports"] = [
  "/6767-####-####-###L/",
  "/6767-####-####-####-#L/",
  "/6767-####-####-####-##L/"
];

},{}],373:[function(require,module,exports){
module["exports"] = [
  "/6759-####-####-###L/",
  "/6759-####-####-####-#L/",
  "/6759-####-####-####-##L/"
];

},{}],374:[function(require,module,exports){
module["exports"] = [
  "/4###########L/",
  "/4###-####-####-###L/"
];

},{}],375:[function(require,module,exports){
module["exports"] = [
  "utf8_unicode_ci",
  "utf8_general_ci",
  "utf8_bin",
  "ascii_bin",
  "ascii_general_ci",
  "cp1250_bin",
  "cp1250_general_ci"
];

},{}],376:[function(require,module,exports){
module["exports"] = [
  "id",
  "title",
  "name",
  "email",
  "phone",
  "token",
  "group",
  "category",
  "password",
  "comment",
  "avatar",
  "status",
  "createdAt",
  "updatedAt"
];

},{}],377:[function(require,module,exports){
module["exports"] = [
  "InnoDB",
  "MyISAM",
  "MEMORY",
  "CSV",
  "BLACKHOLE",
  "ARCHIVE"
];

},{}],378:[function(require,module,exports){
var database = {};
module['exports'] = database;
database.collation = require("./collation");
database.column = require("./column");
database.engine = require("./engine");
database.type = require("./type");
},{"./collation":375,"./column":376,"./engine":377,"./type":379}],379:[function(require,module,exports){
module["exports"] = [
  "int",
  "varchar",
  "text",
  "date",
  "datetime",
  "tinyint",
  "time",
  "timestamp",
  "smallint",
  "mediumint",
  "bigint",
  "decimal",
  "float",
  "double",
  "real",
  "bit",
  "boolean",
  "serial",
  "blob",
  "binary",
  "enum",
  "set",
  "geometry",
  "point"
];

},{}],380:[function(require,module,exports){
arguments[4][181][0].apply(exports,arguments)
},{"./month":381,"./weekday":382,"dup":181}],381:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799
module["exports"] = {
  wide: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ],
  // Property "wide_context" is optional, if not set then "wide" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  wide_context: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ],
  abbr: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ],
  // Property "abbr_context" is optional, if not set then "abbr" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  abbr_context: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ]
};

},{}],382:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1847
module["exports"] = {
  wide: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ],
  // Property "wide_context" is optional, if not set then "wide" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  wide_context: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ],
  abbr: [
    "Sun",
    "Mon",
    "Tue",
    "Wed",
    "Thu",
    "Fri",
    "Sat"
  ],
  // Property "abbr_context" is optional, if not set then "abbr" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  abbr_context: [
    "Sun",
    "Mon",
    "Tue",
    "Wed",
    "Thu",
    "Fri",
    "Sat"
  ]
};

},{}],383:[function(require,module,exports){
module["exports"] = [
  "Checking",
  "Savings",
  "Money Market",
  "Investment",
  "Home Loan",
  "Credit Card",
  "Auto Loan",
  "Personal Loan"
];

},{}],384:[function(require,module,exports){
module["exports"] = {
  "UAE Dirham": {
    "code": "AED",
    "symbol": ""
  },
  "Afghani": {
    "code": "AFN",
    "symbol": "؋"
  },
  "Lek": {
    "code": "ALL",
    "symbol": "Lek"
  },
  "Armenian Dram": {
    "code": "AMD",
    "symbol": ""
  },
  "Netherlands Antillian Guilder": {
    "code": "ANG",
    "symbol": "ƒ"
  },
  "Kwanza": {
    "code": "AOA",
    "symbol": ""
  },
  "Argentine Peso": {
    "code": "ARS",
    "symbol": "$"
  },
  "Australian Dollar": {
    "code": "AUD",
    "symbol": "$"
  },
  "Aruban Guilder": {
    "code": "AWG",
    "symbol": "ƒ"
  },
  "Azerbaijanian Manat": {
    "code": "AZN",
    "symbol": "ман"
  },
  "Convertible Marks": {
    "code": "BAM",
    "symbol": "KM"
  },
  "Barbados Dollar": {
    "code": "BBD",
    "symbol": "$"
  },
  "Taka": {
    "code": "BDT",
    "symbol": ""
  },
  "Bulgarian Lev": {
    "code": "BGN",
    "symbol": "лв"
  },
  "Bahraini Dinar": {
    "code": "BHD",
    "symbol": ""
  },
  "Burundi Franc": {
    "code": "BIF",
    "symbol": ""
  },
  "Bermudian Dollar (customarily known as Bermuda Dollar)": {
    "code": "BMD",
    "symbol": "$"
  },
  "Brunei Dollar": {
    "code": "BND",
    "symbol": "$"
  },
  "Boliviano Mvdol": {
    "code": "BOB BOV",
    "symbol": "$b"
  },
  "Brazilian Real": {
    "code": "BRL",
    "symbol": "R$"
  },
  "Bahamian Dollar": {
    "code": "BSD",
    "symbol": "$"
  },
  "Pula": {
    "code": "BWP",
    "symbol": "P"
  },
  "Belarussian Ruble": {
    "code": "BYR",
    "symbol": "p."
  },
  "Belize Dollar": {
    "code": "BZD",
    "symbol": "BZ$"
  },
  "Canadian Dollar": {
    "code": "CAD",
    "symbol": "$"
  },
  "Congolese Franc": {
    "code": "CDF",
    "symbol": ""
  },
  "Swiss Franc": {
    "code": "CHF",
    "symbol": "CHF"
  },
  "Chilean Peso Unidades de fomento": {
    "code": "CLP CLF",
    "symbol": "$"
  },
  "Yuan Renminbi": {
    "code": "CNY",
    "symbol": "¥"
  },
  "Colombian Peso Unidad de Valor Real": {
    "code": "COP COU",
    "symbol": "$"
  },
  "Costa Rican Colon": {
    "code": "CRC",
    "symbol": "₡"
  },
  "Cuban Peso Peso Convertible": {
    "code": "CUP CUC",
    "symbol": "₱"
  },
  "Cape Verde Escudo": {
    "code": "CVE",
    "symbol": ""
  },
  "Czech Koruna": {
    "code": "CZK",
    "symbol": "Kč"
  },
  "Djibouti Franc": {
    "code": "DJF",
    "symbol": ""
  },
  "Danish Krone": {
    "code": "DKK",
    "symbol": "kr"
  },
  "Dominican Peso": {
    "code": "DOP",
    "symbol": "RD$"
  },
  "Algerian Dinar": {
    "code": "DZD",
    "symbol": ""
  },
  "Kroon": {
    "code": "EEK",
    "symbol": ""
  },
  "Egyptian Pound": {
    "code": "EGP",
    "symbol": "£"
  },
  "Nakfa": {
    "code": "ERN",
    "symbol": ""
  },
  "Ethiopian Birr": {
    "code": "ETB",
    "symbol": ""
  },
  "Euro": {
    "code": "EUR",
    "symbol": "€"
  },
  "Fiji Dollar": {
    "code": "FJD",
    "symbol": "$"
  },
  "Falkland Islands Pound": {
    "code": "FKP",
    "symbol": "£"
  },
  "Pound Sterling": {
    "code": "GBP",
    "symbol": "£"
  },
  "Lari": {
    "code": "GEL",
    "symbol": ""
  },
  "Cedi": {
    "code": "GHS",
    "symbol": ""
  },
  "Gibraltar Pound": {
    "code": "GIP",
    "symbol": "£"
  },
  "Dalasi": {
    "code": "GMD",
    "symbol": ""
  },
  "Guinea Franc": {
    "code": "GNF",
    "symbol": ""
  },
  "Quetzal": {
    "code": "GTQ",
    "symbol": "Q"
  },
  "Guyana Dollar": {
    "code": "GYD",
    "symbol": "$"
  },
  "Hong Kong Dollar": {
    "code": "HKD",
    "symbol": "$"
  },
  "Lempira": {
    "code": "HNL",
    "symbol": "L"
  },
  "Croatian Kuna": {
    "code": "HRK",
    "symbol": "kn"
  },
  "Gourde US Dollar": {
    "code": "HTG USD",
    "symbol": ""
  },
  "Forint": {
    "code": "HUF",
    "symbol": "Ft"
  },
  "Rupiah": {
    "code": "IDR",
    "symbol": "Rp"
  },
  "New Israeli Sheqel": {
    "code": "ILS",
    "symbol": "₪"
  },
  "Indian Rupee": {
    "code": "INR",
    "symbol": ""
  },
  "Indian Rupee Ngultrum": {
    "code": "INR BTN",
    "symbol": ""
  },
  "Iraqi Dinar": {
    "code": "IQD",
    "symbol": ""
  },
  "Iranian Rial": {
    "code": "IRR",
    "symbol": "﷼"
  },
  "Iceland Krona": {
    "code": "ISK",
    "symbol": "kr"
  },
  "Jamaican Dollar": {
    "code": "JMD",
    "symbol": "J$"
  },
  "Jordanian Dinar": {
    "code": "JOD",
    "symbol": ""
  },
  "Yen": {
    "code": "JPY",
    "symbol": "¥"
  },
  "Kenyan Shilling": {
    "code": "KES",
    "symbol": ""
  },
  "Som": {
    "code": "KGS",
    "symbol": "лв"
  },
  "Riel": {
    "code": "KHR",
    "symbol": "៛"
  },
  "Comoro Franc": {
    "code": "KMF",
    "symbol": ""
  },
  "North Korean Won": {
    "code": "KPW",
    "symbol": "₩"
  },
  "Won": {
    "code": "KRW",
    "symbol": "₩"
  },
  "Kuwaiti Dinar": {
    "code": "KWD",
    "symbol": ""
  },
  "Cayman Islands Dollar": {
    "code": "KYD",
    "symbol": "$"
  },
  "Tenge": {
    "code": "KZT",
    "symbol": "лв"
  },
  "Kip": {
    "code": "LAK",
    "symbol": "₭"
  },
  "Lebanese Pound": {
    "code": "LBP",
    "symbol": "£"
  },
  "Sri Lanka Rupee": {
    "code": "LKR",
    "symbol": "₨"
  },
  "Liberian Dollar": {
    "code": "LRD",
    "symbol": "$"
  },
  "Lithuanian Litas": {
    "code": "LTL",
    "symbol": "Lt"
  },
  "Latvian Lats": {
    "code": "LVL",
    "symbol": "Ls"
  },
  "Libyan Dinar": {
    "code": "LYD",
    "symbol": ""
  },
  "Moroccan Dirham": {
    "code": "MAD",
    "symbol": ""
  },
  "Moldovan Leu": {
    "code": "MDL",
    "symbol": ""
  },
  "Malagasy Ariary": {
    "code": "MGA",
    "symbol": ""
  },
  "Denar": {
    "code": "MKD",
    "symbol": "ден"
  },
  "Kyat": {
    "code": "MMK",
    "symbol": ""
  },
  "Tugrik": {
    "code": "MNT",
    "symbol": "₮"
  },
  "Pataca": {
    "code": "MOP",
    "symbol": ""
  },
  "Ouguiya": {
    "code": "MRO",
    "symbol": ""
  },
  "Mauritius Rupee": {
    "code": "MUR",
    "symbol": "₨"
  },
  "Rufiyaa": {
    "code": "MVR",
    "symbol": ""
  },
  "Kwacha": {
    "code": "MWK",
    "symbol": ""
  },
  "Mexican Peso Mexican Unidad de Inversion (UDI)": {
    "code": "MXN MXV",
    "symbol": "$"
  },
  "Malaysian Ringgit": {
    "code": "MYR",
    "symbol": "RM"
  },
  "Metical": {
    "code": "MZN",
    "symbol": "MT"
  },
  "Naira": {
    "code": "NGN",
    "symbol": "₦"
  },
  "Cordoba Oro": {
    "code": "NIO",
    "symbol": "C$"
  },
  "Norwegian Krone": {
    "code": "NOK",
    "symbol": "kr"
  },
  "Nepalese Rupee": {
    "code": "NPR",
    "symbol": "₨"
  },
  "New Zealand Dollar": {
    "code": "NZD",
    "symbol": "$"
  },
  "Rial Omani": {
    "code": "OMR",
    "symbol": "﷼"
  },
  "Balboa US Dollar": {
    "code": "PAB USD",
    "symbol": "B/."
  },
  "Nuevo Sol": {
    "code": "PEN",
    "symbol": "S/."
  },
  "Kina": {
    "code": "PGK",
    "symbol": ""
  },
  "Philippine Peso": {
    "code": "PHP",
    "symbol": "Php"
  },
  "Pakistan Rupee": {
    "code": "PKR",
    "symbol": "₨"
  },
  "Zloty": {
    "code": "PLN",
    "symbol": "zł"
  },
  "Guarani": {
    "code": "PYG",
    "symbol": "Gs"
  },
  "Qatari Rial": {
    "code": "QAR",
    "symbol": "﷼"
  },
  "New Leu": {
    "code": "RON",
    "symbol": "lei"
  },
  "Serbian Dinar": {
    "code": "RSD",
    "symbol": "Дин."
  },
  "Russian Ruble": {
    "code": "RUB",
    "symbol": "руб"
  },
  "Rwanda Franc": {
    "code": "RWF",
    "symbol": ""
  },
  "Saudi Riyal": {
    "code": "SAR",
    "symbol": "﷼"
  },
  "Solomon Islands Dollar": {
    "code": "SBD",
    "symbol": "$"
  },
  "Seychelles Rupee": {
    "code": "SCR",
    "symbol": "₨"
  },
  "Sudanese Pound": {
    "code": "SDG",
    "symbol": ""
  },
  "Swedish Krona": {
    "code": "SEK",
    "symbol": "kr"
  },
  "Singapore Dollar": {
    "code": "SGD",
    "symbol": "$"
  },
  "Saint Helena Pound": {
    "code": "SHP",
    "symbol": "£"
  },
  "Leone": {
    "code": "SLL",
    "symbol": ""
  },
  "Somali Shilling": {
    "code": "SOS",
    "symbol": "S"
  },
  "Surinam Dollar": {
    "code": "SRD",
    "symbol": "$"
  },
  "Dobra": {
    "code": "STD",
    "symbol": ""
  },
  "El Salvador Colon US Dollar": {
    "code": "SVC USD",
    "symbol": "$"
  },
  "Syrian Pound": {
    "code": "SYP",
    "symbol": "£"
  },
  "Lilangeni": {
    "code": "SZL",
    "symbol": ""
  },
  "Baht": {
    "code": "THB",
    "symbol": "฿"
  },
  "Somoni": {
    "code": "TJS",
    "symbol": ""
  },
  "Manat": {
    "code": "TMT",
    "symbol": ""
  },
  "Tunisian Dinar": {
    "code": "TND",
    "symbol": ""
  },
  "Pa'anga": {
    "code": "TOP",
    "symbol": ""
  },
  "Turkish Lira": {
    "code": "TRY",
    "symbol": "TL"
  },
  "Trinidad and Tobago Dollar": {
    "code": "TTD",
    "symbol": "TT$"
  },
  "New Taiwan Dollar": {
    "code": "TWD",
    "symbol": "NT$"
  },
  "Tanzanian Shilling": {
    "code": "TZS",
    "symbol": ""
  },
  "Hryvnia": {
    "code": "UAH",
    "symbol": "₴"
  },
  "Uganda Shilling": {
    "code": "UGX",
    "symbol": ""
  },
  "US Dollar": {
    "code": "USD",
    "symbol": "$"
  },
  "Peso Uruguayo Uruguay Peso en Unidades Indexadas": {
    "code": "UYU UYI",
    "symbol": "$U"
  },
  "Uzbekistan Sum": {
    "code": "UZS",
    "symbol": "лв"
  },
  "Bolivar Fuerte": {
    "code": "VEF",
    "symbol": "Bs"
  },
  "Dong": {
    "code": "VND",
    "symbol": "₫"
  },
  "Vatu": {
    "code": "VUV",
    "symbol": ""
  },
  "Tala": {
    "code": "WST",
    "symbol": ""
  },
  "CFA Franc BEAC": {
    "code": "XAF",
    "symbol": ""
  },
  "Silver": {
    "code": "XAG",
    "symbol": ""
  },
  "Gold": {
    "code": "XAU",
    "symbol": ""
  },
  "Bond Markets Units European Composite Unit (EURCO)": {
    "code": "XBA",
    "symbol": ""
  },
  "European Monetary Unit (E.M.U.-6)": {
    "code": "XBB",
    "symbol": ""
  },
  "European Unit of Account 9(E.U.A.-9)": {
    "code": "XBC",
    "symbol": ""
  },
  "European Unit of Account 17(E.U.A.-17)": {
    "code": "XBD",
    "symbol": ""
  },
  "East Caribbean Dollar": {
    "code": "XCD",
    "symbol": "$"
  },
  "SDR": {
    "code": "XDR",
    "symbol": ""
  },
  "UIC-Franc": {
    "code": "XFU",
    "symbol": ""
  },
  "CFA Franc BCEAO": {
    "code": "XOF",
    "symbol": ""
  },
  "Palladium": {
    "code": "XPD",
    "symbol": ""
  },
  "CFP Franc": {
    "code": "XPF",
    "symbol": ""
  },
  "Platinum": {
    "code": "XPT",
    "symbol": ""
  },
  "Codes specifically reserved for testing purposes": {
    "code": "XTS",
    "symbol": ""
  },
  "Yemeni Rial": {
    "code": "YER",
    "symbol": "﷼"
  },
  "Rand": {
    "code": "ZAR",
    "symbol": "R"
  },
  "Rand Loti": {
    "code": "ZAR LSL",
    "symbol": ""
  },
  "Rand Namibia Dollar": {
    "code": "ZAR NAD",
    "symbol": ""
  },
  "Zambian Kwacha": {
    "code": "ZMK",
    "symbol": ""
  },
  "Zimbabwe Dollar": {
    "code": "ZWL",
    "symbol": ""
  }
};

},{}],385:[function(require,module,exports){
var finance = {};
module['exports'] = finance;
finance.account_type = require("./account_type");
finance.transaction_type = require("./transaction_type");
finance.currency = require("./currency");

},{"./account_type":383,"./currency":384,"./transaction_type":386}],386:[function(require,module,exports){
module["exports"] = [
  "deposit",
  "withdrawal",
  "payment",
  "invoice"
];

},{}],387:[function(require,module,exports){
module["exports"] = [
  "TCP",
  "HTTP",
  "SDD",
  "RAM",
  "GB",
  "CSS",
  "SSL",
  "AGP",
  "SQL",
  "FTP",
  "PCI",
  "AI",
  "ADP",
  "RSS",
  "XML",
  "EXE",
  "COM",
  "HDD",
  "THX",
  "SMTP",
  "SMS",
  "USB",
  "PNG",
  "SAS",
  "IB",
  "SCSI",
  "JSON",
  "XSS",
  "JBOD"
];

},{}],388:[function(require,module,exports){
module["exports"] = [
  "auxiliary",
  "primary",
  "back-end",
  "digital",
  "open-source",
  "virtual",
  "cross-platform",
  "redundant",
  "online",
  "haptic",
  "multi-byte",
  "bluetooth",
  "wireless",
  "1080p",
  "neural",
  "optical",
  "solid state",
  "mobile"
];

},{}],389:[function(require,module,exports){
var hacker = {};
module['exports'] = hacker;
hacker.abbreviation = require("./abbreviation");
hacker.adjective = require("./adjective");
hacker.noun = require("./noun");
hacker.verb = require("./verb");
hacker.ingverb = require("./ingverb");

},{"./abbreviation":387,"./adjective":388,"./ingverb":390,"./noun":391,"./verb":392}],390:[function(require,module,exports){
module["exports"] = [
  "backing up",
  "bypassing",
  "hacking",
  "overriding",
  "compressing",
  "copying",
  "navigating",
  "indexing",
  "connecting",
  "generating",
  "quantifying",
  "calculating",
  "synthesizing",
  "transmitting",
  "programming",
  "parsing"
];

},{}],391:[function(require,module,exports){
module["exports"] = [
  "driver",
  "protocol",
  "bandwidth",
  "panel",
  "microchip",
  "program",
  "port",
  "card",
  "array",
  "interface",
  "system",
  "sensor",
  "firewall",
  "hard drive",
  "pixel",
  "alarm",
  "feed",
  "monitor",
  "application",
  "transmitter",
  "bus",
  "circuit",
  "capacitor",
  "matrix"
];

},{}],392:[function(require,module,exports){
module["exports"] = [
  "back up",
  "bypass",
  "hack",
  "override",
  "compress",
  "copy",
  "navigate",
  "index",
  "connect",
  "generate",
  "quantify",
  "calculate",
  "synthesize",
  "input",
  "transmit",
  "program",
  "reboot",
  "parse"
];

},{}],393:[function(require,module,exports){
var en = {};
module['exports'] = en;
en.title = "English";
en.separator = " & ";
en.address = require("./address");
en.credit_card = require("./credit_card");
en.company = require("./company");
en.internet = require("./internet");
en.database = require("./database");
en.lorem = require("./lorem");
en.name = require("./name");
en.phone_number = require("./phone_number");
en.cell_phone = require("./cell_phone");
en.business = require("./business");
en.commerce = require("./commerce");
en.team = require("./team");
en.hacker = require("./hacker");
en.app = require("./app");
en.finance = require("./finance");
en.date = require("./date");
en.system = require("./system");

},{"./address":331,"./app":342,"./business":348,"./cell_phone":350,"./commerce":353,"./company":360,"./credit_card":367,"./database":378,"./date":380,"./finance":385,"./hacker":389,"./internet":398,"./lorem":399,"./name":403,"./phone_number":410,"./system":411,"./team":414}],394:[function(require,module,exports){
module["exports"] = [
  "https://s3.amazonaws.com/uifaces/faces/twitter/jarjan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mahdif/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sprayaga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ruzinav/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Skyhartman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/moscoz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kurafire/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/91bilal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/malykhinv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joelhelin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kushsolitary/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coreyweb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/snowshade/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/areus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/heyimjuani/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/envex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/unterdreht/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/collegeman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peejfancher/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andyisonline/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ultragex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fuck_you_two/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ateneupopular/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Stievius/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kerem/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/osvaldas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thierrykoblentz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peterlandt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/catarino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/weglov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandclay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ahmetsulek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicolasfolliot/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jayrobinson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorerixon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kolage/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michzen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markjenkins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicolai_larsen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/noxdzine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alagoon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/idiot/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mizko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chadengle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mutlu82/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/simobenso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/guiiipontes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/soyjavi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshaustin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tomaslau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/VinThomas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ManikRathee/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/langate/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cemshid/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leemunroe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_shahedk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/enda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BillSKenney/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/divya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshhemsley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sindresorhus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/soffes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/9lessons/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/linux29/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anaami/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joreira/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shadeed9/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottkclark/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jedbridges/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/salleedesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marakasina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ariil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BrianPurkiss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelmartinho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bublienko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/devankoshal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ZacharyZorbas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timmillwood/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshuasortino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/damenleeturks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tomas_janousek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/herrhaase/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/RussellBishop/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brajeshwar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cbracco/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bermonpainter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abdullindenis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/isacosta/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/suprb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yalozhkin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chandlervdw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamgarth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_victa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/commadelimited/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/roybarberuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/axel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vladarbatov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ffbel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/syropian/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ankitind/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/traneblow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/flashmurphy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ChrisFarina78/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baliomega/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saschamt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jm_denis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anoff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kennyadr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chatyrko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dingyi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mds/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/terryxlife/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aaroni/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kinday/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/prrstn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eduardostuart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhilipsiva/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/GavicoInd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baires/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rohixx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/blakesimkins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leeiio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tjrus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uberschizo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kylefoundry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/claudioguglieri/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ripplemdk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/exentrich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jakemoore/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joaoedumedeiros/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/poormini/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tereshenkov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/keryilmaz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/haydn_woods/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rude/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/llun/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sgaurav_baghel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jamiebrittain/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/badlittleduck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pifagor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/benefritz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/erwanhesry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/diesellaws/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremiaha/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/koridhandy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chaensel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewcohen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/smaczny/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gonzalorobaina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nandini_m/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sydlawrence/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cdharrison/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tgerken/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lewisainslie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/charliecwaite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robbschiller/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/flexrs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattdetails/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/raquelwilson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karsh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrmartineau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/opnsrce/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hgharrygo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maximseshuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uxalex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samihah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chanpory/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sharvin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josemarques/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jefffis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/krystalfister/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dpmachado/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/funwatercat/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timothycd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ivanfilipovbg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/picard102/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcobarbosa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/krasnoukhov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/g3d/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rickdt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bungiwan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hugomano/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/logorado/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dc_user/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/horaciobella/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/SlaapMe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/teeragit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iqonicd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ilya_pestov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewarrow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ssiskind/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/HenryHoffman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rdsaunders/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adamsxu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/curiousoffice/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/themadray/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michigangraham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kohette/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nickfratter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/runningskull/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madysondesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brenton_clarke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jennyshen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bradenhamm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kurtinc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amanruzaini/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coreyhaggard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Karimmove/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aaronalfred/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wtrsld/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jitachi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/therealmarvin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pmeissner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ooomz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shanehudson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/IsaryAmairani/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arthurholcombe1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/boxmodel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ehsandiary/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/LucasPerdidao/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shalt0ni/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/swaplord/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kaelifa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/plbabin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/guillemboti/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arindam_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/renbyrd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thiagovernetti/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jmillspaysbills/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mikemai2awesome/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jervo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mekal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sta1ex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robergd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/felipecsl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrea211087/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/garand/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhooyenga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abovefunction/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pcridesagain/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/randomlies/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BryanHorsey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/heykenneth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dahparra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/allthingssmitty/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danvernon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/beweinreich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/increase/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/falvarad/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alxndrustinov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/souuf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/orkuncaylar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/AM_Kn2/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gearpixels/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bassamology/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vimarethomas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kosmar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/SULiik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrjamesnoble/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/silvanmuhlemann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shaneIxD/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nacho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yigitpinarbasi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buzzusborne/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aaronkwhite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rmlewisuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/giancarlon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nbirckel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d_nny_m_cher/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sdidonato/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/atariboy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abotap/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karalek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/psdesignuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ludwiczakpawel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nemanjaivanovic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baluli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ahmadajmi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vovkasolovev/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samgrover/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/derienzo777/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jonathansimmons/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nelsonjoyce/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/S0ufi4n3/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xtopherpaul/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oaktreemedia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/findingjenny/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/namankreative/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antonyzotov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/we_social/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leehambley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/solid_color/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abelcabans/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mbilderbach/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kkusaa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jordyvdboom/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosgavina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pechkinator/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vc27/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rdbannon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/croakx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kerihenare/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/catadeleon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gcmorley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/duivvv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saschadroste/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorDubugras/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wintopia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattbilotti/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/taylorling/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/megdraws/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/meln1ks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mahmoudmetwally/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Silveredge9/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/derekebradley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/happypeter1983/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/travis_arnold/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/artem_kostenko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adobi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/daykiine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alek_djuric/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scips/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/miguelmendes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justinrhee/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alsobrooks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fronx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mcflydesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/santi_urso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/allfordesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stayuber/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bertboerland/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marosholly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adamnac/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cynthiasavard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/muringa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hiemil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jackiesaik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iduuck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antjanus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aroon_sharma/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dshster/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thehacker/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelbrooksjr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryanmclaughlin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/clubb3rry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/taybenlor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xripunov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/myastro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adityasutomo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/digitalmaverick/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hjartstrorn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itolmach/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vaughanmoffitt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abdots/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/isnifer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sergeysafonov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scrapdnb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrismj83/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vitorleal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sokaniwaal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/illyzoren/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mocabyte/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/osmanince/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/djsherman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidhemphill/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/waghner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/necodymiconer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/praveen_vijaya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fabbrucci/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/travishines/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kuldarkalvik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Elt_n/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/phillapier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okseanjay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/id835559/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kudretkeskin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anjhero/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/duck4fuck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scott_riley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/noufalibrahim/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/h1brd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/borges_marcos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ciaranr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefooo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mikebeecham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tonymillion/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshuaraichur/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/irae/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/petrangr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dmitriychuta/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/charliegann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arashmanteghi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ainsleywagon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/svenlen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/faisalabid/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/beshur/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlyson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dutchnadia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/teddyzetterlund/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samuelkraft/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aoimedia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/toddrew/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/codepoet_ru/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/artvavs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/benoitboucart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jomarmen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kolmarlopez/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/creartinc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/homka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gaborenton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robinclediere/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maximsorokin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/plasticine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/j2deme/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kapaluccio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/de_ascanio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rikas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dawidwu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/angelcreative/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rpatey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/popey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rehatkathuria/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/the_purplebunny/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/1markiz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ajaxy_ru/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brenmurrell/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dudestein/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oskarlevinson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorstuber/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vicivadeline/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leandrovaranda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottgallant/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victor_haydin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sawrb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryhanhassan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amayvs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/a_brixen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karolkrakowiak_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/herkulano/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geran7/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cggaurav/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chris_witko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lososina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/polarity/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattlat/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandonburke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/constantx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/teylorfeliz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/craigelimeliah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rachelreveley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/reabo101/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rahmeen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rickyyean/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/j04ntoh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/spbroma/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sebashton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jpenico/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/francis_vega/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oktayelipek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kikillo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fabbianz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/larrygerard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BroumiYoussef/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/0therplanet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mbilalsiddique1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ionuss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/grrr_nl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/liminha/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rawdiggie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryandownie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sethlouey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pixage/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arpitnj/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/switmer777/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josevnclch/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kanickairaj/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/puzik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tbakdesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/besbujupi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/supjoey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lowie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/linkibol/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/balintorosz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imcoding/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/agustincruiz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gusoto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thomasschrijer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/superoutman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kalmerrautam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gabrielizalo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gojeanyn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidbaldie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_vojto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/laurengray/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jydesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mymyboy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nellleo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marciotoledo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ninjad3m0/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/to_soham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hasslunsford/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/muridrahhal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/levisan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/grahamkennery/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lepetitogre/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antongenkin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nessoila/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amandabuzard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cocolero/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dss49/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matt3224/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bluesix/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/quailandquasar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/AlbertoCococi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lepinski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sementiy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mhudobivnik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thibaut_re/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/olgary/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shojberg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mtolokonnikov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bereto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/naupintos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wegotvices/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xadhix/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/macxim/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rodnylobos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madcampos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madebyvadim/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bartoszdawydzik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/supervova/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markretzloff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vonachoo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/darylws/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stevedesigner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mylesb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/herbigt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/depaulawagner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geshan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gizmeedevil1991/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_scottburgess/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lisovsky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidsasda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/artd_sign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/YoungCutlass/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mgonto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itstotallyamy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorquinn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/osmond/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oksanafrewer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zauerkraut/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamkeithmason/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nitinhayaran/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lmjabreu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mandalareopens/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thinkleft/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ponchomendivil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juamperro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brunodesign1206/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/caseycavanagh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/luxe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dotgridline/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/spedwig/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madewulf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattsapii/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/helderleal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrisstumph/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jayphen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nsamoylov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrisvanderkooi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/otozk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/prinzadi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gu5taf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cyril_gaillard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d_kobelyatsky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/daniloc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nwdsha/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/romanbulah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/skkirilov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dvdwinden/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dannol/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thekevinjones/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jwalter14/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buddhasource/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uxpiper/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thatonetommy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/diansigitp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adrienths/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/klimmka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gkaam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/derekcramer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jennyyo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nerrsoft/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xalionmalik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edhenderson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/keyuri85/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/roxanejammet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edkf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matkins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alessandroribe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jacksonlatka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lebronjennan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karlkanall/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/moynihan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saulihirvi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wesleytrankin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fjaguero/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bowbrick/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mashaaaaal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yassiryahya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dparrelli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fotomagin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aka_james/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/denisepires/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iqbalperkasa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/martinansty/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jarsen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justinrob/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gabrielrosser/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/malgordon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlfairclough/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelabehsera/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pierrestoffe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/enjoythetau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/loganjlambert/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rpeezy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coreyginnivan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michalhron/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/msveet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lingeswaran/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kolsvein/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peter576/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/reideiredale/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joeymurdah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/raphaelnikson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mvdheuvel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maxlinderman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jimmuirhead/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/begreative/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/frankiefreesbie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robturlinckx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Talbi_ConSept/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/longlivemyword/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vanchesz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maiklam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hermanobrother/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rez___a/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gregsqueeb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/greenbes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_ragzor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anthonysukow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fluidbrush/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dactrtr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jehnglynn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bergmartin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hugocornejo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_kkga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dzantievm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sawalazar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sovesove/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jonsgotwood/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/byryan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vytautas_a/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mizhgan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cicerobr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nilshelmersson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d33pthought/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davecraige/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nckjrvs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alexandermayes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jcubic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/craigrcoles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bagawarman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rob_thomas10/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cofla/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maikelk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/russell_baylis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mhesslow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/codysanfilippo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/webtanya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madebybrenton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dcalonaci/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/perfectflow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saarabpreet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kumarrajan12123/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamsteffen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/themikenagle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ceekaytweet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/larrybolt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/conspirator/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dallasbpeters/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/n3dmax/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/terpimost/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/byrnecore/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/j_drake_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/calebjoyce/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/russoedu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hoangloi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gofrasdesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dimaposnyy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tjisousa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okandungel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/billyroshan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oskamaya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/motionthinks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/knilob/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ashocka18/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marrimo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bartjo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/omnizya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ernestsemerda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andreas_pr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edgarchris99/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thomasgeisen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gseguin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joannefournier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/demersdesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adammarsbar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/n_tassone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/javorszky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/themrdave/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yecidsm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicollerich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/canapud/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicoleglynn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/judzhin_miles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/designervzm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kianoshp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/evandrix/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alterchuca/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhrubo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ma_tiax/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ssbb_me/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dorphern/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mauriolg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bruno_mart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mactopus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/the_winslet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joemdesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Shriiiiimp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jacobbennett/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nfedoroff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamglimy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/allagringaus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aiiaiiaii/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/olaolusoga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buryaknick/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wim1k/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicklacke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/a1chapone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/steynviljoen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/strikewan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryankirkman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewabogado/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/doooon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jagan123/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ariffsetiawan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elenadissi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mwarkentin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thierrymeier_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/r_garcia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dmackerman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/borantula/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/konus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/spacewood_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryuchi311/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tristanlegros/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shoaib253/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aislinnkelly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okcoker/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timpetricola/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sunshinedgirl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chadami/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aleclarsoniv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nomidesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/petebernardo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottiedude/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/millinet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imsoper/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imammuht/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/benjamin_knight/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nepdud/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joki4/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lanceguyatt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bboy1895/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amywebbb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rweve/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ricburton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nelshd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/batsirai/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/primozcigler/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jffgrdnr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/8d3k/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geneseleznev/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/al_li/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/souperphly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mslarkina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/2fockus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cdavis565/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xiel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/turkutuuli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uxward/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lebinoclard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gauravjassal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidmerrique/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewofficer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kojourin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dnirmal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kevka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mr_shiznit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aluisio_azevedo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cloudstudio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danvierich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alexivanichkin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fran_mchamy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/perretmagali/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/betraydan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cadikkara/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matbeedotcom/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremyworboys/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bpartridge/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelkoper/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/silv3rgvn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alevizio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johnsmithagency/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lawlbwoy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vitor376/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/desastrozo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thimo_cz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jasonmarkjones/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lhausermann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xravil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/guischmitt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vigobronx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/panghal0/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/miguelkooreman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/surgeonist/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/christianoliff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/caspergrl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamkarna/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ipavelek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pierre_nel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/y2graphic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sterlingrules/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elbuscainfo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bennyjien/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stushona/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/estebanuribe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/embrcecreations/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danillos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elliotlewis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/charlesrpratt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vladyn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emmeffess/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosblanco_eu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leonfedotov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rangafangs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chris_frees/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tgormtx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bryan_topham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jpscribbles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mighty55/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carbontwelve/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/isaacfifth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamjdeleon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/snowwrite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/barputro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/drewbyreese/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sachacorazzi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bistrianiosip/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/magoo04/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pehamondello/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yayteejay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/a_harris88/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/algunsanabria/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zforrester/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ovall/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosjgsousa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geobikas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ah_lice/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/looneydoodle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nerdgr8/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ddggccaa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zackeeler/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/normanbox/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/el_fuertisimo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ismail_biltagi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juangomezw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jnmnrd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/patrickcoombe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryanjohnson_me/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markolschesky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeffgolenski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kvasnic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gauchomatt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/afusinatto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kevinoh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okansurreel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adamawesomeface/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emileboudeling/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arishi_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juanmamartinez/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wikiziner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mkginfo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/terrorpixel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/curiousonaut/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/prheemo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelcolenso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/foczzi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/martip07/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thaodang17/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johncafazza/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robinlayfield/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/franciscoamk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abdulhyeuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marklamb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edobene/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andresenfredrik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mikaeljorhult/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrisslowik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vinciarts/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/meelford/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elliotnolten/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yehudab/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vijaykarthik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bfrohs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josep_martins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/attacks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sur4dye/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tumski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/instalox/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mangosango/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/paulfarino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kazaky999/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kiwiupover/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nvkznemo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tom_even/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ratbus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/woodsman001/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshmedeski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thewillbeard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/psaikali/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joe_black/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aleinadsays/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcusgorillius/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hota_v/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jghyllebert/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shinze/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/janpalounek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremiespoken/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/her_ruu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dansowter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/felipeapiress/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/magugzbrand2d/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/posterjob/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nathalie_fs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bobbytwoshoes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dreizle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremymouton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elisabethkjaer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/notbadart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mohanrohith/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jlsolerdeltoro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itskawsar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/slowspock/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zvchkelly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wiljanslofstra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/craighenneberry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/trubeatto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samscouto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BenouarradeM/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gipsy_raf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/netonet_il/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arkokoley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itsajimithing/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/smalonso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_dwite_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/richardgarretts/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gregrwilkinson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anatolinicolae/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lu4sh1i/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefanotirloni/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ostirbu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/darcystonge/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/naitanamoreno/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelcomiskey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adhiardana/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcomano_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidcazalis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/falconerie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gregkilian/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bcrad/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bolzanmarco/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/low_res/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vlajki/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/petar_prog/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jonkspr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/akmalfikri/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/atanism/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/harry_sistalam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/murrayswift/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bobwassermann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gavr1l0/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madshensel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mr_subtle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/deviljho_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/salimianoff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joetruesdell/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/twittypork/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/airskylar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dnezkumar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dgajjar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cherif_b/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/salvafc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/louis_currie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/deeenright/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cybind/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eyronn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vickyshits/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sweetdelisa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cboller1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andresdjasso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/melvindidit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thaisselenator_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lvovenok/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/giuliusa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/belyaev_rs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/overcloacked/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kamal_chaneman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/incubo82/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hellofeverrrr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mhaligowski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sunlandictwin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bu7921/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andytlaw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremery/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/finchjke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/manigm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/umurgdk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottfeltham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ganserene/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mutu_krish/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jodytaggart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ntfblog/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tanveerrao/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hfalucas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alxleroydeval/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kucingbelang4/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bargaorobalo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/colgruv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stalewine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kylefrost/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/angelcolberg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sachingawas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jjshaw14/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ramanathan_pdy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johndezember/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nilshoenson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandonmorreale/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nutzumi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandonflatsoda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sergeyalmone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/klefue/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kirangopal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baumann_alex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matthewkay_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jay_wilburn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shesgared/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/apriendeau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johnriordan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wake_gs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aleksitappura/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emsgulam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xilantra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imomenui/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sircalebgrove/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/newbrushes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hsinyo23/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/m4rio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/katiemdaly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/s4f1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ecommerceil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marlinjayakody/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/swooshycueb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sangdth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coderdiaz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bluefx_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vivekprvr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sasha_shestakov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eugeneeweb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dgclegg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/n1ght_coder/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dixchen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/blakehawksworth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/trueblood_33/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hai_ninh_nguyen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marclgonzales/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yesmeck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stephcoue/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/doronmalki/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ruehldesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anasnakawa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kijanmaharjan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wearesavas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tweetubhai/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alecarpentier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fiterik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antonyryndya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d00maz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/theonlyzeke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/missaaamy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/manekenthe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/reetajayendra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremyshimko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justinrgraham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefanozoffoli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/overra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrebay007/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shvelo96/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pyronite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thedjpetersen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rtyukmaev/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_williamguerra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/albertaugustin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vikashpathak18/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kevinjohndayy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vj_demien/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/colirpixoil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/goddardlewis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/laasli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jqiuss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/heycamtaylor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nastya_mane/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mastermindesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ccinojasso1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nyancecom/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sandywoodruff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bighanddesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sbtransparent/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aviddayentonbay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/richwild/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kaysix_dizzy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tur8le/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/seyedhossein1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/privetwagner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emmandenn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dev_essentials/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jmfsocial/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_yardenoon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mateaodviteza/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mufaddal_mw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hafeeskhan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ashernatali/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sulaqo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eddiechen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josecarlospsh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vm_f/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/enricocicconi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danmartin70/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/donjain/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrxloka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_pedropinho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eitarafa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oscarowusu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ralph_lam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/panchajanyag/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marshallchen_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xamorep/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aio___/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chaabane_wail/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/txcx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/akashsharma39/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/falling_soul/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sainraja/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mugukamil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johannesneu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markwienands/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karthipanraj/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/balakayuriy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alan_zhang_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/layerssss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kaspernordkvist/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mirfanqureshi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hanna_smi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/VMilescu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aeon56/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/m_kalibry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sreejithexp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dicesales/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhoot_amit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/smenov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lonesomelemon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vladimirdevic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joelcipriano/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/haligaliharun/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buleswapnil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/serefka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ifarafonow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vikasvinfotech/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/urrutimeoli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/areandacom/128.jpg"
];

},{}],395:[function(require,module,exports){
module["exports"] = [
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],396:[function(require,module,exports){
module["exports"] = [
  "example.org",
  "example.com",
  "example.net"
];

},{}],397:[function(require,module,exports){
arguments[4][263][0].apply(exports,arguments)
},{"dup":263}],398:[function(require,module,exports){
var internet = {};
module['exports'] = internet;
internet.free_email = require("./free_email");
internet.example_email = require("./example_email");
internet.domain_suffix = require("./domain_suffix");
internet.avatar_uri = require("./avatar_uri");

},{"./avatar_uri":394,"./domain_suffix":395,"./example_email":396,"./free_email":397}],399:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./supplemental":400,"./words":401,"dup":227}],400:[function(require,module,exports){
arguments[4][228][0].apply(exports,arguments)
},{"dup":228}],401:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"dup":229}],402:[function(require,module,exports){
module["exports"] = [
  "Aaliyah",
  "Aaron",
  "Abagail",
  "Abbey",
  "Abbie",
  "Abbigail",
  "Abby",
  "Abdiel",
  "Abdul",
  "Abdullah",
  "Abe",
  "Abel",
  "Abelardo",
  "Abigail",
  "Abigale",
  "Abigayle",
  "Abner",
  "Abraham",
  "Ada",
  "Adah",
  "Adalberto",
  "Adaline",
  "Adam",
  "Adan",
  "Addie",
  "Addison",
  "Adela",
  "Adelbert",
  "Adele",
  "Adelia",
  "Adeline",
  "Adell",
  "Adella",
  "Adelle",
  "Aditya",
  "Adolf",
  "Adolfo",
  "Adolph",
  "Adolphus",
  "Adonis",
  "Adrain",
  "Adrian",
  "Adriana",
  "Adrianna",
  "Adriel",
  "Adrien",
  "Adrienne",
  "Afton",
  "Aglae",
  "Agnes",
  "Agustin",
  "Agustina",
  "Ahmad",
  "Ahmed",
  "Aida",
  "Aidan",
  "Aiden",
  "Aileen",
  "Aimee",
  "Aisha",
  "Aiyana",
  "Akeem",
  "Al",
  "Alaina",
  "Alan",
  "Alana",
  "Alanis",
  "Alanna",
  "Alayna",
  "Alba",
  "Albert",
  "Alberta",
  "Albertha",
  "Alberto",
  "Albin",
  "Albina",
  "Alda",
  "Alden",
  "Alec",
  "Aleen",
  "Alejandra",
  "Alejandrin",
  "Alek",
  "Alena",
  "Alene",
  "Alessandra",
  "Alessandro",
  "Alessia",
  "Aletha",
  "Alex",
  "Alexa",
  "Alexander",
  "Alexandra",
  "Alexandre",
  "Alexandrea",
  "Alexandria",
  "Alexandrine",
  "Alexandro",
  "Alexane",
  "Alexanne",
  "Alexie",
  "Alexis",
  "Alexys",
  "Alexzander",
  "Alf",
  "Alfonso",
  "Alfonzo",
  "Alford",
  "Alfred",
  "Alfreda",
  "Alfredo",
  "Ali",
  "Alia",
  "Alice",
  "Alicia",
  "Alisa",
  "Alisha",
  "Alison",
  "Alivia",
  "Aliya",
  "Aliyah",
  "Aliza",
  "Alize",
  "Allan",
  "Allen",
  "Allene",
  "Allie",
  "Allison",
  "Ally",
  "Alphonso",
  "Alta",
  "Althea",
  "Alva",
  "Alvah",
  "Alvena",
  "Alvera",
  "Alverta",
  "Alvina",
  "Alvis",
  "Alyce",
  "Alycia",
  "Alysa",
  "Alysha",
  "Alyson",
  "Alysson",
  "Amalia",
  "Amanda",
  "Amani",
  "Amara",
  "Amari",
  "Amaya",
  "Amber",
  "Ambrose",
  "Amelia",
  "Amelie",
  "Amely",
  "America",
  "Americo",
  "Amie",
  "Amina",
  "Amir",
  "Amira",
  "Amiya",
  "Amos",
  "Amparo",
  "Amy",
  "Amya",
  "Ana",
  "Anabel",
  "Anabelle",
  "Anahi",
  "Anais",
  "Anastacio",
  "Anastasia",
  "Anderson",
  "Andre",
  "Andreane",
  "Andreanne",
  "Andres",
  "Andrew",
  "Andy",
  "Angel",
  "Angela",
  "Angelica",
  "Angelina",
  "Angeline",
  "Angelita",
  "Angelo",
  "Angie",
  "Angus",
  "Anibal",
  "Anika",
  "Anissa",
  "Anita",
  "Aniya",
  "Aniyah",
  "Anjali",
  "Anna",
  "Annabel",
  "Annabell",
  "Annabelle",
  "Annalise",
  "Annamae",
  "Annamarie",
  "Anne",
  "Annetta",
  "Annette",
  "Annie",
  "Ansel",
  "Ansley",
  "Anthony",
  "Antoinette",
  "Antone",
  "Antonetta",
  "Antonette",
  "Antonia",
  "Antonietta",
  "Antonina",
  "Antonio",
  "Antwan",
  "Antwon",
  "Anya",
  "April",
  "Ara",
  "Araceli",
  "Aracely",
  "Arch",
  "Archibald",
  "Ardella",
  "Arden",
  "Ardith",
  "Arely",
  "Ari",
  "Ariane",
  "Arianna",
  "Aric",
  "Ariel",
  "Arielle",
  "Arjun",
  "Arlene",
  "Arlie",
  "Arlo",
  "Armand",
  "Armando",
  "Armani",
  "Arnaldo",
  "Arne",
  "Arno",
  "Arnold",
  "Arnoldo",
  "Arnulfo",
  "Aron",
  "Art",
  "Arthur",
  "Arturo",
  "Arvel",
  "Arvid",
  "Arvilla",
  "Aryanna",
  "Asa",
  "Asha",
  "Ashlee",
  "Ashleigh",
  "Ashley",
  "Ashly",
  "Ashlynn",
  "Ashton",
  "Ashtyn",
  "Asia",
  "Assunta",
  "Astrid",
  "Athena",
  "Aubree",
  "Aubrey",
  "Audie",
  "Audra",
  "Audreanne",
  "Audrey",
  "August",
  "Augusta",
  "Augustine",
  "Augustus",
  "Aurelia",
  "Aurelie",
  "Aurelio",
  "Aurore",
  "Austen",
  "Austin",
  "Austyn",
  "Autumn",
  "Ava",
  "Avery",
  "Avis",
  "Axel",
  "Ayana",
  "Ayden",
  "Ayla",
  "Aylin",
  "Baby",
  "Bailee",
  "Bailey",
  "Barbara",
  "Barney",
  "Baron",
  "Barrett",
  "Barry",
  "Bart",
  "Bartholome",
  "Barton",
  "Baylee",
  "Beatrice",
  "Beau",
  "Beaulah",
  "Bell",
  "Bella",
  "Belle",
  "Ben",
  "Benedict",
  "Benjamin",
  "Bennett",
  "Bennie",
  "Benny",
  "Benton",
  "Berenice",
  "Bernadette",
  "Bernadine",
  "Bernard",
  "Bernardo",
  "Berneice",
  "Bernhard",
  "Bernice",
  "Bernie",
  "Berniece",
  "Bernita",
  "Berry",
  "Bert",
  "Berta",
  "Bertha",
  "Bertram",
  "Bertrand",
  "Beryl",
  "Bessie",
  "Beth",
  "Bethany",
  "Bethel",
  "Betsy",
  "Bette",
  "Bettie",
  "Betty",
  "Bettye",
  "Beulah",
  "Beverly",
  "Bianka",
  "Bill",
  "Billie",
  "Billy",
  "Birdie",
  "Blair",
  "Blaise",
  "Blake",
  "Blanca",
  "Blanche",
  "Blaze",
  "Bo",
  "Bobbie",
  "Bobby",
  "Bonita",
  "Bonnie",
  "Boris",
  "Boyd",
  "Brad",
  "Braden",
  "Bradford",
  "Bradley",
  "Bradly",
  "Brady",
  "Braeden",
  "Brain",
  "Brandi",
  "Brando",
  "Brandon",
  "Brandt",
  "Brandy",
  "Brandyn",
  "Brannon",
  "Branson",
  "Brant",
  "Braulio",
  "Braxton",
  "Brayan",
  "Breana",
  "Breanna",
  "Breanne",
  "Brenda",
  "Brendan",
  "Brenden",
  "Brendon",
  "Brenna",
  "Brennan",
  "Brennon",
  "Brent",
  "Bret",
  "Brett",
  "Bria",
  "Brian",
  "Briana",
  "Brianne",
  "Brice",
  "Bridget",
  "Bridgette",
  "Bridie",
  "Brielle",
  "Brigitte",
  "Brionna",
  "Brisa",
  "Britney",
  "Brittany",
  "Brock",
  "Broderick",
  "Brody",
  "Brook",
  "Brooke",
  "Brooklyn",
  "Brooks",
  "Brown",
  "Bruce",
  "Bryana",
  "Bryce",
  "Brycen",
  "Bryon",
  "Buck",
  "Bud",
  "Buddy",
  "Buford",
  "Bulah",
  "Burdette",
  "Burley",
  "Burnice",
  "Buster",
  "Cade",
  "Caden",
  "Caesar",
  "Caitlyn",
  "Cale",
  "Caleb",
  "Caleigh",
  "Cali",
  "Calista",
  "Callie",
  "Camden",
  "Cameron",
  "Camila",
  "Camilla",
  "Camille",
  "Camren",
  "Camron",
  "Camryn",
  "Camylle",
  "Candace",
  "Candelario",
  "Candice",
  "Candida",
  "Candido",
  "Cara",
  "Carey",
  "Carissa",
  "Carlee",
  "Carleton",
  "Carley",
  "Carli",
  "Carlie",
  "Carlo",
  "Carlos",
  "Carlotta",
  "Carmel",
  "Carmela",
  "Carmella",
  "Carmelo",
  "Carmen",
  "Carmine",
  "Carol",
  "Carolanne",
  "Carole",
  "Carolina",
  "Caroline",
  "Carolyn",
  "Carolyne",
  "Carrie",
  "Carroll",
  "Carson",
  "Carter",
  "Cary",
  "Casandra",
  "Casey",
  "Casimer",
  "Casimir",
  "Casper",
  "Cassandra",
  "Cassandre",
  "Cassidy",
  "Cassie",
  "Catalina",
  "Caterina",
  "Catharine",
  "Catherine",
  "Cathrine",
  "Cathryn",
  "Cathy",
  "Cayla",
  "Ceasar",
  "Cecelia",
  "Cecil",
  "Cecile",
  "Cecilia",
  "Cedrick",
  "Celestine",
  "Celestino",
  "Celia",
  "Celine",
  "Cesar",
  "Chad",
  "Chadd",
  "Chadrick",
  "Chaim",
  "Chance",
  "Chandler",
  "Chanel",
  "Chanelle",
  "Charity",
  "Charlene",
  "Charles",
  "Charley",
  "Charlie",
  "Charlotte",
  "Chase",
  "Chasity",
  "Chauncey",
  "Chaya",
  "Chaz",
  "Chelsea",
  "Chelsey",
  "Chelsie",
  "Chesley",
  "Chester",
  "Chet",
  "Cheyanne",
  "Cheyenne",
  "Chloe",
  "Chris",
  "Christ",
  "Christa",
  "Christelle",
  "Christian",
  "Christiana",
  "Christina",
  "Christine",
  "Christop",
  "Christophe",
  "Christopher",
  "Christy",
  "Chyna",
  "Ciara",
  "Cicero",
  "Cielo",
  "Cierra",
  "Cindy",
  "Citlalli",
  "Clair",
  "Claire",
  "Clara",
  "Clarabelle",
  "Clare",
  "Clarissa",
  "Clark",
  "Claud",
  "Claude",
  "Claudia",
  "Claudie",
  "Claudine",
  "Clay",
  "Clemens",
  "Clement",
  "Clementina",
  "Clementine",
  "Clemmie",
  "Cleo",
  "Cleora",
  "Cleta",
  "Cletus",
  "Cleve",
  "Cleveland",
  "Clifford",
  "Clifton",
  "Clint",
  "Clinton",
  "Clotilde",
  "Clovis",
  "Cloyd",
  "Clyde",
  "Coby",
  "Cody",
  "Colby",
  "Cole",
  "Coleman",
  "Colin",
  "Colleen",
  "Collin",
  "Colt",
  "Colten",
  "Colton",
  "Columbus",
  "Concepcion",
  "Conner",
  "Connie",
  "Connor",
  "Conor",
  "Conrad",
  "Constance",
  "Constantin",
  "Consuelo",
  "Cooper",
  "Cora",
  "Coralie",
  "Corbin",
  "Cordelia",
  "Cordell",
  "Cordia",
  "Cordie",
  "Corene",
  "Corine",
  "Cornelius",
  "Cornell",
  "Corrine",
  "Cortez",
  "Cortney",
  "Cory",
  "Coty",
  "Courtney",
  "Coy",
  "Craig",
  "Crawford",
  "Creola",
  "Cristal",
  "Cristian",
  "Cristina",
  "Cristobal",
  "Cristopher",
  "Cruz",
  "Crystal",
  "Crystel",
  "Cullen",
  "Curt",
  "Curtis",
  "Cydney",
  "Cynthia",
  "Cyril",
  "Cyrus",
  "Dagmar",
  "Dahlia",
  "Daija",
  "Daisha",
  "Daisy",
  "Dakota",
  "Dale",
  "Dallas",
  "Dallin",
  "Dalton",
  "Damaris",
  "Dameon",
  "Damian",
  "Damien",
  "Damion",
  "Damon",
  "Dan",
  "Dana",
  "Dandre",
  "Dane",
  "D'angelo",
  "Dangelo",
  "Danial",
  "Daniela",
  "Daniella",
  "Danielle",
  "Danika",
  "Dannie",
  "Danny",
  "Dante",
  "Danyka",
  "Daphne",
  "Daphnee",
  "Daphney",
  "Darby",
  "Daren",
  "Darian",
  "Dariana",
  "Darien",
  "Dario",
  "Darion",
  "Darius",
  "Darlene",
  "Daron",
  "Darrel",
  "Darrell",
  "Darren",
  "Darrick",
  "Darrin",
  "Darrion",
  "Darron",
  "Darryl",
  "Darwin",
  "Daryl",
  "Dashawn",
  "Dasia",
  "Dave",
  "David",
  "Davin",
  "Davion",
  "Davon",
  "Davonte",
  "Dawn",
  "Dawson",
  "Dax",
  "Dayana",
  "Dayna",
  "Dayne",
  "Dayton",
  "Dean",
  "Deangelo",
  "Deanna",
  "Deborah",
  "Declan",
  "Dedric",
  "Dedrick",
  "Dee",
  "Deion",
  "Deja",
  "Dejah",
  "Dejon",
  "Dejuan",
  "Delaney",
  "Delbert",
  "Delfina",
  "Delia",
  "Delilah",
  "Dell",
  "Della",
  "Delmer",
  "Delores",
  "Delpha",
  "Delphia",
  "Delphine",
  "Delta",
  "Demarco",
  "Demarcus",
  "Demario",
  "Demetris",
  "Demetrius",
  "Demond",
  "Dena",
  "Denis",
  "Dennis",
  "Deon",
  "Deondre",
  "Deontae",
  "Deonte",
  "Dereck",
  "Derek",
  "Derick",
  "Deron",
  "Derrick",
  "Deshaun",
  "Deshawn",
  "Desiree",
  "Desmond",
  "Dessie",
  "Destany",
  "Destin",
  "Destinee",
  "Destiney",
  "Destini",
  "Destiny",
  "Devan",
  "Devante",
  "Deven",
  "Devin",
  "Devon",
  "Devonte",
  "Devyn",
  "Dewayne",
  "Dewitt",
  "Dexter",
  "Diamond",
  "Diana",
  "Dianna",
  "Diego",
  "Dillan",
  "Dillon",
  "Dimitri",
  "Dina",
  "Dino",
  "Dion",
  "Dixie",
  "Dock",
  "Dolly",
  "Dolores",
  "Domenic",
  "Domenica",
  "Domenick",
  "Domenico",
  "Domingo",
  "Dominic",
  "Dominique",
  "Don",
  "Donald",
  "Donato",
  "Donavon",
  "Donna",
  "Donnell",
  "Donnie",
  "Donny",
  "Dora",
  "Dorcas",
  "Dorian",
  "Doris",
  "Dorothea",
  "Dorothy",
  "Dorris",
  "Dortha",
  "Dorthy",
  "Doug",
  "Douglas",
  "Dovie",
  "Doyle",
  "Drake",
  "Drew",
  "Duane",
  "Dudley",
  "Dulce",
  "Duncan",
  "Durward",
  "Dustin",
  "Dusty",
  "Dwight",
  "Dylan",
  "Earl",
  "Earlene",
  "Earline",
  "Earnest",
  "Earnestine",
  "Easter",
  "Easton",
  "Ebba",
  "Ebony",
  "Ed",
  "Eda",
  "Edd",
  "Eddie",
  "Eden",
  "Edgar",
  "Edgardo",
  "Edison",
  "Edmond",
  "Edmund",
  "Edna",
  "Eduardo",
  "Edward",
  "Edwardo",
  "Edwin",
  "Edwina",
  "Edyth",
  "Edythe",
  "Effie",
  "Efrain",
  "Efren",
  "Eileen",
  "Einar",
  "Eino",
  "Eladio",
  "Elaina",
  "Elbert",
  "Elda",
  "Eldon",
  "Eldora",
  "Eldred",
  "Eldridge",
  "Eleanora",
  "Eleanore",
  "Eleazar",
  "Electa",
  "Elena",
  "Elenor",
  "Elenora",
  "Eleonore",
  "Elfrieda",
  "Eli",
  "Elian",
  "Eliane",
  "Elias",
  "Eliezer",
  "Elijah",
  "Elinor",
  "Elinore",
  "Elisa",
  "Elisabeth",
  "Elise",
  "Eliseo",
  "Elisha",
  "Elissa",
  "Eliza",
  "Elizabeth",
  "Ella",
  "Ellen",
  "Ellie",
  "Elliot",
  "Elliott",
  "Ellis",
  "Ellsworth",
  "Elmer",
  "Elmira",
  "Elmo",
  "Elmore",
  "Elna",
  "Elnora",
  "Elody",
  "Eloisa",
  "Eloise",
  "Elouise",
  "Eloy",
  "Elroy",
  "Elsa",
  "Else",
  "Elsie",
  "Elta",
  "Elton",
  "Elva",
  "Elvera",
  "Elvie",
  "Elvis",
  "Elwin",
  "Elwyn",
  "Elyse",
  "Elyssa",
  "Elza",
  "Emanuel",
  "Emelia",
  "Emelie",
  "Emely",
  "Emerald",
  "Emerson",
  "Emery",
  "Emie",
  "Emil",
  "Emile",
  "Emilia",
  "Emiliano",
  "Emilie",
  "Emilio",
  "Emily",
  "Emma",
  "Emmalee",
  "Emmanuel",
  "Emmanuelle",
  "Emmet",
  "Emmett",
  "Emmie",
  "Emmitt",
  "Emmy",
  "Emory",
  "Ena",
  "Enid",
  "Enoch",
  "Enola",
  "Enos",
  "Enrico",
  "Enrique",
  "Ephraim",
  "Era",
  "Eriberto",
  "Eric",
  "Erica",
  "Erich",
  "Erick",
  "Ericka",
  "Erik",
  "Erika",
  "Erin",
  "Erling",
  "Erna",
  "Ernest",
  "Ernestina",
  "Ernestine",
  "Ernesto",
  "Ernie",
  "Ervin",
  "Erwin",
  "Eryn",
  "Esmeralda",
  "Esperanza",
  "Esta",
  "Esteban",
  "Estefania",
  "Estel",
  "Estell",
  "Estella",
  "Estelle",
  "Estevan",
  "Esther",
  "Estrella",
  "Etha",
  "Ethan",
  "Ethel",
  "Ethelyn",
  "Ethyl",
  "Ettie",
  "Eudora",
  "Eugene",
  "Eugenia",
  "Eula",
  "Eulah",
  "Eulalia",
  "Euna",
  "Eunice",
  "Eusebio",
  "Eva",
  "Evalyn",
  "Evan",
  "Evangeline",
  "Evans",
  "Eve",
  "Eveline",
  "Evelyn",
  "Everardo",
  "Everett",
  "Everette",
  "Evert",
  "Evie",
  "Ewald",
  "Ewell",
  "Ezekiel",
  "Ezequiel",
  "Ezra",
  "Fabian",
  "Fabiola",
  "Fae",
  "Fannie",
  "Fanny",
  "Fatima",
  "Faustino",
  "Fausto",
  "Favian",
  "Fay",
  "Faye",
  "Federico",
  "Felicia",
  "Felicita",
  "Felicity",
  "Felipa",
  "Felipe",
  "Felix",
  "Felton",
  "Fermin",
  "Fern",
  "Fernando",
  "Ferne",
  "Fidel",
  "Filiberto",
  "Filomena",
  "Finn",
  "Fiona",
  "Flavie",
  "Flavio",
  "Fleta",
  "Fletcher",
  "Flo",
  "Florence",
  "Florencio",
  "Florian",
  "Florida",
  "Florine",
  "Flossie",
  "Floy",
  "Floyd",
  "Ford",
  "Forest",
  "Forrest",
  "Foster",
  "Frances",
  "Francesca",
  "Francesco",
  "Francis",
  "Francisca",
  "Francisco",
  "Franco",
  "Frank",
  "Frankie",
  "Franz",
  "Fred",
  "Freda",
  "Freddie",
  "Freddy",
  "Frederic",
  "Frederick",
  "Frederik",
  "Frederique",
  "Fredrick",
  "Fredy",
  "Freeda",
  "Freeman",
  "Freida",
  "Frida",
  "Frieda",
  "Friedrich",
  "Fritz",
  "Furman",
  "Gabe",
  "Gabriel",
  "Gabriella",
  "Gabrielle",
  "Gaetano",
  "Gage",
  "Gail",
  "Gardner",
  "Garett",
  "Garfield",
  "Garland",
  "Garnet",
  "Garnett",
  "Garret",
  "Garrett",
  "Garrick",
  "Garrison",
  "Garry",
  "Garth",
  "Gaston",
  "Gavin",
  "Gay",
  "Gayle",
  "Gaylord",
  "Gene",
  "General",
  "Genesis",
  "Genevieve",
  "Gennaro",
  "Genoveva",
  "Geo",
  "Geoffrey",
  "George",
  "Georgette",
  "Georgiana",
  "Georgianna",
  "Geovanni",
  "Geovanny",
  "Geovany",
  "Gerald",
  "Geraldine",
  "Gerard",
  "Gerardo",
  "Gerda",
  "Gerhard",
  "Germaine",
  "German",
  "Gerry",
  "Gerson",
  "Gertrude",
  "Gia",
  "Gianni",
  "Gideon",
  "Gilbert",
  "Gilberto",
  "Gilda",
  "Giles",
  "Gillian",
  "Gina",
  "Gino",
  "Giovani",
  "Giovanna",
  "Giovanni",
  "Giovanny",
  "Gisselle",
  "Giuseppe",
  "Gladyce",
  "Gladys",
  "Glen",
  "Glenda",
  "Glenna",
  "Glennie",
  "Gloria",
  "Godfrey",
  "Golda",
  "Golden",
  "Gonzalo",
  "Gordon",
  "Grace",
  "Gracie",
  "Graciela",
  "Grady",
  "Graham",
  "Grant",
  "Granville",
  "Grayce",
  "Grayson",
  "Green",
  "Greg",
  "Gregg",
  "Gregoria",
  "Gregorio",
  "Gregory",
  "Greta",
  "Gretchen",
  "Greyson",
  "Griffin",
  "Grover",
  "Guadalupe",
  "Gudrun",
  "Guido",
  "Guillermo",
  "Guiseppe",
  "Gunnar",
  "Gunner",
  "Gus",
  "Gussie",
  "Gust",
  "Gustave",
  "Guy",
  "Gwen",
  "Gwendolyn",
  "Hadley",
  "Hailee",
  "Hailey",
  "Hailie",
  "Hal",
  "Haleigh",
  "Haley",
  "Halie",
  "Halle",
  "Hallie",
  "Hank",
  "Hanna",
  "Hannah",
  "Hans",
  "Hardy",
  "Harley",
  "Harmon",
  "Harmony",
  "Harold",
  "Harrison",
  "Harry",
  "Harvey",
  "Haskell",
  "Hassan",
  "Hassie",
  "Hattie",
  "Haven",
  "Hayden",
  "Haylee",
  "Hayley",
  "Haylie",
  "Hazel",
  "Hazle",
  "Heath",
  "Heather",
  "Heaven",
  "Heber",
  "Hector",
  "Heidi",
  "Helen",
  "Helena",
  "Helene",
  "Helga",
  "Hellen",
  "Helmer",
  "Heloise",
  "Henderson",
  "Henri",
  "Henriette",
  "Henry",
  "Herbert",
  "Herman",
  "Hermann",
  "Hermina",
  "Herminia",
  "Herminio",
  "Hershel",
  "Herta",
  "Hertha",
  "Hester",
  "Hettie",
  "Hilario",
  "Hilbert",
  "Hilda",
  "Hildegard",
  "Hillard",
  "Hillary",
  "Hilma",
  "Hilton",
  "Hipolito",
  "Hiram",
  "Hobart",
  "Holden",
  "Hollie",
  "Hollis",
  "Holly",
  "Hope",
  "Horace",
  "Horacio",
  "Hortense",
  "Hosea",
  "Houston",
  "Howard",
  "Howell",
  "Hoyt",
  "Hubert",
  "Hudson",
  "Hugh",
  "Hulda",
  "Humberto",
  "Hunter",
  "Hyman",
  "Ian",
  "Ibrahim",
  "Icie",
  "Ida",
  "Idell",
  "Idella",
  "Ignacio",
  "Ignatius",
  "Ike",
  "Ila",
  "Ilene",
  "Iliana",
  "Ima",
  "Imani",
  "Imelda",
  "Immanuel",
  "Imogene",
  "Ines",
  "Irma",
  "Irving",
  "Irwin",
  "Isaac",
  "Isabel",
  "Isabell",
  "Isabella",
  "Isabelle",
  "Isac",
  "Isadore",
  "Isai",
  "Isaiah",
  "Isaias",
  "Isidro",
  "Ismael",
  "Isobel",
  "Isom",
  "Israel",
  "Issac",
  "Itzel",
  "Iva",
  "Ivah",
  "Ivory",
  "Ivy",
  "Izabella",
  "Izaiah",
  "Jabari",
  "Jace",
  "Jacey",
  "Jacinthe",
  "Jacinto",
  "Jack",
  "Jackeline",
  "Jackie",
  "Jacklyn",
  "Jackson",
  "Jacky",
  "Jaclyn",
  "Jacquelyn",
  "Jacques",
  "Jacynthe",
  "Jada",
  "Jade",
  "Jaden",
  "Jadon",
  "Jadyn",
  "Jaeden",
  "Jaida",
  "Jaiden",
  "Jailyn",
  "Jaime",
  "Jairo",
  "Jakayla",
  "Jake",
  "Jakob",
  "Jaleel",
  "Jalen",
  "Jalon",
  "Jalyn",
  "Jamaal",
  "Jamal",
  "Jamar",
  "Jamarcus",
  "Jamel",
  "Jameson",
  "Jamey",
  "Jamie",
  "Jamil",
  "Jamir",
  "Jamison",
  "Jammie",
  "Jan",
  "Jana",
  "Janae",
  "Jane",
  "Janelle",
  "Janessa",
  "Janet",
  "Janice",
  "Janick",
  "Janie",
  "Janis",
  "Janiya",
  "Jannie",
  "Jany",
  "Jaquan",
  "Jaquelin",
  "Jaqueline",
  "Jared",
  "Jaren",
  "Jarod",
  "Jaron",
  "Jarred",
  "Jarrell",
  "Jarret",
  "Jarrett",
  "Jarrod",
  "Jarvis",
  "Jasen",
  "Jasmin",
  "Jason",
  "Jasper",
  "Jaunita",
  "Javier",
  "Javon",
  "Javonte",
  "Jay",
  "Jayce",
  "Jaycee",
  "Jayda",
  "Jayde",
  "Jayden",
  "Jaydon",
  "Jaylan",
  "Jaylen",
  "Jaylin",
  "Jaylon",
  "Jayme",
  "Jayne",
  "Jayson",
  "Jazlyn",
  "Jazmin",
  "Jazmyn",
  "Jazmyne",
  "Jean",
  "Jeanette",
  "Jeanie",
  "Jeanne",
  "Jed",
  "Jedediah",
  "Jedidiah",
  "Jeff",
  "Jefferey",
  "Jeffery",
  "Jeffrey",
  "Jeffry",
  "Jena",
  "Jenifer",
  "Jennie",
  "Jennifer",
  "Jennings",
  "Jennyfer",
  "Jensen",
  "Jerad",
  "Jerald",
  "Jeramie",
  "Jeramy",
  "Jerel",
  "Jeremie",
  "Jeremy",
  "Jermain",
  "Jermaine",
  "Jermey",
  "Jerod",
  "Jerome",
  "Jeromy",
  "Jerrell",
  "Jerrod",
  "Jerrold",
  "Jerry",
  "Jess",
  "Jesse",
  "Jessica",
  "Jessie",
  "Jessika",
  "Jessy",
  "Jessyca",
  "Jesus",
  "Jett",
  "Jettie",
  "Jevon",
  "Jewel",
  "Jewell",
  "Jillian",
  "Jimmie",
  "Jimmy",
  "Jo",
  "Joan",
  "Joana",
  "Joanie",
  "Joanne",
  "Joannie",
  "Joanny",
  "Joany",
  "Joaquin",
  "Jocelyn",
  "Jodie",
  "Jody",
  "Joe",
  "Joel",
  "Joelle",
  "Joesph",
  "Joey",
  "Johan",
  "Johann",
  "Johanna",
  "Johathan",
  "John",
  "Johnathan",
  "Johnathon",
  "Johnnie",
  "Johnny",
  "Johnpaul",
  "Johnson",
  "Jolie",
  "Jon",
  "Jonas",
  "Jonatan",
  "Jonathan",
  "Jonathon",
  "Jordan",
  "Jordane",
  "Jordi",
  "Jordon",
  "Jordy",
  "Jordyn",
  "Jorge",
  "Jose",
  "Josefa",
  "Josefina",
  "Joseph",
  "Josephine",
  "Josh",
  "Joshua",
  "Joshuah",
  "Josiah",
  "Josiane",
  "Josianne",
  "Josie",
  "Josue",
  "Jovan",
  "Jovani",
  "Jovanny",
  "Jovany",
  "Joy",
  "Joyce",
  "Juana",
  "Juanita",
  "Judah",
  "Judd",
  "Jude",
  "Judge",
  "Judson",
  "Judy",
  "Jules",
  "Julia",
  "Julian",
  "Juliana",
  "Julianne",
  "Julie",
  "Julien",
  "Juliet",
  "Julio",
  "Julius",
  "June",
  "Junior",
  "Junius",
  "Justen",
  "Justice",
  "Justina",
  "Justine",
  "Juston",
  "Justus",
  "Justyn",
  "Juvenal",
  "Juwan",
  "Kacey",
  "Kaci",
  "Kacie",
  "Kade",
  "Kaden",
  "Kadin",
  "Kaela",
  "Kaelyn",
  "Kaia",
  "Kailee",
  "Kailey",
  "Kailyn",
  "Kaitlin",
  "Kaitlyn",
  "Kale",
  "Kaleb",
  "Kaleigh",
  "Kaley",
  "Kali",
  "Kallie",
  "Kameron",
  "Kamille",
  "Kamren",
  "Kamron",
  "Kamryn",
  "Kane",
  "Kara",
  "Kareem",
  "Karelle",
  "Karen",
  "Kari",
  "Kariane",
  "Karianne",
  "Karina",
  "Karine",
  "Karl",
  "Karlee",
  "Karley",
  "Karli",
  "Karlie",
  "Karolann",
  "Karson",
  "Kasandra",
  "Kasey",
  "Kassandra",
  "Katarina",
  "Katelin",
  "Katelyn",
  "Katelynn",
  "Katharina",
  "Katherine",
  "Katheryn",
  "Kathleen",
  "Kathlyn",
  "Kathryn",
  "Kathryne",
  "Katlyn",
  "Katlynn",
  "Katrina",
  "Katrine",
  "Kattie",
  "Kavon",
  "Kay",
  "Kaya",
  "Kaycee",
  "Kayden",
  "Kayla",
  "Kaylah",
  "Kaylee",
  "Kayleigh",
  "Kayley",
  "Kayli",
  "Kaylie",
  "Kaylin",
  "Keagan",
  "Keanu",
  "Keara",
  "Keaton",
  "Keegan",
  "Keeley",
  "Keely",
  "Keenan",
  "Keira",
  "Keith",
  "Kellen",
  "Kelley",
  "Kelli",
  "Kellie",
  "Kelly",
  "Kelsi",
  "Kelsie",
  "Kelton",
  "Kelvin",
  "Ken",
  "Kendall",
  "Kendra",
  "Kendrick",
  "Kenna",
  "Kennedi",
  "Kennedy",
  "Kenneth",
  "Kennith",
  "Kenny",
  "Kenton",
  "Kenya",
  "Kenyatta",
  "Kenyon",
  "Keon",
  "Keshaun",
  "Keshawn",
  "Keven",
  "Kevin",
  "Kevon",
  "Keyon",
  "Keyshawn",
  "Khalid",
  "Khalil",
  "Kian",
  "Kiana",
  "Kianna",
  "Kiara",
  "Kiarra",
  "Kiel",
  "Kiera",
  "Kieran",
  "Kiley",
  "Kim",
  "Kimberly",
  "King",
  "Kip",
  "Kira",
  "Kirk",
  "Kirsten",
  "Kirstin",
  "Kitty",
  "Kobe",
  "Koby",
  "Kody",
  "Kolby",
  "Kole",
  "Korbin",
  "Korey",
  "Kory",
  "Kraig",
  "Kris",
  "Krista",
  "Kristian",
  "Kristin",
  "Kristina",
  "Kristofer",
  "Kristoffer",
  "Kristopher",
  "Kristy",
  "Krystal",
  "Krystel",
  "Krystina",
  "Kurt",
  "Kurtis",
  "Kyla",
  "Kyle",
  "Kylee",
  "Kyleigh",
  "Kyler",
  "Kylie",
  "Kyra",
  "Lacey",
  "Lacy",
  "Ladarius",
  "Lafayette",
  "Laila",
  "Laisha",
  "Lamar",
  "Lambert",
  "Lamont",
  "Lance",
  "Landen",
  "Lane",
  "Laney",
  "Larissa",
  "Laron",
  "Larry",
  "Larue",
  "Laura",
  "Laurel",
  "Lauren",
  "Laurence",
  "Lauretta",
  "Lauriane",
  "Laurianne",
  "Laurie",
  "Laurine",
  "Laury",
  "Lauryn",
  "Lavada",
  "Lavern",
  "Laverna",
  "Laverne",
  "Lavina",
  "Lavinia",
  "Lavon",
  "Lavonne",
  "Lawrence",
  "Lawson",
  "Layla",
  "Layne",
  "Lazaro",
  "Lea",
  "Leann",
  "Leanna",
  "Leanne",
  "Leatha",
  "Leda",
  "Lee",
  "Leif",
  "Leila",
  "Leilani",
  "Lela",
  "Lelah",
  "Leland",
  "Lelia",
  "Lempi",
  "Lemuel",
  "Lenna",
  "Lennie",
  "Lenny",
  "Lenora",
  "Lenore",
  "Leo",
  "Leola",
  "Leon",
  "Leonard",
  "Leonardo",
  "Leone",
  "Leonel",
  "Leonie",
  "Leonor",
  "Leonora",
  "Leopold",
  "Leopoldo",
  "Leora",
  "Lera",
  "Lesley",
  "Leslie",
  "Lesly",
  "Lessie",
  "Lester",
  "Leta",
  "Letha",
  "Letitia",
  "Levi",
  "Lew",
  "Lewis",
  "Lexi",
  "Lexie",
  "Lexus",
  "Lia",
  "Liam",
  "Liana",
  "Libbie",
  "Libby",
  "Lila",
  "Lilian",
  "Liliana",
  "Liliane",
  "Lilla",
  "Lillian",
  "Lilliana",
  "Lillie",
  "Lilly",
  "Lily",
  "Lilyan",
  "Lina",
  "Lincoln",
  "Linda",
  "Lindsay",
  "Lindsey",
  "Linnea",
  "Linnie",
  "Linwood",
  "Lionel",
  "Lisa",
  "Lisandro",
  "Lisette",
  "Litzy",
  "Liza",
  "Lizeth",
  "Lizzie",
  "Llewellyn",
  "Lloyd",
  "Logan",
  "Lois",
  "Lola",
  "Lolita",
  "Loma",
  "Lon",
  "London",
  "Lonie",
  "Lonnie",
  "Lonny",
  "Lonzo",
  "Lora",
  "Loraine",
  "Loren",
  "Lorena",
  "Lorenz",
  "Lorenza",
  "Lorenzo",
  "Lori",
  "Lorine",
  "Lorna",
  "Lottie",
  "Lou",
  "Louie",
  "Louisa",
  "Lourdes",
  "Louvenia",
  "Lowell",
  "Loy",
  "Loyal",
  "Loyce",
  "Lucas",
  "Luciano",
  "Lucie",
  "Lucienne",
  "Lucile",
  "Lucinda",
  "Lucio",
  "Lucious",
  "Lucius",
  "Lucy",
  "Ludie",
  "Ludwig",
  "Lue",
  "Luella",
  "Luigi",
  "Luis",
  "Luisa",
  "Lukas",
  "Lula",
  "Lulu",
  "Luna",
  "Lupe",
  "Lura",
  "Lurline",
  "Luther",
  "Luz",
  "Lyda",
  "Lydia",
  "Lyla",
  "Lynn",
  "Lyric",
  "Lysanne",
  "Mabel",
  "Mabelle",
  "Mable",
  "Mac",
  "Macey",
  "Maci",
  "Macie",
  "Mack",
  "Mackenzie",
  "Macy",
  "Madaline",
  "Madalyn",
  "Maddison",
  "Madeline",
  "Madelyn",
  "Madelynn",
  "Madge",
  "Madie",
  "Madilyn",
  "Madisen",
  "Madison",
  "Madisyn",
  "Madonna",
  "Madyson",
  "Mae",
  "Maegan",
  "Maeve",
  "Mafalda",
  "Magali",
  "Magdalen",
  "Magdalena",
  "Maggie",
  "Magnolia",
  "Magnus",
  "Maia",
  "Maida",
  "Maiya",
  "Major",
  "Makayla",
  "Makenna",
  "Makenzie",
  "Malachi",
  "Malcolm",
  "Malika",
  "Malinda",
  "Mallie",
  "Mallory",
  "Malvina",
  "Mandy",
  "Manley",
  "Manuel",
  "Manuela",
  "Mara",
  "Marc",
  "Marcel",
  "Marcelina",
  "Marcelino",
  "Marcella",
  "Marcelle",
  "Marcellus",
  "Marcelo",
  "Marcia",
  "Marco",
  "Marcos",
  "Marcus",
  "Margaret",
  "Margarete",
  "Margarett",
  "Margaretta",
  "Margarette",
  "Margarita",
  "Marge",
  "Margie",
  "Margot",
  "Margret",
  "Marguerite",
  "Maria",
  "Mariah",
  "Mariam",
  "Marian",
  "Mariana",
  "Mariane",
  "Marianna",
  "Marianne",
  "Mariano",
  "Maribel",
  "Marie",
  "Mariela",
  "Marielle",
  "Marietta",
  "Marilie",
  "Marilou",
  "Marilyne",
  "Marina",
  "Mario",
  "Marion",
  "Marisa",
  "Marisol",
  "Maritza",
  "Marjolaine",
  "Marjorie",
  "Marjory",
  "Mark",
  "Markus",
  "Marlee",
  "Marlen",
  "Marlene",
  "Marley",
  "Marlin",
  "Marlon",
  "Marques",
  "Marquis",
  "Marquise",
  "Marshall",
  "Marta",
  "Martin",
  "Martina",
  "Martine",
  "Marty",
  "Marvin",
  "Mary",
  "Maryam",
  "Maryjane",
  "Maryse",
  "Mason",
  "Mateo",
  "Mathew",
  "Mathias",
  "Mathilde",
  "Matilda",
  "Matilde",
  "Matt",
  "Matteo",
  "Mattie",
  "Maud",
  "Maude",
  "Maudie",
  "Maureen",
  "Maurice",
  "Mauricio",
  "Maurine",
  "Maverick",
  "Mavis",
  "Max",
  "Maxie",
  "Maxime",
  "Maximilian",
  "Maximillia",
  "Maximillian",
  "Maximo",
  "Maximus",
  "Maxine",
  "Maxwell",
  "May",
  "Maya",
  "Maybell",
  "Maybelle",
  "Maye",
  "Maymie",
  "Maynard",
  "Mayra",
  "Mazie",
  "Mckayla",
  "Mckenna",
  "Mckenzie",
  "Meagan",
  "Meaghan",
  "Meda",
  "Megane",
  "Meggie",
  "Meghan",
  "Mekhi",
  "Melany",
  "Melba",
  "Melisa",
  "Melissa",
  "Mellie",
  "Melody",
  "Melvin",
  "Melvina",
  "Melyna",
  "Melyssa",
  "Mercedes",
  "Meredith",
  "Merl",
  "Merle",
  "Merlin",
  "Merritt",
  "Mertie",
  "Mervin",
  "Meta",
  "Mia",
  "Micaela",
  "Micah",
  "Michael",
  "Michaela",
  "Michale",
  "Micheal",
  "Michel",
  "Michele",
  "Michelle",
  "Miguel",
  "Mikayla",
  "Mike",
  "Mikel",
  "Milan",
  "Miles",
  "Milford",
  "Miller",
  "Millie",
  "Milo",
  "Milton",
  "Mina",
  "Minerva",
  "Minnie",
  "Miracle",
  "Mireille",
  "Mireya",
  "Misael",
  "Missouri",
  "Misty",
  "Mitchel",
  "Mitchell",
  "Mittie",
  "Modesta",
  "Modesto",
  "Mohamed",
  "Mohammad",
  "Mohammed",
  "Moises",
  "Mollie",
  "Molly",
  "Mona",
  "Monica",
  "Monique",
  "Monroe",
  "Monserrat",
  "Monserrate",
  "Montana",
  "Monte",
  "Monty",
  "Morgan",
  "Moriah",
  "Morris",
  "Mortimer",
  "Morton",
  "Mose",
  "Moses",
  "Moshe",
  "Mossie",
  "Mozell",
  "Mozelle",
  "Muhammad",
  "Muriel",
  "Murl",
  "Murphy",
  "Murray",
  "Mustafa",
  "Mya",
  "Myah",
  "Mylene",
  "Myles",
  "Myra",
  "Myriam",
  "Myrl",
  "Myrna",
  "Myron",
  "Myrtice",
  "Myrtie",
  "Myrtis",
  "Myrtle",
  "Nadia",
  "Nakia",
  "Name",
  "Nannie",
  "Naomi",
  "Naomie",
  "Napoleon",
  "Narciso",
  "Nash",
  "Nasir",
  "Nat",
  "Natalia",
  "Natalie",
  "Natasha",
  "Nathan",
  "Nathanael",
  "Nathanial",
  "Nathaniel",
  "Nathen",
  "Nayeli",
  "Neal",
  "Ned",
  "Nedra",
  "Neha",
  "Neil",
  "Nelda",
  "Nella",
  "Nelle",
  "Nellie",
  "Nels",
  "Nelson",
  "Neoma",
  "Nestor",
  "Nettie",
  "Neva",
  "Newell",
  "Newton",
  "Nia",
  "Nicholas",
  "Nicholaus",
  "Nichole",
  "Nick",
  "Nicklaus",
  "Nickolas",
  "Nico",
  "Nicola",
  "Nicolas",
  "Nicole",
  "Nicolette",
  "Nigel",
  "Nikita",
  "Nikki",
  "Nikko",
  "Niko",
  "Nikolas",
  "Nils",
  "Nina",
  "Noah",
  "Noble",
  "Noe",
  "Noel",
  "Noelia",
  "Noemi",
  "Noemie",
  "Noemy",
  "Nola",
  "Nolan",
  "Nona",
  "Nora",
  "Norbert",
  "Norberto",
  "Norene",
  "Norma",
  "Norris",
  "Norval",
  "Norwood",
  "Nova",
  "Novella",
  "Nya",
  "Nyah",
  "Nyasia",
  "Obie",
  "Oceane",
  "Ocie",
  "Octavia",
  "Oda",
  "Odell",
  "Odessa",
  "Odie",
  "Ofelia",
  "Okey",
  "Ola",
  "Olaf",
  "Ole",
  "Olen",
  "Oleta",
  "Olga",
  "Olin",
  "Oliver",
  "Ollie",
  "Oma",
  "Omari",
  "Omer",
  "Ona",
  "Onie",
  "Opal",
  "Ophelia",
  "Ora",
  "Oral",
  "Oran",
  "Oren",
  "Orie",
  "Orin",
  "Orion",
  "Orland",
  "Orlando",
  "Orlo",
  "Orpha",
  "Orrin",
  "Orval",
  "Orville",
  "Osbaldo",
  "Osborne",
  "Oscar",
  "Osvaldo",
  "Oswald",
  "Oswaldo",
  "Otha",
  "Otho",
  "Otilia",
  "Otis",
  "Ottilie",
  "Ottis",
  "Otto",
  "Ova",
  "Owen",
  "Ozella",
  "Pablo",
  "Paige",
  "Palma",
  "Pamela",
  "Pansy",
  "Paolo",
  "Paris",
  "Parker",
  "Pascale",
  "Pasquale",
  "Pat",
  "Patience",
  "Patricia",
  "Patrick",
  "Patsy",
  "Pattie",
  "Paul",
  "Paula",
  "Pauline",
  "Paxton",
  "Payton",
  "Pearl",
  "Pearlie",
  "Pearline",
  "Pedro",
  "Peggie",
  "Penelope",
  "Percival",
  "Percy",
  "Perry",
  "Pete",
  "Peter",
  "Petra",
  "Peyton",
  "Philip",
  "Phoebe",
  "Phyllis",
  "Pierce",
  "Pierre",
  "Pietro",
  "Pink",
  "Pinkie",
  "Piper",
  "Polly",
  "Porter",
  "Precious",
  "Presley",
  "Preston",
  "Price",
  "Prince",
  "Princess",
  "Priscilla",
  "Providenci",
  "Prudence",
  "Queen",
  "Queenie",
  "Quentin",
  "Quincy",
  "Quinn",
  "Quinten",
  "Quinton",
  "Rachael",
  "Rachel",
  "Rachelle",
  "Rae",
  "Raegan",
  "Rafael",
  "Rafaela",
  "Raheem",
  "Rahsaan",
  "Rahul",
  "Raina",
  "Raleigh",
  "Ralph",
  "Ramiro",
  "Ramon",
  "Ramona",
  "Randal",
  "Randall",
  "Randi",
  "Randy",
  "Ransom",
  "Raoul",
  "Raphael",
  "Raphaelle",
  "Raquel",
  "Rashad",
  "Rashawn",
  "Rasheed",
  "Raul",
  "Raven",
  "Ray",
  "Raymond",
  "Raymundo",
  "Reagan",
  "Reanna",
  "Reba",
  "Rebeca",
  "Rebecca",
  "Rebeka",
  "Rebekah",
  "Reece",
  "Reed",
  "Reese",
  "Regan",
  "Reggie",
  "Reginald",
  "Reid",
  "Reilly",
  "Reina",
  "Reinhold",
  "Remington",
  "Rene",
  "Renee",
  "Ressie",
  "Reta",
  "Retha",
  "Retta",
  "Reuben",
  "Reva",
  "Rex",
  "Rey",
  "Reyes",
  "Reymundo",
  "Reyna",
  "Reynold",
  "Rhea",
  "Rhett",
  "Rhianna",
  "Rhiannon",
  "Rhoda",
  "Ricardo",
  "Richard",
  "Richie",
  "Richmond",
  "Rick",
  "Rickey",
  "Rickie",
  "Ricky",
  "Rico",
  "Rigoberto",
  "Riley",
  "Rita",
  "River",
  "Robb",
  "Robbie",
  "Robert",
  "Roberta",
  "Roberto",
  "Robin",
  "Robyn",
  "Rocio",
  "Rocky",
  "Rod",
  "Roderick",
  "Rodger",
  "Rodolfo",
  "Rodrick",
  "Rodrigo",
  "Roel",
  "Rogelio",
  "Roger",
  "Rogers",
  "Rolando",
  "Rollin",
  "Roma",
  "Romaine",
  "Roman",
  "Ron",
  "Ronaldo",
  "Ronny",
  "Roosevelt",
  "Rory",
  "Rosa",
  "Rosalee",
  "Rosalia",
  "Rosalind",
  "Rosalinda",
  "Rosalyn",
  "Rosamond",
  "Rosanna",
  "Rosario",
  "Roscoe",
  "Rose",
  "Rosella",
  "Roselyn",
  "Rosemarie",
  "Rosemary",
  "Rosendo",
  "Rosetta",
  "Rosie",
  "Rosina",
  "Roslyn",
  "Ross",
  "Rossie",
  "Rowan",
  "Rowena",
  "Rowland",
  "Roxane",
  "Roxanne",
  "Roy",
  "Royal",
  "Royce",
  "Rozella",
  "Ruben",
  "Rubie",
  "Ruby",
  "Rubye",
  "Rudolph",
  "Rudy",
  "Rupert",
  "Russ",
  "Russel",
  "Russell",
  "Rusty",
  "Ruth",
  "Ruthe",
  "Ruthie",
  "Ryan",
  "Ryann",
  "Ryder",
  "Rylan",
  "Rylee",
  "Ryleigh",
  "Ryley",
  "Sabina",
  "Sabrina",
  "Sabryna",
  "Sadie",
  "Sadye",
  "Sage",
  "Saige",
  "Sallie",
  "Sally",
  "Salma",
  "Salvador",
  "Salvatore",
  "Sam",
  "Samanta",
  "Samantha",
  "Samara",
  "Samir",
  "Sammie",
  "Sammy",
  "Samson",
  "Sandra",
  "Sandrine",
  "Sandy",
  "Sanford",
  "Santa",
  "Santiago",
  "Santina",
  "Santino",
  "Santos",
  "Sarah",
  "Sarai",
  "Sarina",
  "Sasha",
  "Saul",
  "Savanah",
  "Savanna",
  "Savannah",
  "Savion",
  "Scarlett",
  "Schuyler",
  "Scot",
  "Scottie",
  "Scotty",
  "Seamus",
  "Sean",
  "Sebastian",
  "Sedrick",
  "Selena",
  "Selina",
  "Selmer",
  "Serena",
  "Serenity",
  "Seth",
  "Shad",
  "Shaina",
  "Shakira",
  "Shana",
  "Shane",
  "Shanel",
  "Shanelle",
  "Shania",
  "Shanie",
  "Shaniya",
  "Shanna",
  "Shannon",
  "Shanny",
  "Shanon",
  "Shany",
  "Sharon",
  "Shaun",
  "Shawn",
  "Shawna",
  "Shaylee",
  "Shayna",
  "Shayne",
  "Shea",
  "Sheila",
  "Sheldon",
  "Shemar",
  "Sheridan",
  "Sherman",
  "Sherwood",
  "Shirley",
  "Shyann",
  "Shyanne",
  "Sibyl",
  "Sid",
  "Sidney",
  "Sienna",
  "Sierra",
  "Sigmund",
  "Sigrid",
  "Sigurd",
  "Silas",
  "Sim",
  "Simeon",
  "Simone",
  "Sincere",
  "Sister",
  "Skye",
  "Skyla",
  "Skylar",
  "Sofia",
  "Soledad",
  "Solon",
  "Sonia",
  "Sonny",
  "Sonya",
  "Sophia",
  "Sophie",
  "Spencer",
  "Stacey",
  "Stacy",
  "Stan",
  "Stanford",
  "Stanley",
  "Stanton",
  "Stefan",
  "Stefanie",
  "Stella",
  "Stephan",
  "Stephania",
  "Stephanie",
  "Stephany",
  "Stephen",
  "Stephon",
  "Sterling",
  "Steve",
  "Stevie",
  "Stewart",
  "Stone",
  "Stuart",
  "Summer",
  "Sunny",
  "Susan",
  "Susana",
  "Susanna",
  "Susie",
  "Suzanne",
  "Sven",
  "Syble",
  "Sydnee",
  "Sydney",
  "Sydni",
  "Sydnie",
  "Sylvan",
  "Sylvester",
  "Sylvia",
  "Tabitha",
  "Tad",
  "Talia",
  "Talon",
  "Tamara",
  "Tamia",
  "Tania",
  "Tanner",
  "Tanya",
  "Tara",
  "Taryn",
  "Tate",
  "Tatum",
  "Tatyana",
  "Taurean",
  "Tavares",
  "Taya",
  "Taylor",
  "Teagan",
  "Ted",
  "Telly",
  "Terence",
  "Teresa",
  "Terrance",
  "Terrell",
  "Terrence",
  "Terrill",
  "Terry",
  "Tess",
  "Tessie",
  "Tevin",
  "Thad",
  "Thaddeus",
  "Thalia",
  "Thea",
  "Thelma",
  "Theo",
  "Theodora",
  "Theodore",
  "Theresa",
  "Therese",
  "Theresia",
  "Theron",
  "Thomas",
  "Thora",
  "Thurman",
  "Tia",
  "Tiana",
  "Tianna",
  "Tiara",
  "Tierra",
  "Tiffany",
  "Tillman",
  "Timmothy",
  "Timmy",
  "Timothy",
  "Tina",
  "Tito",
  "Titus",
  "Tobin",
  "Toby",
  "Tod",
  "Tom",
  "Tomas",
  "Tomasa",
  "Tommie",
  "Toney",
  "Toni",
  "Tony",
  "Torey",
  "Torrance",
  "Torrey",
  "Toy",
  "Trace",
  "Tracey",
  "Tracy",
  "Travis",
  "Travon",
  "Tre",
  "Tremaine",
  "Tremayne",
  "Trent",
  "Trenton",
  "Tressa",
  "Tressie",
  "Treva",
  "Trever",
  "Trevion",
  "Trevor",
  "Trey",
  "Trinity",
  "Trisha",
  "Tristian",
  "Tristin",
  "Triston",
  "Troy",
  "Trudie",
  "Trycia",
  "Trystan",
  "Turner",
  "Twila",
  "Tyler",
  "Tyra",
  "Tyree",
  "Tyreek",
  "Tyrel",
  "Tyrell",
  "Tyrese",
  "Tyrique",
  "Tyshawn",
  "Tyson",
  "Ubaldo",
  "Ulices",
  "Ulises",
  "Una",
  "Unique",
  "Urban",
  "Uriah",
  "Uriel",
  "Ursula",
  "Vada",
  "Valentin",
  "Valentina",
  "Valentine",
  "Valerie",
  "Vallie",
  "Van",
  "Vance",
  "Vanessa",
  "Vaughn",
  "Veda",
  "Velda",
  "Vella",
  "Velma",
  "Velva",
  "Vena",
  "Verda",
  "Verdie",
  "Vergie",
  "Verla",
  "Verlie",
  "Vern",
  "Verna",
  "Verner",
  "Vernice",
  "Vernie",
  "Vernon",
  "Verona",
  "Veronica",
  "Vesta",
  "Vicenta",
  "Vicente",
  "Vickie",
  "Vicky",
  "Victor",
  "Victoria",
  "Vida",
  "Vidal",
  "Vilma",
  "Vince",
  "Vincent",
  "Vincenza",
  "Vincenzo",
  "Vinnie",
  "Viola",
  "Violet",
  "Violette",
  "Virgie",
  "Virgil",
  "Virginia",
  "Virginie",
  "Vita",
  "Vito",
  "Viva",
  "Vivian",
  "Viviane",
  "Vivianne",
  "Vivien",
  "Vivienne",
  "Vladimir",
  "Wade",
  "Waino",
  "Waldo",
  "Walker",
  "Wallace",
  "Walter",
  "Walton",
  "Wanda",
  "Ward",
  "Warren",
  "Watson",
  "Wava",
  "Waylon",
  "Wayne",
  "Webster",
  "Weldon",
  "Wellington",
  "Wendell",
  "Wendy",
  "Werner",
  "Westley",
  "Weston",
  "Whitney",
  "Wilber",
  "Wilbert",
  "Wilburn",
  "Wiley",
  "Wilford",
  "Wilfred",
  "Wilfredo",
  "Wilfrid",
  "Wilhelm",
  "Wilhelmine",
  "Will",
  "Willa",
  "Willard",
  "William",
  "Willie",
  "Willis",
  "Willow",
  "Willy",
  "Wilma",
  "Wilmer",
  "Wilson",
  "Wilton",
  "Winfield",
  "Winifred",
  "Winnifred",
  "Winona",
  "Winston",
  "Woodrow",
  "Wyatt",
  "Wyman",
  "Xander",
  "Xavier",
  "Xzavier",
  "Yadira",
  "Yasmeen",
  "Yasmin",
  "Yasmine",
  "Yazmin",
  "Yesenia",
  "Yessenia",
  "Yolanda",
  "Yoshiko",
  "Yvette",
  "Yvonne",
  "Zachariah",
  "Zachary",
  "Zachery",
  "Zack",
  "Zackary",
  "Zackery",
  "Zakary",
  "Zander",
  "Zane",
  "Zaria",
  "Zechariah",
  "Zelda",
  "Zella",
  "Zelma",
  "Zena",
  "Zetta",
  "Zion",
  "Zita",
  "Zoe",
  "Zoey",
  "Zoie",
  "Zoila",
  "Zola",
  "Zora",
  "Zula"
];

},{}],403:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.title = require("./title");
name.name = require("./name");

},{"./first_name":402,"./last_name":404,"./name":405,"./prefix":406,"./suffix":407,"./title":408}],404:[function(require,module,exports){
module["exports"] = [
  "Abbott",
  "Abernathy",
  "Abshire",
  "Adams",
  "Altenwerth",
  "Anderson",
  "Ankunding",
  "Armstrong",
  "Auer",
  "Aufderhar",
  "Bahringer",
  "Bailey",
  "Balistreri",
  "Barrows",
  "Bartell",
  "Bartoletti",
  "Barton",
  "Bashirian",
  "Batz",
  "Bauch",
  "Baumbach",
  "Bayer",
  "Beahan",
  "Beatty",
  "Bechtelar",
  "Becker",
  "Bednar",
  "Beer",
  "Beier",
  "Berge",
  "Bergnaum",
  "Bergstrom",
  "Bernhard",
  "Bernier",
  "Bins",
  "Blanda",
  "Blick",
  "Block",
  "Bode",
  "Boehm",
  "Bogan",
  "Bogisich",
  "Borer",
  "Bosco",
  "Botsford",
  "Boyer",
  "Boyle",
  "Bradtke",
  "Brakus",
  "Braun",
  "Breitenberg",
  "Brekke",
  "Brown",
  "Bruen",
  "Buckridge",
  "Carroll",
  "Carter",
  "Cartwright",
  "Casper",
  "Cassin",
  "Champlin",
  "Christiansen",
  "Cole",
  "Collier",
  "Collins",
  "Conn",
  "Connelly",
  "Conroy",
  "Considine",
  "Corkery",
  "Cormier",
  "Corwin",
  "Cremin",
  "Crist",
  "Crona",
  "Cronin",
  "Crooks",
  "Cruickshank",
  "Cummerata",
  "Cummings",
  "Dach",
  "D'Amore",
  "Daniel",
  "Dare",
  "Daugherty",
  "Davis",
  "Deckow",
  "Denesik",
  "Dibbert",
  "Dickens",
  "Dicki",
  "Dickinson",
  "Dietrich",
  "Donnelly",
  "Dooley",
  "Douglas",
  "Doyle",
  "DuBuque",
  "Durgan",
  "Ebert",
  "Effertz",
  "Eichmann",
  "Emard",
  "Emmerich",
  "Erdman",
  "Ernser",
  "Fadel",
  "Fahey",
  "Farrell",
  "Fay",
  "Feeney",
  "Feest",
  "Feil",
  "Ferry",
  "Fisher",
  "Flatley",
  "Frami",
  "Franecki",
  "Friesen",
  "Fritsch",
  "Funk",
  "Gaylord",
  "Gerhold",
  "Gerlach",
  "Gibson",
  "Gislason",
  "Gleason",
  "Gleichner",
  "Glover",
  "Goldner",
  "Goodwin",
  "Gorczany",
  "Gottlieb",
  "Goyette",
  "Grady",
  "Graham",
  "Grant",
  "Green",
  "Greenfelder",
  "Greenholt",
  "Grimes",
  "Gulgowski",
  "Gusikowski",
  "Gutkowski",
  "Gutmann",
  "Haag",
  "Hackett",
  "Hagenes",
  "Hahn",
  "Haley",
  "Halvorson",
  "Hamill",
  "Hammes",
  "Hand",
  "Hane",
  "Hansen",
  "Harber",
  "Harris",
  "Hartmann",
  "Harvey",
  "Hauck",
  "Hayes",
  "Heaney",
  "Heathcote",
  "Hegmann",
  "Heidenreich",
  "Heller",
  "Herman",
  "Hermann",
  "Hermiston",
  "Herzog",
  "Hessel",
  "Hettinger",
  "Hickle",
  "Hilll",
  "Hills",
  "Hilpert",
  "Hintz",
  "Hirthe",
  "Hodkiewicz",
  "Hoeger",
  "Homenick",
  "Hoppe",
  "Howe",
  "Howell",
  "Hudson",
  "Huel",
  "Huels",
  "Hyatt",
  "Jacobi",
  "Jacobs",
  "Jacobson",
  "Jakubowski",
  "Jaskolski",
  "Jast",
  "Jenkins",
  "Jerde",
  "Johns",
  "Johnson",
  "Johnston",
  "Jones",
  "Kassulke",
  "Kautzer",
  "Keebler",
  "Keeling",
  "Kemmer",
  "Kerluke",
  "Kertzmann",
  "Kessler",
  "Kiehn",
  "Kihn",
  "Kilback",
  "King",
  "Kirlin",
  "Klein",
  "Kling",
  "Klocko",
  "Koch",
  "Koelpin",
  "Koepp",
  "Kohler",
  "Konopelski",
  "Koss",
  "Kovacek",
  "Kozey",
  "Krajcik",
  "Kreiger",
  "Kris",
  "Kshlerin",
  "Kub",
  "Kuhic",
  "Kuhlman",
  "Kuhn",
  "Kulas",
  "Kunde",
  "Kunze",
  "Kuphal",
  "Kutch",
  "Kuvalis",
  "Labadie",
  "Lakin",
  "Lang",
  "Langosh",
  "Langworth",
  "Larkin",
  "Larson",
  "Leannon",
  "Lebsack",
  "Ledner",
  "Leffler",
  "Legros",
  "Lehner",
  "Lemke",
  "Lesch",
  "Leuschke",
  "Lind",
  "Lindgren",
  "Littel",
  "Little",
  "Lockman",
  "Lowe",
  "Lubowitz",
  "Lueilwitz",
  "Luettgen",
  "Lynch",
  "Macejkovic",
  "MacGyver",
  "Maggio",
  "Mann",
  "Mante",
  "Marks",
  "Marquardt",
  "Marvin",
  "Mayer",
  "Mayert",
  "McClure",
  "McCullough",
  "McDermott",
  "McGlynn",
  "McKenzie",
  "McLaughlin",
  "Medhurst",
  "Mertz",
  "Metz",
  "Miller",
  "Mills",
  "Mitchell",
  "Moen",
  "Mohr",
  "Monahan",
  "Moore",
  "Morar",
  "Morissette",
  "Mosciski",
  "Mraz",
  "Mueller",
  "Muller",
  "Murazik",
  "Murphy",
  "Murray",
  "Nader",
  "Nicolas",
  "Nienow",
  "Nikolaus",
  "Nitzsche",
  "Nolan",
  "Oberbrunner",
  "O'Connell",
  "O'Conner",
  "O'Hara",
  "O'Keefe",
  "O'Kon",
  "Okuneva",
  "Olson",
  "Ondricka",
  "O'Reilly",
  "Orn",
  "Ortiz",
  "Osinski",
  "Pacocha",
  "Padberg",
  "Pagac",
  "Parisian",
  "Parker",
  "Paucek",
  "Pfannerstill",
  "Pfeffer",
  "Pollich",
  "Pouros",
  "Powlowski",
  "Predovic",
  "Price",
  "Prohaska",
  "Prosacco",
  "Purdy",
  "Quigley",
  "Quitzon",
  "Rath",
  "Ratke",
  "Rau",
  "Raynor",
  "Reichel",
  "Reichert",
  "Reilly",
  "Reinger",
  "Rempel",
  "Renner",
  "Reynolds",
  "Rice",
  "Rippin",
  "Ritchie",
  "Robel",
  "Roberts",
  "Rodriguez",
  "Rogahn",
  "Rohan",
  "Rolfson",
  "Romaguera",
  "Roob",
  "Rosenbaum",
  "Rowe",
  "Ruecker",
  "Runolfsdottir",
  "Runolfsson",
  "Runte",
  "Russel",
  "Rutherford",
  "Ryan",
  "Sanford",
  "Satterfield",
  "Sauer",
  "Sawayn",
  "Schaden",
  "Schaefer",
  "Schamberger",
  "Schiller",
  "Schimmel",
  "Schinner",
  "Schmeler",
  "Schmidt",
  "Schmitt",
  "Schneider",
  "Schoen",
  "Schowalter",
  "Schroeder",
  "Schulist",
  "Schultz",
  "Schumm",
  "Schuppe",
  "Schuster",
  "Senger",
  "Shanahan",
  "Shields",
  "Simonis",
  "Sipes",
  "Skiles",
  "Smith",
  "Smitham",
  "Spencer",
  "Spinka",
  "Sporer",
  "Stamm",
  "Stanton",
  "Stark",
  "Stehr",
  "Steuber",
  "Stiedemann",
  "Stokes",
  "Stoltenberg",
  "Stracke",
  "Streich",
  "Stroman",
  "Strosin",
  "Swaniawski",
  "Swift",
  "Terry",
  "Thiel",
  "Thompson",
  "Tillman",
  "Torp",
  "Torphy",
  "Towne",
  "Toy",
  "Trantow",
  "Tremblay",
  "Treutel",
  "Tromp",
  "Turcotte",
  "Turner",
  "Ullrich",
  "Upton",
  "Vandervort",
  "Veum",
  "Volkman",
  "Von",
  "VonRueden",
  "Waelchi",
  "Walker",
  "Walsh",
  "Walter",
  "Ward",
  "Waters",
  "Watsica",
  "Weber",
  "Wehner",
  "Weimann",
  "Weissnat",
  "Welch",
  "West",
  "White",
  "Wiegand",
  "Wilderman",
  "Wilkinson",
  "Will",
  "Williamson",
  "Willms",
  "Windler",
  "Wintheiser",
  "Wisoky",
  "Wisozk",
  "Witting",
  "Wiza",
  "Wolf",
  "Wolff",
  "Wuckert",
  "Wunsch",
  "Wyman",
  "Yost",
  "Yundt",
  "Zboncak",
  "Zemlak",
  "Ziemann",
  "Zieme",
  "Zulauf"
];

},{}],405:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name} #{suffix}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],406:[function(require,module,exports){
module["exports"] = [
  "Mr.",
  "Mrs.",
  "Ms.",
  "Miss",
  "Dr."
];

},{}],407:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Sr.",
  "I",
  "II",
  "III",
  "IV",
  "V",
  "MD",
  "DDS",
  "PhD",
  "DVM"
];

},{}],408:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Lead",
    "Senior",
    "Direct",
    "Corporate",
    "Dynamic",
    "Future",
    "Product",
    "National",
    "Regional",
    "District",
    "Central",
    "Global",
    "Customer",
    "Investor",
    "Dynamic",
    "International",
    "Legacy",
    "Forward",
    "Internal",
    "Human",
    "Chief",
    "Principal"
  ],
  "level": [
    "Solutions",
    "Program",
    "Brand",
    "Security",
    "Research",
    "Marketing",
    "Directives",
    "Implementation",
    "Integration",
    "Functionality",
    "Response",
    "Paradigm",
    "Tactics",
    "Identity",
    "Markets",
    "Group",
    "Division",
    "Applications",
    "Optimization",
    "Operations",
    "Infrastructure",
    "Intranet",
    "Communications",
    "Web",
    "Branding",
    "Quality",
    "Assurance",
    "Mobility",
    "Accounts",
    "Data",
    "Creative",
    "Configuration",
    "Accountability",
    "Interactions",
    "Factors",
    "Usability",
    "Metrics"
  ],
  "job": [
    "Supervisor",
    "Associate",
    "Executive",
    "Liaison",
    "Officer",
    "Manager",
    "Engineer",
    "Specialist",
    "Director",
    "Coordinator",
    "Administrator",
    "Architect",
    "Analyst",
    "Designer",
    "Planner",
    "Orchestrator",
    "Technician",
    "Developer",
    "Producer",
    "Consultant",
    "Assistant",
    "Facilitator",
    "Agent",
    "Representative",
    "Strategist"
  ]
};

},{}],409:[function(require,module,exports){
module["exports"] = [
  "###-###-####",
  "(###) ###-####",
  "1-###-###-####",
  "###.###.####",
  "###-###-####",
  "(###) ###-####",
  "1-###-###-####",
  "###.###.####",
  "###-###-#### x###",
  "(###) ###-#### x###",
  "1-###-###-#### x###",
  "###.###.#### x###",
  "###-###-#### x####",
  "(###) ###-#### x####",
  "1-###-###-#### x####",
  "###.###.#### x####",
  "###-###-#### x#####",
  "(###) ###-#### x#####",
  "1-###-###-#### x#####",
  "###.###.#### x#####"
];

},{}],410:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":409,"dup":197}],411:[function(require,module,exports){
var system = {};
module['exports'] = system;
system.mimeTypes = require("./mimeTypes");
},{"./mimeTypes":412}],412:[function(require,module,exports){
/*

The MIT License (MIT)

Copyright (c) 2014 Jonathan Ong me@jongleberry.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Definitions from mime-db v1.21.0
For updates check: https://github.com/jshttp/mime-db/blob/master/db.json

*/

module['exports'] = {
  "application/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "application/3gpdash-qoe-report+xml": {
    "source": "iana"
  },
  "application/3gpp-ims+xml": {
    "source": "iana"
  },
  "application/a2l": {
    "source": "iana"
  },
  "application/activemessage": {
    "source": "iana"
  },
  "application/alto-costmap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-costmapfilter+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-directory+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointcost+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointcostparams+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointprop+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointpropparams+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-error+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-networkmap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-networkmapfilter+json": {
    "source": "iana",
    "compressible": true
  },
  "application/aml": {
    "source": "iana"
  },
  "application/andrew-inset": {
    "source": "iana",
    "extensions": ["ez"]
  },
  "application/applefile": {
    "source": "iana"
  },
  "application/applixware": {
    "source": "apache",
    "extensions": ["aw"]
  },
  "application/atf": {
    "source": "iana"
  },
  "application/atfx": {
    "source": "iana"
  },
  "application/atom+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["atom"]
  },
  "application/atomcat+xml": {
    "source": "iana",
    "extensions": ["atomcat"]
  },
  "application/atomdeleted+xml": {
    "source": "iana"
  },
  "application/atomicmail": {
    "source": "iana"
  },
  "application/atomsvc+xml": {
    "source": "iana",
    "extensions": ["atomsvc"]
  },
  "application/atxml": {
    "source": "iana"
  },
  "application/auth-policy+xml": {
    "source": "iana"
  },
  "application/bacnet-xdd+zip": {
    "source": "iana"
  },
  "application/batch-smtp": {
    "source": "iana"
  },
  "application/bdoc": {
    "compressible": false,
    "extensions": ["bdoc"]
  },
  "application/beep+xml": {
    "source": "iana"
  },
  "application/calendar+json": {
    "source": "iana",
    "compressible": true
  },
  "application/calendar+xml": {
    "source": "iana"
  },
  "application/call-completion": {
    "source": "iana"
  },
  "application/cals-1840": {
    "source": "iana"
  },
  "application/cbor": {
    "source": "iana"
  },
  "application/ccmp+xml": {
    "source": "iana"
  },
  "application/ccxml+xml": {
    "source": "iana",
    "extensions": ["ccxml"]
  },
  "application/cdfx+xml": {
    "source": "iana"
  },
  "application/cdmi-capability": {
    "source": "iana",
    "extensions": ["cdmia"]
  },
  "application/cdmi-container": {
    "source": "iana",
    "extensions": ["cdmic"]
  },
  "application/cdmi-domain": {
    "source": "iana",
    "extensions": ["cdmid"]
  },
  "application/cdmi-object": {
    "source": "iana",
    "extensions": ["cdmio"]
  },
  "application/cdmi-queue": {
    "source": "iana",
    "extensions": ["cdmiq"]
  },
  "application/cdni": {
    "source": "iana"
  },
  "application/cea": {
    "source": "iana"
  },
  "application/cea-2018+xml": {
    "source": "iana"
  },
  "application/cellml+xml": {
    "source": "iana"
  },
  "application/cfw": {
    "source": "iana"
  },
  "application/cms": {
    "source": "iana"
  },
  "application/cnrp+xml": {
    "source": "iana"
  },
  "application/coap-group+json": {
    "source": "iana",
    "compressible": true
  },
  "application/commonground": {
    "source": "iana"
  },
  "application/conference-info+xml": {
    "source": "iana"
  },
  "application/cpl+xml": {
    "source": "iana"
  },
  "application/csrattrs": {
    "source": "iana"
  },
  "application/csta+xml": {
    "source": "iana"
  },
  "application/cstadata+xml": {
    "source": "iana"
  },
  "application/csvm+json": {
    "source": "iana",
    "compressible": true
  },
  "application/cu-seeme": {
    "source": "apache",
    "extensions": ["cu"]
  },
  "application/cybercash": {
    "source": "iana"
  },
  "application/dart": {
    "compressible": true
  },
  "application/dash+xml": {
    "source": "iana",
    "extensions": ["mdp"]
  },
  "application/dashdelta": {
    "source": "iana"
  },
  "application/davmount+xml": {
    "source": "iana",
    "extensions": ["davmount"]
  },
  "application/dca-rft": {
    "source": "iana"
  },
  "application/dcd": {
    "source": "iana"
  },
  "application/dec-dx": {
    "source": "iana"
  },
  "application/dialog-info+xml": {
    "source": "iana"
  },
  "application/dicom": {
    "source": "iana"
  },
  "application/dii": {
    "source": "iana"
  },
  "application/dit": {
    "source": "iana"
  },
  "application/dns": {
    "source": "iana"
  },
  "application/docbook+xml": {
    "source": "apache",
    "extensions": ["dbk"]
  },
  "application/dskpp+xml": {
    "source": "iana"
  },
  "application/dssc+der": {
    "source": "iana",
    "extensions": ["dssc"]
  },
  "application/dssc+xml": {
    "source": "iana",
    "extensions": ["xdssc"]
  },
  "application/dvcs": {
    "source": "iana"
  },
  "application/ecmascript": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ecma"]
  },
  "application/edi-consent": {
    "source": "iana"
  },
  "application/edi-x12": {
    "source": "iana",
    "compressible": false
  },
  "application/edifact": {
    "source": "iana",
    "compressible": false
  },
  "application/emergencycalldata.comment+xml": {
    "source": "iana"
  },
  "application/emergencycalldata.deviceinfo+xml": {
    "source": "iana"
  },
  "application/emergencycalldata.providerinfo+xml": {
    "source": "iana"
  },
  "application/emergencycalldata.serviceinfo+xml": {
    "source": "iana"
  },
  "application/emergencycalldata.subscriberinfo+xml": {
    "source": "iana"
  },
  "application/emma+xml": {
    "source": "iana",
    "extensions": ["emma"]
  },
  "application/emotionml+xml": {
    "source": "iana"
  },
  "application/encaprtp": {
    "source": "iana"
  },
  "application/epp+xml": {
    "source": "iana"
  },
  "application/epub+zip": {
    "source": "iana",
    "extensions": ["epub"]
  },
  "application/eshop": {
    "source": "iana"
  },
  "application/exi": {
    "source": "iana",
    "extensions": ["exi"]
  },
  "application/fastinfoset": {
    "source": "iana"
  },
  "application/fastsoap": {
    "source": "iana"
  },
  "application/fdt+xml": {
    "source": "iana"
  },
  "application/fits": {
    "source": "iana"
  },
  "application/font-sfnt": {
    "source": "iana"
  },
  "application/font-tdpfr": {
    "source": "iana",
    "extensions": ["pfr"]
  },
  "application/font-woff": {
    "source": "iana",
    "compressible": false,
    "extensions": ["woff"]
  },
  "application/font-woff2": {
    "compressible": false,
    "extensions": ["woff2"]
  },
  "application/framework-attributes+xml": {
    "source": "iana"
  },
  "application/gml+xml": {
    "source": "apache",
    "extensions": ["gml"]
  },
  "application/gpx+xml": {
    "source": "apache",
    "extensions": ["gpx"]
  },
  "application/gxf": {
    "source": "apache",
    "extensions": ["gxf"]
  },
  "application/gzip": {
    "source": "iana",
    "compressible": false
  },
  "application/h224": {
    "source": "iana"
  },
  "application/held+xml": {
    "source": "iana"
  },
  "application/http": {
    "source": "iana"
  },
  "application/hyperstudio": {
    "source": "iana",
    "extensions": ["stk"]
  },
  "application/ibe-key-request+xml": {
    "source": "iana"
  },
  "application/ibe-pkg-reply+xml": {
    "source": "iana"
  },
  "application/ibe-pp-data": {
    "source": "iana"
  },
  "application/iges": {
    "source": "iana"
  },
  "application/im-iscomposing+xml": {
    "source": "iana"
  },
  "application/index": {
    "source": "iana"
  },
  "application/index.cmd": {
    "source": "iana"
  },
  "application/index.obj": {
    "source": "iana"
  },
  "application/index.response": {
    "source": "iana"
  },
  "application/index.vnd": {
    "source": "iana"
  },
  "application/inkml+xml": {
    "source": "iana",
    "extensions": ["ink","inkml"]
  },
  "application/iotp": {
    "source": "iana"
  },
  "application/ipfix": {
    "source": "iana",
    "extensions": ["ipfix"]
  },
  "application/ipp": {
    "source": "iana"
  },
  "application/isup": {
    "source": "iana"
  },
  "application/its+xml": {
    "source": "iana"
  },
  "application/java-archive": {
    "source": "apache",
    "compressible": false,
    "extensions": ["jar","war","ear"]
  },
  "application/java-serialized-object": {
    "source": "apache",
    "compressible": false,
    "extensions": ["ser"]
  },
  "application/java-vm": {
    "source": "apache",
    "compressible": false,
    "extensions": ["class"]
  },
  "application/javascript": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["js"]
  },
  "application/jose": {
    "source": "iana"
  },
  "application/jose+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jrd+json": {
    "source": "iana",
    "compressible": true
  },
  "application/json": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["json","map"]
  },
  "application/json-patch+json": {
    "source": "iana",
    "compressible": true
  },
  "application/json-seq": {
    "source": "iana"
  },
  "application/json5": {
    "extensions": ["json5"]
  },
  "application/jsonml+json": {
    "source": "apache",
    "compressible": true,
    "extensions": ["jsonml"]
  },
  "application/jwk+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jwk-set+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jwt": {
    "source": "iana"
  },
  "application/kpml-request+xml": {
    "source": "iana"
  },
  "application/kpml-response+xml": {
    "source": "iana"
  },
  "application/ld+json": {
    "source": "iana",
    "compressible": true,
    "extensions": ["jsonld"]
  },
  "application/link-format": {
    "source": "iana"
  },
  "application/load-control+xml": {
    "source": "iana"
  },
  "application/lost+xml": {
    "source": "iana",
    "extensions": ["lostxml"]
  },
  "application/lostsync+xml": {
    "source": "iana"
  },
  "application/lxf": {
    "source": "iana"
  },
  "application/mac-binhex40": {
    "source": "iana",
    "extensions": ["hqx"]
  },
  "application/mac-compactpro": {
    "source": "apache",
    "extensions": ["cpt"]
  },
  "application/macwriteii": {
    "source": "iana"
  },
  "application/mads+xml": {
    "source": "iana",
    "extensions": ["mads"]
  },
  "application/manifest+json": {
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["webmanifest"]
  },
  "application/marc": {
    "source": "iana",
    "extensions": ["mrc"]
  },
  "application/marcxml+xml": {
    "source": "iana",
    "extensions": ["mrcx"]
  },
  "application/mathematica": {
    "source": "iana",
    "extensions": ["ma","nb","mb"]
  },
  "application/mathml+xml": {
    "source": "iana",
    "extensions": ["mathml"]
  },
  "application/mathml-content+xml": {
    "source": "iana"
  },
  "application/mathml-presentation+xml": {
    "source": "iana"
  },
  "application/mbms-associated-procedure-description+xml": {
    "source": "iana"
  },
  "application/mbms-deregister+xml": {
    "source": "iana"
  },
  "application/mbms-envelope+xml": {
    "source": "iana"
  },
  "application/mbms-msk+xml": {
    "source": "iana"
  },
  "application/mbms-msk-response+xml": {
    "source": "iana"
  },
  "application/mbms-protection-description+xml": {
    "source": "iana"
  },
  "application/mbms-reception-report+xml": {
    "source": "iana"
  },
  "application/mbms-register+xml": {
    "source": "iana"
  },
  "application/mbms-register-response+xml": {
    "source": "iana"
  },
  "application/mbms-schedule+xml": {
    "source": "iana"
  },
  "application/mbms-user-service-description+xml": {
    "source": "iana"
  },
  "application/mbox": {
    "source": "iana",
    "extensions": ["mbox"]
  },
  "application/media-policy-dataset+xml": {
    "source": "iana"
  },
  "application/media_control+xml": {
    "source": "iana"
  },
  "application/mediaservercontrol+xml": {
    "source": "iana",
    "extensions": ["mscml"]
  },
  "application/merge-patch+json": {
    "source": "iana",
    "compressible": true
  },
  "application/metalink+xml": {
    "source": "apache",
    "extensions": ["metalink"]
  },
  "application/metalink4+xml": {
    "source": "iana",
    "extensions": ["meta4"]
  },
  "application/mets+xml": {
    "source": "iana",
    "extensions": ["mets"]
  },
  "application/mf4": {
    "source": "iana"
  },
  "application/mikey": {
    "source": "iana"
  },
  "application/mods+xml": {
    "source": "iana",
    "extensions": ["mods"]
  },
  "application/moss-keys": {
    "source": "iana"
  },
  "application/moss-signature": {
    "source": "iana"
  },
  "application/mosskey-data": {
    "source": "iana"
  },
  "application/mosskey-request": {
    "source": "iana"
  },
  "application/mp21": {
    "source": "iana",
    "extensions": ["m21","mp21"]
  },
  "application/mp4": {
    "source": "iana",
    "extensions": ["mp4s","m4p"]
  },
  "application/mpeg4-generic": {
    "source": "iana"
  },
  "application/mpeg4-iod": {
    "source": "iana"
  },
  "application/mpeg4-iod-xmt": {
    "source": "iana"
  },
  "application/mrb-consumer+xml": {
    "source": "iana"
  },
  "application/mrb-publish+xml": {
    "source": "iana"
  },
  "application/msc-ivr+xml": {
    "source": "iana"
  },
  "application/msc-mixer+xml": {
    "source": "iana"
  },
  "application/msword": {
    "source": "iana",
    "compressible": false,
    "extensions": ["doc","dot"]
  },
  "application/mxf": {
    "source": "iana",
    "extensions": ["mxf"]
  },
  "application/nasdata": {
    "source": "iana"
  },
  "application/news-checkgroups": {
    "source": "iana"
  },
  "application/news-groupinfo": {
    "source": "iana"
  },
  "application/news-transmission": {
    "source": "iana"
  },
  "application/nlsml+xml": {
    "source": "iana"
  },
  "application/nss": {
    "source": "iana"
  },
  "application/ocsp-request": {
    "source": "iana"
  },
  "application/ocsp-response": {
    "source": "iana"
  },
  "application/octet-stream": {
    "source": "iana",
    "compressible": false,
    "extensions": ["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]
  },
  "application/oda": {
    "source": "iana",
    "extensions": ["oda"]
  },
  "application/odx": {
    "source": "iana"
  },
  "application/oebps-package+xml": {
    "source": "iana",
    "extensions": ["opf"]
  },
  "application/ogg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ogx"]
  },
  "application/omdoc+xml": {
    "source": "apache",
    "extensions": ["omdoc"]
  },
  "application/onenote": {
    "source": "apache",
    "extensions": ["onetoc","onetoc2","onetmp","onepkg"]
  },
  "application/oxps": {
    "source": "iana",
    "extensions": ["oxps"]
  },
  "application/p2p-overlay+xml": {
    "source": "iana"
  },
  "application/parityfec": {
    "source": "iana"
  },
  "application/patch-ops-error+xml": {
    "source": "iana",
    "extensions": ["xer"]
  },
  "application/pdf": {
    "source": "iana",
    "compressible": false,
    "extensions": ["pdf"]
  },
  "application/pdx": {
    "source": "iana"
  },
  "application/pgp-encrypted": {
    "source": "iana",
    "compressible": false,
    "extensions": ["pgp"]
  },
  "application/pgp-keys": {
    "source": "iana"
  },
  "application/pgp-signature": {
    "source": "iana",
    "extensions": ["asc","sig"]
  },
  "application/pics-rules": {
    "source": "apache",
    "extensions": ["prf"]
  },
  "application/pidf+xml": {
    "source": "iana"
  },
  "application/pidf-diff+xml": {
    "source": "iana"
  },
  "application/pkcs10": {
    "source": "iana",
    "extensions": ["p10"]
  },
  "application/pkcs12": {
    "source": "iana"
  },
  "application/pkcs7-mime": {
    "source": "iana",
    "extensions": ["p7m","p7c"]
  },
  "application/pkcs7-signature": {
    "source": "iana",
    "extensions": ["p7s"]
  },
  "application/pkcs8": {
    "source": "iana",
    "extensions": ["p8"]
  },
  "application/pkix-attr-cert": {
    "source": "iana",
    "extensions": ["ac"]
  },
  "application/pkix-cert": {
    "source": "iana",
    "extensions": ["cer"]
  },
  "application/pkix-crl": {
    "source": "iana",
    "extensions": ["crl"]
  },
  "application/pkix-pkipath": {
    "source": "iana",
    "extensions": ["pkipath"]
  },
  "application/pkixcmp": {
    "source": "iana",
    "extensions": ["pki"]
  },
  "application/pls+xml": {
    "source": "iana",
    "extensions": ["pls"]
  },
  "application/poc-settings+xml": {
    "source": "iana"
  },
  "application/postscript": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ai","eps","ps"]
  },
  "application/provenance+xml": {
    "source": "iana"
  },
  "application/prs.alvestrand.titrax-sheet": {
    "source": "iana"
  },
  "application/prs.cww": {
    "source": "iana",
    "extensions": ["cww"]
  },
  "application/prs.hpub+zip": {
    "source": "iana"
  },
  "application/prs.nprend": {
    "source": "iana"
  },
  "application/prs.plucker": {
    "source": "iana"
  },
  "application/prs.rdf-xml-crypt": {
    "source": "iana"
  },
  "application/prs.xsf+xml": {
    "source": "iana"
  },
  "application/pskc+xml": {
    "source": "iana",
    "extensions": ["pskcxml"]
  },
  "application/qsig": {
    "source": "iana"
  },
  "application/raptorfec": {
    "source": "iana"
  },
  "application/rdap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/rdf+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rdf"]
  },
  "application/reginfo+xml": {
    "source": "iana",
    "extensions": ["rif"]
  },
  "application/relax-ng-compact-syntax": {
    "source": "iana",
    "extensions": ["rnc"]
  },
  "application/remote-printing": {
    "source": "iana"
  },
  "application/reputon+json": {
    "source": "iana",
    "compressible": true
  },
  "application/resource-lists+xml": {
    "source": "iana",
    "extensions": ["rl"]
  },
  "application/resource-lists-diff+xml": {
    "source": "iana",
    "extensions": ["rld"]
  },
  "application/rfc+xml": {
    "source": "iana"
  },
  "application/riscos": {
    "source": "iana"
  },
  "application/rlmi+xml": {
    "source": "iana"
  },
  "application/rls-services+xml": {
    "source": "iana",
    "extensions": ["rs"]
  },
  "application/rpki-ghostbusters": {
    "source": "iana",
    "extensions": ["gbr"]
  },
  "application/rpki-manifest": {
    "source": "iana",
    "extensions": ["mft"]
  },
  "application/rpki-roa": {
    "source": "iana",
    "extensions": ["roa"]
  },
  "application/rpki-updown": {
    "source": "iana"
  },
  "application/rsd+xml": {
    "source": "apache",
    "extensions": ["rsd"]
  },
  "application/rss+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["rss"]
  },
  "application/rtf": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rtf"]
  },
  "application/rtploopback": {
    "source": "iana"
  },
  "application/rtx": {
    "source": "iana"
  },
  "application/samlassertion+xml": {
    "source": "iana"
  },
  "application/samlmetadata+xml": {
    "source": "iana"
  },
  "application/sbml+xml": {
    "source": "iana",
    "extensions": ["sbml"]
  },
  "application/scaip+xml": {
    "source": "iana"
  },
  "application/scim+json": {
    "source": "iana",
    "compressible": true
  },
  "application/scvp-cv-request": {
    "source": "iana",
    "extensions": ["scq"]
  },
  "application/scvp-cv-response": {
    "source": "iana",
    "extensions": ["scs"]
  },
  "application/scvp-vp-request": {
    "source": "iana",
    "extensions": ["spq"]
  },
  "application/scvp-vp-response": {
    "source": "iana",
    "extensions": ["spp"]
  },
  "application/sdp": {
    "source": "iana",
    "extensions": ["sdp"]
  },
  "application/sep+xml": {
    "source": "iana"
  },
  "application/sep-exi": {
    "source": "iana"
  },
  "application/session-info": {
    "source": "iana"
  },
  "application/set-payment": {
    "source": "iana"
  },
  "application/set-payment-initiation": {
    "source": "iana",
    "extensions": ["setpay"]
  },
  "application/set-registration": {
    "source": "iana"
  },
  "application/set-registration-initiation": {
    "source": "iana",
    "extensions": ["setreg"]
  },
  "application/sgml": {
    "source": "iana"
  },
  "application/sgml-open-catalog": {
    "source": "iana"
  },
  "application/shf+xml": {
    "source": "iana",
    "extensions": ["shf"]
  },
  "application/sieve": {
    "source": "iana"
  },
  "application/simple-filter+xml": {
    "source": "iana"
  },
  "application/simple-message-summary": {
    "source": "iana"
  },
  "application/simplesymbolcontainer": {
    "source": "iana"
  },
  "application/slate": {
    "source": "iana"
  },
  "application/smil": {
    "source": "iana"
  },
  "application/smil+xml": {
    "source": "iana",
    "extensions": ["smi","smil"]
  },
  "application/smpte336m": {
    "source": "iana"
  },
  "application/soap+fastinfoset": {
    "source": "iana"
  },
  "application/soap+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/sparql-query": {
    "source": "iana",
    "extensions": ["rq"]
  },
  "application/sparql-results+xml": {
    "source": "iana",
    "extensions": ["srx"]
  },
  "application/spirits-event+xml": {
    "source": "iana"
  },
  "application/sql": {
    "source": "iana"
  },
  "application/srgs": {
    "source": "iana",
    "extensions": ["gram"]
  },
  "application/srgs+xml": {
    "source": "iana",
    "extensions": ["grxml"]
  },
  "application/sru+xml": {
    "source": "iana",
    "extensions": ["sru"]
  },
  "application/ssdl+xml": {
    "source": "apache",
    "extensions": ["ssdl"]
  },
  "application/ssml+xml": {
    "source": "iana",
    "extensions": ["ssml"]
  },
  "application/tamp-apex-update": {
    "source": "iana"
  },
  "application/tamp-apex-update-confirm": {
    "source": "iana"
  },
  "application/tamp-community-update": {
    "source": "iana"
  },
  "application/tamp-community-update-confirm": {
    "source": "iana"
  },
  "application/tamp-error": {
    "source": "iana"
  },
  "application/tamp-sequence-adjust": {
    "source": "iana"
  },
  "application/tamp-sequence-adjust-confirm": {
    "source": "iana"
  },
  "application/tamp-status-query": {
    "source": "iana"
  },
  "application/tamp-status-response": {
    "source": "iana"
  },
  "application/tamp-update": {
    "source": "iana"
  },
  "application/tamp-update-confirm": {
    "source": "iana"
  },
  "application/tar": {
    "compressible": true
  },
  "application/tei+xml": {
    "source": "iana",
    "extensions": ["tei","teicorpus"]
  },
  "application/thraud+xml": {
    "source": "iana",
    "extensions": ["tfi"]
  },
  "application/timestamp-query": {
    "source": "iana"
  },
  "application/timestamp-reply": {
    "source": "iana"
  },
  "application/timestamped-data": {
    "source": "iana",
    "extensions": ["tsd"]
  },
  "application/ttml+xml": {
    "source": "iana"
  },
  "application/tve-trigger": {
    "source": "iana"
  },
  "application/ulpfec": {
    "source": "iana"
  },
  "application/urc-grpsheet+xml": {
    "source": "iana"
  },
  "application/urc-ressheet+xml": {
    "source": "iana"
  },
  "application/urc-targetdesc+xml": {
    "source": "iana"
  },
  "application/urc-uisocketdesc+xml": {
    "source": "iana"
  },
  "application/vcard+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vcard+xml": {
    "source": "iana"
  },
  "application/vemmi": {
    "source": "iana"
  },
  "application/vividence.scriptfile": {
    "source": "apache"
  },
  "application/vnd.3gpp-prose+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp-prose-pc3ch+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.access-transfer-events+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.bsf+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.mid-call+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.pic-bw-large": {
    "source": "iana",
    "extensions": ["plb"]
  },
  "application/vnd.3gpp.pic-bw-small": {
    "source": "iana",
    "extensions": ["psb"]
  },
  "application/vnd.3gpp.pic-bw-var": {
    "source": "iana",
    "extensions": ["pvb"]
  },
  "application/vnd.3gpp.sms": {
    "source": "iana"
  },
  "application/vnd.3gpp.srvcc-ext+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.srvcc-info+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.state-and-event-info+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.ussd+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp2.bcmcsinfo+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp2.sms": {
    "source": "iana"
  },
  "application/vnd.3gpp2.tcap": {
    "source": "iana",
    "extensions": ["tcap"]
  },
  "application/vnd.3m.post-it-notes": {
    "source": "iana",
    "extensions": ["pwn"]
  },
  "application/vnd.accpac.simply.aso": {
    "source": "iana",
    "extensions": ["aso"]
  },
  "application/vnd.accpac.simply.imp": {
    "source": "iana",
    "extensions": ["imp"]
  },
  "application/vnd.acucobol": {
    "source": "iana",
    "extensions": ["acu"]
  },
  "application/vnd.acucorp": {
    "source": "iana",
    "extensions": ["atc","acutc"]
  },
  "application/vnd.adobe.air-application-installer-package+zip": {
    "source": "apache",
    "extensions": ["air"]
  },
  "application/vnd.adobe.flash.movie": {
    "source": "iana"
  },
  "application/vnd.adobe.formscentral.fcdt": {
    "source": "iana",
    "extensions": ["fcdt"]
  },
  "application/vnd.adobe.fxp": {
    "source": "iana",
    "extensions": ["fxp","fxpl"]
  },
  "application/vnd.adobe.partial-upload": {
    "source": "iana"
  },
  "application/vnd.adobe.xdp+xml": {
    "source": "iana",
    "extensions": ["xdp"]
  },
  "application/vnd.adobe.xfdf": {
    "source": "iana",
    "extensions": ["xfdf"]
  },
  "application/vnd.aether.imp": {
    "source": "iana"
  },
  "application/vnd.ah-barcode": {
    "source": "iana"
  },
  "application/vnd.ahead.space": {
    "source": "iana",
    "extensions": ["ahead"]
  },
  "application/vnd.airzip.filesecure.azf": {
    "source": "iana",
    "extensions": ["azf"]
  },
  "application/vnd.airzip.filesecure.azs": {
    "source": "iana",
    "extensions": ["azs"]
  },
  "application/vnd.amazon.ebook": {
    "source": "apache",
    "extensions": ["azw"]
  },
  "application/vnd.americandynamics.acc": {
    "source": "iana",
    "extensions": ["acc"]
  },
  "application/vnd.amiga.ami": {
    "source": "iana",
    "extensions": ["ami"]
  },
  "application/vnd.amundsen.maze+xml": {
    "source": "iana"
  },
  "application/vnd.android.package-archive": {
    "source": "apache",
    "compressible": false,
    "extensions": ["apk"]
  },
  "application/vnd.anki": {
    "source": "iana"
  },
  "application/vnd.anser-web-certificate-issue-initiation": {
    "source": "iana",
    "extensions": ["cii"]
  },
  "application/vnd.anser-web-funds-transfer-initiation": {
    "source": "apache",
    "extensions": ["fti"]
  },
  "application/vnd.antix.game-component": {
    "source": "iana",
    "extensions": ["atx"]
  },
  "application/vnd.apache.thrift.binary": {
    "source": "iana"
  },
  "application/vnd.apache.thrift.compact": {
    "source": "iana"
  },
  "application/vnd.apache.thrift.json": {
    "source": "iana"
  },
  "application/vnd.api+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.apple.installer+xml": {
    "source": "iana",
    "extensions": ["mpkg"]
  },
  "application/vnd.apple.mpegurl": {
    "source": "iana",
    "extensions": ["m3u8"]
  },
  "application/vnd.apple.pkpass": {
    "compressible": false,
    "extensions": ["pkpass"]
  },
  "application/vnd.arastra.swi": {
    "source": "iana"
  },
  "application/vnd.aristanetworks.swi": {
    "source": "iana",
    "extensions": ["swi"]
  },
  "application/vnd.artsquare": {
    "source": "iana"
  },
  "application/vnd.astraea-software.iota": {
    "source": "iana",
    "extensions": ["iota"]
  },
  "application/vnd.audiograph": {
    "source": "iana",
    "extensions": ["aep"]
  },
  "application/vnd.autopackage": {
    "source": "iana"
  },
  "application/vnd.avistar+xml": {
    "source": "iana"
  },
  "application/vnd.balsamiq.bmml+xml": {
    "source": "iana"
  },
  "application/vnd.balsamiq.bmpr": {
    "source": "iana"
  },
  "application/vnd.bekitzur-stech+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.biopax.rdf+xml": {
    "source": "iana"
  },
  "application/vnd.blueice.multipass": {
    "source": "iana",
    "extensions": ["mpm"]
  },
  "application/vnd.bluetooth.ep.oob": {
    "source": "iana"
  },
  "application/vnd.bluetooth.le.oob": {
    "source": "iana"
  },
  "application/vnd.bmi": {
    "source": "iana",
    "extensions": ["bmi"]
  },
  "application/vnd.businessobjects": {
    "source": "iana",
    "extensions": ["rep"]
  },
  "application/vnd.cab-jscript": {
    "source": "iana"
  },
  "application/vnd.canon-cpdl": {
    "source": "iana"
  },
  "application/vnd.canon-lips": {
    "source": "iana"
  },
  "application/vnd.cendio.thinlinc.clientconf": {
    "source": "iana"
  },
  "application/vnd.century-systems.tcp_stream": {
    "source": "iana"
  },
  "application/vnd.chemdraw+xml": {
    "source": "iana",
    "extensions": ["cdxml"]
  },
  "application/vnd.chipnuts.karaoke-mmd": {
    "source": "iana",
    "extensions": ["mmd"]
  },
  "application/vnd.cinderella": {
    "source": "iana",
    "extensions": ["cdy"]
  },
  "application/vnd.cirpack.isdn-ext": {
    "source": "iana"
  },
  "application/vnd.citationstyles.style+xml": {
    "source": "iana"
  },
  "application/vnd.claymore": {
    "source": "iana",
    "extensions": ["cla"]
  },
  "application/vnd.cloanto.rp9": {
    "source": "iana",
    "extensions": ["rp9"]
  },
  "application/vnd.clonk.c4group": {
    "source": "iana",
    "extensions": ["c4g","c4d","c4f","c4p","c4u"]
  },
  "application/vnd.cluetrust.cartomobile-config": {
    "source": "iana",
    "extensions": ["c11amc"]
  },
  "application/vnd.cluetrust.cartomobile-config-pkg": {
    "source": "iana",
    "extensions": ["c11amz"]
  },
  "application/vnd.coffeescript": {
    "source": "iana"
  },
  "application/vnd.collection+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.collection.doc+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.collection.next+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.commerce-battelle": {
    "source": "iana"
  },
  "application/vnd.commonspace": {
    "source": "iana",
    "extensions": ["csp"]
  },
  "application/vnd.contact.cmsg": {
    "source": "iana",
    "extensions": ["cdbcmsg"]
  },
  "application/vnd.cosmocaller": {
    "source": "iana",
    "extensions": ["cmc"]
  },
  "application/vnd.crick.clicker": {
    "source": "iana",
    "extensions": ["clkx"]
  },
  "application/vnd.crick.clicker.keyboard": {
    "source": "iana",
    "extensions": ["clkk"]
  },
  "application/vnd.crick.clicker.palette": {
    "source": "iana",
    "extensions": ["clkp"]
  },
  "application/vnd.crick.clicker.template": {
    "source": "iana",
    "extensions": ["clkt"]
  },
  "application/vnd.crick.clicker.wordbank": {
    "source": "iana",
    "extensions": ["clkw"]
  },
  "application/vnd.criticaltools.wbs+xml": {
    "source": "iana",
    "extensions": ["wbs"]
  },
  "application/vnd.ctc-posml": {
    "source": "iana",
    "extensions": ["pml"]
  },
  "application/vnd.ctct.ws+xml": {
    "source": "iana"
  },
  "application/vnd.cups-pdf": {
    "source": "iana"
  },
  "application/vnd.cups-postscript": {
    "source": "iana"
  },
  "application/vnd.cups-ppd": {
    "source": "iana",
    "extensions": ["ppd"]
  },
  "application/vnd.cups-raster": {
    "source": "iana"
  },
  "application/vnd.cups-raw": {
    "source": "iana"
  },
  "application/vnd.curl": {
    "source": "iana"
  },
  "application/vnd.curl.car": {
    "source": "apache",
    "extensions": ["car"]
  },
  "application/vnd.curl.pcurl": {
    "source": "apache",
    "extensions": ["pcurl"]
  },
  "application/vnd.cyan.dean.root+xml": {
    "source": "iana"
  },
  "application/vnd.cybank": {
    "source": "iana"
  },
  "application/vnd.dart": {
    "source": "iana",
    "compressible": true,
    "extensions": ["dart"]
  },
  "application/vnd.data-vision.rdz": {
    "source": "iana",
    "extensions": ["rdz"]
  },
  "application/vnd.debian.binary-package": {
    "source": "iana"
  },
  "application/vnd.dece.data": {
    "source": "iana",
    "extensions": ["uvf","uvvf","uvd","uvvd"]
  },
  "application/vnd.dece.ttml+xml": {
    "source": "iana",
    "extensions": ["uvt","uvvt"]
  },
  "application/vnd.dece.unspecified": {
    "source": "iana",
    "extensions": ["uvx","uvvx"]
  },
  "application/vnd.dece.zip": {
    "source": "iana",
    "extensions": ["uvz","uvvz"]
  },
  "application/vnd.denovo.fcselayout-link": {
    "source": "iana",
    "extensions": ["fe_launch"]
  },
  "application/vnd.desmume-movie": {
    "source": "iana"
  },
  "application/vnd.dir-bi.plate-dl-nosuffix": {
    "source": "iana"
  },
  "application/vnd.dm.delegation+xml": {
    "source": "iana"
  },
  "application/vnd.dna": {
    "source": "iana",
    "extensions": ["dna"]
  },
  "application/vnd.document+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dolby.mlp": {
    "source": "apache",
    "extensions": ["mlp"]
  },
  "application/vnd.dolby.mobile.1": {
    "source": "iana"
  },
  "application/vnd.dolby.mobile.2": {
    "source": "iana"
  },
  "application/vnd.doremir.scorecloud-binary-document": {
    "source": "iana"
  },
  "application/vnd.dpgraph": {
    "source": "iana",
    "extensions": ["dpg"]
  },
  "application/vnd.dreamfactory": {
    "source": "iana",
    "extensions": ["dfac"]
  },
  "application/vnd.drive+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ds-keypoint": {
    "source": "apache",
    "extensions": ["kpxx"]
  },
  "application/vnd.dtg.local": {
    "source": "iana"
  },
  "application/vnd.dtg.local.flash": {
    "source": "iana"
  },
  "application/vnd.dtg.local.html": {
    "source": "iana"
  },
  "application/vnd.dvb.ait": {
    "source": "iana",
    "extensions": ["ait"]
  },
  "application/vnd.dvb.dvbj": {
    "source": "iana"
  },
  "application/vnd.dvb.esgcontainer": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcdftnotifaccess": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcesgaccess": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcesgaccess2": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcesgpdd": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcroaming": {
    "source": "iana"
  },
  "application/vnd.dvb.iptv.alfec-base": {
    "source": "iana"
  },
  "application/vnd.dvb.iptv.alfec-enhancement": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-aggregate-root+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-container+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-generic+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-ia-msglist+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-ia-registration-request+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-ia-registration-response+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-init+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.pfr": {
    "source": "iana"
  },
  "application/vnd.dvb.service": {
    "source": "iana",
    "extensions": ["svc"]
  },
  "application/vnd.dxr": {
    "source": "iana"
  },
  "application/vnd.dynageo": {
    "source": "iana",
    "extensions": ["geo"]
  },
  "application/vnd.dzr": {
    "source": "iana"
  },
  "application/vnd.easykaraoke.cdgdownload": {
    "source": "iana"
  },
  "application/vnd.ecdis-update": {
    "source": "iana"
  },
  "application/vnd.ecowin.chart": {
    "source": "iana",
    "extensions": ["mag"]
  },
  "application/vnd.ecowin.filerequest": {
    "source": "iana"
  },
  "application/vnd.ecowin.fileupdate": {
    "source": "iana"
  },
  "application/vnd.ecowin.series": {
    "source": "iana"
  },
  "application/vnd.ecowin.seriesrequest": {
    "source": "iana"
  },
  "application/vnd.ecowin.seriesupdate": {
    "source": "iana"
  },
  "application/vnd.emclient.accessrequest+xml": {
    "source": "iana"
  },
  "application/vnd.enliven": {
    "source": "iana",
    "extensions": ["nml"]
  },
  "application/vnd.enphase.envoy": {
    "source": "iana"
  },
  "application/vnd.eprints.data+xml": {
    "source": "iana"
  },
  "application/vnd.epson.esf": {
    "source": "iana",
    "extensions": ["esf"]
  },
  "application/vnd.epson.msf": {
    "source": "iana",
    "extensions": ["msf"]
  },
  "application/vnd.epson.quickanime": {
    "source": "iana",
    "extensions": ["qam"]
  },
  "application/vnd.epson.salt": {
    "source": "iana",
    "extensions": ["slt"]
  },
  "application/vnd.epson.ssf": {
    "source": "iana",
    "extensions": ["ssf"]
  },
  "application/vnd.ericsson.quickcall": {
    "source": "iana"
  },
  "application/vnd.eszigno3+xml": {
    "source": "iana",
    "extensions": ["es3","et3"]
  },
  "application/vnd.etsi.aoc+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.asic-e+zip": {
    "source": "iana"
  },
  "application/vnd.etsi.asic-s+zip": {
    "source": "iana"
  },
  "application/vnd.etsi.cug+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvcommand+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvdiscovery+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvprofile+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvsad-bc+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvsad-cod+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvsad-npvr+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvservice+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvsync+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvueprofile+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.mcid+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.mheg5": {
    "source": "iana"
  },
  "application/vnd.etsi.overload-control-policy-dataset+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.pstn+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.sci+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.simservs+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.timestamp-token": {
    "source": "iana"
  },
  "application/vnd.etsi.tsl+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.tsl.der": {
    "source": "iana"
  },
  "application/vnd.eudora.data": {
    "source": "iana"
  },
  "application/vnd.ezpix-album": {
    "source": "iana",
    "extensions": ["ez2"]
  },
  "application/vnd.ezpix-package": {
    "source": "iana",
    "extensions": ["ez3"]
  },
  "application/vnd.f-secure.mobile": {
    "source": "iana"
  },
  "application/vnd.fastcopy-disk-image": {
    "source": "iana"
  },
  "application/vnd.fdf": {
    "source": "iana",
    "extensions": ["fdf"]
  },
  "application/vnd.fdsn.mseed": {
    "source": "iana",
    "extensions": ["mseed"]
  },
  "application/vnd.fdsn.seed": {
    "source": "iana",
    "extensions": ["seed","dataless"]
  },
  "application/vnd.ffsns": {
    "source": "iana"
  },
  "application/vnd.filmit.zfc": {
    "source": "iana"
  },
  "application/vnd.fints": {
    "source": "iana"
  },
  "application/vnd.firemonkeys.cloudcell": {
    "source": "iana"
  },
  "application/vnd.flographit": {
    "source": "iana",
    "extensions": ["gph"]
  },
  "application/vnd.fluxtime.clip": {
    "source": "iana",
    "extensions": ["ftc"]
  },
  "application/vnd.font-fontforge-sfd": {
    "source": "iana"
  },
  "application/vnd.framemaker": {
    "source": "iana",
    "extensions": ["fm","frame","maker","book"]
  },
  "application/vnd.frogans.fnc": {
    "source": "iana",
    "extensions": ["fnc"]
  },
  "application/vnd.frogans.ltf": {
    "source": "iana",
    "extensions": ["ltf"]
  },
  "application/vnd.fsc.weblaunch": {
    "source": "iana",
    "extensions": ["fsc"]
  },
  "application/vnd.fujitsu.oasys": {
    "source": "iana",
    "extensions": ["oas"]
  },
  "application/vnd.fujitsu.oasys2": {
    "source": "iana",
    "extensions": ["oa2"]
  },
  "application/vnd.fujitsu.oasys3": {
    "source": "iana",
    "extensions": ["oa3"]
  },
  "application/vnd.fujitsu.oasysgp": {
    "source": "iana",
    "extensions": ["fg5"]
  },
  "application/vnd.fujitsu.oasysprs": {
    "source": "iana",
    "extensions": ["bh2"]
  },
  "application/vnd.fujixerox.art-ex": {
    "source": "iana"
  },
  "application/vnd.fujixerox.art4": {
    "source": "iana"
  },
  "application/vnd.fujixerox.ddd": {
    "source": "iana",
    "extensions": ["ddd"]
  },
  "application/vnd.fujixerox.docuworks": {
    "source": "iana",
    "extensions": ["xdw"]
  },
  "application/vnd.fujixerox.docuworks.binder": {
    "source": "iana",
    "extensions": ["xbd"]
  },
  "application/vnd.fujixerox.docuworks.container": {
    "source": "iana"
  },
  "application/vnd.fujixerox.hbpl": {
    "source": "iana"
  },
  "application/vnd.fut-misnet": {
    "source": "iana"
  },
  "application/vnd.fuzzysheet": {
    "source": "iana",
    "extensions": ["fzs"]
  },
  "application/vnd.genomatix.tuxedo": {
    "source": "iana",
    "extensions": ["txd"]
  },
  "application/vnd.geo+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.geocube+xml": {
    "source": "iana"
  },
  "application/vnd.geogebra.file": {
    "source": "iana",
    "extensions": ["ggb"]
  },
  "application/vnd.geogebra.tool": {
    "source": "iana",
    "extensions": ["ggt"]
  },
  "application/vnd.geometry-explorer": {
    "source": "iana",
    "extensions": ["gex","gre"]
  },
  "application/vnd.geonext": {
    "source": "iana",
    "extensions": ["gxt"]
  },
  "application/vnd.geoplan": {
    "source": "iana",
    "extensions": ["g2w"]
  },
  "application/vnd.geospace": {
    "source": "iana",
    "extensions": ["g3w"]
  },
  "application/vnd.gerber": {
    "source": "iana"
  },
  "application/vnd.globalplatform.card-content-mgt": {
    "source": "iana"
  },
  "application/vnd.globalplatform.card-content-mgt-response": {
    "source": "iana"
  },
  "application/vnd.gmx": {
    "source": "iana",
    "extensions": ["gmx"]
  },
  "application/vnd.google-apps.document": {
    "compressible": false,
    "extensions": ["gdoc"]
  },
  "application/vnd.google-apps.presentation": {
    "compressible": false,
    "extensions": ["gslides"]
  },
  "application/vnd.google-apps.spreadsheet": {
    "compressible": false,
    "extensions": ["gsheet"]
  },
  "application/vnd.google-earth.kml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["kml"]
  },
  "application/vnd.google-earth.kmz": {
    "source": "iana",
    "compressible": false,
    "extensions": ["kmz"]
  },
  "application/vnd.gov.sk.e-form+xml": {
    "source": "iana"
  },
  "application/vnd.gov.sk.e-form+zip": {
    "source": "iana"
  },
  "application/vnd.gov.sk.xmldatacontainer+xml": {
    "source": "iana"
  },
  "application/vnd.grafeq": {
    "source": "iana",
    "extensions": ["gqf","gqs"]
  },
  "application/vnd.gridmp": {
    "source": "iana"
  },
  "application/vnd.groove-account": {
    "source": "iana",
    "extensions": ["gac"]
  },
  "application/vnd.groove-help": {
    "source": "iana",
    "extensions": ["ghf"]
  },
  "application/vnd.groove-identity-message": {
    "source": "iana",
    "extensions": ["gim"]
  },
  "application/vnd.groove-injector": {
    "source": "iana",
    "extensions": ["grv"]
  },
  "application/vnd.groove-tool-message": {
    "source": "iana",
    "extensions": ["gtm"]
  },
  "application/vnd.groove-tool-template": {
    "source": "iana",
    "extensions": ["tpl"]
  },
  "application/vnd.groove-vcard": {
    "source": "iana",
    "extensions": ["vcg"]
  },
  "application/vnd.hal+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hal+xml": {
    "source": "iana",
    "extensions": ["hal"]
  },
  "application/vnd.handheld-entertainment+xml": {
    "source": "iana",
    "extensions": ["zmm"]
  },
  "application/vnd.hbci": {
    "source": "iana",
    "extensions": ["hbci"]
  },
  "application/vnd.hcl-bireports": {
    "source": "iana"
  },
  "application/vnd.heroku+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hhe.lesson-player": {
    "source": "iana",
    "extensions": ["les"]
  },
  "application/vnd.hp-hpgl": {
    "source": "iana",
    "extensions": ["hpgl"]
  },
  "application/vnd.hp-hpid": {
    "source": "iana",
    "extensions": ["hpid"]
  },
  "application/vnd.hp-hps": {
    "source": "iana",
    "extensions": ["hps"]
  },
  "application/vnd.hp-jlyt": {
    "source": "iana",
    "extensions": ["jlt"]
  },
  "application/vnd.hp-pcl": {
    "source": "iana",
    "extensions": ["pcl"]
  },
  "application/vnd.hp-pclxl": {
    "source": "iana",
    "extensions": ["pclxl"]
  },
  "application/vnd.httphone": {
    "source": "iana"
  },
  "application/vnd.hydrostatix.sof-data": {
    "source": "iana",
    "extensions": ["sfd-hdstx"]
  },
  "application/vnd.hyperdrive+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hzn-3d-crossword": {
    "source": "iana"
  },
  "application/vnd.ibm.afplinedata": {
    "source": "iana"
  },
  "application/vnd.ibm.electronic-media": {
    "source": "iana"
  },
  "application/vnd.ibm.minipay": {
    "source": "iana",
    "extensions": ["mpy"]
  },
  "application/vnd.ibm.modcap": {
    "source": "iana",
    "extensions": ["afp","listafp","list3820"]
  },
  "application/vnd.ibm.rights-management": {
    "source": "iana",
    "extensions": ["irm"]
  },
  "application/vnd.ibm.secure-container": {
    "source": "iana",
    "extensions": ["sc"]
  },
  "application/vnd.iccprofile": {
    "source": "iana",
    "extensions": ["icc","icm"]
  },
  "application/vnd.ieee.1905": {
    "source": "iana"
  },
  "application/vnd.igloader": {
    "source": "iana",
    "extensions": ["igl"]
  },
  "application/vnd.immervision-ivp": {
    "source": "iana",
    "extensions": ["ivp"]
  },
  "application/vnd.immervision-ivu": {
    "source": "iana",
    "extensions": ["ivu"]
  },
  "application/vnd.ims.imsccv1p1": {
    "source": "iana"
  },
  "application/vnd.ims.imsccv1p2": {
    "source": "iana"
  },
  "application/vnd.ims.imsccv1p3": {
    "source": "iana"
  },
  "application/vnd.ims.lis.v2.result+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolproxy+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolproxy.id+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolsettings+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolsettings.simple+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.informedcontrol.rms+xml": {
    "source": "iana"
  },
  "application/vnd.informix-visionary": {
    "source": "iana"
  },
  "application/vnd.infotech.project": {
    "source": "iana"
  },
  "application/vnd.infotech.project+xml": {
    "source": "iana"
  },
  "application/vnd.innopath.wamp.notification": {
    "source": "iana"
  },
  "application/vnd.insors.igm": {
    "source": "iana",
    "extensions": ["igm"]
  },
  "application/vnd.intercon.formnet": {
    "source": "iana",
    "extensions": ["xpw","xpx"]
  },
  "application/vnd.intergeo": {
    "source": "iana",
    "extensions": ["i2g"]
  },
  "application/vnd.intertrust.digibox": {
    "source": "iana"
  },
  "application/vnd.intertrust.nncp": {
    "source": "iana"
  },
  "application/vnd.intu.qbo": {
    "source": "iana",
    "extensions": ["qbo"]
  },
  "application/vnd.intu.qfx": {
    "source": "iana",
    "extensions": ["qfx"]
  },
  "application/vnd.iptc.g2.catalogitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.conceptitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.knowledgeitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.newsitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.newsmessage+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.packageitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.planningitem+xml": {
    "source": "iana"
  },
  "application/vnd.ipunplugged.rcprofile": {
    "source": "iana",
    "extensions": ["rcprofile"]
  },
  "application/vnd.irepository.package+xml": {
    "source": "iana",
    "extensions": ["irp"]
  },
  "application/vnd.is-xpr": {
    "source": "iana",
    "extensions": ["xpr"]
  },
  "application/vnd.isac.fcs": {
    "source": "iana",
    "extensions": ["fcs"]
  },
  "application/vnd.jam": {
    "source": "iana",
    "extensions": ["jam"]
  },
  "application/vnd.japannet-directory-service": {
    "source": "iana"
  },
  "application/vnd.japannet-jpnstore-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-payment-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-registration": {
    "source": "iana"
  },
  "application/vnd.japannet-registration-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-setstore-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-verification": {
    "source": "iana"
  },
  "application/vnd.japannet-verification-wakeup": {
    "source": "iana"
  },
  "application/vnd.jcp.javame.midlet-rms": {
    "source": "iana",
    "extensions": ["rms"]
  },
  "application/vnd.jisp": {
    "source": "iana",
    "extensions": ["jisp"]
  },
  "application/vnd.joost.joda-archive": {
    "source": "iana",
    "extensions": ["joda"]
  },
  "application/vnd.jsk.isdn-ngn": {
    "source": "iana"
  },
  "application/vnd.kahootz": {
    "source": "iana",
    "extensions": ["ktz","ktr"]
  },
  "application/vnd.kde.karbon": {
    "source": "iana",
    "extensions": ["karbon"]
  },
  "application/vnd.kde.kchart": {
    "source": "iana",
    "extensions": ["chrt"]
  },
  "application/vnd.kde.kformula": {
    "source": "iana",
    "extensions": ["kfo"]
  },
  "application/vnd.kde.kivio": {
    "source": "iana",
    "extensions": ["flw"]
  },
  "application/vnd.kde.kontour": {
    "source": "iana",
    "extensions": ["kon"]
  },
  "application/vnd.kde.kpresenter": {
    "source": "iana",
    "extensions": ["kpr","kpt"]
  },
  "application/vnd.kde.kspread": {
    "source": "iana",
    "extensions": ["ksp"]
  },
  "application/vnd.kde.kword": {
    "source": "iana",
    "extensions": ["kwd","kwt"]
  },
  "application/vnd.kenameaapp": {
    "source": "iana",
    "extensions": ["htke"]
  },
  "application/vnd.kidspiration": {
    "source": "iana",
    "extensions": ["kia"]
  },
  "application/vnd.kinar": {
    "source": "iana",
    "extensions": ["kne","knp"]
  },
  "application/vnd.koan": {
    "source": "iana",
    "extensions": ["skp","skd","skt","skm"]
  },
  "application/vnd.kodak-descriptor": {
    "source": "iana",
    "extensions": ["sse"]
  },
  "application/vnd.las.las+xml": {
    "source": "iana",
    "extensions": ["lasxml"]
  },
  "application/vnd.liberty-request+xml": {
    "source": "iana"
  },
  "application/vnd.llamagraphics.life-balance.desktop": {
    "source": "iana",
    "extensions": ["lbd"]
  },
  "application/vnd.llamagraphics.life-balance.exchange+xml": {
    "source": "iana",
    "extensions": ["lbe"]
  },
  "application/vnd.lotus-1-2-3": {
    "source": "iana",
    "extensions": ["123"]
  },
  "application/vnd.lotus-approach": {
    "source": "iana",
    "extensions": ["apr"]
  },
  "application/vnd.lotus-freelance": {
    "source": "iana",
    "extensions": ["pre"]
  },
  "application/vnd.lotus-notes": {
    "source": "iana",
    "extensions": ["nsf"]
  },
  "application/vnd.lotus-organizer": {
    "source": "iana",
    "extensions": ["org"]
  },
  "application/vnd.lotus-screencam": {
    "source": "iana",
    "extensions": ["scm"]
  },
  "application/vnd.lotus-wordpro": {
    "source": "iana",
    "extensions": ["lwp"]
  },
  "application/vnd.macports.portpkg": {
    "source": "iana",
    "extensions": ["portpkg"]
  },
  "application/vnd.mapbox-vector-tile": {
    "source": "iana"
  },
  "application/vnd.marlin.drm.actiontoken+xml": {
    "source": "iana"
  },
  "application/vnd.marlin.drm.conftoken+xml": {
    "source": "iana"
  },
  "application/vnd.marlin.drm.license+xml": {
    "source": "iana"
  },
  "application/vnd.marlin.drm.mdcf": {
    "source": "iana"
  },
  "application/vnd.mason+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.maxmind.maxmind-db": {
    "source": "iana"
  },
  "application/vnd.mcd": {
    "source": "iana",
    "extensions": ["mcd"]
  },
  "application/vnd.medcalcdata": {
    "source": "iana",
    "extensions": ["mc1"]
  },
  "application/vnd.mediastation.cdkey": {
    "source": "iana",
    "extensions": ["cdkey"]
  },
  "application/vnd.meridian-slingshot": {
    "source": "iana"
  },
  "application/vnd.mfer": {
    "source": "iana",
    "extensions": ["mwf"]
  },
  "application/vnd.mfmp": {
    "source": "iana",
    "extensions": ["mfm"]
  },
  "application/vnd.micro+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.micrografx.flo": {
    "source": "iana",
    "extensions": ["flo"]
  },
  "application/vnd.micrografx.igx": {
    "source": "iana",
    "extensions": ["igx"]
  },
  "application/vnd.microsoft.portable-executable": {
    "source": "iana"
  },
  "application/vnd.miele+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.mif": {
    "source": "iana",
    "extensions": ["mif"]
  },
  "application/vnd.minisoft-hp3000-save": {
    "source": "iana"
  },
  "application/vnd.mitsubishi.misty-guard.trustweb": {
    "source": "iana"
  },
  "application/vnd.mobius.daf": {
    "source": "iana",
    "extensions": ["daf"]
  },
  "application/vnd.mobius.dis": {
    "source": "iana",
    "extensions": ["dis"]
  },
  "application/vnd.mobius.mbk": {
    "source": "iana",
    "extensions": ["mbk"]
  },
  "application/vnd.mobius.mqy": {
    "source": "iana",
    "extensions": ["mqy"]
  },
  "application/vnd.mobius.msl": {
    "source": "iana",
    "extensions": ["msl"]
  },
  "application/vnd.mobius.plc": {
    "source": "iana",
    "extensions": ["plc"]
  },
  "application/vnd.mobius.txf": {
    "source": "iana",
    "extensions": ["txf"]
  },
  "application/vnd.mophun.application": {
    "source": "iana",
    "extensions": ["mpn"]
  },
  "application/vnd.mophun.certificate": {
    "source": "iana",
    "extensions": ["mpc"]
  },
  "application/vnd.motorola.flexsuite": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.adsi": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.fis": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.gotap": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.kmr": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.ttc": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.wem": {
    "source": "iana"
  },
  "application/vnd.motorola.iprm": {
    "source": "iana"
  },
  "application/vnd.mozilla.xul+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xul"]
  },
  "application/vnd.ms-3mfdocument": {
    "source": "iana"
  },
  "application/vnd.ms-artgalry": {
    "source": "iana",
    "extensions": ["cil"]
  },
  "application/vnd.ms-asf": {
    "source": "iana"
  },
  "application/vnd.ms-cab-compressed": {
    "source": "iana",
    "extensions": ["cab"]
  },
  "application/vnd.ms-color.iccprofile": {
    "source": "apache"
  },
  "application/vnd.ms-excel": {
    "source": "iana",
    "compressible": false,
    "extensions": ["xls","xlm","xla","xlc","xlt","xlw"]
  },
  "application/vnd.ms-excel.addin.macroenabled.12": {
    "source": "iana",
    "extensions": ["xlam"]
  },
  "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
    "source": "iana",
    "extensions": ["xlsb"]
  },
  "application/vnd.ms-excel.sheet.macroenabled.12": {
    "source": "iana",
    "extensions": ["xlsm"]
  },
  "application/vnd.ms-excel.template.macroenabled.12": {
    "source": "iana",
    "extensions": ["xltm"]
  },
  "application/vnd.ms-fontobject": {
    "source": "iana",
    "compressible": true,
    "extensions": ["eot"]
  },
  "application/vnd.ms-htmlhelp": {
    "source": "iana",
    "extensions": ["chm"]
  },
  "application/vnd.ms-ims": {
    "source": "iana",
    "extensions": ["ims"]
  },
  "application/vnd.ms-lrm": {
    "source": "iana",
    "extensions": ["lrm"]
  },
  "application/vnd.ms-office.activex+xml": {
    "source": "iana"
  },
  "application/vnd.ms-officetheme": {
    "source": "iana",
    "extensions": ["thmx"]
  },
  "application/vnd.ms-opentype": {
    "source": "apache",
    "compressible": true
  },
  "application/vnd.ms-package.obfuscated-opentype": {
    "source": "apache"
  },
  "application/vnd.ms-pki.seccat": {
    "source": "apache",
    "extensions": ["cat"]
  },
  "application/vnd.ms-pki.stl": {
    "source": "apache",
    "extensions": ["stl"]
  },
  "application/vnd.ms-playready.initiator+xml": {
    "source": "iana"
  },
  "application/vnd.ms-powerpoint": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ppt","pps","pot"]
  },
  "application/vnd.ms-powerpoint.addin.macroenabled.12": {
    "source": "iana",
    "extensions": ["ppam"]
  },
  "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
    "source": "iana",
    "extensions": ["pptm"]
  },
  "application/vnd.ms-powerpoint.slide.macroenabled.12": {
    "source": "iana",
    "extensions": ["sldm"]
  },
  "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
    "source": "iana",
    "extensions": ["ppsm"]
  },
  "application/vnd.ms-powerpoint.template.macroenabled.12": {
    "source": "iana",
    "extensions": ["potm"]
  },
  "application/vnd.ms-printdevicecapabilities+xml": {
    "source": "iana"
  },
  "application/vnd.ms-printing.printticket+xml": {
    "source": "apache"
  },
  "application/vnd.ms-project": {
    "source": "iana",
    "extensions": ["mpp","mpt"]
  },
  "application/vnd.ms-tnef": {
    "source": "iana"
  },
  "application/vnd.ms-windows.devicepairing": {
    "source": "iana"
  },
  "application/vnd.ms-windows.nwprinting.oob": {
    "source": "iana"
  },
  "application/vnd.ms-windows.printerpairing": {
    "source": "iana"
  },
  "application/vnd.ms-windows.wsd.oob": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.lic-chlg-req": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.lic-resp": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.meter-chlg-req": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.meter-resp": {
    "source": "iana"
  },
  "application/vnd.ms-word.document.macroenabled.12": {
    "source": "iana",
    "extensions": ["docm"]
  },
  "application/vnd.ms-word.template.macroenabled.12": {
    "source": "iana",
    "extensions": ["dotm"]
  },
  "application/vnd.ms-works": {
    "source": "iana",
    "extensions": ["wps","wks","wcm","wdb"]
  },
  "application/vnd.ms-wpl": {
    "source": "iana",
    "extensions": ["wpl"]
  },
  "application/vnd.ms-xpsdocument": {
    "source": "iana",
    "compressible": false,
    "extensions": ["xps"]
  },
  "application/vnd.msa-disk-image": {
    "source": "iana"
  },
  "application/vnd.mseq": {
    "source": "iana",
    "extensions": ["mseq"]
  },
  "application/vnd.msign": {
    "source": "iana"
  },
  "application/vnd.multiad.creator": {
    "source": "iana"
  },
  "application/vnd.multiad.creator.cif": {
    "source": "iana"
  },
  "application/vnd.music-niff": {
    "source": "iana"
  },
  "application/vnd.musician": {
    "source": "iana",
    "extensions": ["mus"]
  },
  "application/vnd.muvee.style": {
    "source": "iana",
    "extensions": ["msty"]
  },
  "application/vnd.mynfc": {
    "source": "iana",
    "extensions": ["taglet"]
  },
  "application/vnd.ncd.control": {
    "source": "iana"
  },
  "application/vnd.ncd.reference": {
    "source": "iana"
  },
  "application/vnd.nervana": {
    "source": "iana"
  },
  "application/vnd.netfpx": {
    "source": "iana"
  },
  "application/vnd.neurolanguage.nlu": {
    "source": "iana",
    "extensions": ["nlu"]
  },
  "application/vnd.nintendo.nitro.rom": {
    "source": "iana"
  },
  "application/vnd.nintendo.snes.rom": {
    "source": "iana"
  },
  "application/vnd.nitf": {
    "source": "iana",
    "extensions": ["ntf","nitf"]
  },
  "application/vnd.noblenet-directory": {
    "source": "iana",
    "extensions": ["nnd"]
  },
  "application/vnd.noblenet-sealer": {
    "source": "iana",
    "extensions": ["nns"]
  },
  "application/vnd.noblenet-web": {
    "source": "iana",
    "extensions": ["nnw"]
  },
  "application/vnd.nokia.catalogs": {
    "source": "iana"
  },
  "application/vnd.nokia.conml+wbxml": {
    "source": "iana"
  },
  "application/vnd.nokia.conml+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.iptv.config+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.isds-radio-presets": {
    "source": "iana"
  },
  "application/vnd.nokia.landmark+wbxml": {
    "source": "iana"
  },
  "application/vnd.nokia.landmark+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.landmarkcollection+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.n-gage.ac+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.n-gage.data": {
    "source": "iana",
    "extensions": ["ngdat"]
  },
  "application/vnd.nokia.n-gage.symbian.install": {
    "source": "iana",
    "extensions": ["n-gage"]
  },
  "application/vnd.nokia.ncd": {
    "source": "iana"
  },
  "application/vnd.nokia.pcd+wbxml": {
    "source": "iana"
  },
  "application/vnd.nokia.pcd+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.radio-preset": {
    "source": "iana",
    "extensions": ["rpst"]
  },
  "application/vnd.nokia.radio-presets": {
    "source": "iana",
    "extensions": ["rpss"]
  },
  "application/vnd.novadigm.edm": {
    "source": "iana",
    "extensions": ["edm"]
  },
  "application/vnd.novadigm.edx": {
    "source": "iana",
    "extensions": ["edx"]
  },
  "application/vnd.novadigm.ext": {
    "source": "iana",
    "extensions": ["ext"]
  },
  "application/vnd.ntt-local.content-share": {
    "source": "iana"
  },
  "application/vnd.ntt-local.file-transfer": {
    "source": "iana"
  },
  "application/vnd.ntt-local.ogw_remote-access": {
    "source": "iana"
  },
  "application/vnd.ntt-local.sip-ta_remote": {
    "source": "iana"
  },
  "application/vnd.ntt-local.sip-ta_tcp_stream": {
    "source": "iana"
  },
  "application/vnd.oasis.opendocument.chart": {
    "source": "iana",
    "extensions": ["odc"]
  },
  "application/vnd.oasis.opendocument.chart-template": {
    "source": "iana",
    "extensions": ["otc"]
  },
  "application/vnd.oasis.opendocument.database": {
    "source": "iana",
    "extensions": ["odb"]
  },
  "application/vnd.oasis.opendocument.formula": {
    "source": "iana",
    "extensions": ["odf"]
  },
  "application/vnd.oasis.opendocument.formula-template": {
    "source": "iana",
    "extensions": ["odft"]
  },
  "application/vnd.oasis.opendocument.graphics": {
    "source": "iana",
    "compressible": false,
    "extensions": ["odg"]
  },
  "application/vnd.oasis.opendocument.graphics-template": {
    "source": "iana",
    "extensions": ["otg"]
  },
  "application/vnd.oasis.opendocument.image": {
    "source": "iana",
    "extensions": ["odi"]
  },
  "application/vnd.oasis.opendocument.image-template": {
    "source": "iana",
    "extensions": ["oti"]
  },
  "application/vnd.oasis.opendocument.presentation": {
    "source": "iana",
    "compressible": false,
    "extensions": ["odp"]
  },
  "application/vnd.oasis.opendocument.presentation-template": {
    "source": "iana",
    "extensions": ["otp"]
  },
  "application/vnd.oasis.opendocument.spreadsheet": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ods"]
  },
  "application/vnd.oasis.opendocument.spreadsheet-template": {
    "source": "iana",
    "extensions": ["ots"]
  },
  "application/vnd.oasis.opendocument.text": {
    "source": "iana",
    "compressible": false,
    "extensions": ["odt"]
  },
  "application/vnd.oasis.opendocument.text-master": {
    "source": "iana",
    "extensions": ["odm"]
  },
  "application/vnd.oasis.opendocument.text-template": {
    "source": "iana",
    "extensions": ["ott"]
  },
  "application/vnd.oasis.opendocument.text-web": {
    "source": "iana",
    "extensions": ["oth"]
  },
  "application/vnd.obn": {
    "source": "iana"
  },
  "application/vnd.oftn.l10n+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.contentaccessdownload+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.contentaccessstreaming+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.cspg-hexbinary": {
    "source": "iana"
  },
  "application/vnd.oipf.dae.svg+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.dae.xhtml+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.mippvcontrolmessage+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.pae.gem": {
    "source": "iana"
  },
  "application/vnd.oipf.spdiscovery+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.spdlist+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.ueprofile+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.userprofile+xml": {
    "source": "iana"
  },
  "application/vnd.olpc-sugar": {
    "source": "iana",
    "extensions": ["xo"]
  },
  "application/vnd.oma-scws-config": {
    "source": "iana"
  },
  "application/vnd.oma-scws-http-request": {
    "source": "iana"
  },
  "application/vnd.oma-scws-http-response": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.drm-trigger+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.imd+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.ltkm": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.notification+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.provisioningtrigger": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sgboot": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sgdd+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sgdu": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.simple-symbol-container": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.smartcard-trigger+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sprov+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.stkm": {
    "source": "iana"
  },
  "application/vnd.oma.cab-address-book+xml": {
    "source": "iana"
  },
  "application/vnd.oma.cab-feature-handler+xml": {
    "source": "iana"
  },
  "application/vnd.oma.cab-pcc+xml": {
    "source": "iana"
  },
  "application/vnd.oma.cab-subs-invite+xml": {
    "source": "iana"
  },
  "application/vnd.oma.cab-user-prefs+xml": {
    "source": "iana"
  },
  "application/vnd.oma.dcd": {
    "source": "iana"
  },
  "application/vnd.oma.dcdc": {
    "source": "iana"
  },
  "application/vnd.oma.dd2+xml": {
    "source": "iana",
    "extensions": ["dd2"]
  },
  "application/vnd.oma.drm.risd+xml": {
    "source": "iana"
  },
  "application/vnd.oma.group-usage-list+xml": {
    "source": "iana"
  },
  "application/vnd.oma.pal+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.detailed-progress-report+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.final-report+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.groups+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.invocation-descriptor+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.optimized-progress-report+xml": {
    "source": "iana"
  },
  "application/vnd.oma.push": {
    "source": "iana"
  },
  "application/vnd.oma.scidm.messages+xml": {
    "source": "iana"
  },
  "application/vnd.oma.xcap-directory+xml": {
    "source": "iana"
  },
  "application/vnd.omads-email+xml": {
    "source": "iana"
  },
  "application/vnd.omads-file+xml": {
    "source": "iana"
  },
  "application/vnd.omads-folder+xml": {
    "source": "iana"
  },
  "application/vnd.omaloc-supl-init": {
    "source": "iana"
  },
  "application/vnd.openblox.game+xml": {
    "source": "iana"
  },
  "application/vnd.openblox.game-binary": {
    "source": "iana"
  },
  "application/vnd.openeye.oeb": {
    "source": "iana"
  },
  "application/vnd.openofficeorg.extension": {
    "source": "apache",
    "extensions": ["oxt"]
  },
  "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawing+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml-template": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
    "source": "iana",
    "compressible": false,
    "extensions": ["pptx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slide": {
    "source": "iana",
    "extensions": ["sldx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
    "source": "iana",
    "extensions": ["ppsx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.template": {
    "source": "apache",
    "extensions": ["potx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml-template": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
    "source": "iana",
    "compressible": false,
    "extensions": ["xlsx"]
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
    "source": "apache",
    "extensions": ["xltx"]
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.theme+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.vmldrawing": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml-template": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
    "source": "iana",
    "compressible": false,
    "extensions": ["docx"]
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
    "source": "apache",
    "extensions": ["dotx"]
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-package.core-properties+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-package.relationships+xml": {
    "source": "iana"
  },
  "application/vnd.oracle.resource+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.orange.indata": {
    "source": "iana"
  },
  "application/vnd.osa.netdeploy": {
    "source": "iana"
  },
  "application/vnd.osgeo.mapguide.package": {
    "source": "iana",
    "extensions": ["mgp"]
  },
  "application/vnd.osgi.bundle": {
    "source": "iana"
  },
  "application/vnd.osgi.dp": {
    "source": "iana",
    "extensions": ["dp"]
  },
  "application/vnd.osgi.subsystem": {
    "source": "iana",
    "extensions": ["esa"]
  },
  "application/vnd.otps.ct-kip+xml": {
    "source": "iana"
  },
  "application/vnd.oxli.countgraph": {
    "source": "iana"
  },
  "application/vnd.pagerduty+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.palm": {
    "source": "iana",
    "extensions": ["pdb","pqa","oprc"]
  },
  "application/vnd.panoply": {
    "source": "iana"
  },
  "application/vnd.paos+xml": {
    "source": "iana"
  },
  "application/vnd.paos.xml": {
    "source": "apache"
  },
  "application/vnd.pawaafile": {
    "source": "iana",
    "extensions": ["paw"]
  },
  "application/vnd.pcos": {
    "source": "iana"
  },
  "application/vnd.pg.format": {
    "source": "iana",
    "extensions": ["str"]
  },
  "application/vnd.pg.osasli": {
    "source": "iana",
    "extensions": ["ei6"]
  },
  "application/vnd.piaccess.application-licence": {
    "source": "iana"
  },
  "application/vnd.picsel": {
    "source": "iana",
    "extensions": ["efif"]
  },
  "application/vnd.pmi.widget": {
    "source": "iana",
    "extensions": ["wg"]
  },
  "application/vnd.poc.group-advertisement+xml": {
    "source": "iana"
  },
  "application/vnd.pocketlearn": {
    "source": "iana",
    "extensions": ["plf"]
  },
  "application/vnd.powerbuilder6": {
    "source": "iana",
    "extensions": ["pbd"]
  },
  "application/vnd.powerbuilder6-s": {
    "source": "iana"
  },
  "application/vnd.powerbuilder7": {
    "source": "iana"
  },
  "application/vnd.powerbuilder7-s": {
    "source": "iana"
  },
  "application/vnd.powerbuilder75": {
    "source": "iana"
  },
  "application/vnd.powerbuilder75-s": {
    "source": "iana"
  },
  "application/vnd.preminet": {
    "source": "iana"
  },
  "application/vnd.previewsystems.box": {
    "source": "iana",
    "extensions": ["box"]
  },
  "application/vnd.proteus.magazine": {
    "source": "iana",
    "extensions": ["mgz"]
  },
  "application/vnd.publishare-delta-tree": {
    "source": "iana",
    "extensions": ["qps"]
  },
  "application/vnd.pvi.ptid1": {
    "source": "iana",
    "extensions": ["ptid"]
  },
  "application/vnd.pwg-multiplexed": {
    "source": "iana"
  },
  "application/vnd.pwg-xhtml-print+xml": {
    "source": "iana"
  },
  "application/vnd.qualcomm.brew-app-res": {
    "source": "iana"
  },
  "application/vnd.quark.quarkxpress": {
    "source": "iana",
    "extensions": ["qxd","qxt","qwd","qwt","qxl","qxb"]
  },
  "application/vnd.quobject-quoxdocument": {
    "source": "iana"
  },
  "application/vnd.radisys.moml+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit-conf+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit-conn+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit-dialog+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit-stream+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-conf+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-base+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-fax-detect+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-group+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-speech+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-transform+xml": {
    "source": "iana"
  },
  "application/vnd.rainstor.data": {
    "source": "iana"
  },
  "application/vnd.rapid": {
    "source": "iana"
  },
  "application/vnd.realvnc.bed": {
    "source": "iana",
    "extensions": ["bed"]
  },
  "application/vnd.recordare.musicxml": {
    "source": "iana",
    "extensions": ["mxl"]
  },
  "application/vnd.recordare.musicxml+xml": {
    "source": "iana",
    "extensions": ["musicxml"]
  },
  "application/vnd.renlearn.rlprint": {
    "source": "iana"
  },
  "application/vnd.rig.cryptonote": {
    "source": "iana",
    "extensions": ["cryptonote"]
  },
  "application/vnd.rim.cod": {
    "source": "apache",
    "extensions": ["cod"]
  },
  "application/vnd.rn-realmedia": {
    "source": "apache",
    "extensions": ["rm"]
  },
  "application/vnd.rn-realmedia-vbr": {
    "source": "apache",
    "extensions": ["rmvb"]
  },
  "application/vnd.route66.link66+xml": {
    "source": "iana",
    "extensions": ["link66"]
  },
  "application/vnd.rs-274x": {
    "source": "iana"
  },
  "application/vnd.ruckus.download": {
    "source": "iana"
  },
  "application/vnd.s3sms": {
    "source": "iana"
  },
  "application/vnd.sailingtracker.track": {
    "source": "iana",
    "extensions": ["st"]
  },
  "application/vnd.sbm.cid": {
    "source": "iana"
  },
  "application/vnd.sbm.mid2": {
    "source": "iana"
  },
  "application/vnd.scribus": {
    "source": "iana"
  },
  "application/vnd.sealed.3df": {
    "source": "iana"
  },
  "application/vnd.sealed.csf": {
    "source": "iana"
  },
  "application/vnd.sealed.doc": {
    "source": "iana"
  },
  "application/vnd.sealed.eml": {
    "source": "iana"
  },
  "application/vnd.sealed.mht": {
    "source": "iana"
  },
  "application/vnd.sealed.net": {
    "source": "iana"
  },
  "application/vnd.sealed.ppt": {
    "source": "iana"
  },
  "application/vnd.sealed.tiff": {
    "source": "iana"
  },
  "application/vnd.sealed.xls": {
    "source": "iana"
  },
  "application/vnd.sealedmedia.softseal.html": {
    "source": "iana"
  },
  "application/vnd.sealedmedia.softseal.pdf": {
    "source": "iana"
  },
  "application/vnd.seemail": {
    "source": "iana",
    "extensions": ["see"]
  },
  "application/vnd.sema": {
    "source": "iana",
    "extensions": ["sema"]
  },
  "application/vnd.semd": {
    "source": "iana",
    "extensions": ["semd"]
  },
  "application/vnd.semf": {
    "source": "iana",
    "extensions": ["semf"]
  },
  "application/vnd.shana.informed.formdata": {
    "source": "iana",
    "extensions": ["ifm"]
  },
  "application/vnd.shana.informed.formtemplate": {
    "source": "iana",
    "extensions": ["itp"]
  },
  "application/vnd.shana.informed.interchange": {
    "source": "iana",
    "extensions": ["iif"]
  },
  "application/vnd.shana.informed.package": {
    "source": "iana",
    "extensions": ["ipk"]
  },
  "application/vnd.simtech-mindmapper": {
    "source": "iana",
    "extensions": ["twd","twds"]
  },
  "application/vnd.siren+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.smaf": {
    "source": "iana",
    "extensions": ["mmf"]
  },
  "application/vnd.smart.notebook": {
    "source": "iana"
  },
  "application/vnd.smart.teacher": {
    "source": "iana",
    "extensions": ["teacher"]
  },
  "application/vnd.software602.filler.form+xml": {
    "source": "iana"
  },
  "application/vnd.software602.filler.form-xml-zip": {
    "source": "iana"
  },
  "application/vnd.solent.sdkm+xml": {
    "source": "iana",
    "extensions": ["sdkm","sdkd"]
  },
  "application/vnd.spotfire.dxp": {
    "source": "iana",
    "extensions": ["dxp"]
  },
  "application/vnd.spotfire.sfs": {
    "source": "iana",
    "extensions": ["sfs"]
  },
  "application/vnd.sss-cod": {
    "source": "iana"
  },
  "application/vnd.sss-dtf": {
    "source": "iana"
  },
  "application/vnd.sss-ntf": {
    "source": "iana"
  },
  "application/vnd.stardivision.calc": {
    "source": "apache",
    "extensions": ["sdc"]
  },
  "application/vnd.stardivision.draw": {
    "source": "apache",
    "extensions": ["sda"]
  },
  "application/vnd.stardivision.impress": {
    "source": "apache",
    "extensions": ["sdd"]
  },
  "application/vnd.stardivision.math": {
    "source": "apache",
    "extensions": ["smf"]
  },
  "application/vnd.stardivision.writer": {
    "source": "apache",
    "extensions": ["sdw","vor"]
  },
  "application/vnd.stardivision.writer-global": {
    "source": "apache",
    "extensions": ["sgl"]
  },
  "application/vnd.stepmania.package": {
    "source": "iana",
    "extensions": ["smzip"]
  },
  "application/vnd.stepmania.stepchart": {
    "source": "iana",
    "extensions": ["sm"]
  },
  "application/vnd.street-stream": {
    "source": "iana"
  },
  "application/vnd.sun.wadl+xml": {
    "source": "iana"
  },
  "application/vnd.sun.xml.calc": {
    "source": "apache",
    "extensions": ["sxc"]
  },
  "application/vnd.sun.xml.calc.template": {
    "source": "apache",
    "extensions": ["stc"]
  },
  "application/vnd.sun.xml.draw": {
    "source": "apache",
    "extensions": ["sxd"]
  },
  "application/vnd.sun.xml.draw.template": {
    "source": "apache",
    "extensions": ["std"]
  },
  "application/vnd.sun.xml.impress": {
    "source": "apache",
    "extensions": ["sxi"]
  },
  "application/vnd.sun.xml.impress.template": {
    "source": "apache",
    "extensions": ["sti"]
  },
  "application/vnd.sun.xml.math": {
    "source": "apache",
    "extensions": ["sxm"]
  },
  "application/vnd.sun.xml.writer": {
    "source": "apache",
    "extensions": ["sxw"]
  },
  "application/vnd.sun.xml.writer.global": {
    "source": "apache",
    "extensions": ["sxg"]
  },
  "application/vnd.sun.xml.writer.template": {
    "source": "apache",
    "extensions": ["stw"]
  },
  "application/vnd.sus-calendar": {
    "source": "iana",
    "extensions": ["sus","susp"]
  },
  "application/vnd.svd": {
    "source": "iana",
    "extensions": ["svd"]
  },
  "application/vnd.swiftview-ics": {
    "source": "iana"
  },
  "application/vnd.symbian.install": {
    "source": "apache",
    "extensions": ["sis","sisx"]
  },
  "application/vnd.syncml+xml": {
    "source": "iana",
    "extensions": ["xsm"]
  },
  "application/vnd.syncml.dm+wbxml": {
    "source": "iana",
    "extensions": ["bdm"]
  },
  "application/vnd.syncml.dm+xml": {
    "source": "iana",
    "extensions": ["xdm"]
  },
  "application/vnd.syncml.dm.notification": {
    "source": "iana"
  },
  "application/vnd.syncml.dmddf+wbxml": {
    "source": "iana"
  },
  "application/vnd.syncml.dmddf+xml": {
    "source": "iana"
  },
  "application/vnd.syncml.dmtnds+wbxml": {
    "source": "iana"
  },
  "application/vnd.syncml.dmtnds+xml": {
    "source": "iana"
  },
  "application/vnd.syncml.ds.notification": {
    "source": "iana"
  },
  "application/vnd.tao.intent-module-archive": {
    "source": "iana",
    "extensions": ["tao"]
  },
  "application/vnd.tcpdump.pcap": {
    "source": "iana",
    "extensions": ["pcap","cap","dmp"]
  },
  "application/vnd.tmd.mediaflex.api+xml": {
    "source": "iana"
  },
  "application/vnd.tml": {
    "source": "iana"
  },
  "application/vnd.tmobile-livetv": {
    "source": "iana",
    "extensions": ["tmo"]
  },
  "application/vnd.trid.tpt": {
    "source": "iana",
    "extensions": ["tpt"]
  },
  "application/vnd.triscape.mxs": {
    "source": "iana",
    "extensions": ["mxs"]
  },
  "application/vnd.trueapp": {
    "source": "iana",
    "extensions": ["tra"]
  },
  "application/vnd.truedoc": {
    "source": "iana"
  },
  "application/vnd.ubisoft.webplayer": {
    "source": "iana"
  },
  "application/vnd.ufdl": {
    "source": "iana",
    "extensions": ["ufd","ufdl"]
  },
  "application/vnd.uiq.theme": {
    "source": "iana",
    "extensions": ["utz"]
  },
  "application/vnd.umajin": {
    "source": "iana",
    "extensions": ["umj"]
  },
  "application/vnd.unity": {
    "source": "iana",
    "extensions": ["unityweb"]
  },
  "application/vnd.uoml+xml": {
    "source": "iana",
    "extensions": ["uoml"]
  },
  "application/vnd.uplanet.alert": {
    "source": "iana"
  },
  "application/vnd.uplanet.alert-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.bearer-choice": {
    "source": "iana"
  },
  "application/vnd.uplanet.bearer-choice-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.cacheop": {
    "source": "iana"
  },
  "application/vnd.uplanet.cacheop-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.channel": {
    "source": "iana"
  },
  "application/vnd.uplanet.channel-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.list": {
    "source": "iana"
  },
  "application/vnd.uplanet.list-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.listcmd": {
    "source": "iana"
  },
  "application/vnd.uplanet.listcmd-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.signal": {
    "source": "iana"
  },
  "application/vnd.uri-map": {
    "source": "iana"
  },
  "application/vnd.valve.source.material": {
    "source": "iana"
  },
  "application/vnd.vcx": {
    "source": "iana",
    "extensions": ["vcx"]
  },
  "application/vnd.vd-study": {
    "source": "iana"
  },
  "application/vnd.vectorworks": {
    "source": "iana"
  },
  "application/vnd.verimatrix.vcas": {
    "source": "iana"
  },
  "application/vnd.vidsoft.vidconference": {
    "source": "iana"
  },
  "application/vnd.visio": {
    "source": "iana",
    "extensions": ["vsd","vst","vss","vsw"]
  },
  "application/vnd.visionary": {
    "source": "iana",
    "extensions": ["vis"]
  },
  "application/vnd.vividence.scriptfile": {
    "source": "iana"
  },
  "application/vnd.vsf": {
    "source": "iana",
    "extensions": ["vsf"]
  },
  "application/vnd.wap.sic": {
    "source": "iana"
  },
  "application/vnd.wap.slc": {
    "source": "iana"
  },
  "application/vnd.wap.wbxml": {
    "source": "iana",
    "extensions": ["wbxml"]
  },
  "application/vnd.wap.wmlc": {
    "source": "iana",
    "extensions": ["wmlc"]
  },
  "application/vnd.wap.wmlscriptc": {
    "source": "iana",
    "extensions": ["wmlsc"]
  },
  "application/vnd.webturbo": {
    "source": "iana",
    "extensions": ["wtb"]
  },
  "application/vnd.wfa.p2p": {
    "source": "iana"
  },
  "application/vnd.wfa.wsc": {
    "source": "iana"
  },
  "application/vnd.windows.devicepairing": {
    "source": "iana"
  },
  "application/vnd.wmc": {
    "source": "iana"
  },
  "application/vnd.wmf.bootstrap": {
    "source": "iana"
  },
  "application/vnd.wolfram.mathematica": {
    "source": "iana"
  },
  "application/vnd.wolfram.mathematica.package": {
    "source": "iana"
  },
  "application/vnd.wolfram.player": {
    "source": "iana",
    "extensions": ["nbp"]
  },
  "application/vnd.wordperfect": {
    "source": "iana",
    "extensions": ["wpd"]
  },
  "application/vnd.wqd": {
    "source": "iana",
    "extensions": ["wqd"]
  },
  "application/vnd.wrq-hp3000-labelled": {
    "source": "iana"
  },
  "application/vnd.wt.stf": {
    "source": "iana",
    "extensions": ["stf"]
  },
  "application/vnd.wv.csp+wbxml": {
    "source": "iana"
  },
  "application/vnd.wv.csp+xml": {
    "source": "iana"
  },
  "application/vnd.wv.ssp+xml": {
    "source": "iana"
  },
  "application/vnd.xacml+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.xara": {
    "source": "iana",
    "extensions": ["xar"]
  },
  "application/vnd.xfdl": {
    "source": "iana",
    "extensions": ["xfdl"]
  },
  "application/vnd.xfdl.webform": {
    "source": "iana"
  },
  "application/vnd.xmi+xml": {
    "source": "iana"
  },
  "application/vnd.xmpie.cpkg": {
    "source": "iana"
  },
  "application/vnd.xmpie.dpkg": {
    "source": "iana"
  },
  "application/vnd.xmpie.plan": {
    "source": "iana"
  },
  "application/vnd.xmpie.ppkg": {
    "source": "iana"
  },
  "application/vnd.xmpie.xlim": {
    "source": "iana"
  },
  "application/vnd.yamaha.hv-dic": {
    "source": "iana",
    "extensions": ["hvd"]
  },
  "application/vnd.yamaha.hv-script": {
    "source": "iana",
    "extensions": ["hvs"]
  },
  "application/vnd.yamaha.hv-voice": {
    "source": "iana",
    "extensions": ["hvp"]
  },
  "application/vnd.yamaha.openscoreformat": {
    "source": "iana",
    "extensions": ["osf"]
  },
  "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
    "source": "iana",
    "extensions": ["osfpvg"]
  },
  "application/vnd.yamaha.remote-setup": {
    "source": "iana"
  },
  "application/vnd.yamaha.smaf-audio": {
    "source": "iana",
    "extensions": ["saf"]
  },
  "application/vnd.yamaha.smaf-phrase": {
    "source": "iana",
    "extensions": ["spf"]
  },
  "application/vnd.yamaha.through-ngn": {
    "source": "iana"
  },
  "application/vnd.yamaha.tunnel-udpencap": {
    "source": "iana"
  },
  "application/vnd.yaoweme": {
    "source": "iana"
  },
  "application/vnd.yellowriver-custom-menu": {
    "source": "iana",
    "extensions": ["cmp"]
  },
  "application/vnd.zul": {
    "source": "iana",
    "extensions": ["zir","zirz"]
  },
  "application/vnd.zzazz.deck+xml": {
    "source": "iana",
    "extensions": ["zaz"]
  },
  "application/voicexml+xml": {
    "source": "iana",
    "extensions": ["vxml"]
  },
  "application/vq-rtcpxr": {
    "source": "iana"
  },
  "application/watcherinfo+xml": {
    "source": "iana"
  },
  "application/whoispp-query": {
    "source": "iana"
  },
  "application/whoispp-response": {
    "source": "iana"
  },
  "application/widget": {
    "source": "iana",
    "extensions": ["wgt"]
  },
  "application/winhlp": {
    "source": "apache",
    "extensions": ["hlp"]
  },
  "application/wita": {
    "source": "iana"
  },
  "application/wordperfect5.1": {
    "source": "iana"
  },
  "application/wsdl+xml": {
    "source": "iana",
    "extensions": ["wsdl"]
  },
  "application/wspolicy+xml": {
    "source": "iana",
    "extensions": ["wspolicy"]
  },
  "application/x-7z-compressed": {
    "source": "apache",
    "compressible": false,
    "extensions": ["7z"]
  },
  "application/x-abiword": {
    "source": "apache",
    "extensions": ["abw"]
  },
  "application/x-ace-compressed": {
    "source": "apache",
    "extensions": ["ace"]
  },
  "application/x-amf": {
    "source": "apache"
  },
  "application/x-apple-diskimage": {
    "source": "apache",
    "extensions": ["dmg"]
  },
  "application/x-authorware-bin": {
    "source": "apache",
    "extensions": ["aab","x32","u32","vox"]
  },
  "application/x-authorware-map": {
    "source": "apache",
    "extensions": ["aam"]
  },
  "application/x-authorware-seg": {
    "source": "apache",
    "extensions": ["aas"]
  },
  "application/x-bcpio": {
    "source": "apache",
    "extensions": ["bcpio"]
  },
  "application/x-bdoc": {
    "compressible": false,
    "extensions": ["bdoc"]
  },
  "application/x-bittorrent": {
    "source": "apache",
    "extensions": ["torrent"]
  },
  "application/x-blorb": {
    "source": "apache",
    "extensions": ["blb","blorb"]
  },
  "application/x-bzip": {
    "source": "apache",
    "compressible": false,
    "extensions": ["bz"]
  },
  "application/x-bzip2": {
    "source": "apache",
    "compressible": false,
    "extensions": ["bz2","boz"]
  },
  "application/x-cbr": {
    "source": "apache",
    "extensions": ["cbr","cba","cbt","cbz","cb7"]
  },
  "application/x-cdlink": {
    "source": "apache",
    "extensions": ["vcd"]
  },
  "application/x-cfs-compressed": {
    "source": "apache",
    "extensions": ["cfs"]
  },
  "application/x-chat": {
    "source": "apache",
    "extensions": ["chat"]
  },
  "application/x-chess-pgn": {
    "source": "apache",
    "extensions": ["pgn"]
  },
  "application/x-chrome-extension": {
    "extensions": ["crx"]
  },
  "application/x-cocoa": {
    "source": "nginx",
    "extensions": ["cco"]
  },
  "application/x-compress": {
    "source": "apache"
  },
  "application/x-conference": {
    "source": "apache",
    "extensions": ["nsc"]
  },
  "application/x-cpio": {
    "source": "apache",
    "extensions": ["cpio"]
  },
  "application/x-csh": {
    "source": "apache",
    "extensions": ["csh"]
  },
  "application/x-deb": {
    "compressible": false
  },
  "application/x-debian-package": {
    "source": "apache",
    "extensions": ["deb","udeb"]
  },
  "application/x-dgc-compressed": {
    "source": "apache",
    "extensions": ["dgc"]
  },
  "application/x-director": {
    "source": "apache",
    "extensions": ["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]
  },
  "application/x-doom": {
    "source": "apache",
    "extensions": ["wad"]
  },
  "application/x-dtbncx+xml": {
    "source": "apache",
    "extensions": ["ncx"]
  },
  "application/x-dtbook+xml": {
    "source": "apache",
    "extensions": ["dtb"]
  },
  "application/x-dtbresource+xml": {
    "source": "apache",
    "extensions": ["res"]
  },
  "application/x-dvi": {
    "source": "apache",
    "compressible": false,
    "extensions": ["dvi"]
  },
  "application/x-envoy": {
    "source": "apache",
    "extensions": ["evy"]
  },
  "application/x-eva": {
    "source": "apache",
    "extensions": ["eva"]
  },
  "application/x-font-bdf": {
    "source": "apache",
    "extensions": ["bdf"]
  },
  "application/x-font-dos": {
    "source": "apache"
  },
  "application/x-font-framemaker": {
    "source": "apache"
  },
  "application/x-font-ghostscript": {
    "source": "apache",
    "extensions": ["gsf"]
  },
  "application/x-font-libgrx": {
    "source": "apache"
  },
  "application/x-font-linux-psf": {
    "source": "apache",
    "extensions": ["psf"]
  },
  "application/x-font-otf": {
    "source": "apache",
    "compressible": true,
    "extensions": ["otf"]
  },
  "application/x-font-pcf": {
    "source": "apache",
    "extensions": ["pcf"]
  },
  "application/x-font-snf": {
    "source": "apache",
    "extensions": ["snf"]
  },
  "application/x-font-speedo": {
    "source": "apache"
  },
  "application/x-font-sunos-news": {
    "source": "apache"
  },
  "application/x-font-ttf": {
    "source": "apache",
    "compressible": true,
    "extensions": ["ttf","ttc"]
  },
  "application/x-font-type1": {
    "source": "apache",
    "extensions": ["pfa","pfb","pfm","afm"]
  },
  "application/x-font-vfont": {
    "source": "apache"
  },
  "application/x-freearc": {
    "source": "apache",
    "extensions": ["arc"]
  },
  "application/x-futuresplash": {
    "source": "apache",
    "extensions": ["spl"]
  },
  "application/x-gca-compressed": {
    "source": "apache",
    "extensions": ["gca"]
  },
  "application/x-glulx": {
    "source": "apache",
    "extensions": ["ulx"]
  },
  "application/x-gnumeric": {
    "source": "apache",
    "extensions": ["gnumeric"]
  },
  "application/x-gramps-xml": {
    "source": "apache",
    "extensions": ["gramps"]
  },
  "application/x-gtar": {
    "source": "apache",
    "extensions": ["gtar"]
  },
  "application/x-gzip": {
    "source": "apache"
  },
  "application/x-hdf": {
    "source": "apache",
    "extensions": ["hdf"]
  },
  "application/x-httpd-php": {
    "compressible": true,
    "extensions": ["php"]
  },
  "application/x-install-instructions": {
    "source": "apache",
    "extensions": ["install"]
  },
  "application/x-iso9660-image": {
    "source": "apache",
    "extensions": ["iso"]
  },
  "application/x-java-archive-diff": {
    "source": "nginx",
    "extensions": ["jardiff"]
  },
  "application/x-java-jnlp-file": {
    "source": "apache",
    "compressible": false,
    "extensions": ["jnlp"]
  },
  "application/x-javascript": {
    "compressible": true
  },
  "application/x-latex": {
    "source": "apache",
    "compressible": false,
    "extensions": ["latex"]
  },
  "application/x-lua-bytecode": {
    "extensions": ["luac"]
  },
  "application/x-lzh-compressed": {
    "source": "apache",
    "extensions": ["lzh","lha"]
  },
  "application/x-makeself": {
    "source": "nginx",
    "extensions": ["run"]
  },
  "application/x-mie": {
    "source": "apache",
    "extensions": ["mie"]
  },
  "application/x-mobipocket-ebook": {
    "source": "apache",
    "extensions": ["prc","mobi"]
  },
  "application/x-mpegurl": {
    "compressible": false
  },
  "application/x-ms-application": {
    "source": "apache",
    "extensions": ["application"]
  },
  "application/x-ms-shortcut": {
    "source": "apache",
    "extensions": ["lnk"]
  },
  "application/x-ms-wmd": {
    "source": "apache",
    "extensions": ["wmd"]
  },
  "application/x-ms-wmz": {
    "source": "apache",
    "extensions": ["wmz"]
  },
  "application/x-ms-xbap": {
    "source": "apache",
    "extensions": ["xbap"]
  },
  "application/x-msaccess": {
    "source": "apache",
    "extensions": ["mdb"]
  },
  "application/x-msbinder": {
    "source": "apache",
    "extensions": ["obd"]
  },
  "application/x-mscardfile": {
    "source": "apache",
    "extensions": ["crd"]
  },
  "application/x-msclip": {
    "source": "apache",
    "extensions": ["clp"]
  },
  "application/x-msdos-program": {
    "extensions": ["exe"]
  },
  "application/x-msdownload": {
    "source": "apache",
    "extensions": ["exe","dll","com","bat","msi"]
  },
  "application/x-msmediaview": {
    "source": "apache",
    "extensions": ["mvb","m13","m14"]
  },
  "application/x-msmetafile": {
    "source": "apache",
    "extensions": ["wmf","wmz","emf","emz"]
  },
  "application/x-msmoney": {
    "source": "apache",
    "extensions": ["mny"]
  },
  "application/x-mspublisher": {
    "source": "apache",
    "extensions": ["pub"]
  },
  "application/x-msschedule": {
    "source": "apache",
    "extensions": ["scd"]
  },
  "application/x-msterminal": {
    "source": "apache",
    "extensions": ["trm"]
  },
  "application/x-mswrite": {
    "source": "apache",
    "extensions": ["wri"]
  },
  "application/x-netcdf": {
    "source": "apache",
    "extensions": ["nc","cdf"]
  },
  "application/x-ns-proxy-autoconfig": {
    "compressible": true,
    "extensions": ["pac"]
  },
  "application/x-nzb": {
    "source": "apache",
    "extensions": ["nzb"]
  },
  "application/x-perl": {
    "source": "nginx",
    "extensions": ["pl","pm"]
  },
  "application/x-pilot": {
    "source": "nginx",
    "extensions": ["prc","pdb"]
  },
  "application/x-pkcs12": {
    "source": "apache",
    "compressible": false,
    "extensions": ["p12","pfx"]
  },
  "application/x-pkcs7-certificates": {
    "source": "apache",
    "extensions": ["p7b","spc"]
  },
  "application/x-pkcs7-certreqresp": {
    "source": "apache",
    "extensions": ["p7r"]
  },
  "application/x-rar-compressed": {
    "source": "apache",
    "compressible": false,
    "extensions": ["rar"]
  },
  "application/x-redhat-package-manager": {
    "source": "nginx",
    "extensions": ["rpm"]
  },
  "application/x-research-info-systems": {
    "source": "apache",
    "extensions": ["ris"]
  },
  "application/x-sea": {
    "source": "nginx",
    "extensions": ["sea"]
  },
  "application/x-sh": {
    "source": "apache",
    "compressible": true,
    "extensions": ["sh"]
  },
  "application/x-shar": {
    "source": "apache",
    "extensions": ["shar"]
  },
  "application/x-shockwave-flash": {
    "source": "apache",
    "compressible": false,
    "extensions": ["swf"]
  },
  "application/x-silverlight-app": {
    "source": "apache",
    "extensions": ["xap"]
  },
  "application/x-sql": {
    "source": "apache",
    "extensions": ["sql"]
  },
  "application/x-stuffit": {
    "source": "apache",
    "compressible": false,
    "extensions": ["sit"]
  },
  "application/x-stuffitx": {
    "source": "apache",
    "extensions": ["sitx"]
  },
  "application/x-subrip": {
    "source": "apache",
    "extensions": ["srt"]
  },
  "application/x-sv4cpio": {
    "source": "apache",
    "extensions": ["sv4cpio"]
  },
  "application/x-sv4crc": {
    "source": "apache",
    "extensions": ["sv4crc"]
  },
  "application/x-t3vm-image": {
    "source": "apache",
    "extensions": ["t3"]
  },
  "application/x-tads": {
    "source": "apache",
    "extensions": ["gam"]
  },
  "application/x-tar": {
    "source": "apache",
    "compressible": true,
    "extensions": ["tar"]
  },
  "application/x-tcl": {
    "source": "apache",
    "extensions": ["tcl","tk"]
  },
  "application/x-tex": {
    "source": "apache",
    "extensions": ["tex"]
  },
  "application/x-tex-tfm": {
    "source": "apache",
    "extensions": ["tfm"]
  },
  "application/x-texinfo": {
    "source": "apache",
    "extensions": ["texinfo","texi"]
  },
  "application/x-tgif": {
    "source": "apache",
    "extensions": ["obj"]
  },
  "application/x-ustar": {
    "source": "apache",
    "extensions": ["ustar"]
  },
  "application/x-wais-source": {
    "source": "apache",
    "extensions": ["src"]
  },
  "application/x-web-app-manifest+json": {
    "compressible": true,
    "extensions": ["webapp"]
  },
  "application/x-www-form-urlencoded": {
    "source": "iana",
    "compressible": true
  },
  "application/x-x509-ca-cert": {
    "source": "apache",
    "extensions": ["der","crt","pem"]
  },
  "application/x-xfig": {
    "source": "apache",
    "extensions": ["fig"]
  },
  "application/x-xliff+xml": {
    "source": "apache",
    "extensions": ["xlf"]
  },
  "application/x-xpinstall": {
    "source": "apache",
    "compressible": false,
    "extensions": ["xpi"]
  },
  "application/x-xz": {
    "source": "apache",
    "extensions": ["xz"]
  },
  "application/x-zmachine": {
    "source": "apache",
    "extensions": ["z1","z2","z3","z4","z5","z6","z7","z8"]
  },
  "application/x400-bp": {
    "source": "iana"
  },
  "application/xacml+xml": {
    "source": "iana"
  },
  "application/xaml+xml": {
    "source": "apache",
    "extensions": ["xaml"]
  },
  "application/xcap-att+xml": {
    "source": "iana"
  },
  "application/xcap-caps+xml": {
    "source": "iana"
  },
  "application/xcap-diff+xml": {
    "source": "iana",
    "extensions": ["xdf"]
  },
  "application/xcap-el+xml": {
    "source": "iana"
  },
  "application/xcap-error+xml": {
    "source": "iana"
  },
  "application/xcap-ns+xml": {
    "source": "iana"
  },
  "application/xcon-conference-info+xml": {
    "source": "iana"
  },
  "application/xcon-conference-info-diff+xml": {
    "source": "iana"
  },
  "application/xenc+xml": {
    "source": "iana",
    "extensions": ["xenc"]
  },
  "application/xhtml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xhtml","xht"]
  },
  "application/xhtml-voice+xml": {
    "source": "apache"
  },
  "application/xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xml","xsl","xsd"]
  },
  "application/xml-dtd": {
    "source": "iana",
    "compressible": true,
    "extensions": ["dtd"]
  },
  "application/xml-external-parsed-entity": {
    "source": "iana"
  },
  "application/xml-patch+xml": {
    "source": "iana"
  },
  "application/xmpp+xml": {
    "source": "iana"
  },
  "application/xop+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xop"]
  },
  "application/xproc+xml": {
    "source": "apache",
    "extensions": ["xpl"]
  },
  "application/xslt+xml": {
    "source": "iana",
    "extensions": ["xslt"]
  },
  "application/xspf+xml": {
    "source": "apache",
    "extensions": ["xspf"]
  },
  "application/xv+xml": {
    "source": "iana",
    "extensions": ["mxml","xhvml","xvml","xvm"]
  },
  "application/yang": {
    "source": "iana",
    "extensions": ["yang"]
  },
  "application/yin+xml": {
    "source": "iana",
    "extensions": ["yin"]
  },
  "application/zip": {
    "source": "iana",
    "compressible": false,
    "extensions": ["zip"]
  },
  "application/zlib": {
    "source": "iana"
  },
  "audio/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "audio/32kadpcm": {
    "source": "iana"
  },
  "audio/3gpp": {
    "source": "iana"
  },
  "audio/3gpp2": {
    "source": "iana"
  },
  "audio/ac3": {
    "source": "iana"
  },
  "audio/adpcm": {
    "source": "apache",
    "extensions": ["adp"]
  },
  "audio/amr": {
    "source": "iana"
  },
  "audio/amr-wb": {
    "source": "iana"
  },
  "audio/amr-wb+": {
    "source": "iana"
  },
  "audio/aptx": {
    "source": "iana"
  },
  "audio/asc": {
    "source": "iana"
  },
  "audio/atrac-advanced-lossless": {
    "source": "iana"
  },
  "audio/atrac-x": {
    "source": "iana"
  },
  "audio/atrac3": {
    "source": "iana"
  },
  "audio/basic": {
    "source": "iana",
    "compressible": false,
    "extensions": ["au","snd"]
  },
  "audio/bv16": {
    "source": "iana"
  },
  "audio/bv32": {
    "source": "iana"
  },
  "audio/clearmode": {
    "source": "iana"
  },
  "audio/cn": {
    "source": "iana"
  },
  "audio/dat12": {
    "source": "iana"
  },
  "audio/dls": {
    "source": "iana"
  },
  "audio/dsr-es201108": {
    "source": "iana"
  },
  "audio/dsr-es202050": {
    "source": "iana"
  },
  "audio/dsr-es202211": {
    "source": "iana"
  },
  "audio/dsr-es202212": {
    "source": "iana"
  },
  "audio/dv": {
    "source": "iana"
  },
  "audio/dvi4": {
    "source": "iana"
  },
  "audio/eac3": {
    "source": "iana"
  },
  "audio/encaprtp": {
    "source": "iana"
  },
  "audio/evrc": {
    "source": "iana"
  },
  "audio/evrc-qcp": {
    "source": "iana"
  },
  "audio/evrc0": {
    "source": "iana"
  },
  "audio/evrc1": {
    "source": "iana"
  },
  "audio/evrcb": {
    "source": "iana"
  },
  "audio/evrcb0": {
    "source": "iana"
  },
  "audio/evrcb1": {
    "source": "iana"
  },
  "audio/evrcnw": {
    "source": "iana"
  },
  "audio/evrcnw0": {
    "source": "iana"
  },
  "audio/evrcnw1": {
    "source": "iana"
  },
  "audio/evrcwb": {
    "source": "iana"
  },
  "audio/evrcwb0": {
    "source": "iana"
  },
  "audio/evrcwb1": {
    "source": "iana"
  },
  "audio/evs": {
    "source": "iana"
  },
  "audio/fwdred": {
    "source": "iana"
  },
  "audio/g711-0": {
    "source": "iana"
  },
  "audio/g719": {
    "source": "iana"
  },
  "audio/g722": {
    "source": "iana"
  },
  "audio/g7221": {
    "source": "iana"
  },
  "audio/g723": {
    "source": "iana"
  },
  "audio/g726-16": {
    "source": "iana"
  },
  "audio/g726-24": {
    "source": "iana"
  },
  "audio/g726-32": {
    "source": "iana"
  },
  "audio/g726-40": {
    "source": "iana"
  },
  "audio/g728": {
    "source": "iana"
  },
  "audio/g729": {
    "source": "iana"
  },
  "audio/g7291": {
    "source": "iana"
  },
  "audio/g729d": {
    "source": "iana"
  },
  "audio/g729e": {
    "source": "iana"
  },
  "audio/gsm": {
    "source": "iana"
  },
  "audio/gsm-efr": {
    "source": "iana"
  },
  "audio/gsm-hr-08": {
    "source": "iana"
  },
  "audio/ilbc": {
    "source": "iana"
  },
  "audio/ip-mr_v2.5": {
    "source": "iana"
  },
  "audio/isac": {
    "source": "apache"
  },
  "audio/l16": {
    "source": "iana"
  },
  "audio/l20": {
    "source": "iana"
  },
  "audio/l24": {
    "source": "iana",
    "compressible": false
  },
  "audio/l8": {
    "source": "iana"
  },
  "audio/lpc": {
    "source": "iana"
  },
  "audio/midi": {
    "source": "apache",
    "extensions": ["mid","midi","kar","rmi"]
  },
  "audio/mobile-xmf": {
    "source": "iana"
  },
  "audio/mp4": {
    "source": "iana",
    "compressible": false,
    "extensions": ["mp4a","m4a"]
  },
  "audio/mp4a-latm": {
    "source": "iana"
  },
  "audio/mpa": {
    "source": "iana"
  },
  "audio/mpa-robust": {
    "source": "iana"
  },
  "audio/mpeg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["mpga","mp2","mp2a","mp3","m2a","m3a"]
  },
  "audio/mpeg4-generic": {
    "source": "iana"
  },
  "audio/musepack": {
    "source": "apache"
  },
  "audio/ogg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["oga","ogg","spx"]
  },
  "audio/opus": {
    "source": "iana"
  },
  "audio/parityfec": {
    "source": "iana"
  },
  "audio/pcma": {
    "source": "iana"
  },
  "audio/pcma-wb": {
    "source": "iana"
  },
  "audio/pcmu": {
    "source": "iana"
  },
  "audio/pcmu-wb": {
    "source": "iana"
  },
  "audio/prs.sid": {
    "source": "iana"
  },
  "audio/qcelp": {
    "source": "iana"
  },
  "audio/raptorfec": {
    "source": "iana"
  },
  "audio/red": {
    "source": "iana"
  },
  "audio/rtp-enc-aescm128": {
    "source": "iana"
  },
  "audio/rtp-midi": {
    "source": "iana"
  },
  "audio/rtploopback": {
    "source": "iana"
  },
  "audio/rtx": {
    "source": "iana"
  },
  "audio/s3m": {
    "source": "apache",
    "extensions": ["s3m"]
  },
  "audio/silk": {
    "source": "apache",
    "extensions": ["sil"]
  },
  "audio/smv": {
    "source": "iana"
  },
  "audio/smv-qcp": {
    "source": "iana"
  },
  "audio/smv0": {
    "source": "iana"
  },
  "audio/sp-midi": {
    "source": "iana"
  },
  "audio/speex": {
    "source": "iana"
  },
  "audio/t140c": {
    "source": "iana"
  },
  "audio/t38": {
    "source": "iana"
  },
  "audio/telephone-event": {
    "source": "iana"
  },
  "audio/tone": {
    "source": "iana"
  },
  "audio/uemclip": {
    "source": "iana"
  },
  "audio/ulpfec": {
    "source": "iana"
  },
  "audio/vdvi": {
    "source": "iana"
  },
  "audio/vmr-wb": {
    "source": "iana"
  },
  "audio/vnd.3gpp.iufp": {
    "source": "iana"
  },
  "audio/vnd.4sb": {
    "source": "iana"
  },
  "audio/vnd.audiokoz": {
    "source": "iana"
  },
  "audio/vnd.celp": {
    "source": "iana"
  },
  "audio/vnd.cisco.nse": {
    "source": "iana"
  },
  "audio/vnd.cmles.radio-events": {
    "source": "iana"
  },
  "audio/vnd.cns.anp1": {
    "source": "iana"
  },
  "audio/vnd.cns.inf1": {
    "source": "iana"
  },
  "audio/vnd.dece.audio": {
    "source": "iana",
    "extensions": ["uva","uvva"]
  },
  "audio/vnd.digital-winds": {
    "source": "iana",
    "extensions": ["eol"]
  },
  "audio/vnd.dlna.adts": {
    "source": "iana"
  },
  "audio/vnd.dolby.heaac.1": {
    "source": "iana"
  },
  "audio/vnd.dolby.heaac.2": {
    "source": "iana"
  },
  "audio/vnd.dolby.mlp": {
    "source": "iana"
  },
  "audio/vnd.dolby.mps": {
    "source": "iana"
  },
  "audio/vnd.dolby.pl2": {
    "source": "iana"
  },
  "audio/vnd.dolby.pl2x": {
    "source": "iana"
  },
  "audio/vnd.dolby.pl2z": {
    "source": "iana"
  },
  "audio/vnd.dolby.pulse.1": {
    "source": "iana"
  },
  "audio/vnd.dra": {
    "source": "iana",
    "extensions": ["dra"]
  },
  "audio/vnd.dts": {
    "source": "iana",
    "extensions": ["dts"]
  },
  "audio/vnd.dts.hd": {
    "source": "iana",
    "extensions": ["dtshd"]
  },
  "audio/vnd.dvb.file": {
    "source": "iana"
  },
  "audio/vnd.everad.plj": {
    "source": "iana"
  },
  "audio/vnd.hns.audio": {
    "source": "iana"
  },
  "audio/vnd.lucent.voice": {
    "source": "iana",
    "extensions": ["lvp"]
  },
  "audio/vnd.ms-playready.media.pya": {
    "source": "iana",
    "extensions": ["pya"]
  },
  "audio/vnd.nokia.mobile-xmf": {
    "source": "iana"
  },
  "audio/vnd.nortel.vbk": {
    "source": "iana"
  },
  "audio/vnd.nuera.ecelp4800": {
    "source": "iana",
    "extensions": ["ecelp4800"]
  },
  "audio/vnd.nuera.ecelp7470": {
    "source": "iana",
    "extensions": ["ecelp7470"]
  },
  "audio/vnd.nuera.ecelp9600": {
    "source": "iana",
    "extensions": ["ecelp9600"]
  },
  "audio/vnd.octel.sbc": {
    "source": "iana"
  },
  "audio/vnd.qcelp": {
    "source": "iana"
  },
  "audio/vnd.rhetorex.32kadpcm": {
    "source": "iana"
  },
  "audio/vnd.rip": {
    "source": "iana",
    "extensions": ["rip"]
  },
  "audio/vnd.rn-realaudio": {
    "compressible": false
  },
  "audio/vnd.sealedmedia.softseal.mpeg": {
    "source": "iana"
  },
  "audio/vnd.vmx.cvsd": {
    "source": "iana"
  },
  "audio/vnd.wave": {
    "compressible": false
  },
  "audio/vorbis": {
    "source": "iana",
    "compressible": false
  },
  "audio/vorbis-config": {
    "source": "iana"
  },
  "audio/wav": {
    "compressible": false,
    "extensions": ["wav"]
  },
  "audio/wave": {
    "compressible": false,
    "extensions": ["wav"]
  },
  "audio/webm": {
    "source": "apache",
    "compressible": false,
    "extensions": ["weba"]
  },
  "audio/x-aac": {
    "source": "apache",
    "compressible": false,
    "extensions": ["aac"]
  },
  "audio/x-aiff": {
    "source": "apache",
    "extensions": ["aif","aiff","aifc"]
  },
  "audio/x-caf": {
    "source": "apache",
    "compressible": false,
    "extensions": ["caf"]
  },
  "audio/x-flac": {
    "source": "apache",
    "extensions": ["flac"]
  },
  "audio/x-m4a": {
    "source": "nginx",
    "extensions": ["m4a"]
  },
  "audio/x-matroska": {
    "source": "apache",
    "extensions": ["mka"]
  },
  "audio/x-mpegurl": {
    "source": "apache",
    "extensions": ["m3u"]
  },
  "audio/x-ms-wax": {
    "source": "apache",
    "extensions": ["wax"]
  },
  "audio/x-ms-wma": {
    "source": "apache",
    "extensions": ["wma"]
  },
  "audio/x-pn-realaudio": {
    "source": "apache",
    "extensions": ["ram","ra"]
  },
  "audio/x-pn-realaudio-plugin": {
    "source": "apache",
    "extensions": ["rmp"]
  },
  "audio/x-realaudio": {
    "source": "nginx",
    "extensions": ["ra"]
  },
  "audio/x-tta": {
    "source": "apache"
  },
  "audio/x-wav": {
    "source": "apache",
    "extensions": ["wav"]
  },
  "audio/xm": {
    "source": "apache",
    "extensions": ["xm"]
  },
  "chemical/x-cdx": {
    "source": "apache",
    "extensions": ["cdx"]
  },
  "chemical/x-cif": {
    "source": "apache",
    "extensions": ["cif"]
  },
  "chemical/x-cmdf": {
    "source": "apache",
    "extensions": ["cmdf"]
  },
  "chemical/x-cml": {
    "source": "apache",
    "extensions": ["cml"]
  },
  "chemical/x-csml": {
    "source": "apache",
    "extensions": ["csml"]
  },
  "chemical/x-pdb": {
    "source": "apache"
  },
  "chemical/x-xyz": {
    "source": "apache",
    "extensions": ["xyz"]
  },
  "font/opentype": {
    "compressible": true,
    "extensions": ["otf"]
  },
  "image/bmp": {
    "source": "apache",
    "compressible": true,
    "extensions": ["bmp"]
  },
  "image/cgm": {
    "source": "iana",
    "extensions": ["cgm"]
  },
  "image/fits": {
    "source": "iana"
  },
  "image/g3fax": {
    "source": "iana",
    "extensions": ["g3"]
  },
  "image/gif": {
    "source": "iana",
    "compressible": false,
    "extensions": ["gif"]
  },
  "image/ief": {
    "source": "iana",
    "extensions": ["ief"]
  },
  "image/jp2": {
    "source": "iana"
  },
  "image/jpeg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["jpeg","jpg","jpe"]
  },
  "image/jpm": {
    "source": "iana"
  },
  "image/jpx": {
    "source": "iana"
  },
  "image/ktx": {
    "source": "iana",
    "extensions": ["ktx"]
  },
  "image/naplps": {
    "source": "iana"
  },
  "image/pjpeg": {
    "compressible": false
  },
  "image/png": {
    "source": "iana",
    "compressible": false,
    "extensions": ["png"]
  },
  "image/prs.btif": {
    "source": "iana",
    "extensions": ["btif"]
  },
  "image/prs.pti": {
    "source": "iana"
  },
  "image/pwg-raster": {
    "source": "iana"
  },
  "image/sgi": {
    "source": "apache",
    "extensions": ["sgi"]
  },
  "image/svg+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["svg","svgz"]
  },
  "image/t38": {
    "source": "iana"
  },
  "image/tiff": {
    "source": "iana",
    "compressible": false,
    "extensions": ["tiff","tif"]
  },
  "image/tiff-fx": {
    "source": "iana"
  },
  "image/vnd.adobe.photoshop": {
    "source": "iana",
    "compressible": true,
    "extensions": ["psd"]
  },
  "image/vnd.airzip.accelerator.azv": {
    "source": "iana"
  },
  "image/vnd.cns.inf2": {
    "source": "iana"
  },
  "image/vnd.dece.graphic": {
    "source": "iana",
    "extensions": ["uvi","uvvi","uvg","uvvg"]
  },
  "image/vnd.djvu": {
    "source": "iana",
    "extensions": ["djvu","djv"]
  },
  "image/vnd.dvb.subtitle": {
    "source": "iana",
    "extensions": ["sub"]
  },
  "image/vnd.dwg": {
    "source": "iana",
    "extensions": ["dwg"]
  },
  "image/vnd.dxf": {
    "source": "iana",
    "extensions": ["dxf"]
  },
  "image/vnd.fastbidsheet": {
    "source": "iana",
    "extensions": ["fbs"]
  },
  "image/vnd.fpx": {
    "source": "iana",
    "extensions": ["fpx"]
  },
  "image/vnd.fst": {
    "source": "iana",
    "extensions": ["fst"]
  },
  "image/vnd.fujixerox.edmics-mmr": {
    "source": "iana",
    "extensions": ["mmr"]
  },
  "image/vnd.fujixerox.edmics-rlc": {
    "source": "iana",
    "extensions": ["rlc"]
  },
  "image/vnd.globalgraphics.pgb": {
    "source": "iana"
  },
  "image/vnd.microsoft.icon": {
    "source": "iana"
  },
  "image/vnd.mix": {
    "source": "iana"
  },
  "image/vnd.mozilla.apng": {
    "source": "iana"
  },
  "image/vnd.ms-modi": {
    "source": "iana",
    "extensions": ["mdi"]
  },
  "image/vnd.ms-photo": {
    "source": "apache",
    "extensions": ["wdp"]
  },
  "image/vnd.net-fpx": {
    "source": "iana",
    "extensions": ["npx"]
  },
  "image/vnd.radiance": {
    "source": "iana"
  },
  "image/vnd.sealed.png": {
    "source": "iana"
  },
  "image/vnd.sealedmedia.softseal.gif": {
    "source": "iana"
  },
  "image/vnd.sealedmedia.softseal.jpg": {
    "source": "iana"
  },
  "image/vnd.svf": {
    "source": "iana"
  },
  "image/vnd.tencent.tap": {
    "source": "iana"
  },
  "image/vnd.valve.source.texture": {
    "source": "iana"
  },
  "image/vnd.wap.wbmp": {
    "source": "iana",
    "extensions": ["wbmp"]
  },
  "image/vnd.xiff": {
    "source": "iana",
    "extensions": ["xif"]
  },
  "image/vnd.zbrush.pcx": {
    "source": "iana"
  },
  "image/webp": {
    "source": "apache",
    "extensions": ["webp"]
  },
  "image/x-3ds": {
    "source": "apache",
    "extensions": ["3ds"]
  },
  "image/x-cmu-raster": {
    "source": "apache",
    "extensions": ["ras"]
  },
  "image/x-cmx": {
    "source": "apache",
    "extensions": ["cmx"]
  },
  "image/x-freehand": {
    "source": "apache",
    "extensions": ["fh","fhc","fh4","fh5","fh7"]
  },
  "image/x-icon": {
    "source": "apache",
    "compressible": true,
    "extensions": ["ico"]
  },
  "image/x-jng": {
    "source": "nginx",
    "extensions": ["jng"]
  },
  "image/x-mrsid-image": {
    "source": "apache",
    "extensions": ["sid"]
  },
  "image/x-ms-bmp": {
    "source": "nginx",
    "compressible": true,
    "extensions": ["bmp"]
  },
  "image/x-pcx": {
    "source": "apache",
    "extensions": ["pcx"]
  },
  "image/x-pict": {
    "source": "apache",
    "extensions": ["pic","pct"]
  },
  "image/x-portable-anymap": {
    "source": "apache",
    "extensions": ["pnm"]
  },
  "image/x-portable-bitmap": {
    "source": "apache",
    "extensions": ["pbm"]
  },
  "image/x-portable-graymap": {
    "source": "apache",
    "extensions": ["pgm"]
  },
  "image/x-portable-pixmap": {
    "source": "apache",
    "extensions": ["ppm"]
  },
  "image/x-rgb": {
    "source": "apache",
    "extensions": ["rgb"]
  },
  "image/x-tga": {
    "source": "apache",
    "extensions": ["tga"]
  },
  "image/x-xbitmap": {
    "source": "apache",
    "extensions": ["xbm"]
  },
  "image/x-xcf": {
    "compressible": false
  },
  "image/x-xpixmap": {
    "source": "apache",
    "extensions": ["xpm"]
  },
  "image/x-xwindowdump": {
    "source": "apache",
    "extensions": ["xwd"]
  },
  "message/cpim": {
    "source": "iana"
  },
  "message/delivery-status": {
    "source": "iana"
  },
  "message/disposition-notification": {
    "source": "iana"
  },
  "message/external-body": {
    "source": "iana"
  },
  "message/feedback-report": {
    "source": "iana"
  },
  "message/global": {
    "source": "iana"
  },
  "message/global-delivery-status": {
    "source": "iana"
  },
  "message/global-disposition-notification": {
    "source": "iana"
  },
  "message/global-headers": {
    "source": "iana"
  },
  "message/http": {
    "source": "iana",
    "compressible": false
  },
  "message/imdn+xml": {
    "source": "iana",
    "compressible": true
  },
  "message/news": {
    "source": "iana"
  },
  "message/partial": {
    "source": "iana",
    "compressible": false
  },
  "message/rfc822": {
    "source": "iana",
    "compressible": true,
    "extensions": ["eml","mime"]
  },
  "message/s-http": {
    "source": "iana"
  },
  "message/sip": {
    "source": "iana"
  },
  "message/sipfrag": {
    "source": "iana"
  },
  "message/tracking-status": {
    "source": "iana"
  },
  "message/vnd.si.simp": {
    "source": "iana"
  },
  "message/vnd.wfa.wsc": {
    "source": "iana"
  },
  "model/iges": {
    "source": "iana",
    "compressible": false,
    "extensions": ["igs","iges"]
  },
  "model/mesh": {
    "source": "iana",
    "compressible": false,
    "extensions": ["msh","mesh","silo"]
  },
  "model/vnd.collada+xml": {
    "source": "iana",
    "extensions": ["dae"]
  },
  "model/vnd.dwf": {
    "source": "iana",
    "extensions": ["dwf"]
  },
  "model/vnd.flatland.3dml": {
    "source": "iana"
  },
  "model/vnd.gdl": {
    "source": "iana",
    "extensions": ["gdl"]
  },
  "model/vnd.gs-gdl": {
    "source": "apache"
  },
  "model/vnd.gs.gdl": {
    "source": "iana"
  },
  "model/vnd.gtw": {
    "source": "iana",
    "extensions": ["gtw"]
  },
  "model/vnd.moml+xml": {
    "source": "iana"
  },
  "model/vnd.mts": {
    "source": "iana",
    "extensions": ["mts"]
  },
  "model/vnd.opengex": {
    "source": "iana"
  },
  "model/vnd.parasolid.transmit.binary": {
    "source": "iana"
  },
  "model/vnd.parasolid.transmit.text": {
    "source": "iana"
  },
  "model/vnd.valve.source.compiled-map": {
    "source": "iana"
  },
  "model/vnd.vtu": {
    "source": "iana",
    "extensions": ["vtu"]
  },
  "model/vrml": {
    "source": "iana",
    "compressible": false,
    "extensions": ["wrl","vrml"]
  },
  "model/x3d+binary": {
    "source": "apache",
    "compressible": false,
    "extensions": ["x3db","x3dbz"]
  },
  "model/x3d+fastinfoset": {
    "source": "iana"
  },
  "model/x3d+vrml": {
    "source": "apache",
    "compressible": false,
    "extensions": ["x3dv","x3dvz"]
  },
  "model/x3d+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["x3d","x3dz"]
  },
  "model/x3d-vrml": {
    "source": "iana"
  },
  "multipart/alternative": {
    "source": "iana",
    "compressible": false
  },
  "multipart/appledouble": {
    "source": "iana"
  },
  "multipart/byteranges": {
    "source": "iana"
  },
  "multipart/digest": {
    "source": "iana"
  },
  "multipart/encrypted": {
    "source": "iana",
    "compressible": false
  },
  "multipart/form-data": {
    "source": "iana",
    "compressible": false
  },
  "multipart/header-set": {
    "source": "iana"
  },
  "multipart/mixed": {
    "source": "iana",
    "compressible": false
  },
  "multipart/parallel": {
    "source": "iana"
  },
  "multipart/related": {
    "source": "iana",
    "compressible": false
  },
  "multipart/report": {
    "source": "iana"
  },
  "multipart/signed": {
    "source": "iana",
    "compressible": false
  },
  "multipart/voice-message": {
    "source": "iana"
  },
  "multipart/x-mixed-replace": {
    "source": "iana"
  },
  "text/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "text/cache-manifest": {
    "source": "iana",
    "compressible": true,
    "extensions": ["appcache","manifest"]
  },
  "text/calendar": {
    "source": "iana",
    "extensions": ["ics","ifb"]
  },
  "text/calender": {
    "compressible": true
  },
  "text/cmd": {
    "compressible": true
  },
  "text/coffeescript": {
    "extensions": ["coffee","litcoffee"]
  },
  "text/css": {
    "source": "iana",
    "compressible": true,
    "extensions": ["css"]
  },
  "text/csv": {
    "source": "iana",
    "compressible": true,
    "extensions": ["csv"]
  },
  "text/csv-schema": {
    "source": "iana"
  },
  "text/directory": {
    "source": "iana"
  },
  "text/dns": {
    "source": "iana"
  },
  "text/ecmascript": {
    "source": "iana"
  },
  "text/encaprtp": {
    "source": "iana"
  },
  "text/enriched": {
    "source": "iana"
  },
  "text/fwdred": {
    "source": "iana"
  },
  "text/grammar-ref-list": {
    "source": "iana"
  },
  "text/hjson": {
    "extensions": ["hjson"]
  },
  "text/html": {
    "source": "iana",
    "compressible": true,
    "extensions": ["html","htm","shtml"]
  },
  "text/jade": {
    "extensions": ["jade"]
  },
  "text/javascript": {
    "source": "iana",
    "compressible": true
  },
  "text/jcr-cnd": {
    "source": "iana"
  },
  "text/jsx": {
    "compressible": true,
    "extensions": ["jsx"]
  },
  "text/less": {
    "extensions": ["less"]
  },
  "text/markdown": {
    "source": "iana"
  },
  "text/mathml": {
    "source": "nginx",
    "extensions": ["mml"]
  },
  "text/mizar": {
    "source": "iana"
  },
  "text/n3": {
    "source": "iana",
    "compressible": true,
    "extensions": ["n3"]
  },
  "text/parameters": {
    "source": "iana"
  },
  "text/parityfec": {
    "source": "iana"
  },
  "text/plain": {
    "source": "iana",
    "compressible": true,
    "extensions": ["txt","text","conf","def","list","log","in","ini"]
  },
  "text/provenance-notation": {
    "source": "iana"
  },
  "text/prs.fallenstein.rst": {
    "source": "iana"
  },
  "text/prs.lines.tag": {
    "source": "iana",
    "extensions": ["dsc"]
  },
  "text/raptorfec": {
    "source": "iana"
  },
  "text/red": {
    "source": "iana"
  },
  "text/rfc822-headers": {
    "source": "iana"
  },
  "text/richtext": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rtx"]
  },
  "text/rtf": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rtf"]
  },
  "text/rtp-enc-aescm128": {
    "source": "iana"
  },
  "text/rtploopback": {
    "source": "iana"
  },
  "text/rtx": {
    "source": "iana"
  },
  "text/sgml": {
    "source": "iana",
    "extensions": ["sgml","sgm"]
  },
  "text/stylus": {
    "extensions": ["stylus","styl"]
  },
  "text/t140": {
    "source": "iana"
  },
  "text/tab-separated-values": {
    "source": "iana",
    "compressible": true,
    "extensions": ["tsv"]
  },
  "text/troff": {
    "source": "iana",
    "extensions": ["t","tr","roff","man","me","ms"]
  },
  "text/turtle": {
    "source": "iana",
    "extensions": ["ttl"]
  },
  "text/ulpfec": {
    "source": "iana"
  },
  "text/uri-list": {
    "source": "iana",
    "compressible": true,
    "extensions": ["uri","uris","urls"]
  },
  "text/vcard": {
    "source": "iana",
    "compressible": true,
    "extensions": ["vcard"]
  },
  "text/vnd.a": {
    "source": "iana"
  },
  "text/vnd.abc": {
    "source": "iana"
  },
  "text/vnd.curl": {
    "source": "iana",
    "extensions": ["curl"]
  },
  "text/vnd.curl.dcurl": {
    "source": "apache",
    "extensions": ["dcurl"]
  },
  "text/vnd.curl.mcurl": {
    "source": "apache",
    "extensions": ["mcurl"]
  },
  "text/vnd.curl.scurl": {
    "source": "apache",
    "extensions": ["scurl"]
  },
  "text/vnd.debian.copyright": {
    "source": "iana"
  },
  "text/vnd.dmclientscript": {
    "source": "iana"
  },
  "text/vnd.dvb.subtitle": {
    "source": "iana",
    "extensions": ["sub"]
  },
  "text/vnd.esmertec.theme-descriptor": {
    "source": "iana"
  },
  "text/vnd.fly": {
    "source": "iana",
    "extensions": ["fly"]
  },
  "text/vnd.fmi.flexstor": {
    "source": "iana",
    "extensions": ["flx"]
  },
  "text/vnd.graphviz": {
    "source": "iana",
    "extensions": ["gv"]
  },
  "text/vnd.in3d.3dml": {
    "source": "iana",
    "extensions": ["3dml"]
  },
  "text/vnd.in3d.spot": {
    "source": "iana",
    "extensions": ["spot"]
  },
  "text/vnd.iptc.newsml": {
    "source": "iana"
  },
  "text/vnd.iptc.nitf": {
    "source": "iana"
  },
  "text/vnd.latex-z": {
    "source": "iana"
  },
  "text/vnd.motorola.reflex": {
    "source": "iana"
  },
  "text/vnd.ms-mediapackage": {
    "source": "iana"
  },
  "text/vnd.net2phone.commcenter.command": {
    "source": "iana"
  },
  "text/vnd.radisys.msml-basic-layout": {
    "source": "iana"
  },
  "text/vnd.si.uricatalogue": {
    "source": "iana"
  },
  "text/vnd.sun.j2me.app-descriptor": {
    "source": "iana",
    "extensions": ["jad"]
  },
  "text/vnd.trolltech.linguist": {
    "source": "iana"
  },
  "text/vnd.wap.si": {
    "source": "iana"
  },
  "text/vnd.wap.sl": {
    "source": "iana"
  },
  "text/vnd.wap.wml": {
    "source": "iana",
    "extensions": ["wml"]
  },
  "text/vnd.wap.wmlscript": {
    "source": "iana",
    "extensions": ["wmls"]
  },
  "text/vtt": {
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["vtt"]
  },
  "text/x-asm": {
    "source": "apache",
    "extensions": ["s","asm"]
  },
  "text/x-c": {
    "source": "apache",
    "extensions": ["c","cc","cxx","cpp","h","hh","dic"]
  },
  "text/x-component": {
    "source": "nginx",
    "extensions": ["htc"]
  },
  "text/x-fortran": {
    "source": "apache",
    "extensions": ["f","for","f77","f90"]
  },
  "text/x-gwt-rpc": {
    "compressible": true
  },
  "text/x-handlebars-template": {
    "extensions": ["hbs"]
  },
  "text/x-java-source": {
    "source": "apache",
    "extensions": ["java"]
  },
  "text/x-jquery-tmpl": {
    "compressible": true
  },
  "text/x-lua": {
    "extensions": ["lua"]
  },
  "text/x-markdown": {
    "compressible": true,
    "extensions": ["markdown","md","mkd"]
  },
  "text/x-nfo": {
    "source": "apache",
    "extensions": ["nfo"]
  },
  "text/x-opml": {
    "source": "apache",
    "extensions": ["opml"]
  },
  "text/x-pascal": {
    "source": "apache",
    "extensions": ["p","pas"]
  },
  "text/x-processing": {
    "compressible": true,
    "extensions": ["pde"]
  },
  "text/x-sass": {
    "extensions": ["sass"]
  },
  "text/x-scss": {
    "extensions": ["scss"]
  },
  "text/x-setext": {
    "source": "apache",
    "extensions": ["etx"]
  },
  "text/x-sfv": {
    "source": "apache",
    "extensions": ["sfv"]
  },
  "text/x-suse-ymp": {
    "compressible": true,
    "extensions": ["ymp"]
  },
  "text/x-uuencode": {
    "source": "apache",
    "extensions": ["uu"]
  },
  "text/x-vcalendar": {
    "source": "apache",
    "extensions": ["vcs"]
  },
  "text/x-vcard": {
    "source": "apache",
    "extensions": ["vcf"]
  },
  "text/xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xml"]
  },
  "text/xml-external-parsed-entity": {
    "source": "iana"
  },
  "text/yaml": {
    "extensions": ["yaml","yml"]
  },
  "video/1d-interleaved-parityfec": {
    "source": "apache"
  },
  "video/3gpp": {
    "source": "apache",
    "extensions": ["3gp","3gpp"]
  },
  "video/3gpp-tt": {
    "source": "apache"
  },
  "video/3gpp2": {
    "source": "apache",
    "extensions": ["3g2"]
  },
  "video/bmpeg": {
    "source": "apache"
  },
  "video/bt656": {
    "source": "apache"
  },
  "video/celb": {
    "source": "apache"
  },
  "video/dv": {
    "source": "apache"
  },
  "video/h261": {
    "source": "apache",
    "extensions": ["h261"]
  },
  "video/h263": {
    "source": "apache",
    "extensions": ["h263"]
  },
  "video/h263-1998": {
    "source": "apache"
  },
  "video/h263-2000": {
    "source": "apache"
  },
  "video/h264": {
    "source": "apache",
    "extensions": ["h264"]
  },
  "video/h264-rcdo": {
    "source": "apache"
  },
  "video/h264-svc": {
    "source": "apache"
  },
  "video/jpeg": {
    "source": "apache",
    "extensions": ["jpgv"]
  },
  "video/jpeg2000": {
    "source": "apache"
  },
  "video/jpm": {
    "source": "apache",
    "extensions": ["jpm","jpgm"]
  },
  "video/mj2": {
    "source": "apache",
    "extensions": ["mj2","mjp2"]
  },
  "video/mp1s": {
    "source": "apache"
  },
  "video/mp2p": {
    "source": "apache"
  },
  "video/mp2t": {
    "source": "apache",
    "extensions": ["ts"]
  },
  "video/mp4": {
    "source": "apache",
    "compressible": false,
    "extensions": ["mp4","mp4v","mpg4"]
  },
  "video/mp4v-es": {
    "source": "apache"
  },
  "video/mpeg": {
    "source": "apache",
    "compressible": false,
    "extensions": ["mpeg","mpg","mpe","m1v","m2v"]
  },
  "video/mpeg4-generic": {
    "source": "apache"
  },
  "video/mpv": {
    "source": "apache"
  },
  "video/nv": {
    "source": "apache"
  },
  "video/ogg": {
    "source": "apache",
    "compressible": false,
    "extensions": ["ogv"]
  },
  "video/parityfec": {
    "source": "apache"
  },
  "video/pointer": {
    "source": "apache"
  },
  "video/quicktime": {
    "source": "apache",
    "compressible": false,
    "extensions": ["qt","mov"]
  },
  "video/raw": {
    "source": "apache"
  },
  "video/rtp-enc-aescm128": {
    "source": "apache"
  },
  "video/rtx": {
    "source": "apache"
  },
  "video/smpte292m": {
    "source": "apache"
  },
  "video/ulpfec": {
    "source": "apache"
  },
  "video/vc1": {
    "source": "apache"
  },
  "video/vnd.cctv": {
    "source": "apache"
  },
  "video/vnd.dece.hd": {
    "source": "apache",
    "extensions": ["uvh","uvvh"]
  },
  "video/vnd.dece.mobile": {
    "source": "apache",
    "extensions": ["uvm","uvvm"]
  },
  "video/vnd.dece.mp4": {
    "source": "apache"
  },
  "video/vnd.dece.pd": {
    "source": "apache",
    "extensions": ["uvp","uvvp"]
  },
  "video/vnd.dece.sd": {
    "source": "apache",
    "extensions": ["uvs","uvvs"]
  },
  "video/vnd.dece.video": {
    "source": "apache",
    "extensions": ["uvv","uvvv"]
  },
  "video/vnd.directv.mpeg": {
    "source": "apache"
  },
  "video/vnd.directv.mpeg-tts": {
    "source": "apache"
  },
  "video/vnd.dlna.mpeg-tts": {
    "source": "apache"
  },
  "video/vnd.dvb.file": {
    "source": "apache",
    "extensions": ["dvb"]
  },
  "video/vnd.fvt": {
    "source": "apache",
    "extensions": ["fvt"]
  },
  "video/vnd.hns.video": {
    "source": "apache"
  },
  "video/vnd.iptvforum.1dparityfec-1010": {
    "source": "apache"
  },
  "video/vnd.iptvforum.1dparityfec-2005": {
    "source": "apache"
  },
  "video/vnd.iptvforum.2dparityfec-1010": {
    "source": "apache"
  },
  "video/vnd.iptvforum.2dparityfec-2005": {
    "source": "apache"
  },
  "video/vnd.iptvforum.ttsavc": {
    "source": "apache"
  },
  "video/vnd.iptvforum.ttsmpeg2": {
    "source": "apache"
  },
  "video/vnd.motorola.video": {
    "source": "apache"
  },
  "video/vnd.motorola.videop": {
    "source": "apache"
  },
  "video/vnd.mpegurl": {
    "source": "apache",
    "extensions": ["mxu","m4u"]
  },
  "video/vnd.ms-playready.media.pyv": {
    "source": "apache",
    "extensions": ["pyv"]
  },
  "video/vnd.nokia.interleaved-multimedia": {
    "source": "apache"
  },
  "video/vnd.nokia.videovoip": {
    "source": "apache"
  },
  "video/vnd.objectvideo": {
    "source": "apache"
  },
  "video/vnd.sealed.mpeg1": {
    "source": "apache"
  },
  "video/vnd.sealed.mpeg4": {
    "source": "apache"
  },
  "video/vnd.sealed.swf": {
    "source": "apache"
  },
  "video/vnd.sealedmedia.softseal.mov": {
    "source": "apache"
  },
  "video/vnd.uvvu.mp4": {
    "source": "apache",
    "extensions": ["uvu","uvvu"]
  },
  "video/vnd.vivo": {
    "source": "apache",
    "extensions": ["viv"]
  },
  "video/webm": {
    "source": "apache",
    "compressible": false,
    "extensions": ["webm"]
  },
  "video/x-f4v": {
    "source": "apache",
    "extensions": ["f4v"]
  },
  "video/x-fli": {
    "source": "apache",
    "extensions": ["fli"]
  },
  "video/x-flv": {
    "source": "apache",
    "compressible": false,
    "extensions": ["flv"]
  },
  "video/x-m4v": {
    "source": "apache",
    "extensions": ["m4v"]
  },
  "video/x-matroska": {
    "source": "apache",
    "compressible": false,
    "extensions": ["mkv","mk3d","mks"]
  },
  "video/x-mng": {
    "source": "apache",
    "extensions": ["mng"]
  },
  "video/x-ms-asf": {
    "source": "apache",
    "extensions": ["asf","asx"]
  },
  "video/x-ms-vob": {
    "source": "apache",
    "extensions": ["vob"]
  },
  "video/x-ms-wm": {
    "source": "apache",
    "extensions": ["wm"]
  },
  "video/x-ms-wmv": {
    "source": "apache",
    "compressible": false,
    "extensions": ["wmv"]
  },
  "video/x-ms-wmx": {
    "source": "apache",
    "extensions": ["wmx"]
  },
  "video/x-ms-wvx": {
    "source": "apache",
    "extensions": ["wvx"]
  },
  "video/x-msvideo": {
    "source": "apache",
    "extensions": ["avi"]
  },
  "video/x-sgi-movie": {
    "source": "apache",
    "extensions": ["movie"]
  },
  "video/x-smv": {
    "source": "apache",
    "extensions": ["smv"]
  },
  "x-conference/x-cooltalk": {
    "source": "apache",
    "extensions": ["ice"]
  },
  "x-shader/x-fragment": {
    "compressible": true
  },
  "x-shader/x-vertex": {
    "compressible": true
  }
}
},{}],413:[function(require,module,exports){
module["exports"] = [
  "ants",
  "bats",
  "bears",
  "bees",
  "birds",
  "buffalo",
  "cats",
  "chickens",
  "cattle",
  "dogs",
  "dolphins",
  "ducks",
  "elephants",
  "fishes",
  "foxes",
  "frogs",
  "geese",
  "goats",
  "horses",
  "kangaroos",
  "lions",
  "monkeys",
  "owls",
  "oxen",
  "penguins",
  "people",
  "pigs",
  "rabbits",
  "sheep",
  "tigers",
  "whales",
  "wolves",
  "zebras",
  "banshees",
  "crows",
  "black cats",
  "chimeras",
  "ghosts",
  "conspirators",
  "dragons",
  "dwarves",
  "elves",
  "enchanters",
  "exorcists",
  "sons",
  "foes",
  "giants",
  "gnomes",
  "goblins",
  "gooses",
  "griffins",
  "lycanthropes",
  "nemesis",
  "ogres",
  "oracles",
  "prophets",
  "sorcerors",
  "spiders",
  "spirits",
  "vampires",
  "warlocks",
  "vixens",
  "werewolves",
  "witches",
  "worshipers",
  "zombies",
  "druids"
];

},{}],414:[function(require,module,exports){
var team = {};
module['exports'] = team;
team.creature = require("./creature");
team.name = require("./name");

},{"./creature":413,"./name":415}],415:[function(require,module,exports){
module["exports"] = [
  "#{Address.state} #{creature}"
];

},{}],416:[function(require,module,exports){
module["exports"] = [
  "####",
  "###",
  "##"
];

},{}],417:[function(require,module,exports){
module["exports"] = [
  "Australia"
];

},{}],418:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.state_abbr = require("./state_abbr");
address.state = require("./state");
address.postcode = require("./postcode");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.default_country = require("./default_country");

},{"./building_number":416,"./default_country":417,"./postcode":419,"./state":420,"./state_abbr":421,"./street_suffix":422}],419:[function(require,module,exports){
module["exports"] = [
  "0###",
  "2###",
  "3###",
  "4###",
  "5###",
  "6###",
  "7###"
];

},{}],420:[function(require,module,exports){
module["exports"] = [
  "New South Wales",
  "Queensland",
  "Northern Territory",
  "South Australia",
  "Western Australia",
  "Tasmania",
  "Australian Capital Territory",
  "Victoria"
];

},{}],421:[function(require,module,exports){
module["exports"] = [
  "NSW",
  "QLD",
  "NT",
  "SA",
  "WA",
  "TAS",
  "ACT",
  "VIC"
];

},{}],422:[function(require,module,exports){
module["exports"] = [
  "Avenue",
  "Boulevard",
  "Circle",
  "Circuit",
  "Court",
  "Crescent",
  "Crest",
  "Drive",
  "Estate Dr",
  "Grove",
  "Hill",
  "Island",
  "Junction",
  "Knoll",
  "Lane",
  "Loop",
  "Mall",
  "Manor",
  "Meadow",
  "Mews",
  "Parade",
  "Parkway",
  "Pass",
  "Place",
  "Plaza",
  "Ridge",
  "Road",
  "Run",
  "Square",
  "Station St",
  "Street",
  "Summit",
  "Terrace",
  "Track",
  "Trail",
  "View Rd",
  "Way"
];

},{}],423:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");

},{"./suffix":424}],424:[function(require,module,exports){
module["exports"] = [
  "Pty Ltd",
  "and Sons",
  "Corp",
  "Group",
  "Brothers",
  "Partners"
];

},{}],425:[function(require,module,exports){
var en_AU = {};
module['exports'] = en_AU;
en_AU.title = "Australia (English)";
en_AU.name = require("./name");
en_AU.company = require("./company");
en_AU.internet = require("./internet");
en_AU.address = require("./address");
en_AU.phone_number = require("./phone_number");

},{"./address":418,"./company":423,"./internet":427,"./name":429,"./phone_number":432}],426:[function(require,module,exports){
module["exports"] = [
  "com.au",
  "com",
  "net.au",
  "net",
  "org.au",
  "org"
];

},{}],427:[function(require,module,exports){
arguments[4][315][0].apply(exports,arguments)
},{"./domain_suffix":426,"dup":315}],428:[function(require,module,exports){
module["exports"] = [
  "William",
  "Jack",
  "Oliver",
  "Joshua",
  "Thomas",
  "Lachlan",
  "Cooper",
  "Noah",
  "Ethan",
  "Lucas",
  "James",
  "Samuel",
  "Jacob",
  "Liam",
  "Alexander",
  "Benjamin",
  "Max",
  "Isaac",
  "Daniel",
  "Riley",
  "Ryan",
  "Charlie",
  "Tyler",
  "Jake",
  "Matthew",
  "Xavier",
  "Harry",
  "Jayden",
  "Nicholas",
  "Harrison",
  "Levi",
  "Luke",
  "Adam",
  "Henry",
  "Aiden",
  "Dylan",
  "Oscar",
  "Michael",
  "Jackson",
  "Logan",
  "Joseph",
  "Blake",
  "Nathan",
  "Connor",
  "Elijah",
  "Nate",
  "Archie",
  "Bailey",
  "Marcus",
  "Cameron",
  "Jordan",
  "Zachary",
  "Caleb",
  "Hunter",
  "Ashton",
  "Toby",
  "Aidan",
  "Hayden",
  "Mason",
  "Hamish",
  "Edward",
  "Angus",
  "Eli",
  "Sebastian",
  "Christian",
  "Patrick",
  "Andrew",
  "Anthony",
  "Luca",
  "Kai",
  "Beau",
  "Alex",
  "George",
  "Callum",
  "Finn",
  "Zac",
  "Mitchell",
  "Jett",
  "Jesse",
  "Gabriel",
  "Leo",
  "Declan",
  "Charles",
  "Jasper",
  "Jonathan",
  "Aaron",
  "Hugo",
  "David",
  "Christopher",
  "Chase",
  "Owen",
  "Justin",
  "Ali",
  "Darcy",
  "Lincoln",
  "Cody",
  "Phoenix",
  "Sam",
  "John",
  "Joel",
  "Isabella",
  "Ruby",
  "Chloe",
  "Olivia",
  "Charlotte",
  "Mia",
  "Lily",
  "Emily",
  "Ella",
  "Sienna",
  "Sophie",
  "Amelia",
  "Grace",
  "Ava",
  "Zoe",
  "Emma",
  "Sophia",
  "Matilda",
  "Hannah",
  "Jessica",
  "Lucy",
  "Georgia",
  "Sarah",
  "Abigail",
  "Zara",
  "Eva",
  "Scarlett",
  "Jasmine",
  "Chelsea",
  "Lilly",
  "Ivy",
  "Isla",
  "Evie",
  "Isabelle",
  "Maddison",
  "Layla",
  "Summer",
  "Annabelle",
  "Alexis",
  "Elizabeth",
  "Bella",
  "Holly",
  "Lara",
  "Madison",
  "Alyssa",
  "Maya",
  "Tahlia",
  "Claire",
  "Hayley",
  "Imogen",
  "Jade",
  "Ellie",
  "Sofia",
  "Addison",
  "Molly",
  "Phoebe",
  "Alice",
  "Savannah",
  "Gabriella",
  "Kayla",
  "Mikayla",
  "Abbey",
  "Eliza",
  "Willow",
  "Alexandra",
  "Poppy",
  "Samantha",
  "Stella",
  "Amy",
  "Amelie",
  "Anna",
  "Piper",
  "Gemma",
  "Isabel",
  "Victoria",
  "Stephanie",
  "Caitlin",
  "Heidi",
  "Paige",
  "Rose",
  "Amber",
  "Audrey",
  "Claudia",
  "Taylor",
  "Madeline",
  "Angelina",
  "Natalie",
  "Charli",
  "Lauren",
  "Ashley",
  "Violet",
  "Mackenzie",
  "Abby",
  "Skye",
  "Lillian",
  "Alana",
  "Lola",
  "Leah",
  "Eve",
  "Kiara"
];

},{}],429:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");

},{"./first_name":428,"./last_name":430}],430:[function(require,module,exports){
module["exports"] = [
  "Smith",
  "Jones",
  "Williams",
  "Brown",
  "Wilson",
  "Taylor",
  "Johnson",
  "White",
  "Martin",
  "Anderson",
  "Thompson",
  "Nguyen",
  "Thomas",
  "Walker",
  "Harris",
  "Lee",
  "Ryan",
  "Robinson",
  "Kelly",
  "King",
  "Davis",
  "Wright",
  "Evans",
  "Roberts",
  "Green",
  "Hall",
  "Wood",
  "Jackson",
  "Clarke",
  "Patel",
  "Khan",
  "Lewis",
  "James",
  "Phillips",
  "Mason",
  "Mitchell",
  "Rose",
  "Davies",
  "Rodriguez",
  "Cox",
  "Alexander",
  "Garden",
  "Campbell",
  "Johnston",
  "Moore",
  "Smyth",
  "O'neill",
  "Doherty",
  "Stewart",
  "Quinn",
  "Murphy",
  "Graham",
  "Mclaughlin",
  "Hamilton",
  "Murray",
  "Hughes",
  "Robertson",
  "Thomson",
  "Scott",
  "Macdonald",
  "Reid",
  "Clark",
  "Ross",
  "Young",
  "Watson",
  "Paterson",
  "Morrison",
  "Morgan",
  "Griffiths",
  "Edwards",
  "Rees",
  "Jenkins",
  "Owen",
  "Price",
  "Moss",
  "Richards",
  "Abbott",
  "Adams",
  "Armstrong",
  "Bahringer",
  "Bailey",
  "Barrows",
  "Bartell",
  "Bartoletti",
  "Barton",
  "Bauch",
  "Baumbach",
  "Bayer",
  "Beahan",
  "Beatty",
  "Becker",
  "Beier",
  "Berge",
  "Bergstrom",
  "Bode",
  "Bogan",
  "Borer",
  "Bosco",
  "Botsford",
  "Boyer",
  "Boyle",
  "Braun",
  "Bruen",
  "Carroll",
  "Carter",
  "Cartwright",
  "Casper",
  "Cassin",
  "Champlin",
  "Christiansen",
  "Cole",
  "Collier",
  "Collins",
  "Connelly",
  "Conroy",
  "Corkery",
  "Cormier",
  "Corwin",
  "Cronin",
  "Crooks",
  "Cruickshank",
  "Cummings",
  "D'amore",
  "Daniel",
  "Dare",
  "Daugherty",
  "Dickens",
  "Dickinson",
  "Dietrich",
  "Donnelly",
  "Dooley",
  "Douglas",
  "Doyle",
  "Durgan",
  "Ebert",
  "Emard",
  "Emmerich",
  "Erdman",
  "Ernser",
  "Fadel",
  "Fahey",
  "Farrell",
  "Fay",
  "Feeney",
  "Feil",
  "Ferry",
  "Fisher",
  "Flatley",
  "Gibson",
  "Gleason",
  "Glover",
  "Goldner",
  "Goodwin",
  "Grady",
  "Grant",
  "Greenfelder",
  "Greenholt",
  "Grimes",
  "Gutmann",
  "Hackett",
  "Hahn",
  "Haley",
  "Hammes",
  "Hand",
  "Hane",
  "Hansen",
  "Harber",
  "Hartmann",
  "Harvey",
  "Hayes",
  "Heaney",
  "Heathcote",
  "Heller",
  "Hermann",
  "Hermiston",
  "Hessel",
  "Hettinger",
  "Hickle",
  "Hill",
  "Hills",
  "Hoppe",
  "Howe",
  "Howell",
  "Hudson",
  "Huel",
  "Hyatt",
  "Jacobi",
  "Jacobs",
  "Jacobson",
  "Jerde",
  "Johns",
  "Keeling",
  "Kemmer",
  "Kessler",
  "Kiehn",
  "Kirlin",
  "Klein",
  "Koch",
  "Koelpin",
  "Kohler",
  "Koss",
  "Kovacek",
  "Kreiger",
  "Kris",
  "Kuhlman",
  "Kuhn",
  "Kulas",
  "Kunde",
  "Kutch",
  "Lakin",
  "Lang",
  "Langworth",
  "Larkin",
  "Larson",
  "Leannon",
  "Leffler",
  "Little",
  "Lockman",
  "Lowe",
  "Lynch",
  "Mann",
  "Marks",
  "Marvin",
  "Mayer",
  "Mccullough",
  "Mcdermott",
  "Mckenzie",
  "Miller",
  "Mills",
  "Monahan",
  "Morissette",
  "Mueller",
  "Muller",
  "Nader",
  "Nicolas",
  "Nolan",
  "O'connell",
  "O'conner",
  "O'hara",
  "O'keefe",
  "Olson",
  "O'reilly",
  "Parisian",
  "Parker",
  "Quigley",
  "Reilly",
  "Reynolds",
  "Rice",
  "Ritchie",
  "Rohan",
  "Rolfson",
  "Rowe",
  "Russel",
  "Rutherford",
  "Sanford",
  "Sauer",
  "Schmidt",
  "Schmitt",
  "Schneider",
  "Schroeder",
  "Schultz",
  "Shields",
  "Smitham",
  "Spencer",
  "Stanton",
  "Stark",
  "Stokes",
  "Swift",
  "Tillman",
  "Towne",
  "Tremblay",
  "Tromp",
  "Turcotte",
  "Turner",
  "Walsh",
  "Walter",
  "Ward",
  "Waters",
  "Weber",
  "Welch",
  "West",
  "Wilderman",
  "Wilkinson",
  "Williamson",
  "Windler",
  "Wolf"
];

},{}],431:[function(require,module,exports){
module["exports"] = [
  "0# #### ####",
  "+61 # #### ####",
  "04## ### ###",
  "+61 4## ### ###"
];

},{}],432:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":431,"dup":197}],433:[function(require,module,exports){
var en_BORK = {};
module['exports'] = en_BORK;
en_BORK.title = "Bork (English)";
en_BORK.lorem = require("./lorem");

},{"./lorem":434}],434:[function(require,module,exports){
arguments[4][265][0].apply(exports,arguments)
},{"./words":435,"dup":265}],435:[function(require,module,exports){
module["exports"] = [
  "Boot",
  "I",
  "Nu",
  "Nur",
  "Tu",
  "Um",
  "a",
  "becoose-a",
  "boot",
  "bork",
  "burn",
  "chuuses",
  "cumplete-a",
  "cun",
  "cunseqooences",
  "curcoomstunces",
  "dee",
  "deeslikes",
  "denuoonceeng",
  "desures",
  "du",
  "eccuoont",
  "ectooel",
  "edfuntege-a",
  "efueeds",
  "egeeen",
  "ell",
  "ere-a",
  "feend",
  "foolt",
  "frum",
  "geefe-a",
  "gesh",
  "greet",
  "heem",
  "heppeeness",
  "hes",
  "hoo",
  "hoomun",
  "idea",
  "ifer",
  "in",
  "incuoonter",
  "injuy",
  "itselff",
  "ixcept",
  "ixemple-a",
  "ixerceese-a",
  "ixpleeen",
  "ixplurer",
  "ixpuoond",
  "ixtremely",
  "knoo",
  "lebureeuoos",
  "lufes",
  "meestekee",
  "mester-booeelder",
  "moost",
  "mun",
  "nu",
  "nut",
  "oobteeen",
  "oocceseeunelly",
  "ooccoor",
  "ooff",
  "oone-a",
  "oor",
  "peeen",
  "peeenffool",
  "physeecel",
  "pleesoore-a",
  "poorsooe-a",
  "poorsooes",
  "preeesing",
  "prucoore-a",
  "prudooces",
  "reeght",
  "reshunelly",
  "resooltunt",
  "sume-a",
  "teecheengs",
  "teke-a",
  "thees",
  "thet",
  "thuse-a",
  "treefiel",
  "troot",
  "tu",
  "tueel",
  "und",
  "undertekes",
  "unnuyeeng",
  "uny",
  "unyune-a",
  "us",
  "veell",
  "veet",
  "ves",
  "vheech",
  "vhu",
  "yuoo",
  "zee",
  "zeere-a"
];

},{}],436:[function(require,module,exports){
module["exports"] = [
  "Canada"
];

},{}],437:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.default_country = require("./default_country");
address.postcode = require('./postcode.js');

},{"./default_country":436,"./postcode.js":438,"./state":439,"./state_abbr":440}],438:[function(require,module,exports){
module["exports"] = [
  "?#? #?#"
];

},{}],439:[function(require,module,exports){
module["exports"] = [
  "Alberta",
  "British Columbia",
  "Manitoba",
  "New Brunswick",
  "Newfoundland and Labrador",
  "Nova Scotia",
  "Northwest Territories",
  "Nunavut",
  "Ontario",
  "Prince Edward Island",
  "Quebec",
  "Saskatchewan",
  "Yukon"
];

},{}],440:[function(require,module,exports){
module["exports"] = [
  "AB",
  "BC",
  "MB",
  "NB",
  "NL",
  "NS",
  "NU",
  "NT",
  "ON",
  "PE",
  "QC",
  "SK",
  "YT"
];

},{}],441:[function(require,module,exports){
var en_CA = {};
module['exports'] = en_CA;
en_CA.title = "Canada (English)";
en_CA.address = require("./address");
en_CA.internet = require("./internet");
en_CA.phone_number = require("./phone_number");

},{"./address":437,"./internet":444,"./phone_number":446}],442:[function(require,module,exports){
module["exports"] = [
  "ca",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],443:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.ca",
  "hotmail.com"
];

},{}],444:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":442,"./free_email":443,"dup":187}],445:[function(require,module,exports){
module["exports"] = [
  "###-###-####",
  "(###)###-####",
  "###.###.####",
  "1-###-###-####",
  "###-###-#### x###",
  "(###)###-#### x###",
  "1-###-###-#### x###",
  "###.###.#### x###",
  "###-###-#### x####",
  "(###)###-#### x####",
  "1-###-###-#### x####",
  "###.###.#### x####",
  "###-###-#### x#####",
  "(###)###-#### x#####",
  "1-###-###-#### x#####",
  "###.###.#### x#####"
];

},{}],446:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":445,"dup":197}],447:[function(require,module,exports){
module["exports"] = [
  "Avon",
  "Bedfordshire",
  "Berkshire",
  "Borders",
  "Buckinghamshire",
  "Cambridgeshire",
  "Central",
  "Cheshire",
  "Cleveland",
  "Clwyd",
  "Cornwall",
  "County Antrim",
  "County Armagh",
  "County Down",
  "County Fermanagh",
  "County Londonderry",
  "County Tyrone",
  "Cumbria",
  "Derbyshire",
  "Devon",
  "Dorset",
  "Dumfries and Galloway",
  "Durham",
  "Dyfed",
  "East Sussex",
  "Essex",
  "Fife",
  "Gloucestershire",
  "Grampian",
  "Greater Manchester",
  "Gwent",
  "Gwynedd County",
  "Hampshire",
  "Herefordshire",
  "Hertfordshire",
  "Highlands and Islands",
  "Humberside",
  "Isle of Wight",
  "Kent",
  "Lancashire",
  "Leicestershire",
  "Lincolnshire",
  "Lothian",
  "Merseyside",
  "Mid Glamorgan",
  "Norfolk",
  "North Yorkshire",
  "Northamptonshire",
  "Northumberland",
  "Nottinghamshire",
  "Oxfordshire",
  "Powys",
  "Rutland",
  "Shropshire",
  "Somerset",
  "South Glamorgan",
  "South Yorkshire",
  "Staffordshire",
  "Strathclyde",
  "Suffolk",
  "Surrey",
  "Tayside",
  "Tyne and Wear",
  "Warwickshire",
  "West Glamorgan",
  "West Midlands",
  "West Sussex",
  "West Yorkshire",
  "Wiltshire",
  "Worcestershire"
];

},{}],448:[function(require,module,exports){
module["exports"] = [
  "England",
  "Scotland",
  "Wales",
  "Northern Ireland"
];

},{}],449:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.county = require("./county");
address.uk_country = require("./uk_country");
address.default_country = require("./default_country");
address.postcode = require("./postcode");

},{"./county":447,"./default_country":448,"./postcode":450,"./uk_country":451}],450:[function(require,module,exports){
module["exports"] = [
  "??# #??",
  "??## #??",
];

},{}],451:[function(require,module,exports){
arguments[4][448][0].apply(exports,arguments)
},{"dup":448}],452:[function(require,module,exports){
module["exports"] = [
  "074## ######",
  "075## ######",
  "076## ######",
  "077## ######",
  "078## ######",
  "079## ######"
];

},{}],453:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":452,"dup":256}],454:[function(require,module,exports){
var en_GB = {};
module['exports'] = en_GB;
en_GB.title = "Great Britain (English)";
en_GB.address = require("./address");
en_GB.internet = require("./internet");
en_GB.phone_number = require("./phone_number");
en_GB.cell_phone = require("./cell_phone");

},{"./address":449,"./cell_phone":453,"./internet":456,"./phone_number":458}],455:[function(require,module,exports){
module["exports"] = [
  "co.uk",
  "com",
  "biz",
  "info",
  "name"
];

},{}],456:[function(require,module,exports){
arguments[4][315][0].apply(exports,arguments)
},{"./domain_suffix":455,"dup":315}],457:[function(require,module,exports){
module["exports"] = [
  "01#### #####",
  "01### ######",
  "01#1 ### ####",
  "011# ### ####",
  "02# #### ####",
  "03## ### ####",
  "055 #### ####",
  "056 #### ####",
  "0800 ### ####",
  "08## ### ####",
  "09## ### ####",
  "016977 ####",
  "01### #####",
  "0500 ######",
  "0800 ######"
];

},{}],458:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":457,"dup":197}],459:[function(require,module,exports){
module["exports"] = [
  "Carlow",
  "Cavan",
  "Clare",
  "Cork",
  "Donegal",
  "Dublin",
  "Galway",
  "Kerry",
  "Kildare",
  "Kilkenny",
  "Laois",
  "Leitrim",
  "Limerick",
  "Longford",
  "Louth",
  "Mayo",
  "Meath",
  "Monaghan",
  "Offaly",
  "Roscommon",
  "Sligo",
  "Tipperary",
  "Waterford",
  "Westmeath",
  "Wexford",
  "Wicklow"
];

},{}],460:[function(require,module,exports){
module["exports"] = [
  "Ireland"
];

},{}],461:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.county = require("./county");
address.default_country = require("./default_country");

},{"./county":459,"./default_country":460}],462:[function(require,module,exports){
module["exports"] = [
  "082 ### ####",
  "083 ### ####",
  "085 ### ####",
  "086 ### ####",
  "087 ### ####",
  "089 ### ####"
];

},{}],463:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":462,"dup":256}],464:[function(require,module,exports){
var en_IE = {};
module['exports'] = en_IE;
en_IE.title = "Ireland (English)";
en_IE.address = require("./address");
en_IE.internet = require("./internet");
en_IE.phone_number = require("./phone_number");
en_IE.cell_phone = require("./cell_phone");

},{"./address":461,"./cell_phone":463,"./internet":466,"./phone_number":468}],465:[function(require,module,exports){
module["exports"] = [
  "ie",
  "com",
  "net",
  "info",
  "eu"
];

},{}],466:[function(require,module,exports){
arguments[4][315][0].apply(exports,arguments)
},{"./domain_suffix":465,"dup":315}],467:[function(require,module,exports){
module["exports"] = [
  "01 #######",
  "021 #######",
  "022 #######",
  "023 #######",
  "024 #######",
  "025 #######",
  "026 #######",
  "027 #######",
  "028 #######",
  "029 #######",
  "0402 #######",
  "0404 #######",
  "041 #######",
  "042 #######",
  "043 #######",
  "044 #######",
  "045 #######",
  "046 #######",
  "047 #######",
  "049 #######",
  "0504 #######",
  "0505 #######",
  "051 #######",
  "052 #######",
  "053 #######",
  "056 #######",
  "057 #######",
  "058 #######",
  "059 #######",
  "061 #######",
  "062 #######",
  "063 #######",
  "064 #######",
  "065 #######",
  "066 #######",
  "067 #######",
  "068 #######",
  "069 #######",
  "071 #######",
  "074 #######",
  "090 #######",
  "091 #######",
  "093 #######",
  "094 #######",
  "095 #######",
  "096 #######",
  "097 #######",
  "098 #######",
  "099 #######"
];

},{}],468:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":467,"dup":197}],469:[function(require,module,exports){
module["exports"] = [
  "India",
  "Indian Republic",
  "Bharat",
  "Hindustan"
];

},{}],470:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.default_country = require("./default_country");

},{"./default_country":469,"./postcode":471,"./state":472,"./state_abbr":473}],471:[function(require,module,exports){
arguments[4][438][0].apply(exports,arguments)
},{"dup":438}],472:[function(require,module,exports){
module["exports"] = [
  "Andra Pradesh",
  "Arunachal Pradesh",
  "Assam",
  "Bihar",
  "Chhattisgarh",
  "Goa",
  "Gujarat",
  "Haryana",
  "Himachal Pradesh",
  "Jammu and Kashmir",
  "Jharkhand",
  "Karnataka",
  "Kerala",
  "Madya Pradesh",
  "Maharashtra",
  "Manipur",
  "Meghalaya",
  "Mizoram",
  "Nagaland",
  "Orissa",
  "Punjab",
  "Rajasthan",
  "Sikkim",
  "Tamil Nadu",
  "Tripura",
  "Uttaranchal",
  "Uttar Pradesh",
  "West Bengal",
  "Andaman and Nicobar Islands",
  "Chandigarh",
  "Dadar and Nagar Haveli",
  "Daman and Diu",
  "Delhi",
  "Lakshadweep",
  "Pondicherry"
];

},{}],473:[function(require,module,exports){
module["exports"] = [
  "AP",
  "AR",
  "AS",
  "BR",
  "CG",
  "DL",
  "GA",
  "GJ",
  "HR",
  "HP",
  "JK",
  "JS",
  "KA",
  "KL",
  "MP",
  "MH",
  "MN",
  "ML",
  "MZ",
  "NL",
  "OR",
  "PB",
  "RJ",
  "SK",
  "TN",
  "TR",
  "UK",
  "UP",
  "WB",
  "AN",
  "CH",
  "DN",
  "DD",
  "LD",
  "PY"
];

},{}],474:[function(require,module,exports){
arguments[4][423][0].apply(exports,arguments)
},{"./suffix":475,"dup":423}],475:[function(require,module,exports){
module["exports"] = [
  "Pvt Ltd",
  "Limited",
  "Ltd",
  "and Sons",
  "Corp",
  "Group",
  "Brothers"
];

},{}],476:[function(require,module,exports){
var en_IND = {};
module['exports'] = en_IND;
en_IND.title = "India (English)";
en_IND.name = require("./name");
en_IND.address = require("./address");
en_IND.internet = require("./internet");
en_IND.company = require("./company");
en_IND.phone_number = require("./phone_number");

},{"./address":470,"./company":474,"./internet":479,"./name":481,"./phone_number":484}],477:[function(require,module,exports){
module["exports"] = [
  "in",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org",
  "co.in"
];

},{}],478:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.co.in",
  "hotmail.com"
];

},{}],479:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":477,"./free_email":478,"dup":187}],480:[function(require,module,exports){
module["exports"] = [
  "Aadrika",
  "Aanandinii",
  "Aaratrika",
  "Aarya",
  "Arya",
  "Aashritha",
  "Aatmaja",
  "Atmaja",
  "Abhaya",
  "Adwitiya",
  "Agrata",
  "Ahilya",
  "Ahalya",
  "Aishani",
  "Akshainie",
  "Akshata",
  "Akshita",
  "Akula",
  "Ambar",
  "Amodini",
  "Amrita",
  "Amritambu",
  "Anala",
  "Anamika",
  "Ananda",
  "Anandamayi",
  "Ananta",
  "Anila",
  "Anjali",
  "Anjushri",
  "Anjushree",
  "Annapurna",
  "Anshula",
  "Anuja",
  "Anusuya",
  "Anasuya",
  "Anasooya",
  "Anwesha",
  "Apsara",
  "Aruna",
  "Asha",
  "Aasa",
  "Aasha",
  "Aslesha",
  "Atreyi",
  "Atreyee",
  "Avani",
  "Abani",
  "Avantika",
  "Ayushmati",
  "Baidehi",
  "Vaidehi",
  "Bala",
  "Baala",
  "Balamani",
  "Basanti",
  "Vasanti",
  "Bela",
  "Bhadra",
  "Bhagirathi",
  "Bhagwanti",
  "Bhagwati",
  "Bhamini",
  "Bhanumati",
  "Bhaanumati",
  "Bhargavi",
  "Bhavani",
  "Bhilangana",
  "Bilwa",
  "Bilva",
  "Buddhana",
  "Chakrika",
  "Chanda",
  "Chandi",
  "Chandni",
  "Chandini",
  "Chandani",
  "Chandra",
  "Chandira",
  "Chandrabhaga",
  "Chandrakala",
  "Chandrakin",
  "Chandramani",
  "Chandrani",
  "Chandraprabha",
  "Chandraswaroopa",
  "Chandravati",
  "Chapala",
  "Charumati",
  "Charvi",
  "Chatura",
  "Chitrali",
  "Chitramala",
  "Chitrangada",
  "Daksha",
  "Dakshayani",
  "Damayanti",
  "Darshwana",
  "Deepali",
  "Dipali",
  "Deeptimoyee",
  "Deeptimayee",
  "Devangana",
  "Devani",
  "Devasree",
  "Devi",
  "Daevi",
  "Devika",
  "Daevika",
  "Dhaanyalakshmi",
  "Dhanalakshmi",
  "Dhana",
  "Dhanadeepa",
  "Dhara",
  "Dharani",
  "Dharitri",
  "Dhatri",
  "Diksha",
  "Deeksha",
  "Divya",
  "Draupadi",
  "Dulari",
  "Durga",
  "Durgeshwari",
  "Ekaparnika",
  "Elakshi",
  "Enakshi",
  "Esha",
  "Eshana",
  "Eshita",
  "Gautami",
  "Gayatri",
  "Geeta",
  "Geetanjali",
  "Gitanjali",
  "Gemine",
  "Gemini",
  "Girja",
  "Girija",
  "Gita",
  "Hamsini",
  "Harinakshi",
  "Harita",
  "Heema",
  "Himadri",
  "Himani",
  "Hiranya",
  "Indira",
  "Jaimini",
  "Jaya",
  "Jyoti",
  "Jyotsana",
  "Kali",
  "Kalinda",
  "Kalpana",
  "Kalyani",
  "Kama",
  "Kamala",
  "Kamla",
  "Kanchan",
  "Kanishka",
  "Kanti",
  "Kashyapi",
  "Kumari",
  "Kumuda",
  "Lakshmi",
  "Laxmi",
  "Lalita",
  "Lavanya",
  "Leela",
  "Lila",
  "Leela",
  "Madhuri",
  "Malti",
  "Malati",
  "Mandakini",
  "Mandaakin",
  "Mangala",
  "Mangalya",
  "Mani",
  "Manisha",
  "Manjusha",
  "Meena",
  "Mina",
  "Meenakshi",
  "Minakshi",
  "Menka",
  "Menaka",
  "Mohana",
  "Mohini",
  "Nalini",
  "Nikita",
  "Ojaswini",
  "Omana",
  "Oormila",
  "Urmila",
  "Opalina",
  "Opaline",
  "Padma",
  "Parvati",
  "Poornima",
  "Purnima",
  "Pramila",
  "Prasanna",
  "Preity",
  "Prema",
  "Priya",
  "Priyala",
  "Pushti",
  "Radha",
  "Rageswari",
  "Rageshwari",
  "Rajinder",
  "Ramaa",
  "Rati",
  "Rita",
  "Rohana",
  "Rukhmani",
  "Rukmin",
  "Rupinder",
  "Sanya",
  "Sarada",
  "Sharda",
  "Sarala",
  "Sarla",
  "Saraswati",
  "Sarisha",
  "Saroja",
  "Shakti",
  "Shakuntala",
  "Shanti",
  "Sharmila",
  "Shashi",
  "Shashikala",
  "Sheela",
  "Shivakari",
  "Shobhana",
  "Shresth",
  "Shresthi",
  "Shreya",
  "Shreyashi",
  "Shridevi",
  "Shrishti",
  "Shubha",
  "Shubhaprada",
  "Siddhi",
  "Sitara",
  "Sloka",
  "Smita",
  "Smriti",
  "Soma",
  "Subhashini",
  "Subhasini",
  "Sucheta",
  "Sudeva",
  "Sujata",
  "Sukanya",
  "Suma",
  "Suma",
  "Sumitra",
  "Sunita",
  "Suryakantam",
  "Sushma",
  "Swara",
  "Swarnalata",
  "Sweta",
  "Shwet",
  "Tanirika",
  "Tanushree",
  "Tanushri",
  "Tanushri",
  "Tanya",
  "Tara",
  "Trisha",
  "Uma",
  "Usha",
  "Vaijayanti",
  "Vaijayanthi",
  "Baijayanti",
  "Vaishvi",
  "Vaishnavi",
  "Vaishno",
  "Varalakshmi",
  "Vasudha",
  "Vasundhara",
  "Veda",
  "Vedanshi",
  "Vidya",
  "Vimala",
  "Vrinda",
  "Vrund",
  "Aadi",
  "Aadidev",
  "Aadinath",
  "Aaditya",
  "Aagam",
  "Aagney",
  "Aamod",
  "Aanandaswarup",
  "Anand Swarup",
  "Aanjaneya",
  "Anjaneya",
  "Aaryan",
  "Aryan",
  "Aatmaj",
  "Aatreya",
  "Aayushmaan",
  "Aayushman",
  "Abhaidev",
  "Abhaya",
  "Abhirath",
  "Abhisyanta",
  "Acaryatanaya",
  "Achalesvara",
  "Acharyanandana",
  "Acharyasuta",
  "Achintya",
  "Achyut",
  "Adheesh",
  "Adhiraj",
  "Adhrit",
  "Adikavi",
  "Adinath",
  "Aditeya",
  "Aditya",
  "Adityanandan",
  "Adityanandana",
  "Adripathi",
  "Advaya",
  "Agasti",
  "Agastya",
  "Agneya",
  "Aagneya",
  "Agnimitra",
  "Agniprava",
  "Agnivesh",
  "Agrata",
  "Ajit",
  "Ajeet",
  "Akroor",
  "Akshaj",
  "Akshat",
  "Akshayakeerti",
  "Alok",
  "Aalok",
  "Amaranaath",
  "Amarnath",
  "Amaresh",
  "Ambar",
  "Ameyatma",
  "Amish",
  "Amogh",
  "Amrit",
  "Anaadi",
  "Anagh",
  "Anal",
  "Anand",
  "Aanand",
  "Anang",
  "Anil",
  "Anilaabh",
  "Anilabh",
  "Anish",
  "Ankal",
  "Anunay",
  "Anurag",
  "Anuraag",
  "Archan",
  "Arindam",
  "Arjun",
  "Arnesh",
  "Arun",
  "Ashlesh",
  "Ashok",
  "Atmanand",
  "Atmananda",
  "Avadhesh",
  "Baalaaditya",
  "Baladitya",
  "Baalagopaal",
  "Balgopal",
  "Balagopal",
  "Bahula",
  "Bakula",
  "Bala",
  "Balaaditya",
  "Balachandra",
  "Balagovind",
  "Bandhu",
  "Bandhul",
  "Bankim",
  "Bankimchandra",
  "Bhadrak",
  "Bhadraksh",
  "Bhadran",
  "Bhagavaan",
  "Bhagvan",
  "Bharadwaj",
  "Bhardwaj",
  "Bharat",
  "Bhargava",
  "Bhasvan",
  "Bhaasvan",
  "Bhaswar",
  "Bhaaswar",
  "Bhaumik",
  "Bhaves",
  "Bheeshma",
  "Bhisham",
  "Bhishma",
  "Bhima",
  "Bhoj",
  "Bhramar",
  "Bhudev",
  "Bhudeva",
  "Bhupati",
  "Bhoopati",
  "Bhoopat",
  "Bhupen",
  "Bhushan",
  "Bhooshan",
  "Bhushit",
  "Bhooshit",
  "Bhuvanesh",
  "Bhuvaneshwar",
  "Bilva",
  "Bodhan",
  "Brahma",
  "Brahmabrata",
  "Brahmanandam",
  "Brahmaanand",
  "Brahmdev",
  "Brajendra",
  "Brajesh",
  "Brijesh",
  "Birjesh",
  "Budhil",
  "Chakor",
  "Chakradhar",
  "Chakravartee",
  "Chakravarti",
  "Chanakya",
  "Chaanakya",
  "Chandak",
  "Chandan",
  "Chandra",
  "Chandraayan",
  "Chandrabhan",
  "Chandradev",
  "Chandraketu",
  "Chandramauli",
  "Chandramohan",
  "Chandran",
  "Chandranath",
  "Chapal",
  "Charak",
  "Charuchandra",
  "Chaaruchandra",
  "Charuvrat",
  "Chatur",
  "Chaturaanan",
  "Chaturbhuj",
  "Chetan",
  "Chaten",
  "Chaitan",
  "Chetanaanand",
  "Chidaakaash",
  "Chidaatma",
  "Chidambar",
  "Chidambaram",
  "Chidananda",
  "Chinmayanand",
  "Chinmayananda",
  "Chiranjeev",
  "Chiranjeeve",
  "Chitraksh",
  "Daiwik",
  "Daksha",
  "Damodara",
  "Dandak",
  "Dandapaani",
  "Darshan",
  "Datta",
  "Dayaamay",
  "Dayamayee",
  "Dayaananda",
  "Dayaanidhi",
  "Kin",
  "Deenabandhu",
  "Deepan",
  "Deepankar",
  "Dipankar",
  "Deependra",
  "Dipendra",
  "Deepesh",
  "Dipesh",
  "Deeptanshu",
  "Deeptendu",
  "Diptendu",
  "Deeptiman",
  "Deeptimoy",
  "Deeptimay",
  "Dev",
  "Deb",
  "Devadatt",
  "Devagya",
  "Devajyoti",
  "Devak",
  "Devdan",
  "Deven",
  "Devesh",
  "Deveshwar",
  "Devi",
  "Devvrat",
  "Dhananjay",
  "Dhanapati",
  "Dhanpati",
  "Dhanesh",
  "Dhanu",
  "Dhanvin",
  "Dharmaketu",
  "Dhruv",
  "Dhyanesh",
  "Dhyaneshwar",
  "Digambar",
  "Digambara",
  "Dinakar",
  "Dinkar",
  "Dinesh",
  "Divaakar",
  "Divakar",
  "Deevakar",
  "Divjot",
  "Dron",
  "Drona",
  "Dwaipayan",
  "Dwaipayana",
  "Eekalabya",
  "Ekalavya",
  "Ekaksh",
  "Ekaaksh",
  "Ekaling",
  "Ekdant",
  "Ekadant",
  "Gajaadhar",
  "Gajadhar",
  "Gajbaahu",
  "Gajabahu",
  "Ganak",
  "Ganaka",
  "Ganapati",
  "Gandharv",
  "Gandharva",
  "Ganesh",
  "Gangesh",
  "Garud",
  "Garuda",
  "Gati",
  "Gatik",
  "Gaurang",
  "Gauraang",
  "Gauranga",
  "Gouranga",
  "Gautam",
  "Gautama",
  "Goutam",
  "Ghanaanand",
  "Ghanshyam",
  "Ghanashyam",
  "Giri",
  "Girik",
  "Girika",
  "Girindra",
  "Giriraaj",
  "Giriraj",
  "Girish",
  "Gopal",
  "Gopaal",
  "Gopi",
  "Gopee",
  "Gorakhnath",
  "Gorakhanatha",
  "Goswamee",
  "Goswami",
  "Gotum",
  "Gautam",
  "Govinda",
  "Gobinda",
  "Gudakesha",
  "Gudakesa",
  "Gurdev",
  "Guru",
  "Hari",
  "Harinarayan",
  "Harit",
  "Himadri",
  "Hiranmay",
  "Hiranmaya",
  "Hiranya",
  "Inder",
  "Indra",
  "Indra",
  "Jagadish",
  "Jagadisha",
  "Jagathi",
  "Jagdeep",
  "Jagdish",
  "Jagmeet",
  "Jahnu",
  "Jai",
  "Javas",
  "Jay",
  "Jitendra",
  "Jitender",
  "Jyotis",
  "Kailash",
  "Kama",
  "Kamalesh",
  "Kamlesh",
  "Kanak",
  "Kanaka",
  "Kannan",
  "Kannen",
  "Karan",
  "Karthik",
  "Kartik",
  "Karunanidhi",
  "Kashyap",
  "Kiran",
  "Kirti",
  "Keerti",
  "Krishna",
  "Krishnadas",
  "Krishnadasa",
  "Kumar",
  "Lai",
  "Lakshman",
  "Laxman",
  "Lakshmidhar",
  "Lakshminath",
  "Lal",
  "Laal",
  "Mahendra",
  "Mohinder",
  "Mahesh",
  "Maheswar",
  "Mani",
  "Manik",
  "Manikya",
  "Manoj",
  "Marut",
  "Mayoor",
  "Meghnad",
  "Meghnath",
  "Mohan",
  "Mukesh",
  "Mukul",
  "Nagabhushanam",
  "Nanda",
  "Narayan",
  "Narendra",
  "Narinder",
  "Naveen",
  "Navin",
  "Nawal",
  "Naval",
  "Nimit",
  "Niranjan",
  "Nirbhay",
  "Niro",
  "Param",
  "Paramartha",
  "Pran",
  "Pranay",
  "Prasad",
  "Prathamesh",
  "Prayag",
  "Prem",
  "Puneet",
  "Purushottam",
  "Rahul",
  "Raj",
  "Rajan",
  "Rajendra",
  "Rajinder",
  "Rajiv",
  "Rakesh",
  "Ramesh",
  "Rameshwar",
  "Ranjit",
  "Ranjeet",
  "Ravi",
  "Ritesh",
  "Rohan",
  "Rohit",
  "Rudra",
  "Sachin",
  "Sameer",
  "Samir",
  "Sanjay",
  "Sanka",
  "Sarvin",
  "Satish",
  "Satyen",
  "Shankar",
  "Shantanu",
  "Shashi",
  "Sher",
  "Shiv",
  "Siddarth",
  "Siddhran",
  "Som",
  "Somu",
  "Somnath",
  "Subhash",
  "Subodh",
  "Suman",
  "Suresh",
  "Surya",
  "Suryakant",
  "Suryakanta",
  "Sushil",
  "Susheel",
  "Swami",
  "Swapnil",
  "Tapan",
  "Tara",
  "Tarun",
  "Tej",
  "Tejas",
  "Trilochan",
  "Trilochana",
  "Trilok",
  "Trilokesh",
  "Triloki",
  "Triloki Nath",
  "Trilokanath",
  "Tushar",
  "Udai",
  "Udit",
  "Ujjawal",
  "Ujjwal",
  "Umang",
  "Upendra",
  "Uttam",
  "Vasudev",
  "Vasudeva",
  "Vedang",
  "Vedanga",
  "Vidhya",
  "Vidur",
  "Vidhur",
  "Vijay",
  "Vimal",
  "Vinay",
  "Vishnu",
  "Bishnu",
  "Vishwamitra",
  "Vyas",
  "Yogendra",
  "Yoginder",
  "Yogesh"
];

},{}],481:[function(require,module,exports){
arguments[4][429][0].apply(exports,arguments)
},{"./first_name":480,"./last_name":482,"dup":429}],482:[function(require,module,exports){
module["exports"] = [
  "Abbott",
  "Achari",
  "Acharya",
  "Adiga",
  "Agarwal",
  "Ahluwalia",
  "Ahuja",
  "Arora",
  "Asan",
  "Bandopadhyay",
  "Banerjee",
  "Bharadwaj",
  "Bhat",
  "Butt",
  "Bhattacharya",
  "Bhattathiri",
  "Chaturvedi",
  "Chattopadhyay",
  "Chopra",
  "Desai",
  "Deshpande",
  "Devar",
  "Dhawan",
  "Dubashi",
  "Dutta",
  "Dwivedi",
  "Embranthiri",
  "Ganaka",
  "Gandhi",
  "Gill",
  "Gowda",
  "Guha",
  "Guneta",
  "Gupta",
  "Iyer",
  "Iyengar",
  "Jain",
  "Jha",
  "Johar",
  "Joshi",
  "Kakkar",
  "Kaniyar",
  "Kapoor",
  "Kaul",
  "Kaur",
  "Khan",
  "Khanna",
  "Khatri",
  "Kocchar",
  "Mahajan",
  "Malik",
  "Marar",
  "Menon",
  "Mehra",
  "Mehrotra",
  "Mishra",
  "Mukhopadhyay",
  "Nayar",
  "Naik",
  "Nair",
  "Nambeesan",
  "Namboothiri",
  "Nehru",
  "Pandey",
  "Panicker",
  "Patel",
  "Patil",
  "Pilla",
  "Pillai",
  "Pothuvaal",
  "Prajapat",
  "Rana",
  "Reddy",
  "Saini",
  "Sethi",
  "Shah",
  "Sharma",
  "Shukla",
  "Singh",
  "Sinha",
  "Somayaji",
  "Tagore",
  "Talwar",
  "Tandon",
  "Trivedi",
  "Varrier",
  "Varma",
  "Varman",
  "Verma"
];

},{}],483:[function(require,module,exports){
module["exports"] = [
  "+91###-###-####",
  "+91##########",
  "+91-###-#######"
];

},{}],484:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":483,"dup":197}],485:[function(require,module,exports){
module["exports"] = [
  "United States",
  "United States of America",
  "USA"
];

},{}],486:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.default_country = require("./default_country");
address.postcode_by_state = require("./postcode_by_state");

},{"./default_country":485,"./postcode_by_state":487}],487:[function(require,module,exports){
module["exports"] = {
  "AL": "350##",
  "AK": "995##",
  "AS": "967##",
  "AZ": "850##",
  "AR": "717##",
  "CA": "900##",
  "CO": "800##",
  "CT": "061##",
  "DC": "204##",
  "DE": "198##",
  "FL": "322##",
  "GA": "301##",
  "HI": "967##",
  "ID": "832##",
  "IL": "600##",
  "IN": "463##",
  "IA": "510##",
  "KS": "666##",
  "KY": "404##",
  "LA": "701##",
  "ME": "042##",
  "MD": "210##",
  "MA": "026##",
  "MI": "480##",
  "MN": "555##",
  "MS": "387##",
  "MO": "650##",
  "MT": "590##",
  "NE": "688##",
  "NV": "898##",
  "NH": "036##",
  "NJ": "076##",
  "NM": "880##",
  "NY": "122##",
  "NC": "288##",
  "ND": "586##",
  "OH": "444##",
  "OK": "730##",
  "OR": "979##",
  "PA": "186##",
  "RI": "029##",
  "SC": "299##",
  "SD": "577##",
  "TN": "383##",
  "TX": "798##",
  "UT": "847##",
  "VT": "050##",
  "VA": "222##",
  "WA": "990##",
  "WV": "247##",
  "WI": "549##",
  "WY": "831##"
};

},{}],488:[function(require,module,exports){
var en_US = {};
module['exports'] = en_US;
en_US.title = "United States (English)";
en_US.internet = require("./internet");
en_US.address = require("./address");
en_US.phone_number = require("./phone_number");

},{"./address":486,"./internet":490,"./phone_number":493}],489:[function(require,module,exports){
module["exports"] = [
  "com",
  "us",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],490:[function(require,module,exports){
arguments[4][315][0].apply(exports,arguments)
},{"./domain_suffix":489,"dup":315}],491:[function(require,module,exports){
module["exports"] = [
  "201",
  "202",
  "203",
  "205",
  "206",
  "207",
  "208",
  "209",
  "210",
  "212",
  "213",
  "214",
  "215",
  "216",
  "217",
  "218",
  "219",
  "224",
  "225",
  "227",
  "228",
  "229",
  "231",
  "234",
  "239",
  "240",
  "248",
  "251",
  "252",
  "253",
  "254",
  "256",
  "260",
  "262",
  "267",
  "269",
  "270",
  "276",
  "281",
  "283",
  "301",
  "302",
  "303",
  "304",
  "305",
  "307",
  "308",
  "309",
  "310",
  "312",
  "313",
  "314",
  "315",
  "316",
  "317",
  "318",
  "319",
  "320",
  "321",
  "323",
  "330",
  "331",
  "334",
  "336",
  "337",
  "339",
  "347",
  "351",
  "352",
  "360",
  "361",
  "386",
  "401",
  "402",
  "404",
  "405",
  "406",
  "407",
  "408",
  "409",
  "410",
  "412",
  "413",
  "414",
  "415",
  "417",
  "419",
  "423",
  "424",
  "425",
  "434",
  "435",
  "440",
  "443",
  "445",
  "464",
  "469",
  "470",
  "475",
  "478",
  "479",
  "480",
  "484",
  "501",
  "502",
  "503",
  "504",
  "505",
  "507",
  "508",
  "509",
  "510",
  "512",
  "513",
  "515",
  "516",
  "517",
  "518",
  "520",
  "530",
  "540",
  "541",
  "551",
  "557",
  "559",
  "561",
  "562",
  "563",
  "564",
  "567",
  "570",
  "571",
  "573",
  "574",
  "580",
  "585",
  "586",
  "601",
  "602",
  "603",
  "605",
  "606",
  "607",
  "608",
  "609",
  "610",
  "612",
  "614",
  "615",
  "616",
  "617",
  "618",
  "619",
  "620",
  "623",
  "626",
  "630",
  "631",
  "636",
  "641",
  "646",
  "650",
  "651",
  "660",
  "661",
  "662",
  "667",
  "678",
  "682",
  "701",
  "702",
  "703",
  "704",
  "706",
  "707",
  "708",
  "712",
  "713",
  "714",
  "715",
  "716",
  "717",
  "718",
  "719",
  "720",
  "724",
  "727",
  "731",
  "732",
  "734",
  "737",
  "740",
  "754",
  "757",
  "760",
  "763",
  "765",
  "770",
  "772",
  "773",
  "774",
  "775",
  "781",
  "785",
  "786",
  "801",
  "802",
  "803",
  "804",
  "805",
  "806",
  "808",
  "810",
  "812",
  "813",
  "814",
  "815",
  "816",
  "817",
  "818",
  "828",
  "830",
  "831",
  "832",
  "835",
  "843",
  "845",
  "847",
  "848",
  "850",
  "856",
  "857",
  "858",
  "859",
  "860",
  "862",
  "863",
  "864",
  "865",
  "870",
  "872",
  "878",
  "901",
  "903",
  "904",
  "906",
  "907",
  "908",
  "909",
  "910",
  "912",
  "913",
  "914",
  "915",
  "916",
  "917",
  "918",
  "919",
  "920",
  "925",
  "928",
  "931",
  "936",
  "937",
  "940",
  "941",
  "947",
  "949",
  "952",
  "954",
  "956",
  "959",
  "970",
  "971",
  "972",
  "973",
  "975",
  "978",
  "979",
  "980",
  "984",
  "985",
  "989"
];

},{}],492:[function(require,module,exports){
arguments[4][491][0].apply(exports,arguments)
},{"dup":491}],493:[function(require,module,exports){
var phone_number = {};
module['exports'] = phone_number;
phone_number.area_code = require("./area_code");
phone_number.exchange_code = require("./exchange_code");

},{"./area_code":491,"./exchange_code":492}],494:[function(require,module,exports){
arguments[4][416][0].apply(exports,arguments)
},{"dup":416}],495:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}"
];

},{}],496:[function(require,module,exports){
module["exports"] = [
  "Bondi",
  "Burleigh Heads",
  "Carlton",
  "Fitzroy",
  "Fremantle",
  "Glenelg",
  "Manly",
  "Noosa",
  "Stones Corner",
  "St Kilda",
  "Surry Hills",
  "Yarra Valley"
];

},{}],497:[function(require,module,exports){
arguments[4][417][0].apply(exports,arguments)
},{"dup":417}],498:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.street_root = require("./street_root");
address.street_name = require("./street_name");
address.city_prefix = require("./city_prefix");
address.city = require("./city");
address.state_abbr = require("./state_abbr");
address.region = require("./region");
address.state = require("./state");
address.postcode = require("./postcode");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.default_country = require("./default_country");

},{"./building_number":494,"./city":495,"./city_prefix":496,"./default_country":497,"./postcode":499,"./region":500,"./state":501,"./state_abbr":502,"./street_name":503,"./street_root":504,"./street_suffix":505}],499:[function(require,module,exports){
arguments[4][419][0].apply(exports,arguments)
},{"dup":419}],500:[function(require,module,exports){
module["exports"] = [
  "South East Queensland",
  "Wide Bay Burnett",
  "Margaret River",
  "Port Pirie",
  "Gippsland",
  "Elizabeth",
  "Barossa"
];

},{}],501:[function(require,module,exports){
arguments[4][420][0].apply(exports,arguments)
},{"dup":420}],502:[function(require,module,exports){
arguments[4][421][0].apply(exports,arguments)
},{"dup":421}],503:[function(require,module,exports){
arguments[4][253][0].apply(exports,arguments)
},{"dup":253}],504:[function(require,module,exports){
module["exports"] = [
  "Ramsay Street",
  "Bonnie Doon",
  "Cavill Avenue",
  "Queen Street"
];

},{}],505:[function(require,module,exports){
arguments[4][422][0].apply(exports,arguments)
},{"dup":422}],506:[function(require,module,exports){
arguments[4][423][0].apply(exports,arguments)
},{"./suffix":507,"dup":423}],507:[function(require,module,exports){
arguments[4][424][0].apply(exports,arguments)
},{"dup":424}],508:[function(require,module,exports){
var en_au_ocker = {};
module['exports'] = en_au_ocker;
en_au_ocker.title = "Australia Ocker (English)";
en_au_ocker.name = require("./name");
en_au_ocker.company = require("./company");
en_au_ocker.internet = require("./internet");
en_au_ocker.address = require("./address");
en_au_ocker.phone_number = require("./phone_number");

},{"./address":498,"./company":506,"./internet":510,"./name":512,"./phone_number":516}],509:[function(require,module,exports){
arguments[4][426][0].apply(exports,arguments)
},{"dup":426}],510:[function(require,module,exports){
arguments[4][315][0].apply(exports,arguments)
},{"./domain_suffix":509,"dup":315}],511:[function(require,module,exports){
module["exports"] = [
  "Charlotte",
  "Ava",
  "Chloe",
  "Emily",
  "Olivia",
  "Zoe",
  "Lily",
  "Sophie",
  "Amelia",
  "Sofia",
  "Ella",
  "Isabella",
  "Ruby",
  "Sienna",
  "Mia+3",
  "Grace",
  "Emma",
  "Ivy",
  "Layla",
  "Abigail",
  "Isla",
  "Hannah",
  "Zara",
  "Lucy",
  "Evie",
  "Annabelle",
  "Madison",
  "Alice",
  "Georgia",
  "Maya",
  "Madeline",
  "Audrey",
  "Scarlett",
  "Isabelle",
  "Chelsea",
  "Mila",
  "Holly",
  "Indiana",
  "Poppy",
  "Harper",
  "Sarah",
  "Alyssa",
  "Jasmine",
  "Imogen",
  "Hayley",
  "Pheobe",
  "Eva",
  "Evelyn",
  "Mackenzie",
  "Ayla",
  "Oliver",
  "Jack",
  "Jackson",
  "William",
  "Ethan",
  "Charlie",
  "Lucas",
  "Cooper",
  "Lachlan",
  "Noah",
  "Liam",
  "Alexander",
  "Max",
  "Isaac",
  "Thomas",
  "Xavier",
  "Oscar",
  "Benjamin",
  "Aiden",
  "Mason",
  "Samuel",
  "James",
  "Levi",
  "Riley",
  "Harrison",
  "Ryan",
  "Henry",
  "Jacob",
  "Joshua",
  "Leo",
  "Zach",
  "Harry",
  "Hunter",
  "Flynn",
  "Archie",
  "Tyler",
  "Elijah",
  "Hayden",
  "Jayden",
  "Blake",
  "Archer",
  "Ashton",
  "Sebastian",
  "Zachery",
  "Lincoln",
  "Mitchell",
  "Luca",
  "Nathan",
  "Kai",
  "Connor",
  "Tom",
  "Nigel",
  "Matt",
  "Sean"
];

},{}],512:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.ocker_first_name = require("./ocker_first_name");

},{"./first_name":511,"./last_name":513,"./ocker_first_name":514}],513:[function(require,module,exports){
module["exports"] = [
  "Smith",
  "Jones",
  "Williams",
  "Brown",
  "Wilson",
  "Taylor",
  "Morton",
  "White",
  "Martin",
  "Anderson",
  "Thompson",
  "Nguyen",
  "Thomas",
  "Walker",
  "Harris",
  "Lee",
  "Ryan",
  "Robinson",
  "Kelly",
  "King",
  "Rausch",
  "Ridge",
  "Connolly",
  "LeQuesne"
];

},{}],514:[function(require,module,exports){
module["exports"] = [
  "Bazza",
  "Bluey",
  "Davo",
  "Johno",
  "Shano",
  "Shazza"
];

},{}],515:[function(require,module,exports){
arguments[4][431][0].apply(exports,arguments)
},{"dup":431}],516:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":515,"dup":197}],517:[function(require,module,exports){
module["exports"] = [
  " s/n.",
  ", #",
  ", ##",
  " #",
  " ##"
];

},{}],518:[function(require,module,exports){
arguments[4][495][0].apply(exports,arguments)
},{"dup":495}],519:[function(require,module,exports){
module["exports"] = [
  "Parla",
  "Telde",
  "Baracaldo",
  "San Fernando",
  "Torrevieja",
  "Lugo",
  "Santiago de Compostela",
  "Gerona",
  "Cáceres",
  "Lorca",
  "Coslada",
  "Talavera de la Reina",
  "El Puerto de Santa María",
  "Cornellá de Llobregat",
  "Avilés",
  "Palencia",
  "Gecho",
  "Orihuela",
  "Pontevedra",
  "Pozuelo de Alarcón",
  "Toledo",
  "El Ejido",
  "Guadalajara",
  "Gandía",
  "Ceuta",
  "Ferrol",
  "Chiclana de la Frontera",
  "Manresa",
  "Roquetas de Mar",
  "Ciudad Real",
  "Rubí",
  "Benidorm",
  "San Sebastían de los Reyes",
  "Ponferrada",
  "Zamora",
  "Alcalá de Guadaira",
  "Fuengirola",
  "Mijas",
  "Sanlúcar de Barrameda",
  "La Línea de la Concepción",
  "Majadahonda",
  "Sagunto",
  "El Prat de LLobregat",
  "Viladecans",
  "Linares",
  "Alcoy",
  "Irún",
  "Estepona",
  "Torremolinos",
  "Rivas-Vaciamadrid",
  "Molina de Segura",
  "Paterna",
  "Granollers",
  "Santa Lucía de Tirajana",
  "Motril",
  "Cerdañola del Vallés",
  "Arrecife",
  "Segovia",
  "Torrelavega",
  "Elda",
  "Mérida",
  "Ávila",
  "Valdemoro",
  "Cuenta",
  "Collado Villalba",
  "Benalmádena",
  "Mollet del Vallés",
  "Puertollano",
  "Madrid",
  "Barcelona",
  "Valencia",
  "Sevilla",
  "Zaragoza",
  "Málaga",
  "Murcia",
  "Palma de Mallorca",
  "Las Palmas de Gran Canaria",
  "Bilbao",
  "Córdoba",
  "Alicante",
  "Valladolid",
  "Vigo",
  "Gijón",
  "Hospitalet de LLobregat",
  "La Coruña",
  "Granada",
  "Vitoria",
  "Elche",
  "Santa Cruz de Tenerife",
  "Oviedo",
  "Badalona",
  "Cartagena",
  "Móstoles",
  "Jerez de la Frontera",
  "Tarrasa",
  "Sabadell",
  "Alcalá de Henares",
  "Pamplona",
  "Fuenlabrada",
  "Almería",
  "San Sebastián",
  "Leganés",
  "Santander",
  "Burgos",
  "Castellón de la Plana",
  "Alcorcón",
  "Albacete",
  "Getafe",
  "Salamanca",
  "Huelva",
  "Logroño",
  "Badajoz",
  "San Cristróbal de la Laguna",
  "León",
  "Tarragona",
  "Cádiz",
  "Lérida",
  "Marbella",
  "Mataró",
  "Dos Hermanas",
  "Santa Coloma de Gramanet",
  "Jaén",
  "Algeciras",
  "Torrejón de Ardoz",
  "Orense",
  "Alcobendas",
  "Reus",
  "Calahorra",
  "Inca"
];

},{}],520:[function(require,module,exports){
module["exports"] = [
  "Afganistán",
  "Albania",
  "Argelia",
  "Andorra",
  "Angola",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbayán",
  "Bahamas",
  "Barein",
  "Bangladesh",
  "Barbados",
  "Bielorusia",
  "Bélgica",
  "Belice",
  "Bermuda",
  "Bután",
  "Bolivia",
  "Bosnia Herzegovina",
  "Botswana",
  "Brasil",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Camboya",
  "Camerún",
  "Canada",
  "Cabo Verde",
  "Islas Caimán",
  "Chad",
  "Chile",
  "China",
  "Isla de Navidad",
  "Colombia",
  "Comodos",
  "Congo",
  "Costa Rica",
  "Costa de Marfil",
  "Croacia",
  "Cuba",
  "Chipre",
  "República Checa",
  "Dinamarca",
  "Dominica",
  "República Dominicana",
  "Ecuador",
  "Egipto",
  "El Salvador",
  "Guinea Ecuatorial",
  "Eritrea",
  "Estonia",
  "Etiopía",
  "Islas Faro",
  "Fiji",
  "Finlandia",
  "Francia",
  "Gabón",
  "Gambia",
  "Georgia",
  "Alemania",
  "Ghana",
  "Grecia",
  "Groenlandia",
  "Granada",
  "Guadalupe",
  "Guam",
  "Guatemala",
  "Guinea",
  "Guinea-Bisau",
  "Guayana",
  "Haiti",
  "Honduras",
  "Hong Kong",
  "Hungria",
  "Islandia",
  "India",
  "Indonesia",
  "Iran",
  "Irak",
  "Irlanda",
  "Italia",
  "Jamaica",
  "Japón",
  "Jordania",
  "Kazajistan",
  "Kenia",
  "Kiribati",
  "Corea",
  "Kuwait",
  "Letonia",
  "Líbano",
  "Liberia",
  "Liechtenstein",
  "Lituania",
  "Luxemburgo",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malasia",
  "Maldivas",
  "Mali",
  "Malta",
  "Martinica",
  "Mauritania",
  "Méjico",
  "Micronesia",
  "Moldavia",
  "Mónaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Marruecos",
  "Mozambique",
  "Namibia",
  "Nauru",
  "Nepal",
  "Holanda",
  "Nueva Zelanda",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Noruega",
  "Omán",
  "Pakistan",
  "Panamá",
  "Papúa Nueva Guinea",
  "Paraguay",
  "Perú",
  "Filipinas",
  "Poland",
  "Portugal",
  "Puerto Rico",
  "Rusia",
  "Ruanda",
  "Samoa",
  "San Marino",
  "Santo Tomé y Principe",
  "Arabia Saudí",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leona",
  "Singapur",
  "Eslovaquia",
  "Eslovenia",
  "Somalia",
  "España",
  "Sri Lanka",
  "Sudán",
  "Suriname",
  "Suecia",
  "Suiza",
  "Siria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Tailandia",
  "Timor-Leste",
  "Togo",
  "Tonga",
  "Trinidad y Tobago",
  "Tunez",
  "Turquia",
  "Uganda",
  "Ucrania",
  "Emiratos Árabes Unidos",
  "Reino Unido",
  "Estados Unidos de América",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],521:[function(require,module,exports){
module["exports"] = [
  "España"
];

},{}],522:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.province = require("./province");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":517,"./city":518,"./city_prefix":519,"./country":520,"./default_country":521,"./postcode":523,"./province":524,"./secondary_address":525,"./state":526,"./state_abbr":527,"./street_address":528,"./street_name":529,"./street_suffix":530,"./time_zone":531}],523:[function(require,module,exports){
module["exports"] = [
  "#####"
];

},{}],524:[function(require,module,exports){
module["exports"] = [
  "Álava",
  "Albacete",
  "Alicante",
  "Almería",
  "Asturias",
  "Ávila",
  "Badajoz",
  "Barcelona",
  "Burgos",
  "Cantabria",
  "Castellón",
  "Ciudad Real",
  "Cuenca",
  "Cáceres",
  "Cádiz",
  "Córdoba",
  "Gerona",
  "Granada",
  "Guadalajara",
  "Guipúzcoa",
  "Huelva",
  "Huesca",
  "Islas Baleares",
  "Jaén",
  "La Coruña",
  "La Rioja",
  "Las Palmas",
  "León",
  "Lugo",
  "lérida",
  "Madrid",
  "Murcia",
  "Málaga",
  "Navarra",
  "Orense",
  "Palencia",
  "Pontevedra",
  "Salamanca",
  "Santa Cruz de Tenerife",
  "Segovia",
  "Sevilla",
  "Soria",
  "Tarragona",
  "Teruel",
  "Toledo",
  "Valencia",
  "Valladolid",
  "Vizcaya",
  "Zamora",
  "Zaragoza"
];

},{}],525:[function(require,module,exports){
module["exports"] = [
  "Esc. ###",
  "Puerta ###"
];

},{}],526:[function(require,module,exports){
module["exports"] = [
  "Andalucía",
  "Aragón",
  "Principado de Asturias",
  "Baleares",
  "Canarias",
  "Cantabria",
  "Castilla-La Mancha",
  "Castilla y León",
  "Cataluña",
  "Comunidad Valenciana",
  "Extremadura",
  "Galicia",
  "La Rioja",
  "Comunidad de Madrid",
  "Navarra",
  "País Vasco",
  "Región de Murcia"
];

},{}],527:[function(require,module,exports){
module["exports"] = [
  "And",
  "Ara",
  "Ast",
  "Bal",
  "Can",
  "Cbr",
  "Man",
  "Leo",
  "Cat",
  "Com",
  "Ext",
  "Gal",
  "Rio",
  "Mad",
  "Nav",
  "Vas",
  "Mur"
];

},{}],528:[function(require,module,exports){
module["exports"] = [
  "#{street_name}#{building_number}",
  "#{street_name}#{building_number} #{secondary_address}"
];

},{}],529:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Name.first_name}",
  "#{street_suffix} #{Name.first_name} #{Name.last_name}"
];

},{}],530:[function(require,module,exports){
module["exports"] = [
  "Aldea",
  "Apartamento",
  "Arrabal",
  "Arroyo",
  "Avenida",
  "Bajada",
  "Barranco",
  "Barrio",
  "Bloque",
  "Calle",
  "Calleja",
  "Camino",
  "Carretera",
  "Caserio",
  "Colegio",
  "Colonia",
  "Conjunto",
  "Cuesta",
  "Chalet",
  "Edificio",
  "Entrada",
  "Escalinata",
  "Explanada",
  "Extramuros",
  "Extrarradio",
  "Ferrocarril",
  "Glorieta",
  "Gran Subida",
  "Grupo",
  "Huerta",
  "Jardines",
  "Lado",
  "Lugar",
  "Manzana",
  "Masía",
  "Mercado",
  "Monte",
  "Muelle",
  "Municipio",
  "Parcela",
  "Parque",
  "Partida",
  "Pasaje",
  "Paseo",
  "Plaza",
  "Poblado",
  "Polígono",
  "Prolongación",
  "Puente",
  "Puerta",
  "Quinta",
  "Ramal",
  "Rambla",
  "Rampa",
  "Riera",
  "Rincón",
  "Ronda",
  "Rua",
  "Salida",
  "Sector",
  "Sección",
  "Senda",
  "Solar",
  "Subida",
  "Terrenos",
  "Torrente",
  "Travesía",
  "Urbanización",
  "Vía",
  "Vía Pública"
];

},{}],531:[function(require,module,exports){
module["exports"] = [
  "Pacífico/Midway",
  "Pacífico/Pago_Pago",
  "Pacífico/Honolulu",
  "America/Juneau",
  "America/Los_Angeles",
  "America/Tijuana",
  "America/Denver",
  "America/Phoenix",
  "America/Chihuahua",
  "America/Mazatlan",
  "America/Chicago",
  "America/Regina",
  "America/Mexico_City",
  "America/Mexico_City",
  "America/Monterrey",
  "America/Guatemala",
  "America/New_York",
  "America/Indiana/Indianapolis",
  "America/Bogota",
  "America/Lima",
  "America/Lima",
  "America/Halifax",
  "America/Caracas",
  "America/La_Paz",
  "America/Santiago",
  "America/St_Johns",
  "America/Sao_Paulo",
  "America/Argentina/Buenos_Aires",
  "America/Guyana",
  "America/Godthab",
  "Atlantic/South_Georgia",
  "Atlantic/Azores",
  "Atlantic/Cape_Verde",
  "Europa/Dublin",
  "Europa/London",
  "Europa/Lisbon",
  "Europa/London",
  "Africa/Casablanca",
  "Africa/Monrovia",
  "Etc/UTC",
  "Europa/Belgrade",
  "Europa/Bratislava",
  "Europa/Budapest",
  "Europa/Ljubljana",
  "Europa/Prague",
  "Europa/Sarajevo",
  "Europa/Skopje",
  "Europa/Warsaw",
  "Europa/Zagreb",
  "Europa/Brussels",
  "Europa/Copenhagen",
  "Europa/Madrid",
  "Europa/Paris",
  "Europa/Amsterdam",
  "Europa/Berlin",
  "Europa/Berlin",
  "Europa/Rome",
  "Europa/Stockholm",
  "Europa/Vienna",
  "Africa/Algiers",
  "Europa/Bucharest",
  "Africa/Cairo",
  "Europa/Helsinki",
  "Europa/Kiev",
  "Europa/Riga",
  "Europa/Sofia",
  "Europa/Tallinn",
  "Europa/Vilnius",
  "Europa/Athens",
  "Europa/Istanbul",
  "Europa/Minsk",
  "Asia/Jerusalen",
  "Africa/Harare",
  "Africa/Johannesburg",
  "Europa/Moscú",
  "Europa/Moscú",
  "Europa/Moscú",
  "Asia/Kuwait",
  "Asia/Riyadh",
  "Africa/Nairobi",
  "Asia/Baghdad",
  "Asia/Tehran",
  "Asia/Muscat",
  "Asia/Muscat",
  "Asia/Baku",
  "Asia/Tbilisi",
  "Asia/Yerevan",
  "Asia/Kabul",
  "Asia/Yekaterinburg",
  "Asia/Karachi",
  "Asia/Karachi",
  "Asia/Tashkent",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kathmandu",
  "Asia/Dhaka",
  "Asia/Dhaka",
  "Asia/Colombo",
  "Asia/Almaty",
  "Asia/Novosibirsk",
  "Asia/Rangoon",
  "Asia/Bangkok",
  "Asia/Bangkok",
  "Asia/Jakarta",
  "Asia/Krasnoyarsk",
  "Asia/Shanghai",
  "Asia/Chongqing",
  "Asia/Hong_Kong",
  "Asia/Urumqi",
  "Asia/Kuala_Lumpur",
  "Asia/Singapore",
  "Asia/Taipei",
  "Australia/Perth",
  "Asia/Irkutsk",
  "Asia/Ulaanbaatar",
  "Asia/Seoul",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Yakutsk",
  "Australia/Darwin",
  "Australia/Adelaide",
  "Australia/Melbourne",
  "Australia/Melbourne",
  "Australia/Sydney",
  "Australia/Brisbane",
  "Australia/Hobart",
  "Asia/Vladivostok",
  "Pacífico/Guam",
  "Pacífico/Port_Moresby",
  "Asia/Magadan",
  "Asia/Magadan",
  "Pacífico/Noumea",
  "Pacífico/Fiji",
  "Asia/Kamchatka",
  "Pacífico/Majuro",
  "Pacífico/Auckland",
  "Pacífico/Auckland",
  "Pacífico/Tongatapu",
  "Pacífico/Fakaofo",
  "Pacífico/Apia"
];

},{}],532:[function(require,module,exports){
module["exports"] = [
  "6##-###-###",
  "6##.###.###",
  "6## ### ###",
  "6########"
];

},{}],533:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":532,"dup":256}],534:[function(require,module,exports){
module["exports"] = [
  "Adaptativo",
  "Avanzado",
  "Asimilado",
  "Automatizado",
  "Equilibrado",
  "Centrado en el negocio",
  "Centralizado",
  "Clonado",
  "Compatible",
  "Configurable",
  "Multi grupo",
  "Multi plataforma",
  "Centrado en el usuario",
  "Configurable",
  "Descentralizado",
  "Digitalizado",
  "Distribuido",
  "Diverso",
  "Reducido",
  "Mejorado",
  "Para toda la empresa",
  "Ergonomico",
  "Exclusivo",
  "Expandido",
  "Extendido",
  "Cara a cara",
  "Enfocado",
  "Totalmente configurable",
  "Fundamental",
  "Orígenes",
  "Horizontal",
  "Implementado",
  "Innovador",
  "Integrado",
  "Intuitivo",
  "Inverso",
  "Gestionado",
  "Obligatorio",
  "Monitorizado",
  "Multi canal",
  "Multi lateral",
  "Multi capa",
  "En red",
  "Orientado a objetos",
  "Open-source",
  "Operativo",
  "Optimizado",
  "Opcional",
  "Organico",
  "Organizado",
  "Perseverando",
  "Persistente",
  "en fases",
  "Polarizado",
  "Pre-emptivo",
  "Proactivo",
  "Enfocado a benficios",
  "Profundo",
  "Programable",
  "Progresivo",
  "Public-key",
  "Enfocado en la calidad",
  "Reactivo",
  "Realineado",
  "Re-contextualizado",
  "Re-implementado",
  "Reducido",
  "Ingenieria inversa",
  "Robusto",
  "Fácil",
  "Seguro",
  "Auto proporciona",
  "Compartible",
  "Intercambiable",
  "Sincronizado",
  "Orientado a equipos",
  "Total",
  "Universal",
  "Mejorado",
  "Actualizable",
  "Centrado en el usuario",
  "Amigable",
  "Versatil",
  "Virtual",
  "Visionario"
];

},{}],535:[function(require,module,exports){
module["exports"] = [
  "24 horas",
  "24/7",
  "3rd generación",
  "4th generación",
  "5th generación",
  "6th generación",
  "analizada",
  "asimétrica",
  "asíncrona",
  "monitorizada por red",
  "bidireccional",
  "bifurcada",
  "generada por el cliente",
  "cliente servidor",
  "coherente",
  "cohesiva",
  "compuesto",
  "sensible al contexto",
  "basado en el contexto",
  "basado en contenido",
  "dedicada",
  "generado por la demanda",
  "didactica",
  "direccional",
  "discreta",
  "dinámica",
  "potenciada",
  "acompasada",
  "ejecutiva",
  "explícita",
  "tolerante a fallos",
  "innovadora",
  "amplio ábanico",
  "global",
  "heurística",
  "alto nivel",
  "holística",
  "homogénea",
  "hibrida",
  "incremental",
  "intangible",
  "interactiva",
  "intermedia",
  "local",
  "logística",
  "maximizada",
  "metódica",
  "misión crítica",
  "móbil",
  "modular",
  "motivadora",
  "multimedia",
  "multiestado",
  "multitarea",
  "nacional",
  "basado en necesidades",
  "neutral",
  "nueva generación",
  "no-volátil",
  "orientado a objetos",
  "óptima",
  "optimizada",
  "radical",
  "tiempo real",
  "recíproca",
  "regional",
  "escalable",
  "secundaria",
  "orientada a soluciones",
  "estable",
  "estatica",
  "sistemática",
  "sistémica",
  "tangible",
  "terciaria",
  "transicional",
  "uniforme",
  "valor añadido",
  "vía web",
  "defectos cero",
  "tolerancia cero"
];

},{}],536:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.noun = require("./noun");
company.descriptor = require("./descriptor");
company.adjective = require("./adjective");
company.name = require("./name");

},{"./adjective":534,"./descriptor":535,"./name":537,"./noun":538,"./suffix":539}],537:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name} y #{Name.last_name}",
  "#{Name.last_name} #{Name.last_name} #{suffix}",
  "#{Name.last_name}, #{Name.last_name} y #{Name.last_name} Asociados"
];

},{}],538:[function(require,module,exports){
module["exports"] = [
  "habilidad",
  "acceso",
  "adaptador",
  "algoritmo",
  "alianza",
  "analista",
  "aplicación",
  "enfoque",
  "arquitectura",
  "archivo",
  "inteligencia artificial",
  "array",
  "actitud",
  "medición",
  "gestión presupuestaria",
  "capacidad",
  "desafío",
  "circuito",
  "colaboración",
  "complejidad",
  "concepto",
  "conglomeración",
  "contingencia",
  "núcleo",
  "fidelidad",
  "base de datos",
  "data-warehouse",
  "definición",
  "emulación",
  "codificar",
  "encriptar",
  "extranet",
  "firmware",
  "flexibilidad",
  "focus group",
  "previsión",
  "base de trabajo",
  "función",
  "funcionalidad",
  "Interfaz Gráfica",
  "groupware",
  "Interfaz gráfico de usuario",
  "hardware",
  "Soporte",
  "jerarquía",
  "conjunto",
  "implementación",
  "infraestructura",
  "iniciativa",
  "instalación",
  "conjunto de instrucciones",
  "interfaz",
  "intranet",
  "base del conocimiento",
  "red de area local",
  "aprovechar",
  "matrices",
  "metodologías",
  "middleware",
  "migración",
  "modelo",
  "moderador",
  "monitorizar",
  "arquitectura abierta",
  "sistema abierto",
  "orquestar",
  "paradigma",
  "paralelismo",
  "política",
  "portal",
  "estructura de precios",
  "proceso de mejora",
  "producto",
  "productividad",
  "proyecto",
  "proyección",
  "protocolo",
  "línea segura",
  "software",
  "solución",
  "estandardización",
  "estrategia",
  "estructura",
  "éxito",
  "superestructura",
  "soporte",
  "sinergia",
  "mediante",
  "marco de tiempo",
  "caja de herramientas",
  "utilización",
  "website",
  "fuerza de trabajo"
];

},{}],539:[function(require,module,exports){
module["exports"] = [
  "S.L.",
  "e Hijos",
  "S.A.",
  "Hermanos"
];

},{}],540:[function(require,module,exports){
var es = {};
module['exports'] = es;
es.title = "Spanish";
es.address = require("./address");
es.company = require("./company");
es.internet = require("./internet");
es.name = require("./name");
es.phone_number = require("./phone_number");
es.cell_phone = require("./cell_phone");

},{"./address":522,"./cell_phone":533,"./company":536,"./internet":543,"./name":545,"./phone_number":552}],541:[function(require,module,exports){
module["exports"] = [
  "com",
  "es",
  "info",
  "com.es",
  "org"
];

},{}],542:[function(require,module,exports){
arguments[4][263][0].apply(exports,arguments)
},{"dup":263}],543:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":541,"./free_email":542,"dup":187}],544:[function(require,module,exports){
module["exports"] = [
  "Adán",
  "Agustín",
  "Alberto",
  "Alejandro",
  "Alfonso",
  "Alfredo",
  "Andrés",
  "Antonio",
  "Armando",
  "Arturo",
  "Benito",
  "Benjamín",
  "Bernardo",
  "Carlos",
  "César",
  "Claudio",
  "Clemente",
  "Cristian",
  "Cristobal",
  "Daniel",
  "David",
  "Diego",
  "Eduardo",
  "Emilio",
  "Enrique",
  "Ernesto",
  "Esteban",
  "Federico",
  "Felipe",
  "Fernando",
  "Francisco",
  "Gabriel",
  "Gerardo",
  "Germán",
  "Gilberto",
  "Gonzalo",
  "Gregorio",
  "Guillermo",
  "Gustavo",
  "Hernán",
  "Homero",
  "Horacio",
  "Hugo",
  "Ignacio",
  "Jacobo",
  "Jaime",
  "Javier",
  "Jerónimo",
  "Jesús",
  "Joaquín",
  "Jorge",
  "Jorge Luis",
  "José",
  "José Eduardo",
  "José Emilio",
  "José Luis",
  "José María",
  "Juan",
  "Juan Carlos",
  "Julio",
  "Julio César",
  "Lorenzo",
  "Lucas",
  "Luis",
  "Luis Miguel",
  "Manuel",
  "Marco Antonio",
  "Marcos",
  "Mariano",
  "Mario",
  "Martín",
  "Mateo",
  "Miguel",
  "Miguel Ángel",
  "Nicolás",
  "Octavio",
  "Óscar",
  "Pablo",
  "Patricio",
  "Pedro",
  "Rafael",
  "Ramiro",
  "Ramón",
  "Raúl",
  "Ricardo",
  "Roberto",
  "Rodrigo",
  "Rubén",
  "Salvador",
  "Samuel",
  "Sancho",
  "Santiago",
  "Sergio",
  "Teodoro",
  "Timoteo",
  "Tomás",
  "Vicente",
  "Víctor",
  "Adela",
  "Adriana",
  "Alejandra",
  "Alicia",
  "Amalia",
  "Ana",
  "Ana Luisa",
  "Ana María",
  "Andrea",
  "Anita",
  "Ángela",
  "Antonia",
  "Ariadna",
  "Barbara",
  "Beatriz",
  "Berta",
  "Blanca",
  "Caridad",
  "Carla",
  "Carlota",
  "Carmen",
  "Carolina",
  "Catalina",
  "Cecilia",
  "Clara",
  "Claudia",
  "Concepción",
  "Conchita",
  "Cristina",
  "Daniela",
  "Débora",
  "Diana",
  "Dolores",
  "Lola",
  "Dorotea",
  "Elena",
  "Elisa",
  "Eloisa",
  "Elsa",
  "Elvira",
  "Emilia",
  "Esperanza",
  "Estela",
  "Ester",
  "Eva",
  "Florencia",
  "Francisca",
  "Gabriela",
  "Gloria",
  "Graciela",
  "Guadalupe",
  "Guillermina",
  "Inés",
  "Irene",
  "Isabel",
  "Isabela",
  "Josefina",
  "Juana",
  "Julia",
  "Laura",
  "Leonor",
  "Leticia",
  "Lilia",
  "Lorena",
  "Lourdes",
  "Lucia",
  "Luisa",
  "Luz",
  "Magdalena",
  "Manuela",
  "Marcela",
  "Margarita",
  "María",
  "María del Carmen",
  "María Cristina",
  "María Elena",
  "María Eugenia",
  "María José",
  "María Luisa",
  "María Soledad",
  "María Teresa",
  "Mariana",
  "Maricarmen",
  "Marilu",
  "Marisol",
  "Marta",
  "Mayte",
  "Mercedes",
  "Micaela",
  "Mónica",
  "Natalia",
  "Norma",
  "Olivia",
  "Patricia",
  "Pilar",
  "Ramona",
  "Raquel",
  "Rebeca",
  "Reina",
  "Rocio",
  "Rosa",
  "Rosalia",
  "Rosario",
  "Sara",
  "Silvia",
  "Sofia",
  "Soledad",
  "Sonia",
  "Susana",
  "Teresa",
  "Verónica",
  "Victoria",
  "Virginia",
  "Yolanda"
];

},{}],545:[function(require,module,exports){
arguments[4][403][0].apply(exports,arguments)
},{"./first_name":544,"./last_name":546,"./name":547,"./prefix":548,"./suffix":549,"./title":550,"dup":403}],546:[function(require,module,exports){
module["exports"] = [
  "Abeyta",
  "Abrego",
  "Abreu",
  "Acevedo",
  "Acosta",
  "Acuña",
  "Adame",
  "Adorno",
  "Agosto",
  "Aguayo",
  "Águilar",
  "Aguilera",
  "Aguirre",
  "Alanis",
  "Alaniz",
  "Alarcón",
  "Alba",
  "Alcala",
  "Alcántar",
  "Alcaraz",
  "Alejandro",
  "Alemán",
  "Alfaro",
  "Alicea",
  "Almanza",
  "Almaraz",
  "Almonte",
  "Alonso",
  "Alonzo",
  "Altamirano",
  "Alva",
  "Alvarado",
  "Alvarez",
  "Amador",
  "Amaya",
  "Anaya",
  "Anguiano",
  "Angulo",
  "Aparicio",
  "Apodaca",
  "Aponte",
  "Aragón",
  "Araña",
  "Aranda",
  "Arce",
  "Archuleta",
  "Arellano",
  "Arenas",
  "Arevalo",
  "Arguello",
  "Arias",
  "Armas",
  "Armendáriz",
  "Armenta",
  "Armijo",
  "Arredondo",
  "Arreola",
  "Arriaga",
  "Arroyo",
  "Arteaga",
  "Atencio",
  "Ávalos",
  "Ávila",
  "Avilés",
  "Ayala",
  "Baca",
  "Badillo",
  "Báez",
  "Baeza",
  "Bahena",
  "Balderas",
  "Ballesteros",
  "Banda",
  "Bañuelos",
  "Barajas",
  "Barela",
  "Barragán",
  "Barraza",
  "Barrera",
  "Barreto",
  "Barrientos",
  "Barrios",
  "Batista",
  "Becerra",
  "Beltrán",
  "Benavides",
  "Benavídez",
  "Benítez",
  "Bermúdez",
  "Bernal",
  "Berríos",
  "Bétancourt",
  "Blanco",
  "Bonilla",
  "Borrego",
  "Botello",
  "Bravo",
  "Briones",
  "Briseño",
  "Brito",
  "Bueno",
  "Burgos",
  "Bustamante",
  "Bustos",
  "Caballero",
  "Cabán",
  "Cabrera",
  "Cadena",
  "Caldera",
  "Calderón",
  "Calvillo",
  "Camacho",
  "Camarillo",
  "Campos",
  "Canales",
  "Candelaria",
  "Cano",
  "Cantú",
  "Caraballo",
  "Carbajal",
  "Cardenas",
  "Cardona",
  "Carmona",
  "Carranza",
  "Carrasco",
  "Carrasquillo",
  "Carreón",
  "Carrera",
  "Carrero",
  "Carrillo",
  "Carrion",
  "Carvajal",
  "Casanova",
  "Casares",
  "Casárez",
  "Casas",
  "Casillas",
  "Castañeda",
  "Castellanos",
  "Castillo",
  "Castro",
  "Cavazos",
  "Cazares",
  "Ceballos",
  "Cedillo",
  "Ceja",
  "Centeno",
  "Cepeda",
  "Cerda",
  "Cervantes",
  "Cervántez",
  "Chacón",
  "Chapa",
  "Chavarría",
  "Chávez",
  "Cintrón",
  "Cisneros",
  "Collado",
  "Collazo",
  "Colón",
  "Colunga",
  "Concepción",
  "Contreras",
  "Cordero",
  "Córdova",
  "Cornejo",
  "Corona",
  "Coronado",
  "Corral",
  "Corrales",
  "Correa",
  "Cortés",
  "Cortez",
  "Cotto",
  "Covarrubias",
  "Crespo",
  "Cruz",
  "Cuellar",
  "Curiel",
  "Dávila",
  "de Anda",
  "de Jesús",
  "Delacrúz",
  "Delafuente",
  "Delagarza",
  "Delao",
  "Delapaz",
  "Delarosa",
  "Delatorre",
  "Deleón",
  "Delgadillo",
  "Delgado",
  "Delrío",
  "Delvalle",
  "Díaz",
  "Domínguez",
  "Domínquez",
  "Duarte",
  "Dueñas",
  "Duran",
  "Echevarría",
  "Elizondo",
  "Enríquez",
  "Escalante",
  "Escamilla",
  "Escobar",
  "Escobedo",
  "Esparza",
  "Espinal",
  "Espino",
  "Espinosa",
  "Espinoza",
  "Esquibel",
  "Esquivel",
  "Estévez",
  "Estrada",
  "Fajardo",
  "Farías",
  "Feliciano",
  "Fernández",
  "Ferrer",
  "Fierro",
  "Figueroa",
  "Flores",
  "Flórez",
  "Fonseca",
  "Franco",
  "Frías",
  "Fuentes",
  "Gaitán",
  "Galarza",
  "Galindo",
  "Gallardo",
  "Gallegos",
  "Galván",
  "Gálvez",
  "Gamboa",
  "Gamez",
  "Gaona",
  "Garay",
  "García",
  "Garibay",
  "Garica",
  "Garrido",
  "Garza",
  "Gastélum",
  "Gaytán",
  "Gil",
  "Girón",
  "Godínez",
  "Godoy",
  "Gómez",
  "Gonzales",
  "González",
  "Gollum",
  "Gracia",
  "Granado",
  "Granados",
  "Griego",
  "Grijalva",
  "Guajardo",
  "Guardado",
  "Guerra",
  "Guerrero",
  "Guevara",
  "Guillen",
  "Gurule",
  "Gutiérrez",
  "Guzmán",
  "Haro",
  "Henríquez",
  "Heredia",
  "Hernádez",
  "Hernandes",
  "Hernández",
  "Herrera",
  "Hidalgo",
  "Hinojosa",
  "Holguín",
  "Huerta",
  "Hurtado",
  "Ibarra",
  "Iglesias",
  "Irizarry",
  "Jaime",
  "Jaimes",
  "Jáquez",
  "Jaramillo",
  "Jasso",
  "Jiménez",
  "Jimínez",
  "Juárez",
  "Jurado",
  "Laboy",
  "Lara",
  "Laureano",
  "Leal",
  "Lebrón",
  "Ledesma",
  "Leiva",
  "Lemus",
  "León",
  "Lerma",
  "Leyva",
  "Limón",
  "Linares",
  "Lira",
  "Llamas",
  "Loera",
  "Lomeli",
  "Longoria",
  "López",
  "Lovato",
  "Loya",
  "Lozada",
  "Lozano",
  "Lucero",
  "Lucio",
  "Luevano",
  "Lugo",
  "Luna",
  "Macías",
  "Madera",
  "Madrid",
  "Madrigal",
  "Maestas",
  "Magaña",
  "Malave",
  "Maldonado",
  "Manzanares",
  "Mares",
  "Marín",
  "Márquez",
  "Marrero",
  "Marroquín",
  "Martínez",
  "Mascareñas",
  "Mata",
  "Mateo",
  "Matías",
  "Matos",
  "Maya",
  "Mayorga",
  "Medina",
  "Medrano",
  "Mejía",
  "Meléndez",
  "Melgar",
  "Mena",
  "Menchaca",
  "Méndez",
  "Mendoza",
  "Menéndez",
  "Meraz",
  "Mercado",
  "Merino",
  "Mesa",
  "Meza",
  "Miramontes",
  "Miranda",
  "Mireles",
  "Mojica",
  "Molina",
  "Mondragón",
  "Monroy",
  "Montalvo",
  "Montañez",
  "Montaño",
  "Montemayor",
  "Montenegro",
  "Montero",
  "Montes",
  "Montez",
  "Montoya",
  "Mora",
  "Morales",
  "Moreno",
  "Mota",
  "Moya",
  "Munguía",
  "Muñiz",
  "Muñoz",
  "Murillo",
  "Muro",
  "Nájera",
  "Naranjo",
  "Narváez",
  "Nava",
  "Navarrete",
  "Navarro",
  "Nazario",
  "Negrete",
  "Negrón",
  "Nevárez",
  "Nieto",
  "Nieves",
  "Niño",
  "Noriega",
  "Núñez",
  "Ocampo",
  "Ocasio",
  "Ochoa",
  "Ojeda",
  "Olivares",
  "Olivárez",
  "Olivas",
  "Olivera",
  "Olivo",
  "Olmos",
  "Olvera",
  "Ontiveros",
  "Oquendo",
  "Ordóñez",
  "Orellana",
  "Ornelas",
  "Orosco",
  "Orozco",
  "Orta",
  "Ortega",
  "Ortiz",
  "Osorio",
  "Otero",
  "Ozuna",
  "Pabón",
  "Pacheco",
  "Padilla",
  "Padrón",
  "Páez",
  "Pagan",
  "Palacios",
  "Palomino",
  "Palomo",
  "Pantoja",
  "Paredes",
  "Parra",
  "Partida",
  "Patiño",
  "Paz",
  "Pedraza",
  "Pedroza",
  "Pelayo",
  "Peña",
  "Perales",
  "Peralta",
  "Perea",
  "Peres",
  "Pérez",
  "Pichardo",
  "Piña",
  "Pineda",
  "Pizarro",
  "Polanco",
  "Ponce",
  "Porras",
  "Portillo",
  "Posada",
  "Prado",
  "Preciado",
  "Prieto",
  "Puente",
  "Puga",
  "Pulido",
  "Quesada",
  "Quezada",
  "Quiñones",
  "Quiñónez",
  "Quintana",
  "Quintanilla",
  "Quintero",
  "Quiroz",
  "Rael",
  "Ramírez",
  "Ramón",
  "Ramos",
  "Rangel",
  "Rascón",
  "Raya",
  "Razo",
  "Regalado",
  "Rendón",
  "Rentería",
  "Reséndez",
  "Reyes",
  "Reyna",
  "Reynoso",
  "Rico",
  "Rincón",
  "Riojas",
  "Ríos",
  "Rivas",
  "Rivera",
  "Rivero",
  "Robledo",
  "Robles",
  "Rocha",
  "Rodarte",
  "Rodrígez",
  "Rodríguez",
  "Rodríquez",
  "Rojas",
  "Rojo",
  "Roldán",
  "Rolón",
  "Romero",
  "Romo",
  "Roque",
  "Rosado",
  "Rosales",
  "Rosario",
  "Rosas",
  "Roybal",
  "Rubio",
  "Ruelas",
  "Ruiz",
  "Saavedra",
  "Sáenz",
  "Saiz",
  "Salas",
  "Salazar",
  "Salcedo",
  "Salcido",
  "Saldaña",
  "Saldivar",
  "Salgado",
  "Salinas",
  "Samaniego",
  "Sanabria",
  "Sanches",
  "Sánchez",
  "Sandoval",
  "Santacruz",
  "Santana",
  "Santiago",
  "Santillán",
  "Sarabia",
  "Sauceda",
  "Saucedo",
  "Sedillo",
  "Segovia",
  "Segura",
  "Sepúlveda",
  "Serna",
  "Serrano",
  "Serrato",
  "Sevilla",
  "Sierra",
  "Sisneros",
  "Solano",
  "Solís",
  "Soliz",
  "Solorio",
  "Solorzano",
  "Soria",
  "Sosa",
  "Sotelo",
  "Soto",
  "Suárez",
  "Tafoya",
  "Tamayo",
  "Tamez",
  "Tapia",
  "Tejada",
  "Tejeda",
  "Téllez",
  "Tello",
  "Terán",
  "Terrazas",
  "Tijerina",
  "Tirado",
  "Toledo",
  "Toro",
  "Torres",
  "Tórrez",
  "Tovar",
  "Trejo",
  "Treviño",
  "Trujillo",
  "Ulibarri",
  "Ulloa",
  "Urbina",
  "Ureña",
  "Urías",
  "Uribe",
  "Urrutia",
  "Vaca",
  "Valadez",
  "Valdés",
  "Valdez",
  "Valdivia",
  "Valencia",
  "Valentín",
  "Valenzuela",
  "Valladares",
  "Valle",
  "Vallejo",
  "Valles",
  "Valverde",
  "Vanegas",
  "Varela",
  "Vargas",
  "Vásquez",
  "Vázquez",
  "Vega",
  "Vela",
  "Velasco",
  "Velásquez",
  "Velázquez",
  "Vélez",
  "Véliz",
  "Venegas",
  "Vera",
  "Verdugo",
  "Verduzco",
  "Vergara",
  "Viera",
  "Vigil",
  "Villa",
  "Villagómez",
  "Villalobos",
  "Villalpando",
  "Villanueva",
  "Villareal",
  "Villarreal",
  "Villaseñor",
  "Villegas",
  "Yáñez",
  "Ybarra",
  "Zambrano",
  "Zamora",
  "Zamudio",
  "Zapata",
  "Zaragoza",
  "Zarate",
  "Zavala",
  "Zayas",
  "Zelaya",
  "Zepeda",
  "Zúñiga"
];

},{}],547:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}"
];

},{}],548:[function(require,module,exports){
module["exports"] = [
  "Sr.",
  "Sra.",
  "Sta."
];

},{}],549:[function(require,module,exports){
arguments[4][407][0].apply(exports,arguments)
},{"dup":407}],550:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Jefe",
    "Senior",
    "Directo",
    "Corporativo",
    "Dinánmico",
    "Futuro",
    "Producto",
    "Nacional",
    "Regional",
    "Distrito",
    "Central",
    "Global",
    "Cliente",
    "Inversor",
    "International",
    "Heredado",
    "Adelante",
    "Interno",
    "Humano",
    "Gerente",
    "Director"
  ],
  "level": [
    "Soluciones",
    "Programa",
    "Marca",
    "Seguridada",
    "Investigación",
    "Marketing",
    "Normas",
    "Implementación",
    "Integración",
    "Funcionalidad",
    "Respuesta",
    "Paradigma",
    "Tácticas",
    "Identidad",
    "Mercados",
    "Grupo",
    "División",
    "Aplicaciones",
    "Optimización",
    "Operaciones",
    "Infraestructura",
    "Intranet",
    "Comunicaciones",
    "Web",
    "Calidad",
    "Seguro",
    "Mobilidad",
    "Cuentas",
    "Datos",
    "Creativo",
    "Configuración",
    "Contabilidad",
    "Interacciones",
    "Factores",
    "Usabilidad",
    "Métricas"
  ],
  "job": [
    "Supervisor",
    "Asociado",
    "Ejecutivo",
    "Relacciones",
    "Oficial",
    "Gerente",
    "Ingeniero",
    "Especialista",
    "Director",
    "Coordinador",
    "Administrador",
    "Arquitecto",
    "Analista",
    "Diseñador",
    "Planificador",
    "Técnico",
    "Funcionario",
    "Desarrollador",
    "Productor",
    "Consultor",
    "Asistente",
    "Facilitador",
    "Agente",
    "Representante",
    "Estratega"
  ]
};

},{}],551:[function(require,module,exports){
module["exports"] = [
  "9##-###-###",
  "9##.###.###",
  "9## ### ###",
  "9########"
];

},{}],552:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":551,"dup":197}],553:[function(require,module,exports){
module["exports"] = [
  " s/n.",
  ", #",
  ", ##",
  " #",
  " ##",
  " ###",
  " ####"
];

},{}],554:[function(require,module,exports){
arguments[4][495][0].apply(exports,arguments)
},{"dup":495}],555:[function(require,module,exports){
module["exports"] = [
  "Aguascalientes",
  "Apodaca",
  "Buenavista",
  "Campeche",
  "Cancún",
  "Cárdenas",
  "Celaya",
  "Chalco",
  "Chetumal",
  "Chicoloapan",
  "Chignahuapan",
  "Chihuahua",
  "Chilpancingo",
  "Chimalhuacán",
  "Ciudad Acuña",
  "Ciudad de México",
  "Ciudad del Carmen",
  "Ciudad López Mateos",
  "Ciudad Madero",
  "Ciudad Obregón",
  "Ciudad Valles",
  "Ciudad Victoria",
  "Coatzacoalcos",
  "Colima-Villa de Álvarez",
  "Comitán de Dominguez",
  "Córdoba",
  "Cuautitlán Izcalli",
  "Cuautla",
  "Cuernavaca",
  "Culiacán",
  "Delicias",
  "Durango",
  "Ensenada",
  "Fresnillo",
  "General Escobedo",
  "Gómez Palacio",
  "Guadalajara",
  "Guadalupe",
  "Guanajuato",
  "Guaymas",
  "Hermosillo",
  "Hidalgo del Parral",
  "Iguala",
  "Irapuato",
  "Ixtapaluca",
  "Jiutepec",
  "Juárez",
  "La Laguna",
  "La Paz",
  "La Piedad-Pénjamo",
  "León",
  "Los Cabos",
  "Los Mochis",
  "Manzanillo",
  "Matamoros",
  "Mazatlán",
  "Mérida",
  "Mexicali",
  "Minatitlán",
  "Miramar",
  "Monclova",
  "Monclova-Frontera",
  "Monterrey",
  "Morelia",
  "Naucalpan de Juárez",
  "Navojoa",
  "Nezahualcóyotl",
  "Nogales",
  "Nuevo Laredo",
  "Oaxaca",
  "Ocotlán",
  "Ojo de agua",
  "Orizaba",
  "Pachuca",
  "Piedras Negras",
  "Poza Rica",
  "Puebla",
  "Puerto Vallarta",
  "Querétaro",
  "Reynosa-Río Bravo",
  "Rioverde-Ciudad Fernández",
  "Salamanca",
  "Saltillo",
  "San Cristobal de las Casas",
  "San Francisco Coacalco",
  "San Francisco del Rincón",
  "San Juan Bautista Tuxtepec",
  "San Juan del Río",
  "San Luis Potosí-Soledad",
  "San Luis Río Colorado",
  "San Nicolás de los Garza",
  "San Pablo de las Salinas",
  "San Pedro Garza García",
  "Santa Catarina",
  "Soledad de Graciano Sánchez",
  "Tampico-Pánuco",
  "Tapachula",
  "Tecomán",
  "Tehuacán",
  "Tehuacán",
  "Tehuantepec-Salina Cruz",
  "Tepexpan",
  "Tepic",
  "Tetela de Ocampo",
  "Texcoco de Mora",
  "Tijuana",
  "Tlalnepantla",
  "Tlaquepaque",
  "Tlaxcala-Apizaco",
  "Toluca",
  "Tonalá",
  "Torreón",
  "Tula",
  "Tulancingo",
  "Tulancingo de Bravo",
  "Tuxtla Gutiérrez",
  "Uruapan",
  "Uruapan del Progreso",
  "Valle de México",
  "Veracruz",
  "Villa de Álvarez",
  "Villa Nicolás Romero",
  "Villahermosa",
  "Xalapa",
  "Zacatecas-Guadalupe",
  "Zacatlan",
  "Zacatzingo",
  "Zamora-Jacona",
  "Zapopan",
  "Zitacuaro"
];

},{}],556:[function(require,module,exports){
arguments[4][326][0].apply(exports,arguments)
},{"dup":326}],557:[function(require,module,exports){
module["exports"] = [
  "Afganistán",
  "Albania",
  "Argelia",
  "Andorra",
  "Angola",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbayán",
  "Bahamas",
  "Barein",
  "Bangladesh",
  "Barbados",
  "Bielorusia",
  "Bélgica",
  "Belice",
  "Bermuda",
  "Bután",
  "Bolivia",
  "Bosnia Herzegovina",
  "Botswana",
  "Brasil",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Camboya",
  "Camerún",
  "Canada",
  "Cabo Verde",
  "Islas Caimán",
  "Chad",
  "Chile",
  "China",
  "Isla de Navidad",
  "Colombia",
  "Comodos",
  "Congo",
  "Costa Rica",
  "Costa de Marfil",
  "Croacia",
  "Cuba",
  "Chipre",
  "República Checa",
  "Dinamarca",
  "Dominica",
  "República Dominicana",
  "Ecuador",
  "Egipto",
  "El Salvador",
  "Guinea Ecuatorial",
  "Eritrea",
  "Estonia",
  "Etiopía",
  "Islas Faro",
  "Fiji",
  "Finlandia",
  "Francia",
  "Gabón",
  "Gambia",
  "Georgia",
  "Alemania",
  "Ghana",
  "Grecia",
  "Groenlandia",
  "Granada",
  "Guadalupe",
  "Guam",
  "Guatemala",
  "Guinea",
  "Guinea-Bisau",
  "Guayana",
  "Haiti",
  "Honduras",
  "Hong Kong",
  "Hungria",
  "Islandia",
  "India",
  "Indonesia",
  "Iran",
  "Irak",
  "Irlanda",
  "Italia",
  "Jamaica",
  "Japón",
  "Jordania",
  "Kazajistan",
  "Kenia",
  "Kiribati",
  "Corea",
  "Kuwait",
  "Letonia",
  "Líbano",
  "Liberia",
  "Liechtenstein",
  "Lituania",
  "Luxemburgo",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malasia",
  "Maldivas",
  "Mali",
  "Malta",
  "Martinica",
  "Mauritania",
  "México",
  "Micronesia",
  "Moldavia",
  "Mónaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Marruecos",
  "Mozambique",
  "Namibia",
  "Nauru",
  "Nepal",
  "Holanda",
  "Nueva Zelanda",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Noruega",
  "Omán",
  "Pakistan",
  "Panamá",
  "Papúa Nueva Guinea",
  "Paraguay",
  "Perú",
  "Filipinas",
  "Poland",
  "Portugal",
  "Puerto Rico",
  "Rusia",
  "Ruanda",
  "Samoa",
  "San Marino",
  "Santo Tomé y Principe",
  "Arabia Saudí",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leona",
  "Singapur",
  "Eslovaquia",
  "Eslovenia",
  "Somalia",
  "España",
  "Sri Lanka",
  "Sudán",
  "Suriname",
  "Suecia",
  "Suiza",
  "Siria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Tailandia",
  "Timor-Leste",
  "Togo",
  "Tonga",
  "Trinidad y Tobago",
  "Tunez",
  "Turquia",
  "Uganda",
  "Ucrania",
  "Emiratos Árabes Unidos",
  "Reino Unido",
  "Estados Unidos de América",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],558:[function(require,module,exports){
module["exports"] = [
  "México"
];

},{}],559:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city = require("./city");
address.street = require("./street");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");
},{"./building_number":553,"./city":554,"./city_prefix":555,"./city_suffix":556,"./country":557,"./default_country":558,"./postcode":560,"./secondary_address":561,"./state":562,"./state_abbr":563,"./street":564,"./street_address":565,"./street_name":566,"./street_suffix":567,"./time_zone":568}],560:[function(require,module,exports){
arguments[4][523][0].apply(exports,arguments)
},{"dup":523}],561:[function(require,module,exports){
module["exports"] = [
  "Esc. ###",
  "Puerta ###",
  "Edificio #"
];

},{}],562:[function(require,module,exports){
module["exports"] = [
  "Aguascalientes",
  "Baja California Norte",
  "Baja California Sur",
  'Estado de México',
  "Campeche",
  "Chiapas",
  "Chihuahua",
  "Coahuila",
  "Colima",
  "Durango",
  "Guanajuato",
  "Guerrero",
  "Hidalgo",
  "Jalisco",
  "Michoacan",
  "Morelos",
  "Nayarit",
  'Nuevo León',
  "Oaxaca",
  "Puebla",
  "Querétaro",
  "Quintana Roo",
  "San Luis Potosí",
  "Sinaloa",
  "Sonora",
  "Tabasco",
  "Tamaulipas",
  "Tlaxcala",
  "Veracruz",
  "Yucatán",
  "Zacatecas"
];

},{}],563:[function(require,module,exports){
module["exports"] = [
  "AS",
  "BC",
  "BS",
  "CC",
  "CS",
  "CH",
  "CL",
  "CM",
  "DF",
  "DG",
  "GT",
  "GR",
  "HG",
  "JC",
  "MC",
  "MN",
  "MS",
  "NT",
  "NL",
  "OC",
  "PL",
  "QT",
  "QR",
  "SP",
  "SL",
  "SR",
  "TC",
  "TS",
  "TL",
  "VZ",
  "YN",
  "ZS"
];

},{}],564:[function(require,module,exports){
module["exports"] = [
	"20 de Noviembre",
	"Cinco de Mayo",
	"Cuahutemoc",
	"Manzanares",
	"Donceles",
	"Francisco I. Madero",
	"Juárez",
	"Repúplica de Cuba",
	"Repúplica de Chile",
	"Repúplica de Argentina",
	"Repúplica de Uruguay",
	"Isabel la Católica",
	"Izazaga",
	"Eje Central",
	"Eje 6",
	"Eje 5",
	"La viga",
	"Aniceto Ortega",
	"Miguel Ángel de Quevedo",
	"Amores",
	"Coyoacán",
	"Coruña",
	"Batalla de Naco",
	"La otra banda",
	"Piedra del Comal",
	"Balcón de los edecanes",
	"Barrio la Lonja",
	"Jicolapa",
	"Zacatlán",
	"Zapata",
	"Polotitlan",
	"Calimaya",
	"Flor Marina",
	"Flor Solvestre",
	"San Miguel",
	"Naranjo",
	"Cedro",
	"Jalisco",
	"Avena"
];
},{}],565:[function(require,module,exports){
arguments[4][528][0].apply(exports,arguments)
},{"dup":528}],566:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Name.first_name}",
  "#{street_suffix} #{Name.first_name} #{Name.last_name}",
  "#{street_suffix} #{street}",
  "#{street_suffix} #{street}",
  "#{street_suffix} #{street}",
  "#{street_suffix} #{street}"

];

},{}],567:[function(require,module,exports){
arguments[4][530][0].apply(exports,arguments)
},{"dup":530}],568:[function(require,module,exports){
module["exports"] = [
  "Pacífico/Midway",
  "Pacífico/Pago_Pago",
  "Pacífico/Honolulu",
  "America/Juneau",
  "America/Los_Angeles",
  "America/Tijuana",
  "America/Denver",
  "America/Phoenix",
  "America/Chihuahua",
  "America/Mazatlan",
  "America/Chicago",
  "America/Regina",
  "America/Mexico_City",
  "America/Monterrey",
  "America/Guatemala",
  "America/New_York",
  "America/Indiana/Indianapolis",
  "America/Bogota",
  "America/Lima",
  "America/Lima",
  "America/Halifax",
  "America/Caracas",
  "America/La_Paz",
  "America/Santiago",
  "America/St_Johns",
  "America/Sao_Paulo",
  "America/Argentina/Buenos_Aires",
  "America/Guyana",
  "America/Godthab",
  "Atlantic/South_Georgia",
  "Atlantic/Azores",
  "Atlantic/Cape_Verde",
  "Europa/Dublin",
  "Europa/London",
  "Europa/Lisbon",
  "Europa/London",
  "Africa/Casablanca",
  "Africa/Monrovia",
  "Etc/UTC",
  "Europa/Belgrade",
  "Europa/Bratislava",
  "Europa/Budapest",
  "Europa/Ljubljana",
  "Europa/Prague",
  "Europa/Sarajevo",
  "Europa/Skopje",
  "Europa/Warsaw",
  "Europa/Zagreb",
  "Europa/Brussels",
  "Europa/Copenhagen",
  "Europa/Madrid",
  "Europa/Paris",
  "Europa/Amsterdam",
  "Europa/Berlin",
  "Europa/Berlin",
  "Europa/Rome",
  "Europa/Stockholm",
  "Europa/Vienna",
  "Africa/Algiers",
  "Europa/Bucharest",
  "Africa/Cairo",
  "Europa/Helsinki",
  "Europa/Kiev",
  "Europa/Riga",
  "Europa/Sofia",
  "Europa/Tallinn",
  "Europa/Vilnius",
  "Europa/Athens",
  "Europa/Istanbul",
  "Europa/Minsk",
  "Asia/Jerusalen",
  "Africa/Harare",
  "Africa/Johannesburg",
  "Europa/Moscú",
  "Europa/Moscú",
  "Europa/Moscú",
  "Asia/Kuwait",
  "Asia/Riyadh",
  "Africa/Nairobi",
  "Asia/Baghdad",
  "Asia/Tehran",
  "Asia/Muscat",
  "Asia/Muscat",
  "Asia/Baku",
  "Asia/Tbilisi",
  "Asia/Yerevan",
  "Asia/Kabul",
  "Asia/Yekaterinburg",
  "Asia/Karachi",
  "Asia/Karachi",
  "Asia/Tashkent",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kathmandu",
  "Asia/Dhaka",
  "Asia/Dhaka",
  "Asia/Colombo",
  "Asia/Almaty",
  "Asia/Novosibirsk",
  "Asia/Rangoon",
  "Asia/Bangkok",
  "Asia/Bangkok",
  "Asia/Jakarta",
  "Asia/Krasnoyarsk",
  "Asia/Shanghai",
  "Asia/Chongqing",
  "Asia/Hong_Kong",
  "Asia/Urumqi",
  "Asia/Kuala_Lumpur",
  "Asia/Singapore",
  "Asia/Taipei",
  "Australia/Perth",
  "Asia/Irkutsk",
  "Asia/Ulaanbaatar",
  "Asia/Seoul",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Yakutsk",
  "Australia/Darwin",
  "Australia/Adelaide",
  "Australia/Melbourne",
  "Australia/Melbourne",
  "Australia/Sydney",
  "Australia/Brisbane",
  "Australia/Hobart",
  "Asia/Vladivostok",
  "Pacífico/Guam",
  "Pacífico/Port_Moresby",
  "Asia/Magadan",
  "Asia/Magadan",
  "Pacífico/Noumea",
  "Pacífico/Fiji",
  "Asia/Kamchatka",
  "Pacífico/Majuro",
  "Pacífico/Auckland",
  "Pacífico/Auckland",
  "Pacífico/Tongatapu",
  "Pacífico/Fakaofo",
  "Pacífico/Apia"
];

},{}],569:[function(require,module,exports){
module["exports"] = [
  "5##-###-###",
  "5##.###.###",
  "5## ### ###",
  "5########"
];

},{}],570:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":569,"dup":256}],571:[function(require,module,exports){
module["exports"] = [
   "rojo",
   "verde",
   "azul",
   "amarillo",
   "morado",
   "Menta verde",
   "teal",
   "blanco",
   "negro",
   "Naranja",
   "Rosa",
   "gris",
   "marrón",
   "violeta",
   "turquesa",
   "tan",
   "cielo azul",
   "salmón",
   "ciruela",
   "orquídea",
   "aceituna",
   "magenta",
   "Lima",
   "marfil",
   "índigo",
   "oro",
   "fucsia",
   "cian",
   "azul",
   "lavanda",
   "plata"
];

},{}],572:[function(require,module,exports){
module["exports"] = [
   "Libros",
   "Películas",
   "Música",
   "Juegos",
   "Electrónica",
   "Ordenadores",
   "Hogar",
   "Jardín",
   "Herramientas",
   "Ultramarinos",
   "Salud",
   "Belleza",
   "Juguetes",
   "Kids",
   "Baby",
   "Ropa",
   "Zapatos",
   "Joyería",
   "Deportes",
   "Aire libre",
   "Automoción",
   "Industrial"
];

},{}],573:[function(require,module,exports){
arguments[4][175][0].apply(exports,arguments)
},{"./color":571,"./department":572,"./product_name":574,"dup":175}],574:[function(require,module,exports){
module["exports"] = {
"adjective": [
     "Pequeño",
     "Ergonómico",
     "Rústico",
     "Inteligente",
     "Gorgeous",
     "Increíble",
     "Fantástico",
     "Práctica",
     "Elegante",
     "Increíble",
     "Genérica",
     "Artesanal",
     "Hecho a mano",
     "Licencia",
     "Refinado",
     "Sin marca",
     "Sabrosa"
   ],
"material": [
     "Acero",
     "Madera",
     "Hormigón",
     "Plástico",
     "Cotton",
     "Granito",
     "Caucho",
     "Metal",
     "Soft",
     "Fresco",
     "Frozen"
   ],
"product": [
     "Presidente",
     "Auto",
     "Computadora",
     "Teclado",
     "Ratón",
     "Bike",
     "Pelota",
     "Guantes",
     "Pantalones",
     "Camisa",
     "Mesa",
     "Zapatos",
     "Sombrero",
     "Toallas",
     "Jabón",
     "Tuna",
     "Pollo",
     "Pescado",
     "Queso",
     "Tocino",
     "Pizza",
     "Ensalada",
     "Embutidos"
  ]
};

},{}],575:[function(require,module,exports){
arguments[4][534][0].apply(exports,arguments)
},{"dup":534}],576:[function(require,module,exports){
module["exports"] = [
  "Clics y mortero",
  "Valor añadido",
  "Vertical",
  "Proactivo",
  "Robusto",
  "Revolucionario",
  "Escalable",
  "De vanguardia",
  "Innovador",
  "Intuitivo",
  "Estratégico",
  "E-business",
  "Misión crítica",
  "Pegajosa",
  "Doce y cincuenta y nueve de la noche",
  "24/7",
  "De extremo a extremo",
  "Global",
  "B2B",
  "B2C",
  "Granular",
  "Fricción",
  "Virtual",
  "Viral",
  "Dinámico",
  "24/365",
  "Mejor de su clase",
  "Asesino",
  "Magnética",
  "Filo sangriento",
  "Habilitado web",
  "Interactiva",
  "Punto com",
  "Sexy",
  "Back-end",
  "Tiempo real",
  "Eficiente",
  "Frontal",
  "Distribuida",
  "Sin costura",
  "Extensible",
  "Llave en mano",
  "Clase mundial",
  "Código abierto",
  "Multiplataforma",
  "Cross-media",
  "Sinérgico",
  "ladrillos y clics",
  "Fuera de la caja",
  "Empresa",
  "Integrado",
  "Impactante",
  "Inalámbrico",
  "Transparente",
  "Próxima generación",
  "Innovador",
  "User-centric",
  "Visionario",
  "A medida",
  "Ubicua",
  "Enchufa y juega",
  "Colaboración",
  "Convincente",
  "Holístico",
  "Ricos"
];

},{}],577:[function(require,module,exports){
module["exports"] = [
   "sinergias",
   "web-readiness",
   "paradigmas",
   "mercados",
   "asociaciones",
   "infraestructuras",
   "plataformas",
   "iniciativas",
   "canales",
   "ojos",
   "comunidades",
   "ROI",
   "soluciones",
   "minoristas electrónicos",
   "e-servicios",
   "elementos de acción",
   "portales",
   "nichos",
   "tecnologías",
   "contenido",
   "vortales",
   "cadenas de suministro",
   "convergencia",
   "relaciones",
   "arquitecturas",
   "interfaces",
   "mercados electrónicos",
   "e-commerce",
   "sistemas",
   "ancho de banda",
   "infomediarios",
   "modelos",
   "Mindshare",
   "entregables",
   "usuarios",
   "esquemas",
   "redes",
   "aplicaciones",
   "métricas",
   "e-business",
   "funcionalidades",
   "experiencias",
   "servicios web",
   "metodologías"
];

},{}],578:[function(require,module,exports){
module["exports"] = [
   "poner en práctica",
   "utilizar",
   "integrar",
   "racionalizar",
   "optimizar",
   "evolucionar",
   "transformar",
   "abrazar",
   "habilitar",
   "orquestar",
   "apalancamiento",
   "reinventar",
   "agregado",
   "arquitecto",
   "mejorar",
   "incentivar",
   "transformarse",
   "empoderar",
   "Envisioneer",
   "monetizar",
   "arnés",
   "facilitar",
   "aprovechar",
   "desintermediar",
   "sinergia",
   "estrategias",
   "desplegar",
   "marca",
   "crecer",
   "objetivo",
   "sindicato",
   "sintetizar",
   "entregue",
   "malla",
   "incubar",
   "enganchar",
   "maximizar",
   "punto de referencia",
   "acelerar",
   "reintermediate",
   "pizarra",
   "visualizar",
   "reutilizar",
   "innovar",
   "escala",
   "desatar",
   "conducir",
   "extender",
   "ingeniero",
   "revolucionar",
   "generar",
   "explotar",
   "transición",
   "e-enable",
   "repetir",
   "cultivar",
   "matriz",
   "productize",
   "redefinir",
   "recontextualizar"
]

},{}],579:[function(require,module,exports){
arguments[4][535][0].apply(exports,arguments)
},{"dup":535}],580:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjective = require("./adjective");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.name = require("./name");
company.bs_adjective = require("./bs_adjective");
company.bs_noun = require("./bs_noun");

},{"./adjective":575,"./bs_adjective":576,"./bs_noun":577,"./bs_verb":578,"./descriptor":579,"./name":581,"./noun":582,"./suffix":583}],581:[function(require,module,exports){
arguments[4][537][0].apply(exports,arguments)
},{"dup":537}],582:[function(require,module,exports){
arguments[4][538][0].apply(exports,arguments)
},{"dup":538}],583:[function(require,module,exports){
arguments[4][539][0].apply(exports,arguments)
},{"dup":539}],584:[function(require,module,exports){
var es_MX = {};
module['exports'] = es_MX;
es_MX.title = "Spanish Mexico";
es_MX.separator = " & ";
es_MX.name = require("./name");
es_MX.address = require("./address");
es_MX.company = require("./company");
es_MX.internet = require("./internet");
es_MX.phone_number = require("./phone_number");
es_MX.cell_phone = require("./cell_phone");
es_MX.lorem = require("./lorem");
es_MX.commerce = require("./commerce");
es_MX.team = require("./team");
},{"./address":559,"./cell_phone":570,"./commerce":573,"./company":580,"./internet":587,"./lorem":588,"./name":592,"./phone_number":599,"./team":601}],585:[function(require,module,exports){
module["exports"] = [
  "com",
  "mx",
  "info",
  "com.mx",
  "org",
  "gob.mx"
];

},{}],586:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com",
  "nearbpo.com",
  "corpfolder.com"
];

},{}],587:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":585,"./free_email":586,"dup":187}],588:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./supplemental":589,"./words":590,"dup":227}],589:[function(require,module,exports){
arguments[4][228][0].apply(exports,arguments)
},{"dup":228}],590:[function(require,module,exports){
module["exports"] = [
"Abacalero",
"Abacería",
"Abacero",
"Abacial",
"Abaco",
"Abacora",
"Abacorar",
"Abad",
"Abada",
"Abadejo",
"Abadengo",
"Abadernar",
"Abadesa",
"Abadí",
"Abadía",
"Abadiado",
"Abadiato",
"Abajadero",
"Abajamiento",
"Abajar",
"Abajeño",
"Abajera",
"Abajo",
"Abalada",
"Abalanzar",
"Abalar",
"Abalaustrado",
"Abaldonadamente",
"Abaldonamiento",
"Bastonada",
"Bastonazo",
"Bastoncillo",
"Bastonear",
"Bastonero",
"Bástulo",
"Basura",
"Basural",
"Basurear",
"Basurero",
"Bata",
"Batacazo",
"Batahola",
"Batalán",
"Batalla",
"Batallador",
"Batallar",
"Batallaroso",
"Batallola",
"Batallón",
"Batallona",
"Batalloso",
"Batán",
"Batanar",
"Batanear",
"Batanero",
"Batanga",
"Bataola",
"Batata",
"Batatazo",
"Batato",
"Batavia",
"Bátavo",
"Batayola",
"Batazo",
"Bate",
"Batea",
"Bateador",
"Bateaguas",
"Cenagar",
"Cenagoso",
"Cenal",
"Cenaoscuras",
"Ceñar",
"Cenata",
"Cenca",
"Cencapa",
"Cencellada",
"Cenceñada",
"Cenceño",
"Cencero",
"Cencerra",
"Cencerrada",
"Cencerrado",
"Cencerrear",
"Cencerreo",
"Cencerril",
"Cencerrillas",
"Cencerro",
"Cencerrón",
"Cencha",
"Cencido",
"Cencío",
"Cencivera",
"Cenco",
"Cencuate",
"Cendal",
"Cendalí",
"Céndea",
"Cendolilla",
"Cendra",
"Cendrada",
"Cendradilla",
"Cendrado",
"Cendrar",
"Cendrazo",
"Cenefa",
"Cenegar",
"Ceneque",
"Cenero",
"Cenestesia",
"Desceñir",
"Descensión",
"Descenso",
"Descentrado",
"Descentralización",
"Descentralizador",
"Descentralizar",
"Descentrar",
"Descepar",
"Descerar",
"Descercado",
"Descercador",
"Descercar",
"Descerco",
"Descerebración",
"Descerebrado",
"Descerebrar",
"Descerezar",
"Descerrajado",
"Descerrajadura",
"Descerrajar",
"Descerrar",
"Descerrumarse",
"Descervigamiento",
"Descervigar",
"Deschapar",
"Descharchar",
"Deschavetado",
"Deschavetarse",
"Deschuponar",
"Descifrable",
"Descifrador",
"Desciframiento",
"Descifrar",
"Descifre",
"Descimbramiento",
"Descimbrar",
"Engarbarse",
"Engarberar",
"Engarbullar",
"Engarce",
"Engarfiar",
"Engargantadura",
"Engargantar",
"Engargante",
"Engargolado",
"Engargolar",
"Engaritar",
"Engarmarse",
"Engarnio",
"Engarrafador",
"Engarrafar",
"Engarrar",
"Engarro",
"Engarronar",
"Engarrotar",
"Engarzador",
"Engarzadura",
"Engarzar",
"Engasgarse",
"Engastador",
"Engastadura",
"Engastar",
"Engaste",
"Ficción",
"Fice",
"Ficha",
"Fichaje",
"Fichar",
"Fichero",
"Ficoideo",
"Ficticio",
"Fidalgo",
"Fidecomiso",
"Fidedigno",
"Fideero",
"Fideicomisario",
"Fideicomiso",
"Fideicomitente",
"Fideísmo",
"Fidelidad",
"Fidelísimo",
"Fideo",
"Fido",
"Fiducia",
"Geminación",
"Geminado",
"Geminar",
"Géminis",
"Gémino",
"Gemíparo",
"Gemiquear",
"Gemiqueo",
"Gemir",
"Gemología",
"Gemológico",
"Gemólogo",
"Gemonias",
"Gemoso",
"Gemoterapia",
"Gen",
"Genciana",
"Gencianáceo",
"Gencianeo",
"Gendarme",
"Gendarmería",
"Genealogía",
"Genealógico",
"Genealogista",
"Genearca",
"Geneático",
"Generable",
"Generación",
"Generacional",
"Generador",
"General",
"Generala",
"Generalato",
"Generalidad",
"Generalísimo",
"Incordio",
"Incorporación",
"Incorporal",
"Incorporalmente",
"Incorporar",
"Incorporeidad",
"Incorpóreo",
"Incorporo",
"Incorrección",
"Incorrectamente",
"Incorrecto",
"Incorregibilidad",
"Incorregible",
"Incorregiblemente",
"Incorrupción",
"Incorruptamente",
"Incorruptibilidad",
"Incorruptible",
"Incorrupto",
"Incrasar",
"Increado",
"Incredibilidad",
"Incrédulamente",
"Incredulidad",
"Incrédulo",
"Increíble",
"Increíblemente",
"Incrementar",
"Incremento",
"Increpación",
"Increpador",
"Increpar",
"Incriminación",
"Incriminar",
"Incristalizable",
"Incruentamente",
"Incruento",
"Incrustación"
];

},{}],591:[function(require,module,exports){
module["exports"] = [
"Aarón",
"Abraham",
"Adán",
"Agustín",
"Alan",
"Alberto",
"Alejandro",
"Alexander",
"Alexis",
"Alfonso",
"Alfredo",
"Andrés",
"Ángel Daniel",
"Ángel Gabriel",
"Antonio",
"Armando",
"Arturo",
"Axel",
"Benito",
"Benjamín",
"Bernardo",
"Brandon",
"Brayan",
"Carlos",
"César",
"Claudio",
"Clemente",
"Cristian",
"Cristobal",
"Damián",
"Daniel",
"David",
"Diego",
"Eduardo",
"Elías",
"Emiliano",
"Emilio",
"Emilio",
"Emmanuel",
"Enrique",
"Erick",
"Ernesto",
"Esteban",
"Federico",
"Felipe",
"Fernando",
"Fernando Javier",
"Francisco",
"Francisco Javier",
"Gabriel",
"Gael",
"Gerardo",
"Germán",
"Gilberto",
"Gonzalo",
"Gregorio",
"Guillermo",
"Gustavo",
"Hernán",
"Homero",
"Horacio",
"Hugo",
"Ignacio",
"Iker",
"Isaac",
"Isaias",
"Israel",
"Ivan",
"Jacobo",
"Jaime",
"Javier",
"Jerónimo",
"Jesús",
"Joaquín",
"Jorge",
"Jorge Luis",
"José",
"José Antonio",
"Jose Daniel",
"José Eduardo",
"José Emilio",
"José Luis",
"José María",
"José Miguel",
"Juan",
"Juan Carlos",
"Juan Manuel",
"Juan Pablo",
"Julio",
"Julio César",
"Kevin",
"Leonardo",
"Lorenzo",
"Lucas",
"Luis",
"Luis Ángel",
"Luis Fernando",
"Luis Gabino",
"Luis Miguel",
"Manuel",
"Marco Antonio",
"Marcos",
"Mariano",
"Mario",
"Martín",
"Mateo",
"Matías",
"Mauricio",
"Maximiliano",
"Miguel",
"Miguel Ángel",
"Nicolás",
"Octavio",
"Óscar",
"Pablo",
"Patricio",
"Pedro",
"Rafael",
"Ramiro",
"Ramón",
"Raúl",
"Ricardo",
"Roberto",
"Rodrigo",
"Rubén",
"Salvador",
"Samuel",
"Sancho",
"Santiago",
"Saúl",
"Sebastian",
"Sergio",
"Tadeo",
"Teodoro",
"Timoteo",
"Tomás",
"Uriel",
"Vicente",
"Víctor",
"Victor Manuel",
"Adriana",
"Alejandra",
"Alicia",
"Amalia",
"Ana",
"Ana Luisa",
"Ana María",
"Andrea",
"Ángela",
"Anita",
"Antonia",
"Araceli",
"Ariadna",
"Barbara",
"Beatriz",
"Berta",
"Blanca",
"Caridad",
"Carla",
"Carlota",
"Carmen",
"Carolina",
"Catalina",
"Cecilia",
"Clara",
"Claudia",
"Concepción",
"Conchita",
"Cristina",
"Daniela",
"Débora",
"Diana",
"Dolores",
"Dorotea",
"Elena",
"Elisa",
"Elizabeth",
"Eloisa",
"Elsa",
"Elvira",
"Emilia",
"Esperanza",
"Estela",
"Ester",
"Eva",
"Florencia",
"Francisca",
"Gabriela",
"Gloria",
"Graciela",
"Guadalupe",
"Guillermina",
"Inés",
"Irene",
"Isabel",
"Isabela",
"Josefina",
"Juana",
"Julia",
"Laura",
"Leonor",
"Leticia",
"Lilia",
"Lola",
"Lorena",
"Lourdes",
"Lucia",
"Luisa",
"Luz",
"Magdalena",
"Manuela",
"Marcela",
"Margarita",
"María",
"María Cristina",
"María de Jesús",
"María de los Ángeles",
"María del Carmen",
"María Elena",
"María Eugenia",
"María Guadalupe",
"María José",
"María Luisa",
"María Soledad",
"María Teresa",
"Mariana",
"Maricarmen",
"Marilu",
"Marisol",
"Marta",
"Mayte",
"Mercedes",
"Micaela",
"Mónica",
"Natalia",
"Norma",
"Olivia",
"Patricia",
"Pilar",
"Ramona",
"Raquel",
"Rebeca",
"Reina",
"Rocio",
"Rosa",
"Rosa María",
"Rosalia",
"Rosario",
"Sara",
"Silvia",
"Sofia",
"Soledad",
"Sonia",
"Susana",
"Teresa",
"Verónica",
"Victoria",
"Virginia",
"Xochitl",
"Yolanda",
"Abigail",
"Abril",
"Adela",
"Alexa",
"Alondra Romina",
"Ana Sofía",
"Ana Victoria",
"Camila",
"Carolina",
"Daniela",
"Dulce María",
"Emily",
"Esmeralda",
"Estefanía",
"Evelyn",
"Fatima",
"Ivanna",
"Jazmin",
"Jennifer",
"Jimena",
"Julieta",
"Kimberly",
"Liliana",
"Lizbeth",
"María Fernanda",
"Melany",
"Melissa",
"Miranda",
"Monserrat",
"Naomi",
"Natalia",
"Nicole",
"Paola",
"Paulina",
"Regina",
"Renata",
"Valentina",
"Valeria",
"Vanessa",
"Ximena",
"Ximena Guadalupe",
"Yamileth",
"Yaretzi",
"Zoe"
]
},{}],592:[function(require,module,exports){
arguments[4][403][0].apply(exports,arguments)
},{"./first_name":591,"./last_name":593,"./name":594,"./prefix":595,"./suffix":596,"./title":597,"dup":403}],593:[function(require,module,exports){
module["exports"] = [
  "Abeyta",
"Abrego",
"Abreu",
"Acevedo",
"Acosta",
"Acuña",
"Adame",
"Adorno",
"Agosto",
"Aguayo",
"Águilar",
"Aguilera",
"Aguirre",
"Alanis",
"Alaniz",
"Alarcón",
"Alba",
"Alcala",
"Alcántar",
"Alcaraz",
"Alejandro",
"Alemán",
"Alfaro",
"Alicea",
"Almanza",
"Almaraz",
"Almonte",
"Alonso",
"Alonzo",
"Altamirano",
"Alva",
"Alvarado",
"Alvarez",
"Amador",
"Amaya",
"Anaya",
"Anguiano",
"Angulo",
"Aparicio",
"Apodaca",
"Aponte",
"Aragón",
"Aranda",
"Araña",
"Arce",
"Archuleta",
"Arellano",
"Arenas",
"Arevalo",
"Arguello",
"Arias",
"Armas",
"Armendáriz",
"Armenta",
"Armijo",
"Arredondo",
"Arreola",
"Arriaga",
"Arroyo",
"Arteaga",
"Atencio",
"Ávalos",
"Ávila",
"Avilés",
"Ayala",
"Baca",
"Badillo",
"Báez",
"Baeza",
"Bahena",
"Balderas",
"Ballesteros",
"Banda",
"Bañuelos",
"Barajas",
"Barela",
"Barragán",
"Barraza",
"Barrera",
"Barreto",
"Barrientos",
"Barrios",
"Batista",
"Becerra",
"Beltrán",
"Benavides",
"Benavídez",
"Benítez",
"Bermúdez",
"Bernal",
"Berríos",
"Bétancourt",
"Blanco",
"Bonilla",
"Borrego",
"Botello",
"Bravo",
"Briones",
"Briseño",
"Brito",
"Bueno",
"Burgos",
"Bustamante",
"Bustos",
"Caballero",
"Cabán",
"Cabrera",
"Cadena",
"Caldera",
"Calderón",
"Calvillo",
"Camacho",
"Camarillo",
"Campos",
"Canales",
"Candelaria",
"Cano",
"Cantú",
"Caraballo",
"Carbajal",
"Cardenas",
"Cardona",
"Carmona",
"Carranza",
"Carrasco",
"Carrasquillo",
"Carreón",
"Carrera",
"Carrero",
"Carrillo",
"Carrion",
"Carvajal",
"Casanova",
"Casares",
"Casárez",
"Casas",
"Casillas",
"Castañeda",
"Castellanos",
"Castillo",
"Castro",
"Cavazos",
"Cazares",
"Ceballos",
"Cedillo",
"Ceja",
"Centeno",
"Cepeda",
"Cerda",
"Cervantes",
"Cervántez",
"Chacón",
"Chapa",
"Chavarría",
"Chávez",
"Cintrón",
"Cisneros",
"Collado",
"Collazo",
"Colón",
"Colunga",
"Concepción",
"Contreras",
"Cordero",
"Córdova",
"Cornejo",
"Corona",
"Coronado",
"Corral",
"Corrales",
"Correa",
"Cortés",
"Cortez",
"Cotto",
"Covarrubias",
"Crespo",
"Cruz",
"Cuellar",
"Curiel",
"Dávila",
"de Anda",
"de Jesús",
"Delacrúz",
"Delafuente",
"Delagarza",
"Delao",
"Delapaz",
"Delarosa",
"Delatorre",
"Deleón",
"Delgadillo",
"Delgado",
"Delrío",
"Delvalle",
"Díaz",
"Domínguez",
"Domínquez",
"Duarte",
"Dueñas",
"Duran",
"Echevarría",
"Elizondo",
"Enríquez",
"Escalante",
"Escamilla",
"Escobar",
"Escobedo",
"Esparza",
"Espinal",
"Espino",
"Espinosa",
"Espinoza",
"Esquibel",
"Esquivel",
"Estévez",
"Estrada",
"Fajardo",
"Farías",
"Feliciano",
"Fernández",
"Ferrer",
"Fierro",
"Figueroa",
"Flores",
"Flórez",
"Fonseca",
"Franco",
"Frías",
"Fuentes",
"Gaitán",
"Galarza",
"Galindo",
"Gallardo",
"Gallegos",
"Galván",
"Gálvez",
"Gamboa",
"Gamez",
"Gaona",
"Garay",
"García",
"Garibay",
"Garica",
"Garrido",
"Garza",
"Gastélum",
"Gaytán",
"Gil",
"Girón",
"Godínez",
"Godoy",
"Gollum",
"Gómez",
"Gonzales",
"González",
"Gracia",
"Granado",
"Granados",
"Griego",
"Grijalva",
"Guajardo",
"Guardado",
"Guerra",
"Guerrero",
"Guevara",
"Guillen",
"Gurule",
"Gutiérrez",
"Guzmán",
"Haro",
"Henríquez",
"Heredia",
"Hernádez",
"Hernandes",
"Hernández",
"Herrera",
"Hidalgo",
"Hinojosa",
"Holguín",
"Huerta",
"Huixtlacatl",
"Hurtado",
"Ibarra",
"Iglesias",
"Irizarry",
"Jaime",
"Jaimes",
"Jáquez",
"Jaramillo",
"Jasso",
"Jiménez",
"Jimínez",
"Juárez",
"Jurado",
"Kadar rodriguez",
"Kamal",
"Kamat",
"Kanaria",
"Kanea",
"Kanimal",
"Kano",
"Kanzaki",
"Kaplan",
"Kara",
"Karam",
"Karan",
"Kardache soto",
"Karem",
"Karen",
"Khalid",
"Kindelan",
"Koenig",
"Korta",
"Korta hernandez",
"Kortajarena",
"Kranz sans",
"Krasnova",
"Krauel natera",
"Kuzmina",
"Kyra",
"Laboy",
"Lara",
"Laureano",
"Leal",
"Lebrón",
"Ledesma",
"Leiva",
"Lemus",
"León",
"Lerma",
"Leyva",
"Limón",
"Linares",
"Lira",
"Llamas",
"Loera",
"Lomeli",
"Longoria",
"López",
"Lovato",
"Loya",
"Lozada",
"Lozano",
"Lucero",
"Lucio",
"Luevano",
"Lugo",
"Luna",
"Macías",
"Madera",
"Madrid",
"Madrigal",
"Maestas",
"Magaña",
"Malave",
"Maldonado",
"Manzanares",
"Mares",
"Marín",
"Márquez",
"Marrero",
"Marroquín",
"Martínez",
"Mascareñas",
"Mata",
"Mateo",
"Matías",
"Matos",
"Maya",
"Mayorga",
"Medina",
"Medrano",
"Mejía",
"Meléndez",
"Melgar",
"Mena",
"Menchaca",
"Méndez",
"Mendoza",
"Menéndez",
"Meraz",
"Mercado",
"Merino",
"Mesa",
"Meza",
"Miramontes",
"Miranda",
"Mireles",
"Mojica",
"Molina",
"Mondragón",
"Monroy",
"Montalvo",
"Montañez",
"Montaño",
"Montemayor",
"Montenegro",
"Montero",
"Montes",
"Montez",
"Montoya",
"Mora",
"Morales",
"Moreno",
"Mota",
"Moya",
"Munguía",
"Muñiz",
"Muñoz",
"Murillo",
"Muro",
"Nájera",
"Naranjo",
"Narváez",
"Nava",
"Navarrete",
"Navarro",
"Nazario",
"Negrete",
"Negrón",
"Nevárez",
"Nieto",
"Nieves",
"Niño",
"Noriega",
"Núñez",
"Ñañez",
"Ocampo",
"Ocasio",
"Ochoa",
"Ojeda",
"Olivares",
"Olivárez",
"Olivas",
"Olivera",
"Olivo",
"Olmos",
"Olvera",
"Ontiveros",
"Oquendo",
"Ordóñez",
"Orellana",
"Ornelas",
"Orosco",
"Orozco",
"Orta",
"Ortega",
"Ortiz",
"Osorio",
"Otero",
"Ozuna",
"Pabón",
"Pacheco",
"Padilla",
"Padrón",
"Páez",
"Pagan",
"Palacios",
"Palomino",
"Palomo",
"Pantoja",
"Paredes",
"Parra",
"Partida",
"Patiño",
"Paz",
"Pedraza",
"Pedroza",
"Pelayo",
"Peña",
"Perales",
"Peralta",
"Perea",
"Peres",
"Pérez",
"Pichardo",
"Pineda",
"Piña",
"Pizarro",
"Polanco",
"Ponce",
"Porras",
"Portillo",
"Posada",
"Prado",
"Preciado",
"Prieto",
"Puente",
"Puga",
"Pulido",
"Quesada",
"Quevedo",
"Quezada",
"Quinta",
"Quintairos",
"Quintana",
"Quintanilla",
"Quintero",
"Quintero cruz",
"Quintero de la cruz",
"Quiñones",
"Quiñónez",
"Quiros",
"Quiroz",
"Rael",
"Ramírez",
"Ramón",
"Ramos",
"Rangel",
"Rascón",
"Raya",
"Razo",
"Regalado",
"Rendón",
"Rentería",
"Reséndez",
"Reyes",
"Reyna",
"Reynoso",
"Rico",
"Rincón",
"Riojas",
"Ríos",
"Rivas",
"Rivera",
"Rivero",
"Robledo",
"Robles",
"Rocha",
"Rodarte",
"Rodrígez",
"Rodríguez",
"Rodríquez",
"Rojas",
"Rojo",
"Roldán",
"Rolón",
"Romero",
"Romo",
"Roque",
"Rosado",
"Rosales",
"Rosario",
"Rosas",
"Roybal",
"Rubio",
"Ruelas",
"Ruiz",
"Saavedra",
"Sáenz",
"Saiz",
"Salas",
"Salazar",
"Salcedo",
"Salcido",
"Saldaña",
"Saldivar",
"Salgado",
"Salinas",
"Samaniego",
"Sanabria",
"Sanches",
"Sánchez",
"Sandoval",
"Santacruz",
"Santana",
"Santiago",
"Santillán",
"Sarabia",
"Sauceda",
"Saucedo",
"Sedillo",
"Segovia",
"Segura",
"Sepúlveda",
"Serna",
"Serrano",
"Serrato",
"Sevilla",
"Sierra",
"Sisneros",
"Solano",
"Solís",
"Soliz",
"Solorio",
"Solorzano",
"Soria",
"Sosa",
"Sotelo",
"Soto",
"Suárez",
"Tafoya",
"Tamayo",
"Tamez",
"Tapia",
"Tejada",
"Tejeda",
"Téllez",
"Tello",
"Terán",
"Terrazas",
"Tijerina",
"Tirado",
"Toledo",
"Toro",
"Torres",
"Tórrez",
"Tovar",
"Trejo",
"Treviño",
"Trujillo",
"Ulibarri",
"Ulloa",
"Urbina",
"Ureña",
"Urías",
"Uribe",
"Urrutia",
"Vaca",
"Valadez",
"Valdés",
"Valdez",
"Valdivia",
"Valencia",
"Valentín",
"Valenzuela",
"Valladares",
"Valle",
"Vallejo",
"Valles",
"Valverde",
"Vanegas",
"Varela",
"Vargas",
"Vásquez",
"Vázquez",
"Vega",
"Vela",
"Velasco",
"Velásquez",
"Velázquez",
"Vélez",
"Véliz",
"Venegas",
"Vera",
"Verdugo",
"Verduzco",
"Vergara",
"Viera",
"Vigil",
"Villa",
"Villagómez",
"Villalobos",
"Villalpando",
"Villanueva",
"Villareal",
"Villarreal",
"Villaseñor",
"Villegas",
"Xacon",
"Xairo Belmonte",
"Xana",
"Xenia",
"Xiana",
"Xicoy",
"Yago",
"Yami",
"Yanes",
"Yáñez",
"Ybarra",
"Yebra",
"Yunta",
"Zabaleta",
"Zamarreno",
"Zamarripa",
"Zambrana",
"Zambrano",
"Zamora",
"Zamudio",
"Zapata",
"Zaragoza",
"Zarate",
"Zavala",
"Zayas",
"Zelaya",
"Zepeda",
"Zúñiga"
];

},{}],594:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} de #{last_name}",
  "#{suffix} #{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}"
];

},{}],595:[function(require,module,exports){
arguments[4][548][0].apply(exports,arguments)
},{"dup":548}],596:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Sr.",
  "I",
  "II",
  "III",
  "IV",
  "V",
  "MD",
  "DDS",
  "PhD",
  "DVM",
  "Ing.",
  "Lic.",
  "Dr.",
  "Mtro."
];

},{}],597:[function(require,module,exports){
 module["exports"] = {
  "descriptor": [
    "Jefe",
    "Senior",
    "Directo",
    "Corporativo",
    "Dinánmico",
    "Futuro",
    "Producto",
    "Nacional",
    "Regional",
    "Distrito",
    "Central",
    "Global",
    "Cliente",
    "Inversor",
    "International",
    "Heredado",
    "Adelante",
    "Interno",
    "Humano",
    "Gerente",
    "SubGerente",
    "Director"
  ],
  "level": [
    "Soluciones",
    "Programa",
    "Marca",
    "Seguridad",
    "Investigación",
    "Marketing",
    "Normas",
    "Implementación",
    "Integración",
    "Funcionalidad",
    "Respuesta",
    "Paradigma",
    "Tácticas",
    "Identidad",
    "Mercados",
    "Grupo",
    "División",
    "Aplicaciones",
    "Optimización",
    "Operaciones",
    "Infraestructura",
    "Intranet",
    "Comunicaciones",
    "Web",
    "Calidad",
    "Seguro",
    "Mobilidad",
    "Cuentas",
    "Datos",
    "Creativo",
    "Configuración",
    "Contabilidad",
    "Interacciones",
    "Factores",
    "Usabilidad",
    "Métricas",
  ],
  "job": [
    "Supervisor",
    "Asociado",
    "Ejecutivo",
    "Relacciones",
    "Oficial",
    "Gerente",
    "Ingeniero",
    "Especialista",
    "Director",
    "Coordinador",
    "Administrador",
    "Arquitecto",
    "Analista",
    "Diseñador",
    "Planificador",
    "Técnico",
    "Funcionario",
    "Desarrollador",
    "Productor",
    "Consultor",
    "Asistente",
    "Facilitador",
    "Agente",
    "Representante",
    "Estratega",
    "Scrum Master",
    "Scrum Owner",
    "Product Owner",
    "Scrum Developer"
  ]
};

},{}],598:[function(require,module,exports){
module["exports"] = [
  "5###-###-###",
  "5##.###.###",
  "5## ### ###",
  "5########"
];

},{}],599:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":598,"dup":197}],600:[function(require,module,exports){
module["exports"] = [
  "hormigas",
   "murciélagos",
   "osos",
   "abejas",
   "pájaros",
   "búfalo",
   "gatos",
   "pollos",
   "ganado",
   "perros",
   "delfines",
   "patos",
   "elefantes",
   "peces",
   "zorros",
   "ranas",
   "gansos",
   "cabras",
   "caballos",
   "canguros",
   "leones",
   "monos",
   "búhos",
   "bueyes",
   "pingüinos",
   "pueblo",
   "cerdos",
   "conejos",
   "ovejas",
   "tigres",
   "ballenas",
   "lobos",
   "cebras",
   "almas en pena",
   "cuervos",
   "gatos negros",
   "quimeras",
   "fantasmas",
   "conspiradores",
   "dragones",
   "enanos",
   "duendes",
   "encantadores",
   "exorcistas",
   "hijos",
   "enemigos",
   "gigantes",
   "gnomos",
   "duendes",
   "gansos",
   "grifos",
   "licántropos",
   "némesis",
   "ogros",
   "oráculos",
   "profetas",
   "hechiceros",
   "arañas",
   "espíritus",
   "vampiros",
   "brujos",
   "zorras",
   "hombres lobo",
   "brujas",
   "adoradores",
   "zombies",
   "druidas"
];

},{}],601:[function(require,module,exports){
arguments[4][414][0].apply(exports,arguments)
},{"./creature":600,"./name":602,"dup":414}],602:[function(require,module,exports){
arguments[4][415][0].apply(exports,arguments)
},{"dup":415}],603:[function(require,module,exports){
var fa = {};
module['exports'] = fa;
fa.title = "Farsi";
fa.name = require("./name");

},{"./name":605}],604:[function(require,module,exports){
module["exports"] = [
  "آبان دخت",
  "آبتین",
  "آتوسا",
  "آفر",
  "آفره دخت",
  "آذرنوش‌",
  "آذین",
  "آراه",
  "آرزو",
  "آرش",
  "آرتین",
  "آرتام",
  "آرتمن",
  "آرشام",
  "آرمان",
  "آرمین",
  "آرمیتا",
  "آریا فر",
  "آریا",
  "آریا مهر",
  "آرین",
  "آزاده",
  "آزرم",
  "آزرمدخت",
  "آزیتا",
  "آناهیتا",
  "آونگ",
  "آهو",
  "آیدا",
  "اتسز",
  "اختر",
  "ارد",
  "ارد شیر",
  "اردوان",
  "ارژن",
  "ارژنگ",
  "ارسلان",
  "ارغوان",
  "ارمغان",
  "ارنواز",
  "اروانه",
  "استر",
  "اسفندیار",
  "اشکان",
  "اشکبوس",
  "افسانه",
  "افسون",
  "افشین",
  "امید",
  "انوش (‌ آنوشا )",
  "انوشروان",
  "اورنگ",
  "اوژن",
  "اوستا",
  "اهورا",
  "ایاز",
  "ایران",
  "ایراندخت",
  "ایرج",
  "ایزدیار",
  "بابک",
  "باپوک",
  "باربد",
  "بارمان",
  "بامداد",
  "بامشاد",
  "بانو",
  "بختیار",
  "برانوش",
  "بردیا",
  "برزو",
  "برزویه",
  "برزین",
  "برمک",
  "بزرگمهر",
  "بنفشه",
  "بوژان",
  "بویان",
  "بهار",
  "بهارک",
  "بهاره",
  "بهتاش",
  "بهداد",
  "بهرام",
  "بهدیس",
  "بهرخ",
  "بهرنگ",
  "بهروز",
  "بهزاد",
  "بهشاد",
  "بهمن",
  "بهناز",
  "بهنام",
  "بهنود",
  "بهنوش",
  "بیتا",
  "بیژن",
  "پارسا",
  "پاکان",
  "پاکتن",
  "پاکدخت",
  "پانته آ",
  "پدرام",
  "پرتو",
  "پرشنگ",
  "پرتو",
  "پرستو",
  "پرویز",
  "پردیس",
  "پرهام",
  "پژمان",
  "پژوا",
  "پرنیا",
  "پشنگ",
  "پروانه",
  "پروین",
  "پری",
  "پریچهر",
  "پریدخت",
  "پریسا",
  "پرناز",
  "پریوش",
  "پریا",
  "پوپک",
  "پوران",
  "پوراندخت",
  "پوریا",
  "پولاد",
  "پویا",
  "پونه",
  "پیام",
  "پیروز",
  "پیمان",
  "تابان",
  "تاباندخت",
  "تاجی",
  "تارا",
  "تاویار",
  "ترانه",
  "تناز",
  "توران",
  "توراندخت",
  "تورج",
  "تورتک",
  "توفان",
  "توژال",
  "تیر داد",
  "تینا",
  "تینو",
  "جابان",
  "جامین",
  "جاوید",
  "جریره",
  "جمشید",
  "جوان",
  "جویا",
  "جهان",
  "جهانبخت",
  "جهانبخش",
  "جهاندار",
  "جهانگیر",
  "جهان بانو",
  "جهاندخت",
  "جهان ناز",
  "جیران",
  "چابک",
  "چالاک",
  "چاوش",
  "چترا",
  "چوبین",
  "چهرزاد",
  "خاوردخت",
  "خداداد",
  "خدایار",
  "خرم",
  "خرمدخت",
  "خسرو",
  "خشایار",
  "خورشید",
  "دادمهر",
  "دارا",
  "داراب",
  "داریا",
  "داریوش",
  "دانوش",
  "داور‌",
  "دایان",
  "دریا",
  "دل آرا",
  "دل آویز",
  "دلارام",
  "دل انگیز",
  "دلبر",
  "دلبند",
  "دلربا",
  "دلشاد",
  "دلکش",
  "دلناز",
  "دلنواز",
  "دورشاسب",
  "دنیا",
  "دیااکو",
  "دیانوش",
  "دیبا",
  "دیبا دخت",
  "رابو",
  "رابین",
  "رادبانو",
  "رادمان",
  "رازبان",
  "راژانه",
  "راسا",
  "رامتین",
  "رامش",
  "رامشگر",
  "رامونا",
  "رامیار",
  "رامیلا",
  "رامین",
  "راویار",
  "رژینا",
  "رخپاک",
  "رخسار",
  "رخشانه",
  "رخشنده",
  "رزمیار",
  "رستم",
  "رکسانا",
  "روبینا",
  "رودابه",
  "روزبه",
  "روشنک",
  "روناک",
  "رهام",
  "رهی",
  "ریبار",
  "راسپینا",
  "زادبخت",
  "زاد به",
  "زاد چهر",
  "زاد فر",
  "زال",
  "زادماسب",
  "زاوا",
  "زردشت",
  "زرنگار",
  "زری",
  "زرین",
  "زرینه",
  "زمانه",
  "زونا",
  "زیبا",
  "زیبار",
  "زیما",
  "زینو",
  "ژاله",
  "ژالان",
  "ژیار",
  "ژینا",
  "ژیوار",
  "سارا",
  "سارک",
  "سارنگ",
  "ساره",
  "ساسان",
  "ساغر",
  "سام",
  "سامان",
  "سانا",
  "ساناز",
  "سانیار",
  "ساویز",
  "ساهی",
  "ساینا",
  "سایه",
  "سپنتا",
  "سپند",
  "سپهر",
  "سپهرداد",
  "سپیدار",
  "سپید بانو",
  "سپیده",
  "ستاره",
  "ستی",
  "سرافراز",
  "سرور",
  "سروش",
  "سرور",
  "سوبا",
  "سوبار",
  "سنبله",
  "سودابه",
  "سوری",
  "سورن",
  "سورنا",
  "سوزان",
  "سوزه",
  "سوسن",
  "سومار",
  "سولان",
  "سولماز",
  "سوگند",
  "سهراب",
  "سهره",
  "سهند",
  "سیامک",
  "سیاوش",
  "سیبوبه ‌",
  "سیما",
  "سیمدخت",
  "سینا",
  "سیمین",
  "سیمین دخت",
  "شاپرک",
  "شادی",
  "شادمهر",
  "شاران",
  "شاهپور",
  "شاهدخت",
  "شاهرخ",
  "شاهین",
  "شاهیندخت",
  "شایسته",
  "شباهنگ",
  "شب بو",
  "شبدیز",
  "شبنم",
  "شراره",
  "شرمین",
  "شروین",
  "شکوفه",
  "شکفته",
  "شمشاد",
  "شمین",
  "شوان",
  "شمیلا",
  "شورانگیز",
  "شوری",
  "شهاب",
  "شهبار",
  "شهباز",
  "شهبال",
  "شهپر",
  "شهداد",
  "شهرآرا",
  "شهرام",
  "شهربانو",
  "شهرزاد",
  "شهرناز",
  "شهرنوش",
  "شهره",
  "شهریار",
  "شهرزاد",
  "شهلا",
  "شهنواز",
  "شهین",
  "شیبا",
  "شیدا",
  "شیده",
  "شیردل",
  "شیرزاد",
  "شیرنگ",
  "شیرو",
  "شیرین دخت",
  "شیما",
  "شینا",
  "شیرین",
  "شیوا",
  "طوس",
  "طوطی",
  "طهماسب",
  "طهمورث",
  "غوغا",
  "غنچه",
  "فتانه",
  "فدا",
  "فراز",
  "فرامرز",
  "فرانک",
  "فراهان",
  "فربد",
  "فربغ",
  "فرجاد",
  "فرخ",
  "فرخ پی",
  "فرخ داد",
  "فرخ رو",
  "فرخ زاد",
  "فرخ لقا",
  "فرخ مهر",
  "فرداد",
  "فردیس",
  "فرین",
  "فرزاد",
  "فرزام",
  "فرزان",
  "فرزانه",
  "فرزین",
  "فرشاد",
  "فرشته",
  "فرشید",
  "فرمان",
  "فرناز",
  "فرنگیس",
  "فرنود",
  "فرنوش",
  "فرنیا",
  "فروتن",
  "فرود",
  "فروز",
  "فروزان",
  "فروزش",
  "فروزنده",
  "فروغ",
  "فرهاد",
  "فرهنگ",
  "فرهود",
  "فربار",
  "فریبا",
  "فرید",
  "فریدخت",
  "فریدون",
  "فریمان",
  "فریناز",
  "فرینوش",
  "فریوش",
  "فیروز",
  "فیروزه",
  "قابوس",
  "قباد",
  "قدسی",
  "کابان",
  "کابوک",
  "کارا",
  "کارو",
  "کاراکو",
  "کامبخت",
  "کامبخش",
  "کامبیز",
  "کامجو",
  "کامدین",
  "کامران",
  "کامراوا",
  "کامک",
  "کامنوش",
  "کامیار",
  "کانیار",
  "کاووس",
  "کاوه",
  "کتایون",
  "کرشمه",
  "کسری",
  "کلاله",
  "کمبوجیه",
  "کوشا",
  "کهبد",
  "کهرام",
  "کهزاد",
  "کیارش",
  "کیان",
  "کیانا",
  "کیانچهر",
  "کیاندخت",
  "کیانوش",
  "کیاوش",
  "کیخسرو",
  "کیقباد",
  "کیکاووس",
  "کیوان",
  "کیوان دخت",
  "کیومرث",
  "کیهان",
  "کیاندخت",
  "کیهانه",
  "گرد آفرید",
  "گردان",
  "گرشا",
  "گرشاسب",
  "گرشین",
  "گرگین",
  "گزل",
  "گشتاسب",
  "گشسب",
  "گشسب بانو",
  "گل",
  "گل آذین",
  "گل آرا‌",
  "گلاره",
  "گل افروز",
  "گلاله",
  "گل اندام",
  "گلاویز",
  "گلباد",
  "گلبار",
  "گلبام",
  "گلبان",
  "گلبانو",
  "گلبرگ",
  "گلبو",
  "گلبهار",
  "گلبیز",
  "گلپاره",
  "گلپر",
  "گلپری",
  "گلپوش",
  "گل پونه",
  "گلچین",
  "گلدخت",
  "گلدیس",
  "گلربا",
  "گلرخ",
  "گلرنگ",
  "گلرو",
  "گلشن",
  "گلریز",
  "گلزاد",
  "گلزار",
  "گلسا",
  "گلشید",
  "گلنار",
  "گلناز",
  "گلنسا",
  "گلنواز",
  "گلنوش",
  "گلی",
  "گودرز",
  "گوماتو",
  "گهر چهر",
  "گوهر ناز",
  "گیتی",
  "گیسو",
  "گیلدا",
  "گیو",
  "لادن",
  "لاله",
  "لاله رخ",
  "لاله دخت",
  "لبخند",
  "لقاء",
  "لومانا",
  "لهراسب",
  "مارال",
  "ماری",
  "مازیار",
  "ماکان",
  "مامک",
  "مانا",
  "ماندانا",
  "مانوش",
  "مانی",
  "مانیا",
  "ماهان",
  "ماهاندخت",
  "ماه برزین",
  "ماه جهان",
  "ماهچهر",
  "ماهدخت",
  "ماهور",
  "ماهرخ",
  "ماهزاد",
  "مردآویز",
  "مرداس",
  "مرزبان",
  "مرمر",
  "مزدک",
  "مژده",
  "مژگان",
  "مستان",
  "مستانه",
  "مشکاندخت",
  "مشکناز",
  "مشکین دخت",
  "منیژه",
  "منوچهر",
  "مهبانو",
  "مهبد",
  "مه داد",
  "مهتاب",
  "مهدیس",
  "مه جبین",
  "مه دخت",
  "مهر آذر",
  "مهر آرا",
  "مهر آسا",
  "مهر آفاق",
  "مهر افرین",
  "مهرآب",
  "مهرداد",
  "مهر افزون",
  "مهرام",
  "مهران",
  "مهراندخت",
  "مهراندیش",
  "مهرانفر",
  "مهرانگیز",
  "مهرداد",
  "مهر دخت",
  "مهرزاده ‌",
  "مهرناز",
  "مهرنوش",
  "مهرنکار",
  "مهرنیا",
  "مهروز",
  "مهری",
  "مهریار",
  "مهسا",
  "مهستی",
  "مه سیما",
  "مهشاد",
  "مهشید",
  "مهنام",
  "مهناز",
  "مهنوش",
  "مهوش",
  "مهیار",
  "مهین",
  "مهین دخت",
  "میترا",
  "میخک",
  "مینا",
  "مینا دخت",
  "مینو",
  "مینودخت",
  "مینو فر",
  "نادر",
  "ناز آفرین",
  "نازبانو",
  "نازپرور",
  "نازچهر",
  "نازفر",
  "نازلی",
  "نازی",
  "نازیدخت",
  "نامور",
  "ناهید",
  "ندا",
  "نرسی",
  "نرگس",
  "نرمک",
  "نرمین",
  "نریمان",
  "نسترن",
  "نسرین",
  "نسرین دخت",
  "نسرین نوش",
  "نکیسا",
  "نگار",
  "نگاره",
  "نگارین",
  "نگین",
  "نوا",
  "نوش",
  "نوش آذر",
  "نوش آور",
  "نوشا",
  "نوش آفرین",
  "نوشدخت",
  "نوشروان",
  "نوشفر",
  "نوشناز",
  "نوشین",
  "نوید",
  "نوین",
  "نوین دخت",
  "نیش ا",
  "نیک بین",
  "نیک پی",
  "نیک چهر",
  "نیک خواه",
  "نیکداد",
  "نیکدخت",
  "نیکدل",
  "نیکزاد",
  "نیلوفر",
  "نیما",
  "وامق",
  "ورجاوند",
  "وریا",
  "وشمگیر",
  "وهرز",
  "وهسودان",
  "ویدا",
  "ویس",
  "ویشتاسب",
  "ویگن",
  "هژیر",
  "هخامنش",
  "هربد( هیربد )",
  "هرمز",
  "همایون",
  "هما",
  "همادخت",
  "همدم",
  "همراز",
  "همراه",
  "هنگامه",
  "هوتن",
  "هور",
  "هورتاش",
  "هورچهر",
  "هورداد",
  "هوردخت",
  "هورزاد",
  "هورمند",
  "هوروش",
  "هوشنگ",
  "هوشیار",
  "هومان",
  "هومن",
  "هونام",
  "هویدا",
  "هیتاسب",
  "هیرمند",
  "هیما",
  "هیوا",
  "یادگار",
  "یاسمن ( یاسمین )",
  "یاشار",
  "یاور",
  "یزدان",
  "یگانه",
  "یوشیتا"
];

},{}],605:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");

},{"./first_name":604,"./last_name":606,"./prefix":607}],606:[function(require,module,exports){
module["exports"] = [
  "عارف",
  "عاشوری",
  "عالی",
  "عبادی",
  "عبدالکریمی",
  "عبدالملکی",
  "عراقی",
  "عزیزی",
  "عصار",
  "عقیلی",
  "علم",
  "علم‌الهدی",
  "علی عسگری",
  "علی‌آبادی",
  "علیا",
  "علی‌پور",
  "علی‌زمانی",
  "عنایت",
  "غضنفری",
  "غنی",
  "فارسی",
  "فاطمی",
  "فانی",
  "فتاحی",
  "فرامرزی",
  "فرج",
  "فرشیدورد",
  "فرمانفرمائیان",
  "فروتن",
  "فرهنگ",
  "فریاد",
  "فنایی",
  "فنی‌زاده",
  "فولادوند",
  "فهمیده",
  "قاضی",
  "قانعی",
  "قانونی",
  "قمیشی",
  "قنبری",
  "قهرمان",
  "قهرمانی",
  "قهرمانیان",
  "قهستانی",
  "کاشی",
  "کاکاوند",
  "کامکار",
  "کاملی",
  "کاویانی",
  "کدیور",
  "کردبچه",
  "کرمانی",
  "کریمی",
  "کلباسی",
  "کمالی",
  "کوشکی",
  "کهنمویی",
  "کیان",
  "کیانی (نام خانوادگی)",
  "کیمیایی",
  "گل محمدی",
  "گلپایگانی",
  "گنجی",
  "لاجوردی",
  "لاچینی",
  "لاهوتی",
  "لنکرانی",
  "لوکس",
  "مجاهد",
  "مجتبایی",
  "مجتبوی",
  "مجتهد شبستری",
  "مجتهدی",
  "مجرد",
  "محجوب",
  "محجوبی",
  "محدثی",
  "محمدرضایی",
  "محمدی",
  "مددی",
  "مرادخانی",
  "مرتضوی",
  "مستوفی",
  "مشا",
  "مصاحب",
  "مصباح",
  "مصباح‌زاده",
  "مطهری",
  "مظفر",
  "معارف",
  "معروف",
  "معین",
  "مفتاح",
  "مفتح",
  "مقدم",
  "ملایری",
  "ملک",
  "ملکیان",
  "منوچهری",
  "موحد",
  "موسوی",
  "موسویان",
  "مهاجرانی",
  "مهدی‌پور",
  "میرباقری",
  "میردامادی",
  "میرزاده",
  "میرسپاسی",
  "میزبانی",
  "ناظری",
  "نامور",
  "نجفی",
  "ندوشن",
  "نراقی",
  "نعمت‌زاده",
  "نقدی",
  "نقیب‌زاده",
  "نواب",
  "نوبخت",
  "نوبختی",
  "نهاوندی",
  "نیشابوری",
  "نیلوفری",
  "واثقی",
  "واعظ",
  "واعظ‌زاده",
  "واعظی",
  "وکیلی",
  "هاشمی",
  "هاشمی رفسنجانی",
  "هاشمیان",
  "هامون",
  "هدایت",
  "هراتی",
  "هروی",
  "همایون",
  "همت",
  "همدانی",
  "هوشیار",
  "هومن",
  "یاحقی",
  "یادگار",
  "یثربی",
  "یلدا"
];

},{}],607:[function(require,module,exports){
module["exports"] = [
  "آقای",
  "خانم",
  "دکتر"
];

},{}],608:[function(require,module,exports){
module["exports"] = [
  "####",
  "###",
  "##",
  "#"
];

},{}],609:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"dup":199}],610:[function(require,module,exports){
module["exports"] = [
  "Paris",
  "Marseille",
  "Lyon",
  "Toulouse",
  "Nice",
  "Nantes",
  "Strasbourg",
  "Montpellier",
  "Bordeaux",
  "Lille13",
  "Rennes",
  "Reims",
  "Le Havre",
  "Saint-Étienne",
  "Toulon",
  "Grenoble",
  "Dijon",
  "Angers",
  "Saint-Denis",
  "Villeurbanne",
  "Le Mans",
  "Aix-en-Provence",
  "Brest",
  "Nîmes",
  "Limoges",
  "Clermont-Ferrand",
  "Tours",
  "Amiens",
  "Metz",
  "Perpignan",
  "Besançon",
  "Orléans",
  "Boulogne-Billancourt",
  "Mulhouse",
  "Rouen",
  "Caen",
  "Nancy",
  "Saint-Denis",
  "Saint-Paul",
  "Montreuil",
  "Argenteuil",
  "Roubaix",
  "Dunkerque14",
  "Tourcoing",
  "Nanterre",
  "Avignon",
  "Créteil",
  "Poitiers",
  "Fort-de-France",
  "Courbevoie",
  "Versailles",
  "Vitry-sur-Seine",
  "Colombes",
  "Pau",
  "Aulnay-sous-Bois",
  "Asnières-sur-Seine",
  "Rueil-Malmaison",
  "Saint-Pierre",
  "Antibes",
  "Saint-Maur-des-Fossés",
  "Champigny-sur-Marne",
  "La Rochelle",
  "Aubervilliers",
  "Calais",
  "Cannes",
  "Le Tampon",
  "Béziers",
  "Colmar",
  "Bourges",
  "Drancy",
  "Mérignac",
  "Saint-Nazaire",
  "Valence",
  "Ajaccio",
  "Issy-les-Moulineaux",
  "Villeneuve-d'Ascq",
  "Levallois-Perret",
  "Noisy-le-Grand",
  "Quimper",
  "La Seyne-sur-Mer",
  "Antony",
  "Troyes",
  "Neuilly-sur-Seine",
  "Sarcelles",
  "Les Abymes",
  "Vénissieux",
  "Clichy",
  "Lorient",
  "Pessac",
  "Ivry-sur-Seine",
  "Cergy",
  "Cayenne",
  "Niort",
  "Chambéry",
  "Montauban",
  "Saint-Quentin",
  "Villejuif",
  "Hyères",
  "Beauvais",
  "Cholet"
];

},{}],611:[function(require,module,exports){
module["exports"] = [
  "France"
];

},{}],612:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.building_number = require("./building_number");
address.street_prefix = require("./street_prefix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_suffix = require("./street_suffix");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":608,"./city":609,"./city_name":610,"./default_country":611,"./postcode":613,"./secondary_address":614,"./state":615,"./street_address":616,"./street_name":617,"./street_prefix":618,"./street_suffix":619}],613:[function(require,module,exports){
arguments[4][523][0].apply(exports,arguments)
},{"dup":523}],614:[function(require,module,exports){
module["exports"] = [
  "Apt. ###",
  "# étage"
];

},{}],615:[function(require,module,exports){
module["exports"] = [
  "Alsace",
  "Aquitaine",
  "Auvergne",
  "Basse-Normandie",
  "Bourgogne",
  "Bretagne",
  "Centre",
  "Champagne-Ardenne",
  "Corse",
  "Franche-Comté",
  "Haute-Normandie",
  "Île-de-France",
  "Languedoc-Roussillon",
  "Limousin",
  "Lorraine",
  "Midi-Pyrénées",
  "Nord-Pas-de-Calais",
  "Pays de la Loire",
  "Picardie",
  "Poitou-Charentes",
  "Provence-Alpes-Côte d'Azur",
  "Rhône-Alpes"
];

},{}],616:[function(require,module,exports){
arguments[4][337][0].apply(exports,arguments)
},{"dup":337}],617:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{street_suffix}"
];

},{}],618:[function(require,module,exports){
module["exports"] = [
  "Allée, Voie",
  "Rue",
  "Avenue",
  "Boulevard",
  "Quai",
  "Passage",
  "Impasse",
  "Place"
];

},{}],619:[function(require,module,exports){
module["exports"] = [
  "de l'Abbaye",
  "Adolphe Mille",
  "d'Alésia",
  "d'Argenteuil",
  "d'Assas",
  "du Bac",
  "de Paris",
  "La Boétie",
  "Bonaparte",
  "de la Bûcherie",
  "de Caumartin",
  "Charlemagne",
  "du Chat-qui-Pêche",
  "de la Chaussée-d'Antin",
  "du Dahomey",
  "Dauphine",
  "Delesseux",
  "du Faubourg Saint-Honoré",
  "du Faubourg-Saint-Denis",
  "de la Ferronnerie",
  "des Francs-Bourgeois",
  "des Grands Augustins",
  "de la Harpe",
  "du Havre",
  "de la Huchette",
  "Joubert",
  "Laffitte",
  "Lepic",
  "des Lombards",
  "Marcadet",
  "Molière",
  "Monsieur-le-Prince",
  "de Montmorency",
  "Montorgueil",
  "Mouffetard",
  "de Nesle",
  "Oberkampf",
  "de l'Odéon",
  "d'Orsel",
  "de la Paix",
  "des Panoramas",
  "Pastourelle",
  "Pierre Charron",
  "de la Pompe",
  "de Presbourg",
  "de Provence",
  "de Richelieu",
  "de Rivoli",
  "des Rosiers",
  "Royale",
  "d'Abbeville",
  "Saint-Honoré",
  "Saint-Bernard",
  "Saint-Denis",
  "Saint-Dominique",
  "Saint-Jacques",
  "Saint-Séverin",
  "des Saussaies",
  "de Seine",
  "de Solférino",
  "Du Sommerard",
  "de Tilsitt",
  "Vaneau",
  "de Vaugirard",
  "de la Victoire",
  "Zadkine"
];

},{}],620:[function(require,module,exports){
arguments[4][212][0].apply(exports,arguments)
},{"dup":212}],621:[function(require,module,exports){
arguments[4][356][0].apply(exports,arguments)
},{"dup":356}],622:[function(require,module,exports){
arguments[4][357][0].apply(exports,arguments)
},{"dup":357}],623:[function(require,module,exports){
arguments[4][214][0].apply(exports,arguments)
},{"dup":214}],624:[function(require,module,exports){
arguments[4][215][0].apply(exports,arguments)
},{"dup":215}],625:[function(require,module,exports){
arguments[4][360][0].apply(exports,arguments)
},{"./adjective":620,"./bs_adjective":621,"./bs_noun":622,"./bs_verb":623,"./descriptor":624,"./name":626,"./noun":627,"./suffix":628,"dup":360}],626:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name} et #{Name.last_name}"
];

},{}],627:[function(require,module,exports){
arguments[4][218][0].apply(exports,arguments)
},{"dup":218}],628:[function(require,module,exports){
module["exports"] = [
  "SARL",
  "SA",
  "EURL",
  "SAS",
  "SEM",
  "SCOP",
  "GIE",
  "EI"
];

},{}],629:[function(require,module,exports){
var fr = {};
module['exports'] = fr;
fr.title = "French";
fr.address = require("./address");
fr.company = require("./company");
fr.internet = require("./internet");
fr.lorem = require("./lorem");
fr.name = require("./name");
fr.phone_number = require("./phone_number");

},{"./address":612,"./company":625,"./internet":632,"./lorem":633,"./name":637,"./phone_number":643}],630:[function(require,module,exports){
module["exports"] = [
  "com",
  "fr",
  "eu",
  "info",
  "name",
  "net",
  "org"
];

},{}],631:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.fr",
  "hotmail.fr"
];

},{}],632:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":630,"./free_email":631,"dup":187}],633:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./supplemental":634,"./words":635,"dup":227}],634:[function(require,module,exports){
arguments[4][228][0].apply(exports,arguments)
},{"dup":228}],635:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"dup":229}],636:[function(require,module,exports){
module["exports"] = [
  "Enzo",
  "Lucas",
  "Mathis",
  "Nathan",
  "Thomas",
  "Hugo",
  "Théo",
  "Tom",
  "Louis",
  "Raphaël",
  "Clément",
  "Léo",
  "Mathéo",
  "Maxime",
  "Alexandre",
  "Antoine",
  "Yanis",
  "Paul",
  "Baptiste",
  "Alexis",
  "Gabriel",
  "Arthur",
  "Jules",
  "Ethan",
  "Noah",
  "Quentin",
  "Axel",
  "Evan",
  "Mattéo",
  "Romain",
  "Valentin",
  "Maxence",
  "Noa",
  "Adam",
  "Nicolas",
  "Julien",
  "Mael",
  "Pierre",
  "Rayan",
  "Victor",
  "Mohamed",
  "Adrien",
  "Kylian",
  "Sacha",
  "Benjamin",
  "Léa",
  "Clara",
  "Manon",
  "Chloé",
  "Camille",
  "Ines",
  "Sarah",
  "Jade",
  "Lola",
  "Anaïs",
  "Lucie",
  "Océane",
  "Lilou",
  "Marie",
  "Eva",
  "Romane",
  "Lisa",
  "Zoe",
  "Julie",
  "Mathilde",
  "Louise",
  "Juliette",
  "Clémence",
  "Célia",
  "Laura",
  "Lena",
  "Maëlys",
  "Charlotte",
  "Ambre",
  "Maeva",
  "Pauline",
  "Lina",
  "Jeanne",
  "Lou",
  "Noémie",
  "Justine",
  "Louna",
  "Elisa",
  "Alice",
  "Emilie",
  "Carla",
  "Maëlle",
  "Alicia",
  "Mélissa"
];

},{}],637:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.title = require("./title");
name.name = require("./name");

},{"./first_name":636,"./last_name":638,"./name":639,"./prefix":640,"./title":641}],638:[function(require,module,exports){
module["exports"] = [
  "Martin",
  "Bernard",
  "Dubois",
  "Thomas",
  "Robert",
  "Richard",
  "Petit",
  "Durand",
  "Leroy",
  "Moreau",
  "Simon",
  "Laurent",
  "Lefebvre",
  "Michel",
  "Garcia",
  "David",
  "Bertrand",
  "Roux",
  "Vincent",
  "Fournier",
  "Morel",
  "Girard",
  "Andre",
  "Lefevre",
  "Mercier",
  "Dupont",
  "Lambert",
  "Bonnet",
  "Francois",
  "Martinez",
  "Legrand",
  "Garnier",
  "Faure",
  "Rousseau",
  "Blanc",
  "Guerin",
  "Muller",
  "Henry",
  "Roussel",
  "Nicolas",
  "Perrin",
  "Morin",
  "Mathieu",
  "Clement",
  "Gauthier",
  "Dumont",
  "Lopez",
  "Fontaine",
  "Chevalier",
  "Robin",
  "Masson",
  "Sanchez",
  "Gerard",
  "Nguyen",
  "Boyer",
  "Denis",
  "Lemaire",
  "Duval",
  "Joly",
  "Gautier",
  "Roger",
  "Roche",
  "Roy",
  "Noel",
  "Meyer",
  "Lucas",
  "Meunier",
  "Jean",
  "Perez",
  "Marchand",
  "Dufour",
  "Blanchard",
  "Marie",
  "Barbier",
  "Brun",
  "Dumas",
  "Brunet",
  "Schmitt",
  "Leroux",
  "Colin",
  "Fernandez",
  "Pierre",
  "Renard",
  "Arnaud",
  "Rolland",
  "Caron",
  "Aubert",
  "Giraud",
  "Leclerc",
  "Vidal",
  "Bourgeois",
  "Renaud",
  "Lemoine",
  "Picard",
  "Gaillard",
  "Philippe",
  "Leclercq",
  "Lacroix",
  "Fabre",
  "Dupuis",
  "Olivier",
  "Rodriguez",
  "Da silva",
  "Hubert",
  "Louis",
  "Charles",
  "Guillot",
  "Riviere",
  "Le gall",
  "Guillaume",
  "Adam",
  "Rey",
  "Moulin",
  "Gonzalez",
  "Berger",
  "Lecomte",
  "Menard",
  "Fleury",
  "Deschamps",
  "Carpentier",
  "Julien",
  "Benoit",
  "Paris",
  "Maillard",
  "Marchal",
  "Aubry",
  "Vasseur",
  "Le roux",
  "Renault",
  "Jacquet",
  "Collet",
  "Prevost",
  "Poirier",
  "Charpentier",
  "Royer",
  "Huet",
  "Baron",
  "Dupuy",
  "Pons",
  "Paul",
  "Laine",
  "Carre",
  "Breton",
  "Remy",
  "Schneider",
  "Perrot",
  "Guyot",
  "Barre",
  "Marty",
  "Cousin"
];

},{}],639:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{last_name} #{first_name}"
];

},{}],640:[function(require,module,exports){
module["exports"] = [
  "M",
  "Mme",
  "Mlle",
  "Dr",
  "Prof"
];

},{}],641:[function(require,module,exports){
module["exports"] = {
  "job": [
    "Superviseur",
    "Executif",
    "Manager",
    "Ingenieur",
    "Specialiste",
    "Directeur",
    "Coordinateur",
    "Administrateur",
    "Architecte",
    "Analyste",
    "Designer",
    "Technicien",
    "Developpeur",
    "Producteur",
    "Consultant",
    "Assistant",
    "Agent",
    "Stagiaire"
  ]
};

},{}],642:[function(require,module,exports){
module["exports"] = [
  "01########",
  "02########",
  "03########",
  "04########",
  "05########",
  "06########",
  "07########",
  "+33 1########",
  "+33 2########",
  "+33 3########",
  "+33 4########",
  "+33 5########",
  "+33 6########",
  "+33 7########"
];

},{}],643:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":642,"dup":197}],644:[function(require,module,exports){
arguments[4][436][0].apply(exports,arguments)
},{"dup":436}],645:[function(require,module,exports){
arguments[4][470][0].apply(exports,arguments)
},{"./default_country":644,"./postcode":646,"./state":647,"./state_abbr":648,"dup":470}],646:[function(require,module,exports){
arguments[4][438][0].apply(exports,arguments)
},{"dup":438}],647:[function(require,module,exports){
module["exports"] = [
  "Alberta",
  "Colombie-Britannique",
  "Manitoba",
  "Nouveau-Brunswick",
  "Terre-Neuve-et-Labrador",
  "Nouvelle-Écosse",
  "Territoires du Nord-Ouest",
  "Nunavut",
  "Ontario",
  "Île-du-Prince-Édouard",
  "Québec",
  "Saskatchewan",
  "Yukon"
];

},{}],648:[function(require,module,exports){
module["exports"] = [
  "AB",
  "BC",
  "MB",
  "NB",
  "NL",
  "NS",
  "NU",
  "NT",
  "ON",
  "PE",
  "QC",
  "SK",
  "YK"
];

},{}],649:[function(require,module,exports){
var fr_CA = {};
module['exports'] = fr_CA;
fr_CA.title = "Canada (French)";
fr_CA.address = require("./address");
fr_CA.internet = require("./internet");
fr_CA.phone_number = require("./phone_number");

},{"./address":645,"./internet":652,"./phone_number":654}],650:[function(require,module,exports){
module["exports"] = [
  "qc.ca",
  "ca",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],651:[function(require,module,exports){
arguments[4][443][0].apply(exports,arguments)
},{"dup":443}],652:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":650,"./free_email":651,"dup":187}],653:[function(require,module,exports){
module["exports"] = [
  "### ###-####",
  "1 ### ###-####",
  "### ###-####, poste ###"
];

},{}],654:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":653,"dup":197}],655:[function(require,module,exports){
module["exports"] = [
  "###",
  "##",
  "#"
];

},{}],656:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix} #{Name.first_name}#{city_suffix}",
  "#{city_prefix} #{Name.first_name}",
  "#{Name.first_name}#{city_suffix}",
  "#{Name.first_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}"
];

},{}],657:[function(require,module,exports){
module["exports"] = [
  "აბასთუმანი",
  "აბაშა",
  "ადიგენი",
  "ამბროლაური",
  "ანაკლია",
  "ასპინძა",
  "ახალგორი",
  "ახალქალაქი",
  "ახალციხე",
  "ახმეტა",
  "ბათუმი",
  "ბაკურიანი",
  "ბაღდათი",
  "ბახმარო",
  "ბოლნისი",
  "ბორჯომი",
  "გარდაბანი",
  "გონიო",
  "გორი",
  "გრიგოლეთი",
  "გუდაური",
  "გურჯაანი",
  "დედოფლისწყარო",
  "დმანისი",
  "დუშეთი",
  "ვანი",
  "ზესტაფონი",
  "ზუგდიდი",
  "თბილისი",
  "თეთრიწყარო",
  "თელავი",
  "თერჯოლა",
  "თიანეთი",
  "კასპი",
  "კვარიათი",
  "კიკეთი",
  "კოჯორი",
  "ლაგოდეხი",
  "ლანჩხუთი",
  "ლენტეხი",
  "მარნეული",
  "მარტვილი",
  "მესტია",
  "მცხეთა",
  "მწვანე კონცხი",
  "ნინოწმინდა",
  "ოზურგეთი",
  "ონი",
  "რუსთავი",
  "საგარეჯო",
  "საგურამო",
  "საირმე",
  "სამტრედია",
  "სარფი",
  "საჩხერე",
  "სენაკი",
  "სიღნაღი",
  "სტეფანწმინდა",
  "სურამი",
  "ტაბახმელა",
  "ტყიბული",
  "ურეკი",
  "ფოთი",
  "ქარელი",
  "ქედა",
  "ქობულეთი",
  "ქუთაისი",
  "ყვარელი",
  "შუახევი",
  "ჩაქვი",
  "ჩოხატაური",
  "ცაგერი",
  "ცხოროჭყუ",
  "წავკისი",
  "წალენჯიხა",
  "წალკა",
  "წაღვერი",
  "წეროვანი",
  "წნორი",
  "წყალტუბო",
  "წყნეთი",
  "ჭიათურა",
  "ხარაგაული",
  "ხაშური",
  "ხელვაჩაური",
  "ხობი",
  "ხონი",
  "ხულო"
];

},{}],658:[function(require,module,exports){
module["exports"] = [
  "ახალი",
  "ძველი",
  "ზემო",
  "ქვემო"
];

},{}],659:[function(require,module,exports){
module["exports"] = [
  "სოფელი",
  "ძირი",
  "სკარი",
  "დაბა"
];

},{}],660:[function(require,module,exports){
module["exports"] = [
  "ავსტრალია",
  "ავსტრია",
  "ავღანეთი",
  "აზავადი",
  "აზერბაიჯანი",
  "აზიაში",
  "აზიის",
  "ალბანეთი",
  "ალჟირი",
  "ამაღლება და ტრისტანი-და-კუნია",
  "ამერიკის ვირჯინიის კუნძულები",
  "ამერიკის სამოა",
  "ამერიკის შეერთებული შტატები",
  "ამერიკის",
  "ანგილია",
  "ანგოლა",
  "ანდორა",
  "ანტიგუა და ბარბუდა",
  "არაბეთის საემიროები",
  "არაბთა გაერთიანებული საამიროები",
  "არაბული ქვეყნების ლიგის",
  "არგენტინა",
  "არუბა",
  "არცნობილი ქვეყნების სია",
  "აფრიკაში",
  "აფრიკაშია",
  "აღდგომის კუნძული",
  "აღმ. ტიმორი",
  "აღმოსავლეთი აფრიკა",
  "აღმოსავლეთი ტიმორი",
  "აშშ",
  "აშშ-ის ვირჯინის კუნძულები",
  "ახალი ზელანდია",
  "ახალი კალედონია",
  "ბანგლადეში",
  "ბარბადოსი",
  "ბაჰამის კუნძულები",
  "ბაჰრეინი",
  "ბელარუსი",
  "ბელგია",
  "ბელიზი",
  "ბენინი",
  "ბერმუდა",
  "ბერმუდის კუნძულები",
  "ბოლივია",
  "ბოსნია და ჰერცეგოვინა",
  "ბოტსვანა",
  "ბრაზილია",
  "ბრიტანეთის ვირჯინიის კუნძულები",
  "ბრიტანეთის ვირჯინის კუნძულები",
  "ბრიტანეთის ინდოეთის ოკეანის ტერიტორია",
  "ბრუნეი",
  "ბულგარეთი",
  "ბურკინა ფასო",
  "ბურკინა-ფასო",
  "ბურუნდი",
  "ბჰუტანი",
  "გაბონი",
  "გაერთიანებული სამეფო",
  "გაეროს",
  "გაიანა",
  "გამბია",
  "განა",
  "გერმანია",
  "გვადელუპა",
  "გვატემალა",
  "გვინეა",
  "გვინეა-ბისაუ",
  "გიბრალტარი",
  "გრენადა",
  "გრენლანდია",
  "გუამი",
  "დამოკიდებული ტერ.",
  "დამოკიდებული ტერიტორია",
  "დამოკიდებული",
  "დანია",
  "დასავლეთი აფრიკა",
  "დასავლეთი საჰარა",
  "დიდი ბრიტანეთი",
  "დომინიკა",
  "დომინიკელთა რესპუბლიკა",
  "ეგვიპტე",
  "ევროკავშირის",
  "ევროპასთან",
  "ევროპაშია",
  "ევროპის ქვეყნები",
  "ეთიოპია",
  "ეკვადორი",
  "ეკვატორული გვინეა",
  "ეპარსეს კუნძული",
  "ერაყი",
  "ერიტრეა",
  "ესპანეთი",
  "ესპანეთის სუვერენული ტერიტორიები",
  "ესტონეთი",
  "ეშმორის და კარტიეს კუნძულები",
  "ვანუატუ",
  "ვატიკანი",
  "ვენესუელა",
  "ვიეტნამი",
  "ზამბია",
  "ზიმბაბვე",
  "თურქეთი",
  "თურქმენეთი",
  "იამაიკა",
  "იან მაიენი",
  "იაპონია",
  "იემენი",
  "ინდოეთი",
  "ინდონეზია",
  "იორდანია",
  "ირანი",
  "ირლანდია",
  "ისლანდია",
  "ისრაელი",
  "იტალია",
  "კაბო-ვერდე",
  "კაიმანის კუნძულები",
  "კამბოჯა",
  "კამერუნი",
  "კანადა",
  "კანარის კუნძულები",
  "კარიბის ზღვის",
  "კატარი",
  "კენია",
  "კვიპროსი",
  "კინგმენის რიფი",
  "კირიბატი",
  "კლიპერტონი",
  "კოლუმბია",
  "კომორი",
  "კომორის კუნძულები",
  "კონგოს დემოკრატიული რესპუბლიკა",
  "კონგოს რესპუბლიკა",
  "კორეის რესპუბლიკა",
  "კოსტა-რიკა",
  "კოტ-დ’ივუარი",
  "კუბა",
  "კუკის კუნძულები",
  "ლაოსი",
  "ლატვია",
  "ლესოთო",
  "ლიბანი",
  "ლიბერია",
  "ლიბია",
  "ლიტვა",
  "ლიხტენშტაინი",
  "ლუქსემბურგი",
  "მადაგასკარი",
  "მადეირა",
  "მავრიკი",
  "მავრიტანია",
  "მაიოტა",
  "მაკაო",
  "მაკედონია",
  "მალავი",
  "მალაიზია",
  "მალდივი",
  "მალდივის კუნძულები",
  "მალი",
  "მალტა",
  "მაროკო",
  "მარტინიკა",
  "მარშალის კუნძულები",
  "მარჯნის ზღვის კუნძულები",
  "მელილია",
  "მექსიკა",
  "მიანმარი",
  "მიკრონეზია",
  "მიკრონეზიის ფედერაციული შტატები",
  "მიმდებარე კუნძულები",
  "მოზამბიკი",
  "მოლდოვა",
  "მონაკო",
  "მონსერატი",
  "მონღოლეთი",
  "ნამიბია",
  "ნაურუ",
  "ნაწილობრივ აფრიკაში",
  "ნეპალი",
  "ნიგერი",
  "ნიგერია",
  "ნიდერლანდი",
  "ნიდერლანდის ანტილები",
  "ნიკარაგუა",
  "ნიუე",
  "ნორვეგია",
  "ნორფოლკის კუნძული",
  "ოკეანეთის",
  "ოკეანიას",
  "ომანი",
  "პაკისტანი",
  "პალაუ",
  "პალესტინა",
  "პალმირა (ატოლი)",
  "პანამა",
  "პანტელერია",
  "პაპუა-ახალი გვინეა",
  "პარაგვაი",
  "პერუ",
  "პიტკერნის კუნძულები",
  "პოლონეთი",
  "პორტუგალია",
  "პრინც-ედუარდის კუნძული",
  "პუერტო-რიკო",
  "რეუნიონი",
  "როტუმა",
  "რუანდა",
  "რუმინეთი",
  "რუსეთი",
  "საბერძნეთი",
  "სადავო ტერიტორიები",
  "სალვადორი",
  "სამოა",
  "სამხ. კორეა",
  "სამხრეთ ამერიკაშია",
  "სამხრეთ ამერიკის",
  "სამხრეთ აფრიკის რესპუბლიკა",
  "სამხრეთი აფრიკა",
  "სამხრეთი გეორგია და სამხრეთ სენდვიჩის კუნძულები",
  "სამხრეთი სუდანი",
  "სან-მარინო",
  "სან-ტომე და პრინსიპი",
  "საუდის არაბეთი",
  "საფრანგეთი",
  "საფრანგეთის გვიანა",
  "საფრანგეთის პოლინეზია",
  "საქართველო",
  "საჰარის არაბთა დემოკრატიული რესპუბლიკა",
  "სეიშელის კუნძულები",
  "სენ-ბართელმი",
  "სენ-მარტენი",
  "სენ-პიერი და მიკელონი",
  "სენეგალი",
  "სენტ-ვინსენტი და გრენადინები",
  "სენტ-კიტსი და ნევისი",
  "სენტ-ლუსია",
  "სერბეთი",
  "სეუტა",
  "სვაზილენდი",
  "სვალბარდი",
  "სიერა-ლეონე",
  "სინგაპური",
  "სირია",
  "სლოვაკეთი",
  "სლოვენია",
  "სოკოტრა",
  "სოლომონის კუნძულები",
  "სომალი",
  "სომალილენდი",
  "სომხეთი",
  "სუდანი",
  "სუვერენული სახელმწიფოები",
  "სურინამი",
  "ტაივანი",
  "ტაილანდი",
  "ტანზანია",
  "ტაჯიკეთი",
  "ტერიტორიები",
  "ტერქსისა და კაიკოსის კუნძულები",
  "ტოგო",
  "ტოკელაუ",
  "ტონგა",
  "ტრანსკონტინენტური ქვეყანა",
  "ტრინიდადი და ტობაგო",
  "ტუვალუ",
  "ტუნისი",
  "უგანდა",
  "უზბეკეთი",
  "უკრაინა",
  "უნგრეთი",
  "უოლისი და ფუტუნა",
  "ურუგვაი",
  "ფარერის კუნძულები",
  "ფილიპინები",
  "ფინეთი",
  "ფიჯი",
  "ფოლკლენდის კუნძულები",
  "ქვეყნები",
  "ქოქოსის კუნძულები",
  "ქუვეითი",
  "ღაზის სექტორი",
  "ყაზახეთი",
  "ყირგიზეთი",
  "შვედეთი",
  "შვეიცარია",
  "შობის კუნძული",
  "შრი-ლანკა",
  "ჩადი",
  "ჩერნოგორია",
  "ჩეჩნეთის რესპუბლიკა იჩქერია",
  "ჩეხეთი",
  "ჩილე",
  "ჩინეთი",
  "ჩრდ. კორეა",
  "ჩრდილოეთ ამერიკის",
  "ჩრდილოეთ მარიანას კუნძულები",
  "ჩრდილოეთი აფრიკა",
  "ჩრდილოეთი კორეა",
  "ჩრდილოეთი მარიანას კუნძულები",
  "ცენტრალური აფრიკა",
  "ცენტრალური აფრიკის რესპუბლიკა",
  "წევრები",
  "წმინდა ელენე",
  "წმინდა ელენეს კუნძული",
  "ხორვატია",
  "ჯერსი",
  "ჯიბუტი",
  "ჰავაი",
  "ჰაიტი",
  "ჰერდი და მაკდონალდის კუნძულები",
  "ჰონდურასი",
  "ჰონკონგი"
];

},{}],661:[function(require,module,exports){
module["exports"] = [
  "საქართველო"
];

},{}],662:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.city = require("./city");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.city_name = require("./city_name");
address.street_title = require("./street_title");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":655,"./city":656,"./city_name":657,"./city_prefix":658,"./city_suffix":659,"./country":660,"./default_country":661,"./postcode":663,"./secondary_address":664,"./street_address":665,"./street_name":666,"./street_suffix":667,"./street_title":668}],663:[function(require,module,exports){
module["exports"] = [
  "01##"
];

},{}],664:[function(require,module,exports){
module["exports"] = [
  "კორპ. ##",
  "შენობა ###"
];

},{}],665:[function(require,module,exports){
arguments[4][209][0].apply(exports,arguments)
},{"dup":209}],666:[function(require,module,exports){
module["exports"] = [
  "#{street_title} #{street_suffix}"
];

},{}],667:[function(require,module,exports){
module["exports"] = [
  "გამზ.",
  "გამზირი",
  "ქ.",
  "ქუჩა",
  "ჩიხი",
  "ხეივანი"
];

},{}],668:[function(require,module,exports){
module["exports"] = [
  "აბაშიძის",
  "აბესაძის",
  "აბულაძის",
  "აგლაძის",
  "ადლერის",
  "ავიაქიმიის",
  "ავლაბრის",
  "ათარბეგოვის",
  "ათონელის",
  "ალავერდოვის",
  "ალექსიძის",
  "ალილუევის",
  "ალმასიანის",
  "ამაღლების",
  "ამირეჯიბის",
  "ანაგის",
  "ანდრონიკაშვილის",
  "ანთელავას",
  "ანჯაფარიძის",
  "არაგვის",
  "არდონის",
  "არეშიძის",
  "ასათიანის",
  "ასკურავას",
  "ასლანიდის",
  "ატენის",
  "აფხაზი",
  "აღმაშენებლის",
  "ახალშენის",
  "ახვლედიანის",
  "ბააზოვის",
  "ბაბისხევის",
  "ბაბუშკინის",
  "ბაგრატიონის",
  "ბალანჩივაძეების",
  "ბალანჩივაძის",
  "ბალანჩინის",
  "ბალმაშევის",
  "ბარამიძის",
  "ბარნოვის",
  "ბაშალეიშვილის",
  "ბევრეთის",
  "ბელინსკის",
  "ბელოსტოკის",
  "ბენაშვილის",
  "ბეჟანიშვილის",
  "ბერიძის",
  "ბოლქვაძის",
  "ბოცვაძის",
  "ბოჭორიშვილის",
  "ბოჭორიძის",
  "ბუაჩიძის",
  "ბუდაპეშტის",
  "ბურკიაშვილის",
  "ბურძგლას",
  "გაბესკირიას",
  "გაგარინის",
  "გაზაფხულის",
  "გამრეკელის",
  "გამსახურდიას",
  "გარეჯელის",
  "გეგეჭკორის",
  "გედაურის",
  "გელოვანი",
  "გელოვანის",
  "გერცენის",
  "გლდანის",
  "გოგებაშვილის",
  "გოგიბერიძის",
  "გოგოლის",
  "გონაშვილის",
  "გორგასლის",
  "გრანელის",
  "გრიზოდუბოვას",
  "გრინევიცკის",
  "გრომოვას",
  "გრუზინსკის",
  "გუდიაშვილის",
  "გულრიფშის",
  "გულუას",
  "გურამიშვილის",
  "გურგენიძის",
  "დადიანის",
  "დავითაშვილის",
  "დამაკავშირებელი",
  "დარიალის",
  "დედოფლისწყაროს",
  "დეპუტატის",
  "დიდგორის",
  "დიდი",
  "დიდუბის",
  "დიუმას",
  "დიღმის",
  "დიღომში",
  "დოლიძის",
  "დუნდუას",
  "დურმიშიძის",
  "ელიავას",
  "ენგელსის",
  "ენგურის",
  "ეპისკოპოსის",
  "ერისთავი",
  "ერისთავის",
  "ვაზისუბნის",
  "ვაკელის",
  "ვართაგავას",
  "ვატუტინის",
  "ვაჩნაძის",
  "ვაცეკის",
  "ვეკუას",
  "ვეშაპურის",
  "ვირსალაძის",
  "ვოლოდარსკის",
  "ვორონინის",
  "ზაარბრიუკენის",
  "ზაზიაშვილის",
  "ზაზიშვილის",
  "ზაკომოლდინის",
  "ზანდუკელის",
  "ზაქარაიას",
  "ზაქარიაძის",
  "ზახაროვის",
  "ზაჰესის",
  "ზნაურის",
  "ზურაბაშვილის",
  "ზღვის",
  "თაბუკაშვილის",
  "თავაძის",
  "თავისუფლების",
  "თამარაშვილის",
  "თაქთაქიშვილის",
  "თბილელის",
  "თელიას",
  "თორაძის",
  "თოფურიძის",
  "იალბუზის",
  "იამანიძის",
  "იაშვილის",
  "იბერიის",
  "იერუსალიმის",
  "ივანიძის",
  "ივერიელის",
  "იზაშვილის",
  "ილურიძის",
  "იმედაშვილის",
  "იმედაძის",
  "იმედის",
  "ინანიშვილის",
  "ინგოროყვას",
  "ინდუსტრიალიზაციის",
  "ინჟინრის",
  "ინწკირველის",
  "ირბახის",
  "ირემაშვილის",
  "ისაკაძის",
  "ისპასჰანლის",
  "იტალიის",
  "იუნკერთა",
  "კათალიკოსის",
  "კაიროს",
  "კაკაბაძის",
  "კაკაბეთის",
  "კაკლიანის",
  "კალანდაძის",
  "კალიაევის",
  "კალინინის",
  "კამალოვის",
  "კამოს",
  "კაშენის",
  "კახოვკის",
  "კედიას",
  "კელაპტრიშვილის",
  "კერესელიძის",
  "კეცხოველის",
  "კიბალჩიჩის",
  "კიკნაძის",
  "კიროვის",
  "კობარეთის",
  "კოლექტივიზაციის",
  "კოლმეურნეობის",
  "კოლხეთის",
  "კომკავშირის",
  "კომუნისტური",
  "კონსტიტუციის",
  "კოოპერაციის",
  "კოსტავას",
  "კოტეტიშვილის",
  "კოჩეტკოვის",
  "კოჯრის",
  "კრონშტადტის",
  "კროპოტკინის",
  "კრუპსკაიას",
  "კუიბიშევის",
  "კურნატოვსკის",
  "კურტანოვსკის",
  "კუტუზოვის",
  "ლაღიძის",
  "ლელაშვილის",
  "ლენინაშენის",
  "ლენინგრადის",
  "ლენინის",
  "ლენის",
  "ლეონიძის",
  "ლვოვის",
  "ლორთქიფანიძის",
  "ლოტკინის",
  "ლუბლიანის",
  "ლუბოვსკის",
  "ლუნაჩარსკის",
  "ლუქსემბურგის",
  "მაგნიტოგორსკის",
  "მაზნიაშვილის",
  "მაისურაძის",
  "მამარდაშვილის",
  "მამაცაშვილის",
  "მანაგაძის",
  "მანჯგალაძის",
  "მარის",
  "მარუაშვილის",
  "მარქსის",
  "მარჯანის",
  "მატროსოვის",
  "მაჭავარიანი",
  "მახალდიანის",
  "მახარაძის",
  "მებაღიშვილის",
  "მეგობრობის",
  "მელაანის",
  "მერკვილაძის",
  "მესხიას",
  "მესხის",
  "მეტეხის",
  "მეტრეველი",
  "მეჩნიკოვის",
  "მთავარანგელოზის",
  "მიასნიკოვის",
  "მილორავას",
  "მიმინოშვილის",
  "მიროტაძის",
  "მიქატაძის",
  "მიქელაძის",
  "მონტინის",
  "მორეტის",
  "მოსკოვის",
  "მრევლიშვილის",
  "მუშკორის",
  "მუჯირიშვილის",
  "მშვიდობის",
  "მცხეთის",
  "ნადირაძის",
  "ნაკაშიძის",
  "ნარიმანოვის",
  "ნასიძის",
  "ნაფარეულის",
  "ნეკრასოვის",
  "ნიაღვრის",
  "ნინიძის",
  "ნიშნიანიძის",
  "ობოლაძის",
  "ონიანის",
  "ოჟიოს",
  "ორახელაშვილის",
  "ორბელიანის",
  "ორჯონიკიძის",
  "ოქტომბრის",
  "ოცდაექვსი",
  "პავლოვის",
  "პარალელურის",
  "პარიზის",
  "პეკინის",
  "პეროვსკაიას",
  "პეტეფის",
  "პიონერის",
  "პირველი",
  "პისარევის",
  "პლეხანოვის",
  "პრავდის",
  "პროლეტარიატის",
  "ჟელიაბოვის",
  "ჟვანიას",
  "ჟორდანიას",
  "ჟღენტი",
  "ჟღენტის",
  "რადიანის",
  "რამიშვილი",
  "რასკოვას",
  "რენინგერის",
  "რინგის",
  "რიჟინაშვილის",
  "რობაქიძის",
  "რობესპიერის",
  "რუსის",
  "რუხაძის",
  "რჩეულიშვილის",
  "სააკაძის",
  "საბადურის",
  "საბაშვილის",
  "საბურთალოს",
  "საბჭოს",
  "საგურამოს",
  "სამრეკლოს",
  "სამღერეთის",
  "სანაკოევის",
  "სარაჯიშვილის",
  "საჯაიას",
  "სევასტოპოლის",
  "სერგი",
  "სვანიძის",
  "სვერდლოვის",
  "სტახანოვის",
  "სულთნიშნის",
  "სურგულაძის",
  "სხირტლაძის",
  "ტაბიძის",
  "ტატიშვილის",
  "ტელმანის",
  "ტერევერკოს",
  "ტეტელაშვილის",
  "ტოვსტონოგოვის",
  "ტოროშელიძის",
  "ტრაქტორის",
  "ტრიკოტაჟის",
  "ტურბინის",
  "უბილავას",
  "უბინაშვილის",
  "უზნაძის",
  "უკლებას",
  "ულიანოვის",
  "ურიდიას",
  "ფაბრიციუსის",
  "ფაღავას",
  "ფერისცვალების",
  "ფიგნერის",
  "ფიზკულტურის",
  "ფიოლეტოვის",
  "ფიფიების",
  "ფოცხიშვილის",
  "ქართველიშვილის",
  "ქართლელიშვილის",
  "ქინქლაძის",
  "ქიქოძის",
  "ქსოვრელის",
  "ქუთათელაძის",
  "ქუთათელის",
  "ქურდიანის",
  "ღოღობერიძის",
  "ღუდუშაურის",
  "ყავლაშვილის",
  "ყაზბეგის",
  "ყარყარაშვილის",
  "ყიფიანის",
  "ყუშიტაშვილის",
  "შანიძის",
  "შარტავას",
  "შატილოვის",
  "შაუმიანის",
  "შენგელაიას",
  "შერვაშიძის",
  "შეროზიას",
  "შირშოვის",
  "შმიდტის",
  "შრომის",
  "შუშინის",
  "შჩორსის",
  "ჩალაუბნის",
  "ჩანტლაძის",
  "ჩაპაევის",
  "ჩაჩავას",
  "ჩელუსკინელების",
  "ჩერნიახოვსკის",
  "ჩერქეზიშვილი",
  "ჩერქეზიშვილის",
  "ჩვიდმეტი",
  "ჩიტაიას",
  "ჩიტაძის",
  "ჩიქვანაიას",
  "ჩიქობავას",
  "ჩიხლაძის",
  "ჩოდრიშვილის",
  "ჩოლოყაშვილის",
  "ჩუღურეთის",
  "ცაბაძის",
  "ცაგარელის",
  "ცეტკინის",
  "ცინცაძის",
  "ცისკარიშვილის",
  "ცურტაველის",
  "ცქიტიშვილის",
  "ცხაკაიას",
  "ძმობის",
  "ძნელაძის",
  "წერეთლის",
  "წითელი",
  "წითელწყაროს",
  "წინამძღვრიშვილის",
  "წულაძის",
  "წულუკიძის",
  "ჭაბუკიანის",
  "ჭავჭავაძის",
  "ჭანტურიას",
  "ჭოველიძის",
  "ჭონქაძის",
  "ჭყონდიდელის",
  "ხანძთელის",
  "ხვამლის",
  "ხვინგიას",
  "ხვიჩიას",
  "ხიმშიაშვილის",
  "ხმელნიცკის",
  "ხორნაბუჯის",
  "ხრამჰესის",
  "ხუციშვილის",
  "ჯავახიშვილის",
  "ჯაფარიძის",
  "ჯიბლაძის",
  "ჯორჯიაშვილის"
];

},{}],669:[function(require,module,exports){
module["exports"] = [
  "(+995 32) 2-##-##-##",
  "032-2-##-##-##",
  "032-2-######",
  "032-2-###-###",
  "032 2 ## ## ##",
  "032 2 ######",
  "2 ## ## ##",
  "2######",
  "2 ### ###"
];

},{}],670:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":669,"dup":256}],671:[function(require,module,exports){
arguments[4][177][0].apply(exports,arguments)
},{"./name":672,"./prefix":673,"./suffix":674,"dup":177}],672:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.first_name}",
  "#{prefix} #{Name.last_name}",
  "#{prefix} #{Name.last_name} #{suffix}",
  "#{prefix} #{Name.first_name} #{suffix}",
  "#{prefix} #{Name.last_name}-#{Name.last_name}"
];

},{}],673:[function(require,module,exports){
module["exports"] = [
  "შპს",
  "სს",
  "ააიპ",
  "სსიპ"
];

},{}],674:[function(require,module,exports){
module["exports"] = [
  "ჯგუფი",
  "და კომპანია",
  "სტუდია",
  "გრუპი"
];

},{}],675:[function(require,module,exports){
var ge = {};
module['exports'] = ge;
ge.title = "Georgian";
ge.separator = " და ";
ge.name = require("./name");
ge.address = require("./address");
ge.internet = require("./internet");
ge.company = require("./company");
ge.phone_number = require("./phone_number");
ge.cell_phone = require("./cell_phone");

},{"./address":662,"./cell_phone":670,"./company":671,"./internet":678,"./name":680,"./phone_number":686}],676:[function(require,module,exports){
module["exports"] = [
  "ge",
  "com",
  "net",
  "org",
  "com.ge",
  "org.ge"
];

},{}],677:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "posta.ge"
];

},{}],678:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":676,"./free_email":677,"dup":187}],679:[function(require,module,exports){
module["exports"] = [
  "აგული",
  "აგუნა",
  "ადოლა",
  "ავთანდილ",
  "ავთო",
  "აკაკი",
  "აკო",
  "ალეკო",
  "ალექსანდრე",
  "ალექსი",
  "ალიო",
  "ამირან",
  "ანა",
  "ანანო",
  "ანზორ",
  "ანნა",
  "ანუკა",
  "ანუკი",
  "არჩილ",
  "ასკილა",
  "ასლანაზ",
  "აჩიკო",
  "ბადრი",
  "ბაია",
  "ბარბარე",
  "ბაქარ",
  "ბაჩა",
  "ბაჩანა",
  "ბაჭუა",
  "ბაჭუკი",
  "ბახვა",
  "ბელა",
  "ბერა",
  "ბერდია",
  "ბესიკ",
  "ბესიკ",
  "ბესო",
  "ბექა",
  "ბიძინა",
  "ბიჭიკო",
  "ბოჩია",
  "ბოცო",
  "ბროლა",
  "ბუბუ",
  "ბუდუ",
  "ბუხუტი",
  "გაგა",
  "გაგი",
  "გახა",
  "გეგა",
  "გეგი",
  "გედია",
  "გელა",
  "გენადი",
  "გვადი",
  "გვანცა",
  "გვანჯი",
  "გვიტია",
  "გვრიტა",
  "გია",
  "გიგა",
  "გიგი",
  "გიგილო",
  "გიგლა",
  "გიგოლი",
  "გივი",
  "გივიკო",
  "გიორგი",
  "გოგი",
  "გოგიტა",
  "გოგიჩა",
  "გოგოთურ",
  "გოგოლა",
  "გოდერძი",
  "გოლა",
  "გოჩა",
  "გრიგოლ",
  "გუგა",
  "გუგუ",
  "გუგულა",
  "გუგული",
  "გუგუნა",
  "გუკა",
  "გულარისა",
  "გულვარდი",
  "გულვარდისა",
  "გულთამზე",
  "გულია",
  "გულიკო",
  "გულისა",
  "გულნარა",
  "გურამ",
  "დავით",
  "დალი",
  "დარეჯან",
  "დიანა",
  "დიმიტრი",
  "დოდო",
  "დუტუ",
  "ეთერ",
  "ეთო",
  "ეკა",
  "ეკატერინე",
  "ელგუჯა",
  "ელენა",
  "ელენე",
  "ელზა",
  "ელიკო",
  "ელისო",
  "ემზარ",
  "ეშხა",
  "ვალენტინა",
  "ვალერი",
  "ვანო",
  "ვაჟა",
  "ვაჟა",
  "ვარდო",
  "ვარსკვლავისა",
  "ვასიკო",
  "ვასილ",
  "ვატო",
  "ვახო",
  "ვახტანგ",
  "ვენერა",
  "ვერა",
  "ვერიკო",
  "ზაზა",
  "ზაირა",
  "ზაურ",
  "ზეზვა",
  "ზვიად",
  "ზინა",
  "ზოია",
  "ზუკა",
  "ზურა",
  "ზურაბ",
  "ზურია",
  "ზურიკო",
  "თაზო",
  "თათა",
  "თათია",
  "თათული",
  "თაია",
  "თაკო",
  "თალიკო",
  "თამაზ",
  "თამარ",
  "თამარა",
  "თამთა",
  "თამთიკე",
  "თამი",
  "თამილა",
  "თამრიკო",
  "თამრო",
  "თამუნა",
  "თამჩო",
  "თანანა",
  "თანდილა",
  "თაყა",
  "თეა",
  "თებრონე",
  "თეიმურაზ",
  "თემურ",
  "თენგიზ",
  "თენგო",
  "თეონა",
  "თიკა",
  "თიკო",
  "თიკუნა",
  "თინა",
  "თინათინ",
  "თინიკო",
  "თმაგიშერა",
  "თორნიკე",
  "თუთა",
  "თუთია",
  "ია",
  "იათამზე",
  "იამზე",
  "ივანე",
  "ივერი",
  "ივქირიონ",
  "იზოლდა",
  "ილია",
  "ილიკო",
  "იმედა",
  "ინგა",
  "იოსებ",
  "ირაკლი",
  "ირინა",
  "ირინე",
  "ირინკა",
  "ირმა",
  "იური",
  "კაკო",
  "კალე",
  "კატო",
  "კახა",
  "კახაბერ",
  "კეკელა",
  "კესანე",
  "კესო",
  "კვირია",
  "კიტა",
  "კობა",
  "კოკა",
  "კონსტანტინე",
  "კოსტა",
  "კოტე",
  "კუკური",
  "ლადო",
  "ლალი",
  "ლამაზა",
  "ლამარა",
  "ლამზირა",
  "ლაშა",
  "ლევან",
  "ლეილა",
  "ლელა",
  "ლენა",
  "ლერწამისა",
  "ლექსო",
  "ლია",
  "ლიანა",
  "ლიზა",
  "ლიზიკო",
  "ლილე",
  "ლილი",
  "ლილიკო",
  "ლომია",
  "ლუიზა",
  "მაგული",
  "მადონა",
  "მათიკო",
  "მაია",
  "მაიკო",
  "მაისა",
  "მაკა",
  "მაკო",
  "მაკუნა",
  "მალხაზ",
  "მამამზე",
  "მამია",
  "მამისა",
  "მამისთვალი",
  "მამისიმედი",
  "მამუკა",
  "მამულა",
  "მანანა",
  "მანჩო",
  "მარადი",
  "მარი",
  "მარია",
  "მარიამი",
  "მარიკა",
  "მარინა",
  "მარინე",
  "მარიტა",
  "მაყვალა",
  "მაყვალა",
  "მაშიკო",
  "მაშო",
  "მაცაცო",
  "მგელია",
  "მგელიკა",
  "მედეა",
  "მეკაშო",
  "მელანო",
  "მერაბ",
  "მერი",
  "მეტია",
  "მზაღო",
  "მზევინარ",
  "მზეთამზე",
  "მზეთვალა",
  "მზეონა",
  "მზექალა",
  "მზეხა",
  "მზეხათუნი",
  "მზია",
  "მზირა",
  "მზისადარ",
  "მზისთანადარი",
  "მზიულა",
  "მთვარისა",
  "მინდია",
  "მიშა",
  "მიშიკო",
  "მიხეილ",
  "მნათობი",
  "მნათობისა",
  "მოგელი",
  "მონავარდისა",
  "მურმან",
  "მუხრან",
  "ნაზი",
  "ნაზიკო",
  "ნათელა",
  "ნათია",
  "ნაირა",
  "ნანა",
  "ნანი",
  "ნანიკო",
  "ნანუკა",
  "ნანული",
  "ნარგიზი",
  "ნასყიდა",
  "ნატალია",
  "ნატო",
  "ნელი",
  "ნენე",
  "ნესტან",
  "ნია",
  "ნიაკო",
  "ნიკა",
  "ნიკოლოზ",
  "ნინა",
  "ნინაკა",
  "ნინი",
  "ნინიკო",
  "ნინო",
  "ნინუკა",
  "ნინუცა",
  "ნოდარ",
  "ნოდო",
  "ნონა",
  "ნორა",
  "ნუგზარ",
  "ნუგო",
  "ნუკა",
  "ნუკი",
  "ნუკრი",
  "ნუნუ",
  "ნუნუ",
  "ნუნუკა",
  "ნუცა",
  "ნუცი",
  "ოთარ",
  "ოთია",
  "ოთო",
  "ომარ",
  "ორბელ",
  "ოტია",
  "ოქროპირ",
  "პაატა",
  "პაპუნა",
  "პატარკაცი",
  "პატარქალი",
  "პეპელა",
  "პირვარდისა",
  "პირიმზე",
  "ჟამიერა",
  "ჟამიტა",
  "ჟამუტა",
  "ჟუჟუნა",
  "რამაზ",
  "რევაზ",
  "რეზი",
  "რეზო",
  "როზა",
  "რომან",
  "რუსკა",
  "რუსუდან",
  "საბა",
  "სალი",
  "სალომე",
  "სანათა",
  "სანდრო",
  "სერგო",
  "სესია",
  "სეხნია",
  "სვეტლანა",
  "სიხარულა",
  "სოსო",
  "სოფიკო",
  "სოფიო",
  "სოფო",
  "სულა",
  "სულიკო",
  "ტარიელ",
  "ტასიკო",
  "ტასო",
  "ტატიანა",
  "ტატო",
  "ტეტია",
  "ტურია",
  "უმანკო",
  "უტა",
  "უჩა",
  "ფაქიზო",
  "ფაცია",
  "ფეფელა",
  "ფეფენა",
  "ფეფიკო",
  "ფეფო",
  "ფოსო",
  "ფოფო",
  "ქაბატო",
  "ქავთარი",
  "ქალია",
  "ქართლოს",
  "ქეთათო",
  "ქეთევან",
  "ქეთი",
  "ქეთინო",
  "ქეთო",
  "ქველი",
  "ქიტესა",
  "ქიშვარდი",
  "ქობული",
  "ქრისტესია",
  "ქტისტეფორე",
  "ქურციკა",
  "ღარიბა",
  "ღვთისავარი",
  "ღვთისია",
  "ღვთისო",
  "ღვინია",
  "ღუღუნა",
  "ყაითამზა",
  "ყაყიტა",
  "ყვარყვარე",
  "ყიასა",
  "შაბური",
  "შაკო",
  "შალვა",
  "შალიკო",
  "შანშე",
  "შარია",
  "შაქარა",
  "შაქრო",
  "შოთა",
  "შორენა",
  "შოშია",
  "შუქია",
  "ჩიორა",
  "ჩიტო",
  "ჩიტო",
  "ჩოყოლა",
  "ცაგო",
  "ცაგული",
  "ცანგალა",
  "ცარო",
  "ცაცა",
  "ცაცო",
  "ციალა",
  "ციკო",
  "ცინარა",
  "ცირა",
  "ცისანა",
  "ცისია",
  "ცისკარა",
  "ცისკარი",
  "ცისმარა",
  "ცისმარი",
  "ციური",
  "ციცი",
  "ციცია",
  "ციცინო",
  "ცოტნე",
  "ცოქალა",
  "ცუცა",
  "ცხვარი",
  "ძაბული",
  "ძამისა",
  "ძაღინა",
  "ძიძია",
  "წათე",
  "წყალობა",
  "ჭაბუკა",
  "ჭიაბერ",
  "ჭიკჭიკა",
  "ჭიჭია",
  "ჭიჭიკო",
  "ჭოლა",
  "ხათუნა",
  "ხარება",
  "ხატია",
  "ხახულა",
  "ხახუტა",
  "ხეჩუა",
  "ხვიჩა",
  "ხიზანა",
  "ხირხელა",
  "ხობელასი",
  "ხოხია",
  "ხოხიტა",
  "ხუტა",
  "ხუცია",
  "ჯაბა",
  "ჯავახი",
  "ჯარჯი",
  "ჯემალ",
  "ჯონდო",
  "ჯოტო",
  "ჯუბი",
  "ჯულიეტა",
  "ჯუმბერ",
  "ჰამლეტ"
];

},{}],680:[function(require,module,exports){
arguments[4][637][0].apply(exports,arguments)
},{"./first_name":679,"./last_name":681,"./name":682,"./prefix":683,"./title":684,"dup":637}],681:[function(require,module,exports){
module["exports"] = [
  "აბაზაძე",
  "აბაშიძე",
  "აბრამაშვილი",
  "აბუსერიძე",
  "აბშილავა",
  "ავაზნელი",
  "ავალიშვილი",
  "ამილახვარი",
  "ანთაძე",
  "ასლამაზიშვილი",
  "ასპანიძე",
  "აშკარელი",
  "ახალბედაშვილი",
  "ახალკაცი",
  "ახვლედიანი",
  "ბარათაშვილი",
  "ბარდაველიძე",
  "ბახტაძე",
  "ბედიანიძე",
  "ბერიძე",
  "ბერუაშვილი",
  "ბეჟანიშვილი",
  "ბოგველიშვილი",
  "ბოტკოველი",
  "გაბრიჩიძე",
  "გაგნიძე",
  "გამრეკელი",
  "გელაშვილი",
  "გზირიშვილი",
  "გიგაური",
  "გურამიშვილი",
  "გურგენიძე",
  "დადიანი",
  "დავითიშვილი",
  "დათუაშვილი",
  "დარბაისელი",
  "დეკანოიძე",
  "დვალი",
  "დოლაბერიძე",
  "ედიშერაშვილი",
  "ელიზბარაშვილი",
  "ელიოზაშვილი",
  "ერისთავი",
  "ვარამაშვილი",
  "ვარდიაშვილი",
  "ვაჩნაძე",
  "ვარდანიძე",
  "ველიაშვილი",
  "ველიჯანაშვილი",
  "ზარანდია",
  "ზარიძე",
  "ზედგინიძე",
  "ზუბიაშვილი",
  "თაბაგარი",
  "თავდგირიძე",
  "თათარაშვილი",
  "თამაზაშვილი",
  "თამარაშვილი",
  "თაქთაქიშვილი",
  "თაყაიშვილი",
  "თბილელი",
  "თუხარელი",
  "იაშვილი",
  "იგითხანიშვილი",
  "ინასარიძე",
  "იშხნელი",
  "კანდელაკი",
  "კაცია",
  "კერესელიძე",
  "კვირიკაშვილი",
  "კიკნაძე",
  "კლდიაშვილი",
  "კოვზაძე",
  "კოპაძე",
  "კოპტონაშვილი",
  "კოშკელაშვილი",
  "ლაბაძე",
  "ლეკიშვილი",
  "ლიქოკელი",
  "ლოლაძე",
  "ლურსმანაშვილი",
  "მაისურაძე",
  "მარტოლეკი",
  "მაღალაძე",
  "მახარაშვილი",
  "მგალობლიშვილი",
  "მეგრელიშვილი",
  "მელაშვილი",
  "მელიქიძე",
  "მერაბიშვილი",
  "მეფარიშვილი",
  "მუჯირი",
  "მჭედლიძე",
  "მხეიძე",
  "ნათაძე",
  "ნაჭყებია",
  "ნოზაძე",
  "ოდიშვილი",
  "ონოფრიშვილი",
  "პარეხელაშვილი",
  "პეტრიაშვილი",
  "სააკაძე",
  "სააკაშვილი",
  "საგინაშვილი",
  "სადუნიშვილი",
  "საძაგლიშვილი",
  "სებისკვერიძე",
  "სეთური",
  "სუთიაშვილი",
  "სულაშვილი",
  "ტაბაღუა",
  "ტყეშელაშვილი",
  "ულუმბელაშვილი",
  "უნდილაძე",
  "ქავთარაძე",
  "ქართველიშვილი",
  "ყაზბეგი",
  "ყაუხჩიშვილი",
  "შავლაშვილი",
  "შალიკაშვილი",
  "შონია",
  "ჩიბუხაშვილი",
  "ჩიხრაძე",
  "ჩიქოვანი",
  "ჩუბინიძე",
  "ჩოლოყაშვილი",
  "ჩოხელი",
  "ჩხვიმიანი",
  "ცალუღელაშვილი",
  "ცაძიკიძე",
  "ციციშვილი",
  "ციხელაშვილი",
  "ციხისთავი",
  "ცხოვრებაძე",
  "ცხომარია",
  "წამალაიძე",
  "წერეთელი",
  "წიკლაური",
  "წიფურია",
  "ჭაბუკაშვილი",
  "ჭავჭავაძე",
  "ჭანტურია",
  "ჭარელიძე",
  "ჭიორელი",
  "ჭუმბურიძე",
  "ხაბაზი",
  "ხარაძე",
  "ხარატიშვილი",
  "ხარატასშვილი",
  "ხარისჭირაშვილი",
  "ხარხელაური",
  "ხაშმელაშვილი",
  "ხეთაგური",
  "ხიზამბარელი",
  "ხიზანიშვილი",
  "ხიმშიაშვილი",
  "ხოსრუაშვილი",
  "ხოჯივანიშვილი",
  "ხუციშვილი",
  "ჯაბადარი",
  "ჯავახი",
  "ჯავახიშვილი",
  "ჯანელიძე",
  "ჯაფარიძე",
  "ჯაყელი",
  "ჯაჯანიძე",
  "ჯვარელია",
  "ჯინიუზაშვილი",
  "ჯუღაშვილი"
];

},{}],682:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],683:[function(require,module,exports){
module["exports"] = [
  "ბ-ნი",
  "ბატონი",
  "ქ-ნი",
  "ქალბატონი"
];

},{}],684:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "გენერალური",
    "მთავარი",
    "სტაჟიორ",
    "უმცროსი",
    "ყოფილი",
    "წამყვანი"
  ],
  "level": [
    "აღრიცხვების",
    "ბრენდინგის",
    "ბრენიდს",
    "ბუღალტერიის",
    "განყოფილების",
    "გაყიდვების",
    "გუნდის",
    "დახმარების",
    "დიზაინის",
    "თავდაცვის",
    "ინფორმაციის",
    "კვლევების",
    "კომუნიკაციების",
    "მარკეტინგის",
    "ოპერაციათა",
    "ოპტიმიზაციების",
    "პიარ",
    "პროგრამის",
    "საქმეთა",
    "ტაქტიკური",
    "უსაფრთხოების",
    "ფინანსთა",
    "ქსელის",
    "ხარისხის",
    "ჯგუფის"
  ],
  "job": [
    "აგენტი",
    "ადვოკატი",
    "ადმინისტრატორი",
    "არქიტექტორი",
    "ასისტენტი",
    "აღმასრულებელი დირექტორი",
    "დეველოპერი",
    "დეკანი",
    "დიზაინერი",
    "დირექტორი",
    "ელექტრიკოსი",
    "ექსპერტი",
    "ინჟინერი",
    "იურისტი",
    "კონსტრუქტორი",
    "კონსულტანტი",
    "კოორდინატორი",
    "ლექტორი",
    "მასაჟისტი",
    "მემანქანე",
    "მენეჯერი",
    "მძღოლი",
    "მწვრთნელი",
    "ოპერატორი",
    "ოფიცერი",
    "პედაგოგი",
    "პოლიციელი",
    "პროგრამისტი",
    "პროდიუსერი",
    "პრორექტორი",
    "ჟურნალისტი",
    "რექტორი",
    "სპეციალისტი",
    "სტრატეგისტი",
    "ტექნიკოსი",
    "ფოტოგრაფი",
    "წარმომადგენელი"
  ]
};

},{}],685:[function(require,module,exports){
module["exports"] = [
  "5##-###-###",
  "5########",
  "5## ## ## ##",
  "5## ######",
  "5## ### ###",
  "995 5##-###-###",
  "995 5########",
  "995 5## ## ## ##",
  "995 5## ######",
  "995 5## ### ###",
  "+995 5##-###-###",
  "+995 5########",
  "+995 5## ## ## ##",
  "+995 5## ######",
  "+995 5## ### ###",
  "(+995) 5##-###-###",
  "(+995) 5########",
  "(+995) 5## ## ## ##",
  "(+995) 5## ######",
  "(+995) 5## ### ###"
];

},{}],686:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":685,"dup":197}],687:[function(require,module,exports){
module["exports"] = [  
  "##",
  "#"
];

},{}],688:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"dup":199}],689:[function(require,module,exports){
module["exports"] = [
  "Airmadidi",
  "Ampana",
  "Amurang",
  "Andolo",
  "Banggai",
  "Bantaeng",
  "Barru",
  "Bau-Bau",
  "Benteng",
  "Bitung",
  "Bolaang Uki",
  "Boroko",
  "Bulukumba",
  "Bungku",
  "Buol",
  "Buranga",
  "Donggala",
  "Enrekang",
  "Gorontalo",
  "Jeneponto",
  "Kawangkoan",
  "Kendari",
  "Kolaka",
  "Kotamobagu",
  "Kota Raha",
  "Kwandang",
  "Lasusua",
  "Luwuk",
  "Majene",
  "Makale",
  "Makassar",
  "Malili",
  "Mamasa",
  "Mamuju",
  "Manado",
  "Marisa",
  "Maros",
  "Masamba",
  "Melonguane",
  "Ondong Siau",
  "Palopo",
  "Palu",
  "Pangkajene",
  "Pare-Pare",
  "Parigi",
  "Pasangkayu",
  "Pinrang",
  "Polewali",
  "Poso",
  "Rantepao",
  "Ratahan",
  "Rumbia",
  "Sengkang",
  "Sidenreng",
  "Sigi Biromaru",
  "Sinjai",
  "Sunggu Minasa",
  "Suwawa",
  "Tahuna",
  "Takalar",
  "Tilamuta",
  "Toli Toli",
  "Tomohon",
  "Tondano",
  "Tutuyan",
  "Unaaha",
  "Wangi Wangi",
  "Wanggudu",
  "Watampone",
  "Watan Soppeng",
  "Ambarawa",
  "Anyer",
  "Bandung",
  "Bangil",
  "Banjar (Jawa Barat)",
  "Banjarnegara",
  "Bangkalan",
  "Bantul",
  "Banyumas",
  "Banyuwangi",
  "Batang",
  "Batu",
  "Bekasi",
  "Blitar",
  "Blora",
  "Bogor",
  "Bojonegoro",
  "Bondowoso",
  "Boyolali",
  "Bumiayu",
  "Brebes",
  "Caruban",
  "Cianjur",
  "Ciamis",
  "Cibinong",
  "Cikampek",
  "Cikarang",
  "Cilacap",
  "Cilegon",
  "Cirebon",
  "Demak",
  "Depok",
  "Garut",
  "Gresik",
  "Indramayu",
  "Jakarta",
  "Jember",
  "Jepara",
  "Jombang",
  "Kajen",
  "Karanganyar",
  "Kebumen",
  "Kediri",
  "Kendal",
  "Kepanjen",
  "Klaten",
  "Pelabuhan Ratu",
  "Kraksaan",
  "Kudus",
  "Kuningan",
  "Lamongan",
  "Lumajang",
  "Madiun",
  "Magelang",
  "Magetan",
  "Majalengka",
  "Malang",
  "Mojokerto",
  "Mojosari",
  "Mungkid",
  "Ngamprah",
  "Nganjuk",
  "Ngawi",
  "Pacitan",
  "Pamekasan",
  "Pandeglang",
  "Pare",
  "Pati",
  "Pasuruan",
  "Pekalongan",
  "Pemalang",
  "Ponorogo",
  "Probolinggo",
  "Purbalingga",
  "Purwakarta",
  "Purwodadi",
  "Purwokerto",
  "Purworejo",
  "Rangkasbitung",
  "Rembang",
  "Salatiga",
  "Sampang",
  "Semarang",
  "Serang",
  "Sidayu",
  "Sidoarjo",
  "Singaparna",
  "Situbondo",
  "Slawi",
  "Sleman",
  "Soreang",
  "Sragen",
  "Subang",
  "Sukabumi",
  "Sukoharjo",
  "Sumber",
  "Sumedang",
  "Sumenep",
  "Surabaya",
  "Surakarta",
  "Tasikmalaya",
  "Tangerang",
  "Tangerang Selatan",
  "Tegal",
  "Temanggung",
  "Tigaraksa",
  "Trenggalek",
  "Tuban",
  "Tulungagung",
  "Ungaran",
  "Wates",
  "Wlingi",
  "Wonogiri",
  "Wonosari",
  "Wonosobo",
  "Yogyakarta",
  "Atambua",
  "Baa",
  "Badung",
  "Bajawa",
  "Bangli",
  "Bima",
  "Denpasar",
  "Dompu",
  "Ende",
  "Gianyar",
  "Kalabahi",
  "Karangasem",
  "Kefamenanu",
  "Klungkung",
  "Kupang",
  "Labuhan Bajo",
  "Larantuka",
  "Lewoleba",
  "Maumere",
  "Mataram",
  "Mbay",
  "Negara",
  "Praya",
  "Raba",
  "Ruteng",
  "Selong",
  "Singaraja",
  "Soe",
  "Sumbawa Besar",
  "Tabanan",
  "Taliwang",
  "Tambolaka",
  "Tanjung",
  "Waibakul",
  "Waikabubak",
  "Waingapu",
  "Denpasar",
  "Negara,Bali",
  "Singaraja",
  "Tabanan",
  "Bangli"
];
},{}],690:[function(require,module,exports){
module["exports"] = [
  "Indonesia"
];

},{}],691:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.building_number = require("./building_number");
address.postcode = require("./postcode");
address.state = require("./state");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_prefix = require("./street_prefix");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":687,"./city":688,"./city_name":689,"./default_country":690,"./postcode":692,"./state":693,"./street_address":694,"./street_name":695,"./street_prefix":696}],692:[function(require,module,exports){
module["exports"] = [
  "#####"
];
},{}],693:[function(require,module,exports){
module["exports"] = [
  "Aceh",
  "Sumatera Utara",
  "Sumatera Barat",
  "Jambi",
  "Bangka Belitung",
  "Riau",
  "Kepulauan Riau",
  "Bengkulu",
  "Sumatera Selatan",
  "Lampung",
  "Banten",
  "DKI Jakarta",
  "Jawa Barat",
  "Jawa Tengah",
  "Jawa Timur",
  "Nusa Tenggara Timur",
  "DI Yogyakarta",
  "Bali",
  "Nusa Tenggara Barat",
  "Kalimantan Barat",
  "Kalimantan Tengah",
  "Kalimantan Selatan",
  "Kalimantan Timur",
  "Kalimantan Utara",
  "Sulawesi Selatan",
  "Sulawesi Utara",
  "Gorontalo",
  "Sulawesi Tengah",
  "Sulawesi Barat",
  "Sulawesi Tenggara",
  "Maluku",
  "Maluku Utara",
  "Papua Barat",
  "Papua"
];
},{}],694:[function(require,module,exports){
module["exports"] = [
  "#{street_name} no #{building_number}"
];
},{}],695:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{Name.first_name}",
  "#{street_prefix} #{Name.last_name}"
];
},{}],696:[function(require,module,exports){
module["exports"] = [
  "Ds.",
  "Dk.",
  "Gg.",
  "Jln.",
  "Jr.",
  "Kpg.",
  "Ki.",
  "Psr."
];
},{}],697:[function(require,module,exports){
arguments[4][177][0].apply(exports,arguments)
},{"./name":698,"./prefix":699,"./suffix":700,"dup":177}],698:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.last_name}",
  "#{Name.last_name} #{suffix}",
  "#{prefix} #{Name.last_name} #{suffix}"
];

},{}],699:[function(require,module,exports){
module["exports"] = [
  "PT",
  "CV",
  "UD",
  "PD",
  "Perum"
];
},{}],700:[function(require,module,exports){
module["exports"] = [
  "(Persero) Tbk",
  "Tbk"
];
},{}],701:[function(require,module,exports){
arguments[4][181][0].apply(exports,arguments)
},{"./month":702,"./weekday":703,"dup":181}],702:[function(require,module,exports){
module["exports"] = {
  wide: [
    "Januari",
    "Februari",
    "Maret",
    "April",
    "Mei",
    "Juni",
    "Juli",
    "Agustus",
    "September",
    "Oktober",
    "November",
    "Desember"
  ],
  wide_context: [
    "Januari",
    "Februari",
    "Maret",
    "April",
    "Mei",
    "Juni",
    "Juli",
    "Agustus",
    "September",
    "Oktober",
    "November",
    "Desember"
  ],
  abbr: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "Mei",
    "Jun",
    "Jul",
    "Ags",
    "Sep",
    "Okt",
    "Nov",
    "Des"
  ],
  abbr_context: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "Mei",
    "Jun",
    "Jul",
    "Ags",
    "Sep",
    "Okt",
    "Nov",
    "Des"
  ]
};

},{}],703:[function(require,module,exports){
module["exports"] = {
  wide: [
    "Minggu",
    "Senin",
    "Selasa",
    "Rabu",
    "Kamis",
    "Jumat",
    "Sabtu"
  ],
  wide_context: [
    "Minggu",
    "Senin",
    "Selasa",
    "Rabu",
    "Kamis",
    "Jumat",
    "Sabtu"
  ],
  abbr: [
    "Min",
    "Sen",
    "Sel",
    "Rab",
    "Kam",
    "Jum",
    "Sab"
  ],
  abbr_context: [
    "Min",
    "Sen",
    "Sel",
    "Rab",
    "Kam",
    "Jum",
    "Sab"
  ]
};

},{}],704:[function(require,module,exports){
var id = {};
module['exports'] = id;
id.title = "Indonesia";
id.address = require("./address");
id.company = require("./company");
id.internet = require("./internet");
id.date = require("./date");
id.name = require("./name");
id.phone_number = require("./phone_number");

},{"./address":691,"./company":697,"./date":701,"./internet":707,"./name":710,"./phone_number":717}],705:[function(require,module,exports){
module["exports"] = [
  "com",
  "net",
  "org",
  "asia",
  "tv",
  "biz",
  "info",
  "in",
  "name",
  "co",
  "ac.id",
  "sch.id",
  "go.id",
  "mil.id",
  "co.id",
  "or.id",
  "web.id",
  "my.id",
  "biz.id",
  "desa.id"
];
},{}],706:[function(require,module,exports){
module["exports"] = [
  'gmail.com',
  'yahoo.com',
  'gmail.co.id',
  'yahoo.co.id'
];
},{}],707:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":705,"./free_email":706,"dup":187}],708:[function(require,module,exports){
module["exports"] = [
  "Ade",
  "Agnes",
  "Ajeng",
  "Amalia",
  "Anita",
  "Ayu",
  "Aisyah",
  "Ana",
  "Ami",
  "Ani",
  "Azalea",
  "Aurora",
  "Alika",
  "Anastasia",
  "Amelia",
  "Almira",
  "Bella",
  "Betania",
  "Belinda",
  "Citra",
  "Cindy",
  "Chelsea",
  "Clara",
  "Cornelia",
  "Cinta",
  "Cinthia",
  "Ciaobella",
  "Cici",
  "Carla",
  "Calista",
  "Devi",
  "Dewi","Dian",
  "Diah",
  "Diana",
  "Dina",
  "Dinda",
  "Dalima",
  "Eka",
  "Eva",
  "Endah",
  "Elisa",
  "Eli",
  "Ella",
  "Ellis",
  "Elma",
  "Elvina",
  "Fitria",
  "Fitriani",
  "Febi",
  "Faizah",
  "Farah",
  "Farhunnisa",
  "Fathonah",
  "Gabriella",
  "Gasti",
  "Gawati",
  "Genta",
  "Ghaliyati",
  "Gina",
  "Gilda",
  "Halima",
  "Hesti",
  "Hilda",
  "Hafshah",
  "Hamima",
  "Hana",
  "Hani",
  "Hasna",
  "Humaira",
  "Ika",
  "Indah",
  "Intan",
  "Irma",
  "Icha",
  "Ida",
  "Ifa",
  "Ilsa",
  "Ina",
  "Ira",
  "Iriana",
  "Jamalia",
  "Janet",
  "Jane",
  "Julia",
  "Juli",
  "Jessica",
  "Jasmin",
  "Jelita",
  "Kamaria",
  "Kamila",
  "Kani",
  "Karen",
  "Karimah",
  "Kartika",
  "Kasiyah",
  "Keisha",
  "Kezia",
  "Kiandra",
  "Kayla",
  "Kania",
  "Lala",
  "Lalita",
  "Latika",
  "Laila",
  "Laras",
  "Lidya",
  "Lili",
  "Lintang",
  "Maria",
  "Mala",
  "Maya",
  "Maida",
  "Maimunah",
  "Melinda",
  "Mila",
  "Mutia",
  "Michelle",
  "Malika",
  "Nadia",
  "Nadine",
  "Nabila",
  "Natalia",
  "Novi",
  "Nova",
  "Nurul",
  "Nilam",
  "Najwa",
  "Olivia",
  "Ophelia",
  "Oni",
  "Oliva",
  "Padma",
  "Putri",
  "Paramita",
  "Paris",
  "Patricia",
  "Paulin",
  "Puput",
  "Puji",
  "Pia",
  "Puspa",
  "Puti",
  "Putri",
  "Padmi",
  "Qori",
  "Queen",
  "Ratih",
  "Ratna",
  "Restu",
  "Rini",
  "Rika",
  "Rina",
  "Rahayu",
  "Rahmi",
  "Rachel",
  "Rahmi",
  "Raisa",
  "Raina",
  "Sarah",
  "Sari",
  "Siti",
  "Siska",
  "Suci",
  "Syahrini",
  "Septi",
  "Sadina",
  "Safina",
  "Sakura",
  "Salimah",
  "Salwa",
  "Salsabila",
  "Samiah",
  "Shania",
  "Sabrina",
  "Silvia",
  "Shakila",
  "Talia",
  "Tami",
  "Tira",
  "Tiara",
  "Titin",
  "Tania",
  "Tina",
  "Tantri",
  "Tari",
  "Titi",
  "Uchita",
  "Unjani",
  "Ulya",
  "Uli",
  "Ulva",
  "Umi",
  "Usyi",
  "Vanya",
  "Vanesa",
  "Vivi",
  "Vera",
  "Vicky",
  "Victoria",
  "Violet",
  "Winda",
  "Widya",
  "Wulan",
  "Wirda",
  "Wani",
  "Yani",
  "Yessi",
  "Yulia",
  "Yuliana",
  "Yuni",
  "Yunita",
  "Yance",
  "Zahra",
  "Zalindra",
  "Zaenab",
  "Zulfa",
  "Zizi",
  "Zulaikha",
  "Zamira",
  "Zelda",
  "Zelaya"
];
},{}],709:[function(require,module,exports){
module["exports"] = [
  "Agustina",
  "Andriani",
  "Anggraini",
  "Aryani",
  "Astuti",
  "Fujiati",
  "Farida",
  "Handayani",
  "Hassanah",
  "Hartati",
  "Hasanah",
  "Haryanti",
  "Hariyah",
  "Hastuti",
  "Halimah",
  "Kusmawati",
  "Kuswandari",
  "Laksmiwati",
  "Laksita",
  "Lestari",
  "Lailasari",
  "Mandasari",
  "Mardhiyah",
  "Mayasari",
  "Melani",
  "Mulyani",
  "Maryati",
  "Nurdiyanti",
  "Novitasari",
  "Nuraini",
  "Nasyidah",
  "Nasyiah",
  "Namaga",
  "Palastri",
  "Pudjiastuti",
  "Puspasari",
  "Puspita",
  "Purwanti",
  "Pratiwi",
  "Purnawati",
  "Pertiwi",
  "Permata",
  "Prastuti",
  "Padmasari",
  "Rahmawati",
  "Rahayu",
  "Riyanti",
  "Rahimah",
  "Suartini",
  "Sudiati",
  "Suryatmi",
  "Susanti",
  "Safitri",
  "Oktaviani",
  "Utami",
  "Usamah",
  "Usada",
  "Uyainah",
  "Yuniar",
  "Yuliarti",
  "Yulianti",
  "Yolanda",
  "Wahyuni",
  "Wijayanti",
  "Widiastuti",
  "Winarsih",
  "Wulandari",
  "Wastuti",
  "Zulaika"
];
},{}],710:[function(require,module,exports){
arguments[4][190][0].apply(exports,arguments)
},{"./female_first_name":708,"./female_last_name":709,"./male_first_name":711,"./male_last_name":712,"./name":713,"./prefix":714,"./suffix":715,"dup":190}],711:[function(require,module,exports){
module["exports"] = [
  "Abyasa",
  "Ade",
  "Adhiarja",
  "Adiarja",
  "Adika",
  "Adikara",
  "Adinata",
  "Aditya",
  "Agus",
  "Ajiman",
  "Ajimat",
  "Ajimin",
  "Ajiono",
  "Akarsana",
  "Alambana",
  "Among",
  "Anggabaya",
  "Anom",
  "Argono",
  "Aris",
  "Arta",
  "Artanto",
  "Artawan",
  "Arsipatra",
  "Asirwada",
  "Asirwanda",
  "Aslijan",
  "Asmadi",
  "Asman",
  "Asmianto",
  "Asmuni",
  "Aswani",
  "Atma",
  "Atmaja",
  "Bagas",
  "Bagiya",
  "Bagus",
  "Bagya",
  "Bahuraksa",
  "Bahuwarna",
  "Bahuwirya",
  "Bajragin",
  "Bakda",
  "Bakiadi",
  "Bakianto",
  "Bakidin",
  "Bakijan",
  "Bakiman",
  "Bakiono",
  "Bakti",
  "Baktiadi",
  "Baktianto",
  "Baktiono",
  "Bala",
  "Balamantri",
  "Balangga",
  "Balapati",
  "Balidin",
  "Balijan",
  "Bambang",
  "Banara",
  "Banawa",
  "Banawi",
  "Bancar",
  "Budi",
  "Cagak",
  "Cager",
  "Cahyadi",
  "Cahyanto",
  "Cahya",
  "Cahyo",
  "Cahyono",
  "Caket",
  "Cakrabirawa",
  "Cakrabuana",
  "Cakrajiya",
  "Cakrawala",
  "Cakrawangsa",
  "Candra",
  "Chandra",
  "Candrakanta",
  "Capa",
  "Caraka",
  "Carub",
  "Catur",
  "Caturangga",
  "Cawisadi",
  "Cawisono",
  "Cawuk",
  "Cayadi",
  "Cecep",
  "Cemani",
  "Cemeti",
  "Cemplunk",
  "Cengkal",
  "Cengkir",
  "Dacin",
  "Dadap",
  "Dadi",
  "Dagel",
  "Daliman",
  "Dalimin",
  "Daliono",
  "Damar",
  "Damu",
  "Danang",
  "Daniswara",
  "Danu",
  "Danuja",
  "Dariati",
  "Darijan",
  "Darimin",
  "Darmaji",
  "Darman",
  "Darmana",
  "Darmanto",
  "Darsirah",
  "Dartono",
  "Daru",
  "Daruna",
  "Daryani",
  "Dasa",
  "Digdaya",
  "Dimas",
  "Dimaz",
  "Dipa",
  "Dirja",
  "Drajat",
  "Dwi",
  "Dono",
  "Dodo",
  "Edi",
  "Eka",
  "Elon",
  "Eluh",
  "Eman",
  "Emas",
  "Embuh",
  "Emong",
  "Empluk",
  "Endra",
  "Enteng",
  "Estiawan",
  "Estiono",
  "Eko",
  "Edi",
  "Edison",
  "Edward",
  "Elvin",
  "Erik",
  "Emil",
  "Ega",
  "Emin",
  "Eja",
  "Gada",
  "Gadang",
  "Gaduh",
  "Gaiman",
  "Galak",
  "Galang",
  "Galar",
  "Galih",
  "Galiono",
  "Galuh",
  "Galur",
  "Gaman",
  "Gamani",
  "Gamanto",
  "Gambira",
  "Gamblang",
  "Ganda",
  "Gandewa",
  "Gandi",
  "Gandi",
  "Ganep",
  "Gangsa",
  "Gangsar",
  "Ganjaran",
  "Gantar",
  "Gara",
  "Garan",
  "Garang",
  "Garda",
  "Gatot",
  "Gatra",
  "Gilang",
  "Galih",
  "Ghani",
  "Gading",
  "Hairyanto",
  "Hardana",
  "Hardi",
  "Harimurti",
  "Harja",
  "Harjasa",
  "Harjaya",
  "Harjo",
  "Harsana",
  "Harsanto",
  "Harsaya",
  "Hartaka",
  "Hartana",
  "Harto",
  "Hasta",
  "Heru",
  "Himawan",
  "Hadi",
  "Halim",
  "Hasim",
  "Hasan",
  "Hendra",
  "Hendri",
  "Heryanto",
  "Hamzah",
  "Hari",
  "Imam",
  "Indra",
  "Irwan",
  "Irsad",
  "Ikhsan",
  "Irfan",
  "Ian",
  "Ibrahim",
  "Ibrani",
  "Ismail",
  "Irnanto",
  "Ilyas",
  "Ibun",
  "Ivan",
  "Ikin",
  "Ihsan",
  "Jabal",
  "Jaeman",
  "Jaga",
  "Jagapati",
  "Jagaraga",
  "Jail",
  "Jaiman",
  "Jaka",
  "Jarwa",
  "Jarwadi",
  "Jarwi",
  "Jasmani",
  "Jaswadi",
  "Jati",
  "Jatmiko",
  "Jaya",
  "Jayadi",
  "Jayeng",
  "Jinawi",
  "Jindra",
  "Joko",
  "Jumadi",
  "Jumari",
  "Jamal",
  "Jamil",
  "Jais",
  "Jefri",
  "Johan",
  "Jono",
  "Kacung",
  "Kajen",
  "Kambali",
  "Kamidin",
  "Kariman",
  "Karja",
  "Karma",
  "Karman",
  "Karna",
  "Karsa",
  "Karsana",
  "Karta",
  "Kasiran",
  "Kasusra",
  "Kawaca",
  "Kawaya",
  "Kayun",
  "Kemba",
  "Kenari",
  "Kenes",
  "Kuncara",
  "Kunthara",
  "Kusuma",
  "Kadir",
  "Kala",
  "Kalim",
  "Kurnia",
  "Kanda",
  "Kardi",
  "Karya",
  "Kasim",
  "Kairav",
  "Kenzie",
  "Kemal",
  "Kamal",
  "Koko",
  "Labuh",
  "Laksana",
  "Lamar",
  "Lanang",
  "Langgeng",
  "Lanjar",
  "Lantar",
  "Lega",
  "Legawa",
  "Lembah",
  "Liman",
  "Limar",
  "Luhung",
  "Lukita",
  "Luluh",
  "Lulut",
  "Lurhur",
  "Luwar",
  "Luwes",
  "Latif",
  "Lasmanto",
  "Lukman",
  "Luthfi",
  "Leo",
  "Luis",
  "Lutfan",
  "Lasmono",
  "Laswi",
  "Mahesa",
  "Makara",
  "Makuta",
  "Manah",
  "Maras",
  "Margana",
  "Mariadi",
  "Marsudi",
  "Martaka",
  "Martana",
  "Martani",
  "Marwata",
  "Maryadi",
  "Maryanto",
  "Mitra",
  "Mujur",
  "Mulya",
  "Mulyanto",
  "Mulyono",
  "Mumpuni",
  "Muni",
  "Mursita",
  "Murti",
  "Mustika",
  "Maman",
  "Mahmud",
  "Mahdi",
  "Mahfud",
  "Malik",
  "Muhammad",
  "Mustofa",
  "Marsito",
  "Mursinin",
  "Nalar",
  "Naradi",
  "Nardi",
  "Niyaga",
  "Nrima",
  "Nugraha",
  "Nyana",
  "Narji",
  "Nasab",
  "Nasrullah",
  "Nasim",
  "Najib",
  "Najam",
  "Nyoman",
  "Olga",
  "Ozy",
  "Omar",
  "Opan",
  "Oskar",
  "Oman",
  "Okto",
  "Okta",
  "Opung",
  "Paiman",
  "Panca",
  "Pangeran",
  "Pangestu",
  "Pardi",
  "Parman",
  "Perkasa",
  "Praba",
  "Prabu",
  "Prabawa",
  "Prabowo",
  "Prakosa",
  "Pranata",
  "Pranawa",
  "Prasetya",
  "Prasetyo",
  "Prayitna",
  "Prayoga",
  "Prayogo",
  "Purwadi",
  "Purwa",
  "Purwanto",
  "Panji",
  "Pandu",
  "Paiman",
  "Prima",
  "Putu",
  "Raden",
  "Raditya",
  "Raharja",
  "Rama",
  "Rangga",
  "Reksa",
  "Respati",
  "Rusman",
  "Rosman",
  "Rahmat",
  "Rahman",
  "Rendy",
  "Reza",
  "Rizki",
  "Ridwan",
  "Rudi",
  "Raden",
  "Radit",
  "Radika",
  "Rafi",
  "Rafid",
  "Raihan",
  "Salman",
  "Saadat",
  "Saiful",
  "Surya",
  "Slamet",
  "Samsul",
  "Soleh",
  "Simon",
  "Sabar",
  "Sabri",
  "Sidiq",
  "Satya",
  "Setya",
  "Saka",
  "Sakti",
  "Taswir",
  "Tedi",
  "Teddy",
  "Taufan",
  "Taufik",
  "Tomi",
  "Tasnim",
  "Teguh",
  "Tasdik",
  "Timbul",
  "Tirta",
  "Tirtayasa",
  "Tri",
  "Tugiman",
  "Umar",
  "Usman",
  "Uda",
  "Umay",
  "Unggul",
  "Utama",
  "Umaya",
  "Upik",
  "Viktor",
  "Vino",
  "Vinsen",
  "Vero",
  "Vega",
  "Viman",
  "Virman",
  "Wahyu",
  "Wira",
  "Wisnu",
  "Wadi",
  "Wardi",
  "Warji",
  "Waluyo",
  "Wakiman",
  "Wage",
  "Wardaya",
  "Warsa",
  "Warsita",
  "Warta",
  "Wasis",
  "Wawan",
  "Xanana",
  "Yahya",
  "Yusuf",
  "Yosef",
  "Yono",
  "Yoga"
];
},{}],712:[function(require,module,exports){
module["exports"] = [
  "Adriansyah",
  "Ardianto",
  "Anggriawan",
  "Budiman",
  "Budiyanto",
  "Damanik",
  "Dongoran",
  "Dabukke",
  "Firmansyah",
  "Firgantoro",
  "Gunarto",
  "Gunawan",
  "Hardiansyah",
  "Habibi",
  "Hakim",
  "Halim",
  "Haryanto",
  "Hidayat",
  "Hidayanto",
  "Hutagalung",
  "Hutapea",
  "Hutasoit",
  "Irawan",
  "Iswahyudi",
  "Kuswoyo",
  "Januar",
  "Jailani",
  "Kurniawan",
  "Kusumo",
  "Latupono",
  "Lazuardi",
  "Maheswara",
  "Mahendra",
  "Mustofa",
  "Mansur",
  "Mandala",
  "Megantara",
  "Maulana",
  "Maryadi",
  "Mangunsong",
  "Manullang",
  "Marpaung",
  "Marbun",
  "Narpati",
  "Natsir",
  "Nugroho",
  "Najmudin",
  "Nashiruddin",
  "Nainggolan",
  "Nababan",
  "Napitupulu",
  "Pangestu",
  "Putra",
  "Pranowo",
  "Prabowo",
  "Pratama",
  "Prasetya",
  "Prasetyo",
  "Pradana",
  "Pradipta",
  "Prakasa",
  "Permadi",
  "Prasasta",
  "Prayoga",
  "Ramadan",
  "Rajasa",
  "Rajata",
  "Saptono",
  "Santoso",
  "Saputra",
  "Saefullah",
  "Setiawan",
  "Suryono",
  "Suwarno",
  "Siregar",
  "Sihombing",
  "Salahudin",
  "Sihombing",
  "Samosir",
  "Saragih",
  "Sihotang",
  "Simanjuntak",
  "Sinaga",
  "Simbolon",
  "Sitompul",
  "Sitorus",
  "Sirait",
  "Siregar",
  "Situmorang",
  "Tampubolon",
  "Thamrin",
  "Tamba",
  "Tarihoran",
  "Utama",
  "Uwais",
  "Wahyudin",
  "Waluyo",
  "Wibowo",
  "Winarno",
  "Wibisono",
  "Wijaya",
  "Widodo",
  "Wacana",
  "Waskita",
  "Wasita",
  "Zulkarnain"
];
},{}],713:[function(require,module,exports){
module["exports"] = [
  "#{male_first_name} #{male_last_name}",
  "#{male_last_name} #{male_first_name}",
  "#{male_first_name} #{male_first_name} #{male_last_name}",
  "#{female_first_name} #{female_last_name}",
  "#{female_first_name} #{male_last_name}",
  "#{female_last_name} #{female_first_name}",
  "#{female_first_name} #{female_first_name} #{female_last_name}"
];

},{}],714:[function(require,module,exports){
module["exports"] = [];
},{}],715:[function(require,module,exports){
module["exports"] = [
  "S.Ked",
  "S.Gz",
  "S.Pt",
  "S.IP",
  "S.E.I",
  "S.E.",
  "S.Kom",
  "S.H.",
  "S.T.",
  "S.Pd",
  "S.Psi",
  "S.I.Kom",
  "S.Sos",
  "S.Farm",
  "M.M.",
  "M.Kom.",
  "M.TI.",
  "M.Pd",
  "M.Farm",
  "M.Ak"
];
},{}],716:[function(require,module,exports){
module["exports"] = [
  "02# #### ###",
  "02## #### ###",
  "03## #### ###",
  "04## #### ###",
  "05## #### ###",
  "06## #### ###",
  "07## #### ###",
  "09## #### ###",
  "02# #### ####",
  "02## #### ####",
  "03## #### ####",
  "04## #### ####",
  "05## #### ####",
  "06## #### ####",
  "07## #### ####",
  "09## #### ####",
  "08## ### ###",
  "08## #### ###",
  "08## #### ####",
  "(+62) 8## ### ###",
  "(+62) 2# #### ###",
  "(+62) 2## #### ###",
  "(+62) 3## #### ###",
  "(+62) 4## #### ###",
  "(+62) 5## #### ###",
  "(+62) 6## #### ###",
  "(+62) 7## #### ###",
  "(+62) 8## #### ###",
  "(+62) 9## #### ###",
  "(+62) 2# #### ####",
  "(+62) 2## #### ####",
  "(+62) 3## #### ####",
  "(+62) 4## #### ####",
  "(+62) 5## #### ####",
  "(+62) 6## #### ####",
  "(+62) 7## #### ####",
  "(+62) 8## #### ####",
  "(+62) 9## #### ####"
];
},{}],717:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":716,"dup":197}],718:[function(require,module,exports){
arguments[4][655][0].apply(exports,arguments)
},{"dup":655}],719:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix} #{Name.first_name} #{city_suffix}",
  "#{city_prefix} #{Name.first_name}",
  "#{Name.first_name} #{city_suffix}",
  "#{Name.last_name} #{city_suffix}"
];

},{}],720:[function(require,module,exports){
module["exports"] = [
  "San",
  "Borgo",
  "Sesto",
  "Quarto",
  "Settimo"
];

},{}],721:[function(require,module,exports){
module["exports"] = [
  "a mare",
  "lido",
  "ligure",
  "del friuli",
  "salentino",
  "calabro",
  "veneto",
  "nell'emilia",
  "umbro",
  "laziale",
  "terme",
  "sardo"
];

},{}],722:[function(require,module,exports){
module["exports"] = [
  "Afghanistan",
  "Albania",
  "Algeria",
  "American Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antartide (territori a sud del 60° parallelo)",
  "Antigua e Barbuda",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbaijan",
  "Bahamas",
  "Bahrain",
  "Bangladesh",
  "Barbados",
  "Bielorussia",
  "Belgio",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivia",
  "Bosnia e Herzegovina",
  "Botswana",
  "Bouvet Island (Bouvetoya)",
  "Brasile",
  "Territorio dell'arcipelago indiano",
  "Isole Vergini Britanniche",
  "Brunei Darussalam",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Cambogia",
  "Cameroon",
  "Canada",
  "Capo Verde",
  "Isole Cayman",
  "Repubblica Centrale Africana",
  "Chad",
  "Cile",
  "Cina",
  "Isola di Pasqua",
  "Isola di Cocos (Keeling)",
  "Colombia",
  "Comoros",
  "Congo",
  "Isole Cook",
  "Costa Rica",
  "Costa d'Avorio",
  "Croazia",
  "Cuba",
  "Cipro",
  "Repubblica Ceca",
  "Danimarca",
  "Gibuti",
  "Repubblica Dominicana",
  "Equador",
  "Egitto",
  "El Salvador",
  "Guinea Equatoriale",
  "Eritrea",
  "Estonia",
  "Etiopia",
  "Isole Faroe",
  "Isole Falkland (Malvinas)",
  "Fiji",
  "Finlandia",
  "Francia",
  "Guyana Francese",
  "Polinesia Francese",
  "Territori Francesi del sud",
  "Gabon",
  "Gambia",
  "Georgia",
  "Germania",
  "Ghana",
  "Gibilterra",
  "Grecia",
  "Groenlandia",
  "Grenada",
  "Guadalupa",
  "Guam",
  "Guatemala",
  "Guernsey",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Heard Island and McDonald Islands",
  "Città del Vaticano",
  "Honduras",
  "Hong Kong",
  "Ungheria",
  "Islanda",
  "India",
  "Indonesia",
  "Iran",
  "Iraq",
  "Irlanda",
  "Isola di Man",
  "Israele",
  "Italia",
  "Giamaica",
  "Giappone",
  "Jersey",
  "Giordania",
  "Kazakhstan",
  "Kenya",
  "Kiribati",
  "Korea",
  "Kuwait",
  "Republicca Kirgiza",
  "Repubblica del Laos",
  "Latvia",
  "Libano",
  "Lesotho",
  "Liberia",
  "Libyan Arab Jamahiriya",
  "Liechtenstein",
  "Lituania",
  "Lussemburgo",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malesia",
  "Maldive",
  "Mali",
  "Malta",
  "Isole Marshall",
  "Martinica",
  "Mauritania",
  "Mauritius",
  "Mayotte",
  "Messico",
  "Micronesia",
  "Moldova",
  "Principato di Monaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Marocco",
  "Mozambico",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Antille Olandesi",
  "Olanda",
  "Nuova Caledonia",
  "Nuova Zelanda",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Niue",
  "Isole Norfolk",
  "Northern Mariana Islands",
  "Norvegia",
  "Oman",
  "Pakistan",
  "Palau",
  "Palestina",
  "Panama",
  "Papua Nuova Guinea",
  "Paraguay",
  "Peru",
  "Filippine",
  "Pitcairn Islands",
  "Polonia",
  "Portogallo",
  "Porto Rico",
  "Qatar",
  "Reunion",
  "Romania",
  "Russia",
  "Rwanda",
  "San Bartolomeo",
  "Sant'Elena",
  "Saint Kitts and Nevis",
  "Saint Lucia",
  "Saint Martin",
  "Saint Pierre and Miquelon",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tome and Principe",
  "Arabia Saudita",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leone",
  "Singapore",
  "Slovenia",
  "Isole Solomon",
  "Somalia",
  "Sud Africa",
  "Georgia del sud e South Sandwich Islands",
  "Spagna",
  "Sri Lanka",
  "Sudan",
  "Suriname",
  "Svalbard & Jan Mayen Islands",
  "Swaziland",
  "Svezia",
  "Svizzera",
  "Siria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Tailandia",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad e Tobago",
  "Tunisia",
  "Turchia",
  "Turkmenistan",
  "Isole di Turks and Caicos",
  "Tuvalu",
  "Uganda",
  "Ucraina",
  "Emirati Arabi Uniti",
  "Regno Unito",
  "Stati Uniti d'America",
  "United States Minor Outlying Islands",
  "Isole Vergini Statunitensi",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Wallis and Futuna",
  "Western Sahara",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],723:[function(require,module,exports){
module["exports"] = [
  "Italia"
];

},{}],724:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":718,"./city":719,"./city_prefix":720,"./city_suffix":721,"./country":722,"./default_country":723,"./postcode":725,"./secondary_address":726,"./state":727,"./state_abbr":728,"./street_address":729,"./street_name":730,"./street_suffix":731}],725:[function(require,module,exports){
arguments[4][523][0].apply(exports,arguments)
},{"dup":523}],726:[function(require,module,exports){
module["exports"] = [
  "Appartamento ##",
  "Piano #"
];

},{}],727:[function(require,module,exports){
module["exports"] = [
  "Agrigento",
  "Alessandria",
  "Ancona",
  "Aosta",
  "Arezzo",
  "Ascoli Piceno",
  "Asti",
  "Avellino",
  "Bari",
  "Barletta-Andria-Trani",
  "Belluno",
  "Benevento",
  "Bergamo",
  "Biella",
  "Bologna",
  "Bolzano",
  "Brescia",
  "Brindisi",
  "Cagliari",
  "Caltanissetta",
  "Campobasso",
  "Carbonia-Iglesias",
  "Caserta",
  "Catania",
  "Catanzaro",
  "Chieti",
  "Como",
  "Cosenza",
  "Cremona",
  "Crotone",
  "Cuneo",
  "Enna",
  "Fermo",
  "Ferrara",
  "Firenze",
  "Foggia",
  "Forlì-Cesena",
  "Frosinone",
  "Genova",
  "Gorizia",
  "Grosseto",
  "Imperia",
  "Isernia",
  "La Spezia",
  "L'Aquila",
  "Latina",
  "Lecce",
  "Lecco",
  "Livorno",
  "Lodi",
  "Lucca",
  "Macerata",
  "Mantova",
  "Massa-Carrara",
  "Matera",
  "Messina",
  "Milano",
  "Modena",
  "Monza e della Brianza",
  "Napoli",
  "Novara",
  "Nuoro",
  "Olbia-Tempio",
  "Oristano",
  "Padova",
  "Palermo",
  "Parma",
  "Pavia",
  "Perugia",
  "Pesaro e Urbino",
  "Pescara",
  "Piacenza",
  "Pisa",
  "Pistoia",
  "Pordenone",
  "Potenza",
  "Prato",
  "Ragusa",
  "Ravenna",
  "Reggio Calabria",
  "Reggio Emilia",
  "Rieti",
  "Rimini",
  "Roma",
  "Rovigo",
  "Salerno",
  "Medio Campidano",
  "Sassari",
  "Savona",
  "Siena",
  "Siracusa",
  "Sondrio",
  "Taranto",
  "Teramo",
  "Terni",
  "Torino",
  "Ogliastra",
  "Trapani",
  "Trento",
  "Treviso",
  "Trieste",
  "Udine",
  "Varese",
  "Venezia",
  "Verbano-Cusio-Ossola",
  "Vercelli",
  "Verona",
  "Vibo Valentia",
  "Vicenza",
  "Viterbo"
];

},{}],728:[function(require,module,exports){
module["exports"] = [
  "AG",
  "AL",
  "AN",
  "AO",
  "AR",
  "AP",
  "AT",
  "AV",
  "BA",
  "BT",
  "BL",
  "BN",
  "BG",
  "BI",
  "BO",
  "BZ",
  "BS",
  "BR",
  "CA",
  "CL",
  "CB",
  "CI",
  "CE",
  "CT",
  "CZ",
  "CH",
  "CO",
  "CS",
  "CR",
  "KR",
  "CN",
  "EN",
  "FM",
  "FE",
  "FI",
  "FG",
  "FC",
  "FR",
  "GE",
  "GO",
  "GR",
  "IM",
  "IS",
  "SP",
  "AQ",
  "LT",
  "LE",
  "LC",
  "LI",
  "LO",
  "LU",
  "MC",
  "MN",
  "MS",
  "MT",
  "ME",
  "MI",
  "MO",
  "MB",
  "NA",
  "NO",
  "NU",
  "OT",
  "OR",
  "PD",
  "PA",
  "PR",
  "PV",
  "PG",
  "PU",
  "PE",
  "PC",
  "PI",
  "PT",
  "PN",
  "PZ",
  "PO",
  "RG",
  "RA",
  "RC",
  "RE",
  "RI",
  "RN",
  "RM",
  "RO",
  "SA",
  "VS",
  "SS",
  "SV",
  "SI",
  "SR",
  "SO",
  "TA",
  "TE",
  "TR",
  "TO",
  "OG",
  "TP",
  "TN",
  "TV",
  "TS",
  "UD",
  "VA",
  "VE",
  "VB",
  "VC",
  "VR",
  "VV",
  "VI",
  "VT"
];

},{}],729:[function(require,module,exports){
module["exports"] = [
  "#{street_name} #{building_number}",
  "#{street_name} #{building_number}, #{secondary_address}"
];

},{}],730:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Name.first_name}",
  "#{street_suffix} #{Name.last_name}"
];

},{}],731:[function(require,module,exports){
module["exports"] = [
  "Piazza",
  "Strada",
  "Via",
  "Borgo",
  "Contrada",
  "Rotonda",
  "Incrocio"
];

},{}],732:[function(require,module,exports){
module["exports"] = [
  "24 ore",
  "24/7",
  "terza generazione",
  "quarta generazione",
  "quinta generazione",
  "sesta generazione",
  "asimmetrica",
  "asincrona",
  "background",
  "bi-direzionale",
  "biforcata",
  "bottom-line",
  "coerente",
  "coesiva",
  "composita",
  "sensibile al contesto",
  "basta sul contesto",
  "basata sul contenuto",
  "dedicata",
  "didattica",
  "direzionale",
  "discreta",
  "dinamica",
  "eco-centrica",
  "esecutiva",
  "esplicita",
  "full-range",
  "globale",
  "euristica",
  "alto livello",
  "olistica",
  "omogenea",
  "ibrida",
  "impattante",
  "incrementale",
  "intangibile",
  "interattiva",
  "intermediaria",
  "locale",
  "logistica",
  "massimizzata",
  "metodica",
  "mission-critical",
  "mobile",
  "modulare",
  "motivazionale",
  "multimedia",
  "multi-tasking",
  "nazionale",
  "neutrale",
  "nextgeneration",
  "non-volatile",
  "object-oriented",
  "ottima",
  "ottimizzante",
  "radicale",
  "real-time",
  "reciproca",
  "regionale",
  "responsiva",
  "scalabile",
  "secondaria",
  "stabile",
  "statica",
  "sistematica",
  "sistemica",
  "tangibile",
  "terziaria",
  "uniforme",
  "valore aggiunto"
];

},{}],733:[function(require,module,exports){
module["exports"] = [
  "valore aggiunto",
  "verticalizzate",
  "proattive",
  "forti",
  "rivoluzionari",
  "scalabili",
  "innovativi",
  "intuitivi",
  "strategici",
  "e-business",
  "mission-critical",
  "24/7",
  "globali",
  "B2B",
  "B2C",
  "granulari",
  "virtuali",
  "virali",
  "dinamiche",
  "magnetiche",
  "web",
  "interattive",
  "sexy",
  "back-end",
  "real-time",
  "efficienti",
  "front-end",
  "distributivi",
  "estensibili",
  "mondiali",
  "open-source",
  "cross-platform",
  "sinergiche",
  "out-of-the-box",
  "enterprise",
  "integrate",
  "di impatto",
  "wireless",
  "trasparenti",
  "next-generation",
  "cutting-edge",
  "visionari",
  "plug-and-play",
  "collaborative",
  "olistiche",
  "ricche"
];

},{}],734:[function(require,module,exports){
module["exports"] = [
  "partnerships",
  "comunità",
  "ROI",
  "soluzioni",
  "e-services",
  "nicchie",
  "tecnologie",
  "contenuti",
  "supply-chains",
  "convergenze",
  "relazioni",
  "architetture",
  "interfacce",
  "mercati",
  "e-commerce",
  "sistemi",
  "modelli",
  "schemi",
  "reti",
  "applicazioni",
  "metriche",
  "e-business",
  "funzionalità",
  "esperienze",
  "webservices",
  "metodologie"
];

},{}],735:[function(require,module,exports){
module["exports"] = [
  "implementate",
  "utilizzo",
  "integrate",
  "ottimali",
  "evolutive",
  "abilitate",
  "reinventate",
  "aggregate",
  "migliorate",
  "incentivate",
  "monetizzate",
  "sinergizzate",
  "strategiche",
  "deploy",
  "marchi",
  "accrescitive",
  "target",
  "sintetizzate",
  "spedizioni",
  "massimizzate",
  "innovazione",
  "guida",
  "estensioni",
  "generate",
  "exploit",
  "transizionali",
  "matrici",
  "ricontestualizzate"
];

},{}],736:[function(require,module,exports){
module["exports"] = [
  "adattiva",
  "avanzata",
  "migliorata",
  "assimilata",
  "automatizzata",
  "bilanciata",
  "centralizzata",
  "compatibile",
  "configurabile",
  "cross-platform",
  "decentralizzata",
  "digitalizzata",
  "distribuita",
  "piccola",
  "ergonomica",
  "esclusiva",
  "espansa",
  "estesa",
  "configurabile",
  "fondamentale",
  "orizzontale",
  "implementata",
  "innovativa",
  "integrata",
  "intuitiva",
  "inversa",
  "gestita",
  "obbligatoria",
  "monitorata",
  "multi-canale",
  "multi-laterale",
  "open-source",
  "operativa",
  "ottimizzata",
  "organica",
  "persistente",
  "polarizzata",
  "proattiva",
  "programmabile",
  "progressiva",
  "reattiva",
  "riallineata",
  "ricontestualizzata",
  "ridotta",
  "robusta",
  "sicura",
  "condivisibile",
  "stand-alone",
  "switchabile",
  "sincronizzata",
  "sinergica",
  "totale",
  "universale",
  "user-friendly",
  "versatile",
  "virtuale",
  "visionaria"
];

},{}],737:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.noun = require("./noun");
company.descriptor = require("./descriptor");
company.adjective = require("./adjective");
company.bs_noun = require("./bs_noun");
company.bs_verb = require("./bs_verb");
company.bs_adjective = require("./bs_adjective");
company.name = require("./name");

},{"./adjective":732,"./bs_adjective":733,"./bs_noun":734,"./bs_verb":735,"./descriptor":736,"./name":738,"./noun":739,"./suffix":740}],738:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name} #{suffix}",
  "#{Name.last_name}, #{Name.last_name} e #{Name.last_name} #{suffix}"
];

},{}],739:[function(require,module,exports){
module["exports"] = [
  "Abilità",
  "Access",
  "Adattatore",
  "Algoritmo",
  "Alleanza",
  "Analizzatore",
  "Applicazione",
  "Approccio",
  "Architettura",
  "Archivio",
  "Intelligenza artificiale",
  "Array",
  "Attitudine",
  "Benchmark",
  "Capacità",
  "Sfida",
  "Circuito",
  "Collaborazione",
  "Complessità",
  "Concetto",
  "Conglomerato",
  "Contingenza",
  "Core",
  "Database",
  "Data-warehouse",
  "Definizione",
  "Emulazione",
  "Codifica",
  "Criptazione",
  "Firmware",
  "Flessibilità",
  "Previsione",
  "Frame",
  "framework",
  "Funzione",
  "Funzionalità",
  "Interfaccia grafica",
  "Hardware",
  "Help-desk",
  "Gerarchia",
  "Hub",
  "Implementazione",
  "Infrastruttura",
  "Iniziativa",
  "Installazione",
  "Set di istruzioni",
  "Interfaccia",
  "Soluzione internet",
  "Intranet",
  "Conoscenza base",
  "Matrici",
  "Matrice",
  "Metodologia",
  "Middleware",
  "Migrazione",
  "Modello",
  "Moderazione",
  "Monitoraggio",
  "Moratoria",
  "Rete",
  "Architettura aperta",
  "Sistema aperto",
  "Orchestrazione",
  "Paradigma",
  "Parallelismo",
  "Policy",
  "Portale",
  "Struttura di prezzo",
  "Prodotto",
  "Produttività",
  "Progetto",
  "Proiezione",
  "Protocollo",
  "Servizio clienti",
  "Software",
  "Soluzione",
  "Standardizzazione",
  "Strategia",
  "Struttura",
  "Successo",
  "Sovrastruttura",
  "Supporto",
  "Sinergia",
  "Task-force",
  "Finestra temporale",
  "Strumenti",
  "Utilizzazione",
  "Sito web",
  "Forza lavoro"
];

},{}],740:[function(require,module,exports){
module["exports"] = [
  "SPA",
  "e figli",
  "Group",
  "s.r.l."
];

},{}],741:[function(require,module,exports){
var it = {};
module['exports'] = it;
it.title = "Italian";
it.address = require("./address");
it.company = require("./company");
it.internet = require("./internet");
it.name = require("./name");
it.phone_number = require("./phone_number");

},{"./address":724,"./company":737,"./internet":744,"./name":746,"./phone_number":752}],742:[function(require,module,exports){
module["exports"] = [
  "com",
  "com",
  "com",
  "net",
  "org",
  "it",
  "it",
  "it"
];

},{}],743:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com",
  "email.it",
  "libero.it",
  "yahoo.it"
];

},{}],744:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":742,"./free_email":743,"dup":187}],745:[function(require,module,exports){
module["exports"] = [
  "Aaron",
  "Akira",
  "Alberto",
  "Alessandro",
  "Alighieri",
  "Amedeo",
  "Amos",
  "Anselmo",
  "Antonino",
  "Arcibaldo",
  "Armando",
  "Artes",
  "Audenico",
  "Ausonio",
  "Bacchisio",
  "Battista",
  "Bernardo",
  "Boris",
  "Caio",
  "Carlo",
  "Cecco",
  "Cirino",
  "Cleros",
  "Costantino",
  "Damiano",
  "Danny",
  "Davide",
  "Demian",
  "Dimitri",
  "Domingo",
  "Dylan",
  "Edilio",
  "Egidio",
  "Elio",
  "Emanuel",
  "Enrico",
  "Ercole",
  "Ermes",
  "Ethan",
  "Eusebio",
  "Evangelista",
  "Fabiano",
  "Ferdinando",
  "Fiorentino",
  "Flavio",
  "Fulvio",
  "Gabriele",
  "Gastone",
  "Germano",
  "Giacinto",
  "Gianantonio",
  "Gianleonardo",
  "Gianmarco",
  "Gianriccardo",
  "Gioacchino",
  "Giordano",
  "Giuliano",
  "Graziano",
  "Guido",
  "Harry",
  "Iacopo",
  "Ilario",
  "Ione",
  "Italo",
  "Jack",
  "Jari",
  "Joey",
  "Joseph",
  "Kai",
  "Kociss",
  "Laerte",
  "Lauro",
  "Leonardo",
  "Liborio",
  "Lorenzo",
  "Ludovico",
  "Maggiore",
  "Manuele",
  "Mariano",
  "Marvin",
  "Matteo",
  "Mauro",
  "Michael",
  "Mirco",
  "Modesto",
  "Muzio",
  "Nabil",
  "Nathan",
  "Nick",
  "Noah",
  "Odino",
  "Olo",
  "Oreste",
  "Osea",
  "Pablo",
  "Patrizio",
  "Piererminio",
  "Pierfrancesco",
  "Piersilvio",
  "Priamo",
  "Quarto",
  "Quirino",
  "Radames",
  "Raniero",
  "Renato",
  "Rocco",
  "Romeo",
  "Rosalino",
  "Rudy",
  "Sabatino",
  "Samuel",
  "Santo",
  "Sebastian",
  "Serse",
  "Silvano",
  "Sirio",
  "Tancredi",
  "Terzo",
  "Timoteo",
  "Tolomeo",
  "Trevis",
  "Ubaldo",
  "Ulrico",
  "Valdo",
  "Neri",
  "Vinicio",
  "Walter",
  "Xavier",
  "Yago",
  "Zaccaria",
  "Abramo",
  "Adriano",
  "Alan",
  "Albino",
  "Alessio",
  "Alighiero",
  "Amerigo",
  "Anastasio",
  "Antimo",
  "Antonio",
  "Arduino",
  "Aroldo",
  "Arturo",
  "Augusto",
  "Avide",
  "Baldassarre",
  "Bettino",
  "Bortolo",
  "Caligola",
  "Carmelo",
  "Celeste",
  "Ciro",
  "Costanzo",
  "Dante",
  "Danthon",
  "Davis",
  "Demis",
  "Dindo",
  "Domiziano",
  "Edipo",
  "Egisto",
  "Eliziario",
  "Emidio",
  "Enzo",
  "Eriberto",
  "Erminio",
  "Ettore",
  "Eustachio",
  "Fabio",
  "Fernando",
  "Fiorenzo",
  "Folco",
  "Furio",
  "Gaetano",
  "Gavino",
  "Gerlando",
  "Giacobbe",
  "Giancarlo",
  "Gianmaria",
  "Giobbe",
  "Giorgio",
  "Giulio",
  "Gregorio",
  "Hector",
  "Ian",
  "Ippolito",
  "Ivano",
  "Jacopo",
  "Jarno",
  "Joannes",
  "Joshua",
  "Karim",
  "Kris",
  "Lamberto",
  "Lazzaro",
  "Leone",
  "Lino",
  "Loris",
  "Luigi",
  "Manfredi",
  "Marco",
  "Marino",
  "Marzio",
  "Mattia",
  "Max",
  "Michele",
  "Mirko",
  "Moreno",
  "Nadir",
  "Nazzareno",
  "Nestore",
  "Nico",
  "Noel",
  "Odone",
  "Omar",
  "Orfeo",
  "Osvaldo",
  "Pacifico",
  "Pericle",
  "Pietro",
  "Primo",
  "Quasimodo",
  "Radio",
  "Raoul",
  "Renzo",
  "Rodolfo",
  "Romolo",
  "Rosolino",
  "Rufo",
  "Sabino",
  "Sandro",
  "Sasha",
  "Secondo",
  "Sesto",
  "Silverio",
  "Siro",
  "Tazio",
  "Teseo",
  "Timothy",
  "Tommaso",
  "Tristano",
  "Umberto",
  "Ariel",
  "Artemide",
  "Assia",
  "Azue",
  "Benedetta",
  "Bibiana",
  "Brigitta",
  "Carmela",
  "Cassiopea",
  "Cesidia",
  "Cira",
  "Clea",
  "Cleopatra",
  "Clodovea",
  "Concetta",
  "Cosetta",
  "Cristyn",
  "Damiana",
  "Danuta",
  "Deborah",
  "Demi",
  "Diamante",
  "Diana",
  "Donatella",
  "Doriana",
  "Edvige",
  "Elda",
  "Elga",
  "Elsa",
  "Emilia",
  "Enrica",
  "Erminia",
  "Eufemia",
  "Evita",
  "Fatima",
  "Felicia",
  "Filomena",
  "Flaviana",
  "Fortunata",
  "Gelsomina",
  "Genziana",
  "Giacinta",
  "Gilda",
  "Giovanna",
  "Giulietta",
  "Grazia",
  "Guendalina",
  "Helga",
  "Ileana",
  "Ingrid",
  "Irene",
  "Isabel",
  "Isira",
  "Ivonne",
  "Jelena",
  "Jole",
  "Claudia",
  "Kayla",
  "Kristel",
  "Laura",
  "Lucia",
  "Lia",
  "Lidia",
  "Lisa",
  "Loredana",
  "Loretta",
  "Luce",
  "Lucrezia",
  "Luna",
  "Maika",
  "Marcella",
  "Maria",
  "Mariagiulia",
  "Marianita",
  "Mariapia",
  "Marieva",
  "Marina",
  "Maristella",
  "Maruska",
  "Matilde",
  "Mecren",
  "Mercedes",
  "Mietta",
  "Miriana",
  "Miriam",
  "Monia",
  "Morgana",
  "Naomi",
  "Nayade",
  "Nicoletta",
  "Ninfa",
  "Noemi",
  "Nunzia",
  "Olimpia",
  "Oretta",
  "Ortensia",
  "Penelope",
  "Piccarda",
  "Prisca",
  "Rebecca",
  "Rita",
  "Rosalba",
  "Rosaria",
  "Rosita",
  "Ruth",
  "Samira",
  "Sarita",
  "Selvaggia",
  "Shaira",
  "Sibilla",
  "Soriana",
  "Thea",
  "Tosca",
  "Ursula",
  "Vania",
  "Vera",
  "Vienna",
  "Violante",
  "Vitalba",
  "Zelida"
];

},{}],746:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./first_name":745,"./last_name":747,"./name":748,"./prefix":749,"./suffix":750}],747:[function(require,module,exports){
module["exports"] = [
  "Amato",
  "Barbieri",
  "Barone",
  "Basile",
  "Battaglia",
  "Bellini",
  "Benedetti",
  "Bernardi",
  "Bianc",
  "Bianchi",
  "Bruno",
  "Caputo",
  "Carbon",
  "Caruso",
  "Cattaneo",
  "Colombo",
  "Cont",
  "Conte",
  "Coppola",
  "Costa",
  "Costantin",
  "D'amico",
  "D'angelo",
  "Damico",
  "De Angelis",
  "De luca",
  "De rosa",
  "De Santis",
  "Donati",
  "Esposito",
  "Fabbri",
  "Farin",
  "Ferrara",
  "Ferrari",
  "Ferraro",
  "Ferretti",
  "Ferri",
  "Fior",
  "Fontana",
  "Galli",
  "Gallo",
  "Gatti",
  "Gentile",
  "Giordano",
  "Giuliani",
  "Grassi",
  "Grasso",
  "Greco",
  "Guerra",
  "Leone",
  "Lombardi",
  "Lombardo",
  "Longo",
  "Mancini",
  "Marchetti",
  "Marian",
  "Marini",
  "Marino",
  "Martinelli",
  "Martini",
  "Martino",
  "Mazza",
  "Messina",
  "Milani",
  "Montanari",
  "Monti",
  "Morelli",
  "Moretti",
  "Negri",
  "Neri",
  "Orlando",
  "Pagano",
  "Palmieri",
  "Palumbo",
  "Parisi",
  "Pellegrini",
  "Pellegrino",
  "Piras",
  "Ricci",
  "Rinaldi",
  "Riva",
  "Rizzi",
  "Rizzo",
  "Romano",
  "Ross",
  "Rossetti",
  "Ruggiero",
  "Russo",
  "Sala",
  "Sanna",
  "Santoro",
  "Sartori",
  "Serr",
  "Silvestri",
  "Sorrentino",
  "Testa",
  "Valentini",
  "Villa",
  "Vitale",
  "Vitali"
];

},{}],748:[function(require,module,exports){
arguments[4][682][0].apply(exports,arguments)
},{"dup":682}],749:[function(require,module,exports){
module["exports"] = [
  "Sig.",
  "Dott.",
  "Dr.",
  "Ing."
];

},{}],750:[function(require,module,exports){
arguments[4][194][0].apply(exports,arguments)
},{"dup":194}],751:[function(require,module,exports){
module["exports"] = [
  "+## ### ## ## ####",
  "+## ## #######",
  "+## ## ########",
  "+## ### #######",
  "+## ### ########",
  "+## #### #######",
  "+## #### ########",
  "0## ### ####",
  "+39 0## ### ###",
  "3## ### ###",
  "+39 3## ### ###"
];

},{}],752:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":751,"dup":197}],753:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}#{Name.first_name}#{city_suffix}",
  "#{Name.first_name}#{city_suffix}",
  "#{city_prefix}#{Name.last_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}"
];

},{}],754:[function(require,module,exports){
module["exports"] = [
  "北",
  "東",
  "西",
  "南",
  "新",
  "湖",
  "港"
];

},{}],755:[function(require,module,exports){
module["exports"] = [
  "市",
  "区",
  "町",
  "村"
];

},{}],756:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.city = require("./city");
address.street_name = require("./street_name");

},{"./city":753,"./city_prefix":754,"./city_suffix":755,"./postcode":757,"./state":758,"./state_abbr":759,"./street_name":760}],757:[function(require,module,exports){
module["exports"] = [
  "###-####"
];

},{}],758:[function(require,module,exports){
module["exports"] = [
  "北海道",
  "青森県",
  "岩手県",
  "宮城県",
  "秋田県",
  "山形県",
  "福島県",
  "茨城県",
  "栃木県",
  "群馬県",
  "埼玉県",
  "千葉県",
  "東京都",
  "神奈川県",
  "新潟県",
  "富山県",
  "石川県",
  "福井県",
  "山梨県",
  "長野県",
  "岐阜県",
  "静岡県",
  "愛知県",
  "三重県",
  "滋賀県",
  "京都府",
  "大阪府",
  "兵庫県",
  "奈良県",
  "和歌山県",
  "鳥取県",
  "島根県",
  "岡山県",
  "広島県",
  "山口県",
  "徳島県",
  "香川県",
  "愛媛県",
  "高知県",
  "福岡県",
  "佐賀県",
  "長崎県",
  "熊本県",
  "大分県",
  "宮崎県",
  "鹿児島県",
  "沖縄県"
];

},{}],759:[function(require,module,exports){
module["exports"] = [
  "1",
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8",
  "9",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "29",
  "30",
  "31",
  "32",
  "33",
  "34",
  "35",
  "36",
  "37",
  "38",
  "39",
  "40",
  "41",
  "42",
  "43",
  "44",
  "45",
  "46",
  "47"
];

},{}],760:[function(require,module,exports){
module["exports"] = [
  "#{Name.first_name}#{street_suffix}",
  "#{Name.last_name}#{street_suffix}"
];

},{}],761:[function(require,module,exports){
module["exports"] = [
  "090-####-####",
  "080-####-####",
  "070-####-####"
];

},{}],762:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":761,"dup":256}],763:[function(require,module,exports){
var ja = {};
module['exports'] = ja;
ja.title = "Japanese";
ja.address = require("./address");
ja.phone_number = require("./phone_number");
ja.cell_phone = require("./cell_phone");
ja.name = require("./name");

},{"./address":756,"./cell_phone":762,"./name":765,"./phone_number":769}],764:[function(require,module,exports){
module["exports"] = [
  "大翔",
  "蓮",
  "颯太",
  "樹",
  "大和",
  "陽翔",
  "陸斗",
  "太一",
  "海翔",
  "蒼空",
  "翼",
  "陽菜",
  "結愛",
  "結衣",
  "杏",
  "莉子",
  "美羽",
  "結菜",
  "心愛",
  "愛菜",
  "美咲"
];

},{}],765:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.last_name = require("./last_name");
name.first_name = require("./first_name");
name.name = require("./name");

},{"./first_name":764,"./last_name":766,"./name":767}],766:[function(require,module,exports){
module["exports"] = [
  "佐藤",
  "鈴木",
  "高橋",
  "田中",
  "渡辺",
  "伊藤",
  "山本",
  "中村",
  "小林",
  "加藤",
  "吉田",
  "山田",
  "佐々木",
  "山口",
  "斎藤",
  "松本",
  "井上",
  "木村",
  "林",
  "清水"
];

},{}],767:[function(require,module,exports){
module["exports"] = [
  "#{last_name} #{first_name}"
];

},{}],768:[function(require,module,exports){
module["exports"] = [
  "0####-#-####",
  "0###-##-####",
  "0##-###-####",
  "0#-####-####"
];

},{}],769:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":768,"dup":197}],770:[function(require,module,exports){
module["exports"] = [
  "#{city_name}#{city_suffix}"
];

},{}],771:[function(require,module,exports){
module["exports"] = [
  "강릉",
  "양양",
  "인제",
  "광주",
  "구리",
  "부천",
  "밀양",
  "통영",
  "창원",
  "거창",
  "고성",
  "양산",
  "김천",
  "구미",
  "영주",
  "광산",
  "남",
  "북",
  "고창",
  "군산",
  "남원",
  "동작",
  "마포",
  "송파",
  "용산",
  "부평",
  "강화",
  "수성"
];

},{}],772:[function(require,module,exports){
module["exports"] = [
  "구",
  "시",
  "군"
];

},{}],773:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_suffix = require("./city_suffix");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_root = require("./street_root");
address.street_suffix = require("./street_suffix");
address.street_name = require("./street_name");

},{"./city":770,"./city_name":771,"./city_suffix":772,"./postcode":774,"./state":775,"./state_abbr":776,"./street_name":777,"./street_root":778,"./street_suffix":779}],774:[function(require,module,exports){
module["exports"] = [
  "###-###"
];

},{}],775:[function(require,module,exports){
module["exports"] = [
  "강원",
  "경기",
  "경남",
  "경북",
  "광주",
  "대구",
  "대전",
  "부산",
  "서울",
  "울산",
  "인천",
  "전남",
  "전북",
  "제주",
  "충남",
  "충북",
  "세종"
];

},{}],776:[function(require,module,exports){
arguments[4][775][0].apply(exports,arguments)
},{"dup":775}],777:[function(require,module,exports){
module["exports"] = [
  "#{street_root}#{street_suffix}"
];

},{}],778:[function(require,module,exports){
module["exports"] = [
  "상계",
  "화곡",
  "신정",
  "목",
  "잠실",
  "면목",
  "주안",
  "안양",
  "중",
  "정왕",
  "구로",
  "신월",
  "연산",
  "부평",
  "창",
  "만수",
  "중계",
  "검단",
  "시흥",
  "상도",
  "방배",
  "장유",
  "상",
  "광명",
  "신길",
  "행신",
  "대명",
  "동탄"
];

},{}],779:[function(require,module,exports){
module["exports"] = [
  "읍",
  "면",
  "동"
];

},{}],780:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.prefix = require("./prefix");
company.name = require("./name");

},{"./name":781,"./prefix":782,"./suffix":783}],781:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.first_name}",
  "#{Name.first_name} #{suffix}"
];

},{}],782:[function(require,module,exports){
module["exports"] = [
  "주식회사",
  "한국"
];

},{}],783:[function(require,module,exports){
module["exports"] = [
  "연구소",
  "게임즈",
  "그룹",
  "전자",
  "물산",
  "코리아"
];

},{}],784:[function(require,module,exports){
var ko = {};
module['exports'] = ko;
ko.title = "Korean";
ko.address = require("./address");
ko.phone_number = require("./phone_number");
ko.company = require("./company");
ko.internet = require("./internet");
ko.lorem = require("./lorem");
ko.name = require("./name");

},{"./address":773,"./company":780,"./internet":787,"./lorem":788,"./name":791,"./phone_number":795}],785:[function(require,module,exports){
module["exports"] = [
  "co.kr",
  "com",
  "biz",
  "info",
  "ne.kr",
  "net",
  "or.kr",
  "org"
];

},{}],786:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.co.kr",
  "hanmail.net",
  "naver.com"
];

},{}],787:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":785,"./free_email":786,"dup":187}],788:[function(require,module,exports){
arguments[4][265][0].apply(exports,arguments)
},{"./words":789,"dup":265}],789:[function(require,module,exports){
module["exports"] = [
  "국가는",
  "법률이",
  "정하는",
  "바에",
  "의하여",
  "재외국민을",
  "보호할",
  "의무를",
  "진다.",
  "모든",
  "국민은",
  "신체의",
  "자유를",
  "가진다.",
  "국가는",
  "전통문화의",
  "계승·발전과",
  "민족문화의",
  "창달에",
  "노력하여야",
  "한다.",
  "통신·방송의",
  "시설기준과",
  "신문의",
  "기능을",
  "보장하기",
  "위하여",
  "필요한",
  "사항은",
  "법률로",
  "정한다.",
  "헌법에",
  "의하여",
  "체결·공포된",
  "조약과",
  "일반적으로",
  "승인된",
  "국제법규는",
  "국내법과",
  "같은",
  "효력을",
  "가진다.",
  "다만,",
  "현행범인인",
  "경우와",
  "장기",
  "3년",
  "이상의",
  "형에",
  "해당하는",
  "죄를",
  "범하고",
  "도피",
  "또는",
  "증거인멸의",
  "염려가",
  "있을",
  "때에는",
  "사후에",
  "영장을",
  "청구할",
  "수",
  "있다.",
  "저작자·발명가·과학기술자와",
  "예술가의",
  "권리는",
  "법률로써",
  "보호한다.",
  "형사피고인은",
  "유죄의",
  "판결이",
  "확정될",
  "때까지는",
  "무죄로",
  "추정된다.",
  "모든",
  "국민은",
  "행위시의",
  "법률에",
  "의하여",
  "범죄를",
  "구성하지",
  "아니하는",
  "행위로",
  "소추되지",
  "아니하며,",
  "동일한",
  "범죄에",
  "대하여",
  "거듭",
  "처벌받지",
  "아니한다.",
  "국가는",
  "평생교육을",
  "진흥하여야",
  "한다.",
  "모든",
  "국민은",
  "사생활의",
  "비밀과",
  "자유를",
  "침해받지",
  "아니한다.",
  "의무교육은",
  "무상으로",
  "한다.",
  "저작자·발명가·과학기술자와",
  "예술가의",
  "권리는",
  "법률로써",
  "보호한다.",
  "국가는",
  "모성의",
  "보호를",
  "위하여",
  "노력하여야",
  "한다.",
  "헌법에",
  "의하여",
  "체결·공포된",
  "조약과",
  "일반적으로",
  "승인된",
  "국제법규는",
  "국내법과",
  "같은",
  "효력을",
  "가진다."
];

},{}],790:[function(require,module,exports){
module["exports"] = [
  "서연",
  "민서",
  "서현",
  "지우",
  "서윤",
  "지민",
  "수빈",
  "하은",
  "예은",
  "윤서",
  "민준",
  "지후",
  "지훈",
  "준서",
  "현우",
  "예준",
  "건우",
  "현준",
  "민재",
  "우진",
  "은주"
];

},{}],791:[function(require,module,exports){
arguments[4][765][0].apply(exports,arguments)
},{"./first_name":790,"./last_name":792,"./name":793,"dup":765}],792:[function(require,module,exports){
module["exports"] = [
  "김",
  "이",
  "박",
  "최",
  "정",
  "강",
  "조",
  "윤",
  "장",
  "임",
  "오",
  "한",
  "신",
  "서",
  "권",
  "황",
  "안",
  "송",
  "류",
  "홍"
];

},{}],793:[function(require,module,exports){
arguments[4][767][0].apply(exports,arguments)
},{"dup":767}],794:[function(require,module,exports){
module["exports"] = [
  "0#-#####-####",
  "0##-###-####",
  "0##-####-####"
];

},{}],795:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":794,"dup":197}],796:[function(require,module,exports){
module["exports"] = [
  "#",
  "##"
];

},{}],797:[function(require,module,exports){
module["exports"] = [
  "#{city_root}#{city_suffix}"
];

},{}],798:[function(require,module,exports){
module["exports"] = [
  "Fet",
  "Gjes",
  "Høy",
  "Inn",
  "Fager",
  "Lille",
  "Lo",
  "Mal",
  "Nord",
  "Nær",
  "Sand",
  "Sme",
  "Stav",
  "Stor",
  "Tand",
  "Ut",
  "Vest"
];

},{}],799:[function(require,module,exports){
module["exports"] = [
  "berg",
  "borg",
  "by",
  "bø",
  "dal",
  "eid",
  "fjell",
  "fjord",
  "foss",
  "grunn",
  "hamn",
  "havn",
  "helle",
  "mark",
  "nes",
  "odden",
  "sand",
  "sjøen",
  "stad",
  "strand",
  "strøm",
  "sund",
  "vik",
  "vær",
  "våg",
  "ø",
  "øy",
  "ås"
];

},{}],800:[function(require,module,exports){
module["exports"] = [
  "sgate",
  "svei",
  "s Gate",
  "s Vei",
  "gata",
  "veien"
];

},{}],801:[function(require,module,exports){
module["exports"] = [
  "Norge"
];

},{}],802:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_root = require("./city_root");
address.city_suffix = require("./city_suffix");
address.street_prefix = require("./street_prefix");
address.street_root = require("./street_root");
address.street_suffix = require("./street_suffix");
address.common_street_suffix = require("./common_street_suffix");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":796,"./city":797,"./city_root":798,"./city_suffix":799,"./common_street_suffix":800,"./default_country":801,"./postcode":803,"./secondary_address":804,"./state":805,"./street_address":806,"./street_name":807,"./street_prefix":808,"./street_root":809,"./street_suffix":810}],803:[function(require,module,exports){
module["exports"] = [
  "####",
  "####",
  "####",
  "0###"
];

},{}],804:[function(require,module,exports){
module["exports"] = [
  "Leil. ###",
  "Oppgang A",
  "Oppgang B"
];

},{}],805:[function(require,module,exports){
module["exports"] = [
  ""
];

},{}],806:[function(require,module,exports){
arguments[4][209][0].apply(exports,arguments)
},{"dup":209}],807:[function(require,module,exports){
module["exports"] = [
  "#{street_root}#{street_suffix}",
  "#{street_prefix} #{street_root}#{street_suffix}",
  "#{Name.first_name}#{common_street_suffix}",
  "#{Name.last_name}#{common_street_suffix}"
];

},{}],808:[function(require,module,exports){
module["exports"] = [
  "Øvre",
  "Nedre",
  "Søndre",
  "Gamle",
  "Østre",
  "Vestre"
];

},{}],809:[function(require,module,exports){
module["exports"] = [
  "Eike",
  "Bjørke",
  "Gran",
  "Vass",
  "Furu",
  "Litj",
  "Lille",
  "Høy",
  "Fosse",
  "Elve",
  "Ku",
  "Konvall",
  "Soldugg",
  "Hestemyr",
  "Granitt",
  "Hegge",
  "Rogne",
  "Fiol",
  "Sol",
  "Ting",
  "Malm",
  "Klokker",
  "Preste",
  "Dam",
  "Geiterygg",
  "Bekke",
  "Berg",
  "Kirke",
  "Kors",
  "Bru",
  "Blåveis",
  "Torg",
  "Sjø"
];

},{}],810:[function(require,module,exports){
module["exports"] = [
  "alléen",
  "bakken",
  "berget",
  "bråten",
  "eggen",
  "engen",
  "ekra",
  "faret",
  "flata",
  "gata",
  "gjerdet",
  "grenda",
  "gropa",
  "hagen",
  "haugen",
  "havna",
  "holtet",
  "høgda",
  "jordet",
  "kollen",
  "kroken",
  "lia",
  "lunden",
  "lyngen",
  "løkka",
  "marka",
  "moen",
  "myra",
  "plassen",
  "ringen",
  "roa",
  "røa",
  "skogen",
  "skrenten",
  "spranget",
  "stien",
  "stranda",
  "stubben",
  "stykket",
  "svingen",
  "tjernet",
  "toppen",
  "tunet",
  "vollen",
  "vika",
  "åsen"
];

},{}],811:[function(require,module,exports){
arguments[4][310][0].apply(exports,arguments)
},{"./name":812,"./suffix":813,"dup":310}],812:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} og #{Name.last_name}"
];

},{}],813:[function(require,module,exports){
module["exports"] = [
  "Gruppen",
  "AS",
  "ASA",
  "BA",
  "RFH",
  "og Sønner"
];

},{}],814:[function(require,module,exports){
var nb_NO = {};
module['exports'] = nb_NO;
nb_NO.title = "Norwegian";
nb_NO.address = require("./address");
nb_NO.company = require("./company");
nb_NO.internet = require("./internet");
nb_NO.name = require("./name");
nb_NO.phone_number = require("./phone_number");

},{"./address":802,"./company":811,"./internet":816,"./name":819,"./phone_number":826}],815:[function(require,module,exports){
module["exports"] = [
  "no",
  "com",
  "net",
  "org"
];

},{}],816:[function(require,module,exports){
arguments[4][315][0].apply(exports,arguments)
},{"./domain_suffix":815,"dup":315}],817:[function(require,module,exports){
module["exports"] = [
  "Emma",
  "Sara",
  "Thea",
  "Ida",
  "Julie",
  "Nora",
  "Emilie",
  "Ingrid",
  "Hanna",
  "Maria",
  "Sofie",
  "Anna",
  "Malin",
  "Amalie",
  "Vilde",
  "Frida",
  "Andrea",
  "Tuva",
  "Victoria",
  "Mia",
  "Karoline",
  "Mathilde",
  "Martine",
  "Linnea",
  "Marte",
  "Hedda",
  "Marie",
  "Helene",
  "Silje",
  "Leah",
  "Maja",
  "Elise",
  "Oda",
  "Kristine",
  "Aurora",
  "Kaja",
  "Camilla",
  "Mari",
  "Maren",
  "Mina",
  "Selma",
  "Jenny",
  "Celine",
  "Eline",
  "Sunniva",
  "Natalie",
  "Tiril",
  "Synne",
  "Sandra",
  "Madeleine"
];

},{}],818:[function(require,module,exports){
module["exports"] = [
  "Emma",
  "Sara",
  "Thea",
  "Ida",
  "Julie",
  "Nora",
  "Emilie",
  "Ingrid",
  "Hanna",
  "Maria",
  "Sofie",
  "Anna",
  "Malin",
  "Amalie",
  "Vilde",
  "Frida",
  "Andrea",
  "Tuva",
  "Victoria",
  "Mia",
  "Karoline",
  "Mathilde",
  "Martine",
  "Linnea",
  "Marte",
  "Hedda",
  "Marie",
  "Helene",
  "Silje",
  "Leah",
  "Maja",
  "Elise",
  "Oda",
  "Kristine",
  "Aurora",
  "Kaja",
  "Camilla",
  "Mari",
  "Maren",
  "Mina",
  "Selma",
  "Jenny",
  "Celine",
  "Eline",
  "Sunniva",
  "Natalie",
  "Tiril",
  "Synne",
  "Sandra",
  "Madeleine",
  "Markus",
  "Mathias",
  "Kristian",
  "Jonas",
  "Andreas",
  "Alexander",
  "Martin",
  "Sander",
  "Daniel",
  "Magnus",
  "Henrik",
  "Tobias",
  "Kristoffer",
  "Emil",
  "Adrian",
  "Sebastian",
  "Marius",
  "Elias",
  "Fredrik",
  "Thomas",
  "Sondre",
  "Benjamin",
  "Jakob",
  "Oliver",
  "Lucas",
  "Oskar",
  "Nikolai",
  "Filip",
  "Mats",
  "William",
  "Erik",
  "Simen",
  "Ole",
  "Eirik",
  "Isak",
  "Kasper",
  "Noah",
  "Lars",
  "Joakim",
  "Johannes",
  "Håkon",
  "Sindre",
  "Jørgen",
  "Herman",
  "Anders",
  "Jonathan",
  "Even",
  "Theodor",
  "Mikkel",
  "Aksel"
];

},{}],819:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.feminine_name = require("./feminine_name");
name.masculine_name = require("./masculine_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./feminine_name":817,"./first_name":818,"./last_name":820,"./masculine_name":821,"./name":822,"./prefix":823,"./suffix":824}],820:[function(require,module,exports){
module["exports"] = [
  "Johansen",
  "Hansen",
  "Andersen",
  "Kristiansen",
  "Larsen",
  "Olsen",
  "Solberg",
  "Andresen",
  "Pedersen",
  "Nilsen",
  "Berg",
  "Halvorsen",
  "Karlsen",
  "Svendsen",
  "Jensen",
  "Haugen",
  "Martinsen",
  "Eriksen",
  "Sørensen",
  "Johnsen",
  "Myhrer",
  "Johannessen",
  "Nielsen",
  "Hagen",
  "Pettersen",
  "Bakke",
  "Skuterud",
  "Løken",
  "Gundersen",
  "Strand",
  "Jørgensen",
  "Kvarme",
  "Røed",
  "Sæther",
  "Stensrud",
  "Moe",
  "Kristoffersen",
  "Jakobsen",
  "Holm",
  "Aas",
  "Lie",
  "Moen",
  "Andreassen",
  "Vedvik",
  "Nguyen",
  "Jacobsen",
  "Torgersen",
  "Ruud",
  "Krogh",
  "Christiansen",
  "Bjerke",
  "Aalerud",
  "Borge",
  "Sørlie",
  "Berge",
  "Østli",
  "Ødegård",
  "Torp",
  "Henriksen",
  "Haukelidsæter",
  "Fjeld",
  "Danielsen",
  "Aasen",
  "Fredriksen",
  "Dahl",
  "Berntsen",
  "Arnesen",
  "Wold",
  "Thoresen",
  "Solheim",
  "Skoglund",
  "Bakken",
  "Amundsen",
  "Solli",
  "Smogeli",
  "Kristensen",
  "Glosli",
  "Fossum",
  "Evensen",
  "Eide",
  "Carlsen",
  "Østby",
  "Vegge",
  "Tangen",
  "Smedsrud",
  "Olstad",
  "Lunde",
  "Kleven",
  "Huseby",
  "Bjørnstad",
  "Ryan",
  "Rasmussen",
  "Nygård",
  "Nordskaug",
  "Nordby",
  "Mathisen",
  "Hopland",
  "Gran",
  "Finstad",
  "Edvardsen"
];

},{}],821:[function(require,module,exports){
module["exports"] = [
  "Markus",
  "Mathias",
  "Kristian",
  "Jonas",
  "Andreas",
  "Alexander",
  "Martin",
  "Sander",
  "Daniel",
  "Magnus",
  "Henrik",
  "Tobias",
  "Kristoffer",
  "Emil",
  "Adrian",
  "Sebastian",
  "Marius",
  "Elias",
  "Fredrik",
  "Thomas",
  "Sondre",
  "Benjamin",
  "Jakob",
  "Oliver",
  "Lucas",
  "Oskar",
  "Nikolai",
  "Filip",
  "Mats",
  "William",
  "Erik",
  "Simen",
  "Ole",
  "Eirik",
  "Isak",
  "Kasper",
  "Noah",
  "Lars",
  "Joakim",
  "Johannes",
  "Håkon",
  "Sindre",
  "Jørgen",
  "Herman",
  "Anders",
  "Jonathan",
  "Even",
  "Theodor",
  "Mikkel",
  "Aksel"
];

},{}],822:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name} #{suffix}",
  "#{feminine_name} #{feminine_name} #{last_name}",
  "#{masculine_name} #{masculine_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],823:[function(require,module,exports){
module["exports"] = [
  "Dr.",
  "Prof."
];

},{}],824:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Sr.",
  "I",
  "II",
  "III",
  "IV",
  "V"
];

},{}],825:[function(require,module,exports){
module["exports"] = [
  "########",
  "## ## ## ##",
  "### ## ###",
  "+47 ## ## ## ##"
];

},{}],826:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":825,"dup":197}],827:[function(require,module,exports){
module["exports"] = [
  "Bhaktapur",
  "Biratnagar",
  "Birendranagar",
  "Birgunj",
  "Butwal",
  "Damak",
  "Dharan",
  "Gaur",
  "Gorkha",
  "Hetauda",
  "Itahari",
  "Janakpur",
  "Kathmandu",
  "Lahan",
  "Nepalgunj",
  "Pokhara"
];

},{}],828:[function(require,module,exports){
module["exports"] = [
  "Nepal"
];

},{}],829:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.city = require("./city");
address.default_country = require("./default_country");

},{"./city":827,"./default_country":828,"./postcode":830,"./state":831}],830:[function(require,module,exports){
module["exports"] = [
  0
];

},{}],831:[function(require,module,exports){
module["exports"] = [
  "Baglung",
  "Banke",
  "Bara",
  "Bardiya",
  "Bhaktapur",
  "Bhojupu",
  "Chitwan",
  "Dailekh",
  "Dang",
  "Dhading",
  "Dhankuta",
  "Dhanusa",
  "Dolakha",
  "Dolpha",
  "Gorkha",
  "Gulmi",
  "Humla",
  "Ilam",
  "Jajarkot",
  "Jhapa",
  "Jumla",
  "Kabhrepalanchok",
  "Kalikot",
  "Kapilvastu",
  "Kaski",
  "Kathmandu",
  "Lalitpur",
  "Lamjung",
  "Manang",
  "Mohottari",
  "Morang",
  "Mugu",
  "Mustang",
  "Myagdi",
  "Nawalparasi",
  "Nuwakot",
  "Palpa",
  "Parbat",
  "Parsa",
  "Ramechhap",
  "Rauswa",
  "Rautahat",
  "Rolpa",
  "Rupandehi",
  "Sankhuwasabha",
  "Sarlahi",
  "Sindhuli",
  "Sindhupalchok",
  "Sunsari",
  "Surket",
  "Syangja",
  "Tanahu",
  "Terhathum"
];

},{}],832:[function(require,module,exports){
arguments[4][423][0].apply(exports,arguments)
},{"./suffix":833,"dup":423}],833:[function(require,module,exports){
module["exports"] = [
  "Pvt Ltd",
  "Group",
  "Ltd",
  "Limited"
];

},{}],834:[function(require,module,exports){
var nep = {};
module['exports'] = nep;
nep.title = "Nepalese";
nep.name = require("./name");
nep.address = require("./address");
nep.internet = require("./internet");
nep.company = require("./company");
nep.phone_number = require("./phone_number");

},{"./address":829,"./company":832,"./internet":837,"./name":839,"./phone_number":842}],835:[function(require,module,exports){
module["exports"] = [
  "np",
  "com",
  "info",
  "net",
  "org"
];

},{}],836:[function(require,module,exports){
module["exports"] = [
  "worldlink.com.np",
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],837:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":835,"./free_email":836,"dup":187}],838:[function(require,module,exports){
module["exports"] = [
  "Aarav",
  "Ajita",
  "Amit",
  "Amita",
  "Amrit",
  "Arijit",
  "Ashmi",
  "Asmita",
  "Bibek",
  "Bijay",
  "Bikash",
  "Bina",
  "Bishal",
  "Bishnu",
  "Buddha",
  "Deepika",
  "Dipendra",
  "Gagan",
  "Ganesh",
  "Khem",
  "Krishna",
  "Laxmi",
  "Manisha",
  "Nabin",
  "Nikita",
  "Niraj",
  "Nischal",
  "Padam",
  "Pooja",
  "Prabin",
  "Prakash",
  "Prashant",
  "Prem",
  "Purna",
  "Rajendra",
  "Rajina",
  "Raju",
  "Rakesh",
  "Ranjan",
  "Ratna",
  "Sagar",
  "Sandeep",
  "Sanjay",
  "Santosh",
  "Sarita",
  "Shilpa",
  "Shirisha",
  "Shristi",
  "Siddhartha",
  "Subash",
  "Sumeet",
  "Sunita",
  "Suraj",
  "Susan",
  "Sushant"
];

},{}],839:[function(require,module,exports){
arguments[4][429][0].apply(exports,arguments)
},{"./first_name":838,"./last_name":840,"dup":429}],840:[function(require,module,exports){
module["exports"] = [
  "Adhikari",
  "Aryal",
  "Baral",
  "Basnet",
  "Bastola",
  "Basynat",
  "Bhandari",
  "Bhattarai",
  "Chettri",
  "Devkota",
  "Dhakal",
  "Dongol",
  "Ghale",
  "Gurung",
  "Gyawali",
  "Hamal",
  "Jung",
  "KC",
  "Kafle",
  "Karki",
  "Khadka",
  "Koirala",
  "Lama",
  "Limbu",
  "Magar",
  "Maharjan",
  "Niroula",
  "Pandey",
  "Pradhan",
  "Rana",
  "Raut",
  "Sai",
  "Shai",
  "Shakya",
  "Sherpa",
  "Shrestha",
  "Subedi",
  "Tamang",
  "Thapa"
];

},{}],841:[function(require,module,exports){
module["exports"] = [
  "##-#######",
  "+977-#-#######",
  "+977########"
];

},{}],842:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":841,"dup":197}],843:[function(require,module,exports){
module["exports"] = [
  "#",
  "##",
  "###",
  "###a",
  "###b",
  "###c",
  "### I",
  "### II",
  "### III"
];

},{}],844:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}#{city_suffix}",
  "#{city_prefix}"
];

},{}],845:[function(require,module,exports){
module["exports"] = [
  "Aagte",
  "Aal",
  "Aalden",
  "Aals",
  "Aalst",
  "Aalsum",
  "Aanschot",
  "Aarden",
  "Aarle",
  "Abbe",
  "Abbegea",
  "Abben",
  "Abbestede",
  "Abcoven",
  "Absdale",
  "Abts",
  "Acht",
  "Achter",
  "Achterste",
  "Achtmaal",
  "Achttien",
  "Acquoy",
  "Aduard",
  "Aduarder",
  "Aekinga",
  "Aerde",
  "Aerden",
  "Aerdt",
  "Afferden",
  "Aijen",
  "Akersloot",
  "Akker",
  "Akkerput",
  "Akkrun",
  "Akmarijp",
  "Aldeboarn",
  "Aldegae",
  "Aldtsjerk",
  "Aling",
  "Alkmaar",
  "Allersma",
  "Allinga",
  "Almere",
  "Alphen",
  "Altena",
  "Alteveer",
  "Alting",
  "Altweert",
  "Alverna",
  "Ameide",
  "Amerika",
  "Amerongen",
  "Ammerstol",
  "Ams",
  "Amster",
  "Andel",
  "Angeren",
  "Anholt",
  "Anjum",
  "Anke",
  "Ankum",
  "Anna",
  "Annendaal",
  "Anneville",
  "Anreep",
  "Ansen",
  "Apeldoorn",
  "Apen",
  "Appel",
  "Appen",
  "Arcen",
  "Archem",
  "Arendnest",
  "Arensge",
  "Arkens",
  "Armweide",
  "Arnhem",
  "Arnoud",
  "Arriën",
  "Arriër",
  "Arum",
  "Arwerd",
  "Asch",
  "Asenray",
  "Asperen",
  "Asschat",
  "Assel",
  "Asselt",
  "Assen",
  "Asten",
  "Atze",
  "Augs",
  "Averlo",
  "Avest",
  "Azelo",
  "Azewijn",
  "Ba",
  "Baaium",
  "Baak",
  "Baaks",
  "Baal",
  "Baamsum",
  "Baan",
  "Baard",
  "Baarder",
  "Baarle",
  "Baarlo",
  "Baars",
  "Baarschot",
  "Baexem",
  "Baflo",
  "Bahr",
  "Bakel",
  "Bakelse",
  "Bakertand",
  "Bakke",
  "Bakkerom",
  "Balgoij",
  "Balinge",
  "Ballast",
  "Balleman",
  "Ballum",
  "Balma",
  "Bane",
  "Bankert",
  "Bantega",
  "Bare",
  "Bargebek",
  "Barlage",
  "Barlaque",
  "Barlo",
  "Barnflair",
  "Barrier",
  "Bars",
  "Basse",
  "Basser",
  "Baten",
  "Bath",
  "Bathmen",
  "Bavinkel",
  "Bazuin",
  "Bears",
  "Beckum",
  "Bedaf",
  "Bedum",
  "Beekb",
  "Beekkant",
  "Beemdkant",
  "Beemte",
  "Beertsen",
  "Beerze",
  "Beerzer",
  "Beesd",
  "Beetgum",
  "Beetgumer",
  "Behelp",
  "Beilen",
  "Beinum",
  "Beke",
  "Beldert",
  "Belgen",
  "Belgeren",
  "Belt",
  "Belvert",
  "Bemmel",
  "Bemmer",
  "Benderse",
  "Beneden",
  "Benne",
  "Bennekom",
  "Bent",
  "Bente",
  "Benthem",
  "Berg",
  "Bergakker",
  "Bergen",
  "Bergens",
  "Bergerden",
  "Bergharen",
  "Berghem",
  "Berghum",
  "Bergstoep",
  "Berik",
  "Beringe",
  "Berk",
  "Berke",
  "Berken",
  "Berkt",
  "Berlicum",
  "Bern",
  "Besse",
  "Besthmen",
  "Beswerd",
  "Bethlehem",
  "Beugt",
  "Beuke",
  "Beun",
  "Beusb",
  "Beusichem",
  "Bever",
  "Bidding",
  "Biert",
  "Bierum",
  "Biessum",
  "Biest",
  "Biezen",
  "Bigge",
  "Bijster",
  "Bijsteren",
  "Billing",
  "Bilt",
  "Bingerden",
  "Bisselt",
  "Bissen",
  "Blaker",
  "Blaricum",
  "Blauhûs",
  "Blauw",
  "Blauwe",
  "Blauwen",
  "Bleijen",
  "Bleijs",
  "Blekslage",
  "Blenkert",
  "Blerick",
  "Blessum",
  "Blije",
  "Blijham",
  "Blijnse",
  "Blok",
  "Blokken",
  "Blokum",
  "Boazum",
  "Boberden",
  "Bocholtz",
  "Bocht",
  "Boeiink",
  "Boek",
  "Boekel",
  "Boekelo",
  "Boekelte",
  "Boekend",
  "Boer",
  "Boerakker",
  "Boerelaan",
  "Boeren",
  "Boerengat",
  "Boerenhol",
  "Boerhaar",
  "Boijl",
  "Boks",
  "Boksum",
  "Bokt",
  "Bollinga",
  "Bols",
  "Bolst",
  "Bolt",
  "Bommerig",
  "Bong",
  "Bonkwert",
  "Bonner",
  "Bonrepas",
  "Bontebok",
  "Boomen",
  "Boord",
  "Borger",
  "Borgharen",
  "Borgs",
  "Borgweg",
  "Borkel",
  "Borkeld",
  "Born",
  "Borne",
  "Borneo",
  "Bornwird",
  "Bos",
  "Boschkens",
  "Bosje",
  "Bosjes",
  "Boskamp",
  "Boskant",
  "Boskoop",
  "Boslust",
  "Bosschen",
  "Bosscher",
  "Bosven",
  "Boter",
  "Botshoofd",
  "Boukoul",
  "Bourtange",
  "Boven",
  "Bovenstad",
  "Boxtel",
  "Braak",
  "Braamt",
  "Brabander",
  "Brakel",
  "Brand",
  "Brande",
  "Brandt",
  "Brantgum",
  "Breda",
  "Brede",
  "Bree",
  "Breede",
  "Breedeweg",
  "Breehees",
  "Breezand",
  "Brem",
  "Breskens",
  "Breugel",
  "Breukele",
  "Breyvin",
  "Brielle",
  "Brigdamme",
  "Brij",
  "Brillerij",
  "Briltil",
  "Brinkmans",
  "Britsum",
  "Britswert",
  "Broek",
  "Broekens",
  "Broekkant",
  "Brommelen",
  "Brons",
  "Bruchem",
  "Bruggen",
  "Brugger",
  "Bruil",
  "Bruinisse",
  "Bruister",
  "Brumhold",
  "Brunssum",
  "Brunsting",
  "Bruntinge",
  "Buchten",
  "Buggenum",
  "Buis",
  "Buiten",
  "Bulkenaar",
  "Bult",
  "Bultinge",
  "Bunne",
  "Bunnik",
  "Burdaard",
  "Burger",
  "Burgh",
  "Burgt",
  "Burgum",
  "Burgwerd",
  "Burstum",
  "Burum",
  "Bussel",
  "Busselte",
  "Busser",
  "Buttinge",
  "Buurtje",
  "Cadier",
  "Cadzand",
  "Calfven",
  "Calslagen",
  "Caluna",
  "Camerig",
  "Capelle",
  "Carnisse",
  "Cartils",
  "Castelré",
  "Castenray",
  "Castert",
  "Castricum",
  "Catsop",
  "Chaam",
  "Clinge",
  "Coevorden",
  "Colmont",
  "Cornjum",
  "Cornwerd",
  "Cottessen",
  "Crapoel",
  "Crau",
  "Crix",
  "Crob",
  "Croy",
  "Culemborg",
  "Daarle",
  "Dale",
  "Dalem",
  "Dalen",
  "Daler",
  "Dalerend",
  "Dalerpeel",
  "Dallinge",
  "Damwâld",
  "Daniken",
  "Darp",
  "Dassemus",
  "Dearsum",
  "Dedgum",
  "Deelen",
  "Deelse",
  "Deelshurk",
  "Deense",
  "Deest",
  "Deil",
  "Deinum",
  "Dekes",
  "Dekkers",
  "Del",
  "Delden",
  "Delf",
  "Delft",
  "Dellen",
  "Delwijnen",
  "Demen",
  "Den ",
  "Deursen",
  "Deuteren",
  "Deventer",
  "Dieden",
  "Diemen",
  "Diepen",
  "Diependal",
  "Diepswal",
  "Diermen",
  "Dieskant",
  "Dieteren",
  "Diever",
  "Dijken",
  "Dijker",
  "Dijkster",
  "Dijkwel",
  "Dintelsas",
  "Dinther",
  "Dintherse",
  "Diphoorn",
  "Dirkshorn",
  "Dis",
  "Diunt",
  "Doenrade",
  "Does",
  "Doeveren",
  "Doezum",
  "Doijum",
  "Dokkum",
  "Doldersum",
  "Dom",
  "Dommelen",
  "Donderen",
  "Dongen",
  "Donia",
  "Doniaga",
  "Donzel",
  "Dood",
  "Doodstil",
  "Doon",
  "Doorn",
  "Doornen",
  "Doornik",
  "Doorning",
  "Doorwerth",
  "Doosje",
  "Dorkwerd",
  "Dorst",
  "Dorther",
  "Douverge",
  "Douwen",
  "Draai",
  "Drachten",
  "Dreischor",
  "Drie",
  "Drieboere",
  "Driehuis",
  "Driene",
  "Dries",
  "Driewegen",
  "Driezum",
  "Drieën",
  "Drijber",
  "Drimmelen",
  "Drogeham",
  "Drogt",
  "Dronrijp",
  "Dronten",
  "Druif",
  "Drunen",
  "Druten",
  "Drylts",
  "Duifhuis",
  "Duinen",
  "Duiven",
  "Duizel",
  "Duizend",
  "Dulder",
  "Dunsborg",
  "Dussen",
  "Duur",
  "Duurends",
  "Eagum",
  "Earnewâld",
  "Easterein",
  "Eastermar",
  "Easthim",
  "Echt",
  "Echten",
  "Echtener",
  "Echter",
  "Eder",
  "Eede",
  "Eefsele",
  "Eekt",
  "Eekwerd",
  "Eelde",
  "Eelen",
  "Eems",
  "Eemster",
  "Eemten",
  "Een",
  "Eenigen",
  "Eenrum",
  "Eenum",
  "Eerde",
  "Eersel",
  "Eerste",
  "Ees",
  "Eesterga",
  "Effen",
  "Egchel",
  "Egede",
  "Egmond",
  "Egypte",
  "Eikelen",
  "Eikelhof",
  "Eimeren",
  "Eindewege",
  "Eindje",
  "Ekamp",
  "Elde",
  "Elden",
  "Eldik",
  "Eldrik",
  "Elft",
  "Elkerzee",
  "Ellemeet",
  "Eller",
  "Ellerhei",
  "Ellersing",
  "Elsen",
  "Elshof",
  "Elspeet",
  "Elst",
  "Elsteren",
  "Elzet",
  "Emmeloord",
  "Emmen",
  "Empel",
  "Endepoel",
  "Eng",
  "Enge",
  "Engel",
  "Engelbert",
  "Engelen",
  "Engelum",
  "Englum",
  "Engwegen",
  "Engwierum",
  "Enk",
  "Enschedé",
  "Enspijk",
  "Enumatil",
  "Enzelens",
  "Eper",
  "Eppen",
  "Erichem",
  "Erlecom",
  "Ermelo",
  "Ermer",
  "Escharen",
  "Eschoten",
  "Espelo",
  "Essen",
  "Etenaken",
  "Etzenrade",
  "Eursing",
  "Eursinge",
  "Euverem",
  "Ever",
  "Everd",
  "Everlo",
  "Everse",
  "Ewer",
  "Ewinkel",
  "Exmorra",
  "Eygels",
  "Eyser",
  "Ezinge",
  "Ezuma",
  "Faan",
  "Falom",
  "Farmsum",
  "Fatum",
  "Feerwerd",
  "Fel",
  "Ferwert",
  "Fiemel",
  "Fijfhûs",
  "Finke",
  "Finkum",
  "Flieren",
  "Flânsum",
  "Fokkers",
  "Follega",
  "Folsgeare",
  "Formerum",
  "Fort",
  "Fortmond",
  "Foudgum",
  "Fraamklap",
  "Frankhuis",
  "Frankrijk",
  "Fransum",
  "Friens",
  "Frytum",
  "Fûns",
  "Gaag",
  "Gaanderen",
  "Gaar",
  "Gaast",
  "Gaasten",
  "Gaastmar",
  "Gaete",
  "Gagel",
  "Galder",
  "Gameren",
  "Gammelke",
  "Ganzert",
  "Gapinge",
  "Garminge",
  "Garnwerd",
  "Garre",
  "Garrels",
  "Garst",
  "Garyp",
  "Gassel",
  "Gasthuis",
  "Gawege",
  "Gebergte",
  "Geefs",
  "Geen",
  "Geer",
  "Gees",
  "Geeuwen",
  "Geffen",
  "Gelders",
  "Gelderse",
  "Geleen",
  "Gelkenes",
  "Gellicum",
  "Gemaal",
  "Gement",
  "Gemert",
  "Gemonde",
  "Gendt",
  "Geneijgen",
  "Genen",
  "Gening",
  "Genne",
  "Gennep",
  "Genooi",
  "Gerheggen",
  "Gerner",
  "Gersloot",
  "Gerven",
  "Gerwen",
  "Geulhem",
  "Gever",
  "Geverik",
  "Gewande",
  "Giers",
  "Giessen",
  "Gietelo",
  "Giethmen",
  "Giethoorn",
  "Gijbe",
  "Gijsselte",
  "Gijzel",
  "Gilze",
  "Ginkel",
  "Ginnum",
  "Glaner",
  "Goaiïngea",
  "Godlinze",
  "Goes",
  "Goilberd",
  "Goirle",
  "Goldhoorn",
  "Gooium",
  "Goor",
  "Gorinchem",
  "Gorp",
  "Gortel",
  "Gouda",
  "Gouderak",
  "Goudseweg",
  "Goënga",
  "Graaf",
  "Graauw",
  "Gracht",
  "Graet",
  "Graf",
  "Grafwegen",
  "Gras",
  "Graspeel",
  "Graszode",
  "Grathem",
  "Grauwe",
  "Grave",
  "Grazen",
  "Greonterp",
  "Greup",
  "Griete",
  "Grijps",
  "Grits",
  "Groe",
  "Groede",
  "Groen",
  "Groenekan",
  "Groeneweg",
  "Groenlo",
  "Groep",
  "Groes",
  "Groessen",
  "Groet",
  "Groeve",
  "Groeze",
  "Gron",
  "Groot",
  "Groote",
  "Grote",
  "Grotel",
  "Grou",
  "Gytsjerk",
  "Haaften",
  "Haag",
  "Haagje",
  "Haaks",
  "Haakswold",
  "Haalderen",
  "Haalweide",
  "Haamstede",
  "Haandrik",
  "Haar",
  "Haarlem",
  "Haarsteeg",
  "Haart",
  "Haelen",
  "Haerst",
  "Hagestein",
  "Haiink",
  "Halder",
  "Haler",
  "Half",
  "Halfmijl",
  "Halfweg",
  "Halle",
  "Haller",
  "Hallum",
  "Halte",
  "Halvink",
  "Hamrik",
  "Hamshorn",
  "Handel",
  "Hane",
  "Hank",
  "Hankate",
  "Hansweert",
  "Hantum",
  "Hantumer",
  "Harculo",
  "Harde",
  "Hardinx",
  "Haren",
  "Harener",
  "Haring",
  "Harke",
  "Harkema",
  "Harl",
  "Harles",
  "Harpel",
  "Harre",
  "Harse",
  "Harskamp",
  "Harssens",
  "Hartwerd",
  "Haspel",
  "Hasselt",
  "Hasselter",
  "Hatte",
  "Hattem",
  "Hauwert",
  "Havelt",
  "Havelte",
  "Hayum",
  "Haze",
  "Hazenhurk",
  "Hazennest",
  "Heaburgen",
  "Hedel",
  "Hedik",
  "Heech",
  "Heegher",
  "Heek",
  "Heelsum",
  "Heems",
  "Heemstede",
  "Heenweg",
  "Heer",
  "Heerde",
  "Heere",
  "Heeren",
  "Heers",
  "Hees",
  "Heesakker",
  "Heesbeen",
  "Heesboom",
  "Heesch",
  "Heesselt",
  "Heet",
  "Heezeren",
  "Hefswal",
  "Hegge",
  "Hei",
  "Heiakker",
  "Heibloem",
  "Heid",
  "Heide",
  "Heidekant",
  "Heiden",
  "Heier",
  "Heihoefke",
  "Heij",
  "Heijen",
  "Heikant",
  "Heikantse",
  "Heille",
  "Heine",
  "Heioord",
  "Heister",
  "Heitrak",
  "Hekel",
  "Hekkum",
  "Hel",
  "Helden",
  "Helkant",
  "Hell",
  "Helle",
  "Hellegat",
  "Hellen",
  "Hellevoet",
  "Helling",
  "Hellouw",
  "Helwerd",
  "Hemert",
  "Hemrik",
  "Hendrik",
  "Henge",
  "Herfte",
  "Herike",
  "Herk",
  "Herken",
  "Hermalen",
  "Hernen",
  "Herpen",
  "Herpt",
  "Hersel",
  "Hersend",
  "Hert",
  "Herten",
  "Hertme",
  "Herveld",
  "Herwen",
  "Herwijnen",
  "Herxen",
  "Hesens",
  "Hespe",
  "Hessum",
  "Heugde",
  "Heukelom",
  "Heukelum",
  "Heult",
  "Heumen",
  "Heure",
  "Heurne",
  "Heusden",
  "Heuvel",
  "Heuvels",
  "Heuveltje",
  "Hexel",
  "Heze",
  "Hiaure",
  "Hichtum",
  "Hidaard",
  "Hien",
  "Hierden",
  "Hieslum",
  "Hijken",
  "Hijum",
  "Hilaard",
  "Hilakker",
  "Hild",
  "Hill",
  "Hilte",
  "Hilversum",
  "Hinnaard",
  "Hintham",
  "Hitsertse",
  "Hodenpijl",
  "Hoef",
  "Hoefkens",
  "Hoek",
  "Hoekdries",
  "Hoekelum",
  "Hoekens",
  "Hoekje",
  "Hoeks",
  "Hoekske",
  "Hoetmans",
  "Hoeve",
  "Hoeven",
  "Hoeves",
  "Hoge",
  "Hogert",
  "Hogeweg",
  "Holker",
  "Hollum",
  "Holm",
  "Holset",
  "Holsloot",
  "Holst",
  "Holt",
  "Holte",
  "Holten",
  "Holter",
  "Holthe",
  "Holtien",
  "Holtinge",
  "Holtum",
  "Holwerd",
  "Holwierde",
  "Holwinde",
  "Hommelse",
  "Hommert",
  "Hommerts",
  "Honderd",
  "Honds",
  "Hondsrug",
  "Hongerige",
  "Honthem",
  "Hoog",
  "Hoogcruts",
  "Hooge",
  "Hoogehaar",
  "Hoogen",
  "Hoogeweg",
  "Hooghalen",
  "Hoogmade",
  "Hoogmeien",
  "Hoogwatum",
  "Hool",
  "Hoon",
  "Hoonte",
  "Hoorn",
  "Hoornder",
  "Hoptille",
  "Horck",
  "Horick",
  "Horn",
  "Horssen",
  "Horsten",
  "Horzik",
  "Hout",
  "Houterd",
  "Houtgoor",
  "Houthei",
  "Houthem",
  "Houw",
  "Houwer",
  "Hugten",
  "Huij",
  "Huinen",
  "Huinerwal",
  "Huis",
  "Huissen",
  "Huize",
  "Huizinge",
  "Hul",
  "Huls",
  "Hulsen",
  "Hulst",
  "Hulten",
  "Hultje",
  "Humcoven",
  "Hunnecum",
  "Hunsel",
  "Hupsel",
  "Hurkske",
  "Hurpesch",
  "Hutten",
  "Huurne",
  "Höchte",
  "Höfke",
  "Húns",
  "Idaerd",
  "Idserda",
  "Idsken",
  "Idzegea",
  "Iens",
  "IJmuiden",
  "IJpe",
  "IJpelo",
  "IJsselham",
  "IJzen",
  "IJzeren",
  "IJzerlo",
  "Illik",
  "Indoornik",
  "Ingwert",
  "Inia",
  "Itens",
  "Itteren",
  "Jaars",
  "Jammer",
  "Jannum",
  "Jellum",
  "Jelsum",
  "Jeth",
  "Jipsing",
  "Jirnsum",
  "Jislum",
  "Jisp",
  "Jistrum",
  "Jonas",
  "Jonen",
  "Jonkers",
  "Jorwert",
  "Joure",
  "Jous",
  "Jousterp",
  "Jouswerd",
  "Jouwer",
  "Jubbega",
  "Jukwerd",
  "Junne",
  "Jutryp",
  "Kaag",
  "Kaakhorn",
  "Kaard",
  "Kaarschot",
  "Kaat",
  "Kade",
  "Kadoelen",
  "Kalis",
  "Kalteren",
  "Kameren",
  "Kamp",
  "Kampen",
  "Kamper",
  "Kamperei",
  "Kampers",
  "Kamperzee",
  "Kantens",
  "Kantje",
  "Kapel",
  "Kapelle",
  "Kapolder",
  "Kappert",
  "Karre",
  "Kasen",
  "Kasteren",
  "Kater",
  "Katerveer",
  "Kathagen",
  "Katlijk",
  "Kats",
  "Katwijk",
  "Kaumes",
  "Kavel",
  "Kaweide",
  "Kedichem",
  "Keegen",
  "Keent",
  "Keersop",
  "Keinsmer",
  "Keizers",
  "Kekerdom",
  "Kelmond",
  "Kelpen",
  "Kempkens",
  "Kerk",
  "Kerken",
  "Kerkhof",
  "Kerkrade",
  "Kerkwerve",
  "Keske",
  "Kessel",
  "Kesseleik",
  "Ketting",
  "Keulse",
  "Keunen",
  "Keup",
  "Keuter",
  "Kibbel",
  "Kiel",
  "Kiester",
  "Kievit",
  "Kijf",
  "Kijfwaard",
  "Kijkuit",
  "Kilder",
  "Kille",
  "Kimswerd",
  "Kinderbos",
  "Kink",
  "Kinnum",
  "Kipper",
  "Klaaswaal",
  "Kladde",
  "Klaren",
  "Klatering",
  "Klef",
  "Klei",
  "Klein",
  "Kleinder",
  "Kleine",
  "Kleinge",
  "Klem",
  "Kletter",
  "Klevers",
  "Klispoel",
  "Klomp",
  "Klooster",
  "Klosse",
  "Klösse",
  "Knaphof",
  "Knegsel",
  "Knipe",
  "Knol",
  "Knolle",
  "Knuiters",
  "Koedood",
  "Koehool",
  "Koekange",
  "Koekanger",
  "Koekoek",
  "Koel",
  "Koevering",
  "Kokkelert",
  "Kolder",
  "Kolhol",
  "Kolhorn",
  "Kolk",
  "Kollum",
  "Kolonie",
  "Kommer",
  "Konings",
  "Koog",
  "Kooi",
  "Kooldert",
  "Kopaf",
  "Korhorn",
  "Korn",
  "Kornhorn",
  "Kort",
  "Korte",
  "Korteraar",
  "Korteven",
  "Kortgene",
  "Kostvlies",
  "Koude",
  "Kouden",
  "Koudhoorn",
  "Koulen",
  "Kraan",
  "Kraanven",
  "Kraats",
  "Krabben",
  "Krachtig",
  "Kranen",
  "Krassum",
  "Kreek",
  "Kreielt",
  "Kreijel",
  "Kreijl",
  "Krewerd",
  "Krim",
  "Krimpen",
  "Krol",
  "Kruin",
  "Kruishaar",
  "Kruispunt",
  "Kruisweg",
  "Kuikhorne",
  "Kuiks",
  "Kuinre",
  "Kuitaart",
  "Kuivezand",
  "Kulert",
  "Kulsdom",
  "Kunrade",
  "Kutt",
  "Kuundert",
  "Kuzemer",
  "Kwaal",
  "Kwakel",
  "Kwakkel",
  "Kwartier",
  "Kûkherne",
  "Laag",
  "Laaghalen",
  "Laaghaler",
  "Laak",
  "Laaksum",
  "Laan",
  "Lage",
  "Lagekant",
  "Lageweg",
  "Lakei",
  "Laker",
  "Lalle",
  "Lammer",
  "Lammerweg",
  "Lamperen",
  "Landerum",
  "Landsrade",
  "Lang",
  "Lange",
  "Langeraar",
  "Langerak",
  "Langereit",
  "Lank",
  "Lankes",
  "Laren",
  "Laskwerd",
  "Lattrop",
  "Laude",
  "Lauwer",
  "Ledeacker",
  "Leeg",
  "Leegte",
  "Leek",
  "Leem",
  "Leen",
  "Leens",
  "Leensel",
  "Leermens",
  "Leersum",
  "Leeuw",
  "Leeuwerik",
  "Leeuwte",
  "Lege",
  "Legert",
  "Leiden",
  "Leimuiden",
  "Leker",
  "Lekker",
  "Lelystad",
  "Lemel",
  "Lemele",
  "Lemmer",
  "Lemselo",
  "Lengel",
  "Lent",
  "Lenthe",
  "Leons",
  "Lerop",
  "Lethe",
  "Lettele",
  "Leuke",
  "Leunen",
  "Leur",
  "Leusden",
  "Leutes",
  "Leuth",
  "Leuven",
  "Leuvenum",
  "Leveroy",
  "Lexmond",
  "Lhee",
  "Lichtaard",
  "Lichtmis",
  "Liefkens",
  "Liempde",
  "Lienden",
  "Lier",
  "Lieren",
  "Lierop",
  "Lies",
  "Lievelde",
  "Lieving",
  "Lijnden",
  "Limbricht",
  "Limmen",
  "Linde",
  "Lingsfort",
  "Lintelo",
  "Lintvelde",
  "Lioessens",
  "Lippen",
  "Lith",
  "Lithoijen",
  "Lobith",
  "Loc",
  "Locht",
  "Loenen",
  "Loer",
  "Loete",
  "Logt",
  "Loil",
  "Lollum",
  "Lomm",
  "Lonneker",
  "Loo",
  "Loobrink",
  "Loofaert",
  "Looi",
  "Looien",
  "Look",
  "Loon",
  "Loons",
  "Loonse",
  "Looveer",
  "Loppersum",
  "Lovendaal",
  "Loveren",
  "Loënga",
  "Lubbinge",
  "Luchen",
  "Luchten",
  "Luissel",
  "Luitert",
  "Lula",
  "Lunen",
  "Lunteren",
  "Lunters",
  "Lutjegast",
  "Lutjerijp",
  "Lutke",
  "Lutkepost",
  "Lutten",
  "Lutter",
  "Lytse",
  "Lytshuzen",
  "Maagd",
  "Maaijkant",
  "Maalb",
  "Maaldrift",
  "Maalstede",
  "Maar",
  "Maarn",
  "Maars",
  "Maarssen",
  "Maasband",
  "Maasbree",
  "Maaskant",
  "Maat",
  "Maatsehei",
  "Macharen",
  "Made",
  "Magele",
  "Magrette",
  "Makkum",
  "Mal",
  "Malden",
  "Mallem",
  "Mamelis",
  "Manen",
  "Mantgum",
  "Mantinge",
  "Maren",
  "Maria",
  "Maris",
  "Mark",
  "Markvelde",
  "Marle",
  "Marrum",
  "Mars",
  "Marssum",
  "Marsum",
  "Martens",
  "Marum",
  "Mataram",
  "Maten",
  "Mathijs",
  "Maurik",
  "Maxet",
  "Medemblik",
  "Medevoort",
  "Medler",
  "Meed",
  "Meeden",
  "Meele",
  "Meemortel",
  "Meene",
  "Meer",
  "Meeren",
  "Meern",
  "Meerten",
  "Meerven",
  "Meerwijck",
  "Megelsum",
  "Megen",
  "Meije",
  "Meijel",
  "Melick",
  "Melis",
  "Melissant",
  "Menaldum",
  "Mensinge",
  "Menzel",
  "Meppen",
  "Merkel",
  "Merm",
  "Merselo",
  "Merum",
  "Mesch",
  "Meteren",
  "Metsla",
  "Midbuul",
  "Midde",
  "Middel",
  "Middelijk",
  "Midden",
  "Middenhof",
  "Midlaren",
  "Midlum",
  "Mids",
  "Midwolde",
  "Miedum",
  "Mildert",
  "Milheeze",
  "Mill",
  "Mils",
  "Milschot",
  "Minkeloos",
  "Mispel",
  "Moddergat",
  "Moer",
  "Moeren",
  "Moerslag",
  "Moespot",
  "Molembaix",
  "Molenbaan",
  "Molenbelt",
  "Molengat",
  "Molenhof",
  "Molenperk",
  "Molenrij",
  "Molenstad",
  "Molkwar",
  "Monster",
  "Montfort",
  "Mook",
  "Moord",
  "Moorsel",
  "Morige",
  "Morra",
  "Mortel",
  "Mosbulten",
  "Mosik",
  "Moskou",
  "Mosse",
  "Mossel",
  "Most",
  "Muggenhol",
  "Muis",
  "Muizenhol",
  "Mulderij",
  "Mullegen",
  "Munneke",
  "Munnekens",
  "Munniken",
  "Munte",
  "Murns",
  "Mussel",
  "Mûnein",
  "Naarder",
  "Nabbegat",
  "Nagel",
  "Nansum",
  "Napels",
  "Natten",
  "Neder",
  "Nederbiel",
  "Neer",
  "Neerijnen",
  "Neeritter",
  "Neerloon",
  "Neerst",
  "Negen",
  "Nekke",
  "Nergena",
  "Nia",
  "Nie",
  "Niebert",
  "Niehove",
  "Nier",
  "Niersen",
  "Niesoord",
  "Nieuw",
  "Nieuwaal",
  "Nieuwe",
  "Nieuwer",
  "Nieuwklap",
  "Nieuwkoop",
  "Nieuwolda",
  "Nieuwstad",
  "Niftrik",
  "Nijega",
  "Nijehaske",
  "Nijesyl",
  "Nijken",
  "Nijkerker",
  "Nijlân",
  "Nijmegen",
  "Nijnsel",
  "Nijrees",
  "Nijstad",
  "Nijve",
  "Nispense",
  "Noardein",
  "Noenes",
  "Nolde",
  "Noord",
  "Noorden",
  "Noorder",
  "Noordhorn",
  "Noordink",
  "Noordkant",
  "Noordse",
  "Notendaal",
  "Notsel",
  "Noukoop",
  "Nuenen",
  "Nuijen",
  "Nuil",
  "Nuis",
  "Nunhem",
  "Nunspeet",
  "Nuth",
  "Obbicht",
  "Ock",
  "Oegst",
  "Oekel",
  "Oeken",
  "Oele",
  "Oensel",
  "Oentsjerk",
  "Oerle",
  "Oete",
  "Oever",
  "Offinga",
  "Ofwegen",
  "Ohé;",
  "Oijen",
  "Oirlo",
  "Oirs",
  "Okswerd",
  "Olde",
  "Oldehove",
  "Oldemarkt",
  "Olden",
  "Oldeneel",
  "Oldenhave",
  "Oldeouwer",
  "Oldörp",
  "Olen",
  "Oler",
  "Oling",
  "Olterterp",
  "Ommel",
  "Ommen",
  "Ommeren",
  "Onder",
  "Onna",
  "Onsenoort",
  "Onstwedde",
  "Ooij",
  "Ooijen",
  "Oost",
  "Oostappen",
  "Ooste",
  "Ooster",
  "Oosterend",
  "Oosterens",
  "Oosterhof",
  "Oosterik",
  "Oosternie",
  "Oosternij",
  "Oosterse",
  "Oosterzee",
  "Oosthem",
  "Oostindië",
  "Oostrum",
  "Oostum",
  "Oostwold",
  "Oostzaan",
  "Op",
  "Opende",
  "Ophemert",
  "Ophuis",
  "Opijnen",
  "Opmeeden",
  "Opper",
  "Opperdoes",
  "Opperduit",
  "Opwetten",
  "Opwierde",
  "Oranje",
  "Orvelte",
  "Osen",
  "Oshaar",
  "Ospel",
  "Ossen",
  "Ossenisse",
  "Ostaaijen",
  "Osterbos",
  "Othene",
  "Otterlo",
  "Ottersum",
  "Ou",
  "OuBildt",
  "Oude",
  "Oudega",
  "Oudehaske",
  "Oudehorne",
  "Ouden",
  "Oudenrijn",
  "Ouder",
  "Oudeschip",
  "Oudleusen",
  "Oukoop",
  "OuLeede",
  "OuLeije",
  "OuPolder",
  "OuSchouw",
  "OuStaten",
  "OuStee",
  "OuStoof",
  "OuStrumpt",
  "OuWaranda",
  "Ouwer",
  "OuWillem",
  "Ouwster",
  "Oventje",
  "Over",
  "Overa",
  "Overakker",
  "Overbiel",
  "Overeys",
  "Overgeul",
  "Overheek",
  "Overschot",
  "Overval",
  "Overwater",
  "Paal",
  "Paarde",
  "Paarlo",
  "Paauwen",
  "Paddepoel",
  "Padhuis",
  "Paesens",
  "Palestina",
  "Pallert",
  "Pandgat",
  "Panheel",
  "Pann",
  "Pannerden",
  "Papen",
  "Papenveer",
  "Park",
  "Parrega",
  "Partij",
  "Pasop",
  "Patrijzen",
  "Peebos",
  "Peelkant",
  "Peij",
  "Peizerweg",
  "Pelikaan",
  "Pepinus",
  "Pernis",
  "Pers",
  "Pesaken",
  "Peters",
  "Petten",
  "Piaam",
  "Pieperij",
  "Piepert",
  "Piershil",
  "Pieter",
  "Pikesyl",
  "Piksen",
  "Pingjum",
  "Pinkeveer",
  "Pitteperk",
  "Plaat",
  "Plaats",
  "Plak",
  "Plantage",
  "Plas",
  "Plat",
  "Plein",
  "Poffert",
  "Polen",
  "Polle",
  "Pollen",
  "Ponte",
  "Poonhaven",
  "Poppen",
  "Posterenk",
  "Posthoorn",
  "Pot",
  "Praets",
  "Prickart",
  "Puiflijk",
  "Punt",
  "Purmer",
  "Purmerend",
  "Puth",
  "Putse",
  "Putten",
  "Putters",
  "Pyramide",
  "Raai",
  "Raak",
  "Raam",
  "Raar",
  "Raard",
  "Raayen",
  "Raerd",
  "Rakens",
  "Rakt",
  "Rand",
  "Rande",
  "Randen",
  "Ranum",
  "Raren",
  "Rasquert",
  "Ratte",
  "Ravensgat",
  "Reahûs",
  "Rechteren",
  "Rectum",
  "Reduzum",
  "Reeth",
  "Reidswal",
  "Reitsum",
  "Remswerd",
  "Renesse",
  "Renkum",
  "Renneborg",
  "Rens",
  "Respel",
  "Ressen",
  "Reters",
  "Reth",
  "Reuth",
  "Reutje",
  "Reuzen",
  "Rewert",
  "Rhaan",
  "Rheder",
  "Rhee",
  "Rhenoy",
  "Rhoon",
  "Ridder",
  "Riel",
  "Rien",
  "Riet",
  "Rietven",
  "Rijckholt",
  "Rijen",
  "Rijke",
  "Rijkel",
  "Rijker",
  "Rijlst",
  "Rijnsater",
  "Rijsb",
  "Rijsoord",
  "Rijt",
  "Rijtjes",
  "Ril",
  "Rimpelt",
  "Rink",
  "Rips",
  "Rith",
  "Ritsuma",
  "Roeke",
  "Roekel",
  "Roelage",
  "Roels",
  "Roermond",
  "Roeven",
  "Roggel",
  "Rohel",
  "Rolaf",
  "Roligt",
  "Rollecate",
  "Rolpaal",
  "Rome",
  "Rond",
  "Ronduite",
  "Rood",
  "Roodehaan",
  "Rooden",
  "Roond",
  "Roosteren",
  "Rooth",
  "Ropta",
  "Roskam",
  "Rothem",
  "Rott",
  "Rotte",
  "Rotter",
  "Rotting",
  "Rottum",
  "Rozendaal",
  "Rucphen",
  "Ruif",
  "Ruigen",
  "Ruigezand",
  "Ruimel",
  "Ruinen",
  "Ruischer",
  "Ruiten",
  "Rukven",
  "Rullen",
  "Rumpt",
  "Rund",
  "Rusven",
  "Rut",
  "Ryptsjerk",
  "Rytseterp",
  "Saaksum",
  "Saaxum",
  "Salverd",
  "Sandebuur",
  "Santfort",
  "Santpoort",
  "Sasput",
  "Sauwerd",
  "Schaa",
  "Schaaphok",
  "Schaaps",
  "Schadron",
  "Schafelt",
  "Schaft",
  "Schagen",
  "Schager",
  "Schandelo",
  "Schans",
  "Schapers",
  "Scharen",
  "Scharne",
  "Scharster",
  "Schatkuil",
  "Schaveren",
  "Scheemder",
  "Schelf",
  "Schellach",
  "Schelm",
  "Schettens",
  "Schey",
  "Schieven",
  "Schijf",
  "Schijndel",
  "Schillers",
  "Schimmert",
  "Schin",
  "Schinnen",
  "Schippers",
  "School",
  "Schoon",
  "Schoonen",
  "Schoor",
  "Schoorl",
  "Schoot",
  "Schore",
  "Schoter",
  "Schotters",
  "Schouw",
  "Schouwen",
  "Schouwer",
  "Schraard",
  "Schrap",
  "Schuilen",
  "Schuring",
  "Schuwacht",
  "Sebalde",
  "Seerijp",
  "Sell",
  "Selmien",
  "Selwerd",
  "Seroos",
  "Seters",
  "Sibbe",
  "Siberië",
  "Siegers",
  "Simpel",
  "Sinouts",
  "Sinsel",
  "Sint",
  "Sion",
  "Sittard",
  "Sjunga",
  "Skarl",
  "Skillaerd",
  "Skou",
  "Skrins",
  "Skyldum",
  "Slee",
  "Sleen",
  "Slegge",
  "Slek",
  "Slichten",
  "Sliffert",
  "Slijkwell",
  "Slikken",
  "Sloot",
  "Sluis",
  "Smakt",
  "Smal",
  "Smalle",
  "Smeerling",
  "Smelbrêge",
  "Smele",
  "Smilde",
  "Smits",
  "Sneek",
  "Sneiders",
  "Snelle",
  "Sneps",
  "Snikzwaag",
  "Snipperij",
  "Snoden",
  "Soeter",
  "Solwerd",
  "Someren",
  "Sopsum",
  "Spaanrijt",
  "Spaanse",
  "Spaken",
  "Spannen",
  "Spannum",
  "Spears",
  "Spek",
  "Spekklef",
  "Spekt",
  "Speuld",
  "Speurgt",
  "Spier",
  "Spijk",
  "Spik",
  "Spits",
  "Spoolde",
  "Spoor",
  "Sprang",
  "Sprundel",
  "Spurkt",
  "Stad",
  "Stadterij",
  "Starten",
  "Stations",
  "Staverden",
  "Stedum",
  "Steeg",
  "Steegh",
  "Steel",
  "Steen",
  "Steenkamp",
  "Steenoven",
  "Steenpaal",
  "Steensel",
  "Steenvak",
  "Stegen",
  "Steger",
  "Stegeren",
  "Stein",
  "Sterken",
  "Sterre",
  "Steurgat",
  "Stevens",
  "Stevert",
  "Stiem",
  "Stiens",
  "Stitswerd",
  "Stobben",
  "Stokhem",
  "Stokkelen",
  "Stokkum",
  "Stokske",
  "Stokt",
  "Stolpen",
  "Stomme",
  "Stoof",
  "Stork",
  "Stouten",
  "Stox",
  "Strand",
  "Straten",
  "Strateris",
  "Streek",
  "Strepen",
  "Streukel",
  "Strij",
  "Strijen",
  "Strijp",
  "Stroet",
  "Stroo",
  "Stroopuit",
  "Strubben",
  "Strucht",
  "Strype",
  "Stuw",
  "Sumar",
  "Sumarre",
  "Surhuizum",
  "Susteren",
  "Suttum",
  "Suwâld",
  "Swaenwert",
  "Swalmen",
  "Sweik",
  "Syt",
  "Sânfurd",
  "Taarlo",
  "Teeffelen",
  "Teije",
  "Teijl",
  "Telgt",
  "Tempel",
  "Ter",
  "Terband",
  "Terblijt",
  "Terdiek",
  "Tereyken",
  "Tergêft",
  "Terhagen",
  "Terheijl",
  "Terherne",
  "Terkaple",
  "Terlet",
  "Terlinden",
  "Termaar",
  "Termoors",
  "Termunten",
  "Termunter",
  "Ternaard",
  "Teroele",
  "Terover",
  "Tersoal",
  "Tervaten",
  "Tervoorst",
  "Tervoort",
  "Terwispel",
  "Terwolde",
  "Terziet",
  "Teuge",
  "Theetuin",
  "Themaat",
  "Tholen",
  "Thull",
  "Thuserhof",
  "Tibma",
  "Tiel",
  "Tielse",
  "Tiggelt",
  "Tijnje",
  "Tike",
  "Til",
  "Timmer",
  "Tippe",
  "Tjaard",
  "Tjams",
  "Tjerkwerd",
  "Tjoene",
  "Tolbert",
  "Tolkamer",
  "Tommel",
  "Tongeren",
  "Tongerlo",
  "Tonsel",
  "Toom",
  "Toornwerd",
  "Top",
  "Toren",
  "Toterfout",
  "Toven",
  "Tragel",
  "Tranendal",
  "Trege",
  "Trent",
  "Tricht",
  "Triemen",
  "Trimpert",
  "Trintelen",
  "Tritzum",
  "Tronde",
  "Trophorne",
  "Trutjes",
  "Tuil",
  "Tull",
  "Tungelroy",
  "Turns",
  "Tusschen",
  "Tuut",
  "Tuuthees",
  "Twee",
  "Tweedeweg",
  "TweeTol",
  "Twekkelo",
  "Twello",
  "Twijzel",
  "Twijzeler",
  "Twisk",
  "Tynaarlo",
  "Tytsjerk",
  "Ubach",
  "Ubbena",
  "Ubber",
  "Uddel",
  "Uffelsen",
  "Uffelte",
  "Uit",
  "Uiter",
  "Uithoorn",
  "Uitwierde",
  "Ulfter",
  "Ulicoten",
  "Ulrum",
  "Ulsda",
  "Ulvend",
  "Unga",
  "Uppel",
  "Usquert",
  "Usselo",
  "Vaals",
  "Vaar",
  "Vaarle",
  "Vaart",
  "Vaesrade",
  "Valk",
  "Valken",
  "Valom",
  "Valsteeg",
  "Varik",
  "Varsen",
  "Varssel",
  "Vebenabos",
  "Vecht",
  "Veecaten",
  "Veele",
  "Veeler",
  "Veen",
  "Veenhof",
  "Veenhoop",
  "Veenhuis",
  "Veere",
  "Veessen",
  "Veghel",
  "Veld",
  "Veldbraak",
  "Velde",
  "Velden",
  "Veldhuis",
  "Veldzicht",
  "Velp",
  "Velsen",
  "Veluwe",
  "Vemde",
  "Ven",
  "Venbe",
  "Vene",
  "Venekoten",
  "Venlo",
  "Venne",
  "Venray",
  "Venweg",
  "Vergelt",
  "Verloren",
  "Vessem",
  "Vestjens",
  "Vet",
  "Vetterik",
  "Veulen",
  "Vianen",
  "Viel",
  "Vier",
  "Vierhuis",
  "Vijcie",
  "Vijf",
  "Vilgert",
  "Vilsteren",
  "Vilt",
  "Vink",
  "Vinkel",
  "Vinken",
  "Vinkepas",
  "Vis",
  "Visschers",
  "Vissers",
  "Vlaas",
  "Vlake",
  "Vlas",
  "Vledder",
  "Vleet",
  "Vleuten",
  "Vlie",
  "Vliegert",
  "Vlieghuis",
  "Vlijmen",
  "Vliss",
  "Vlist",
  "Vlodrop",
  "Vloei",
  "Vloet",
  "Vlootkant",
  "Vogelfort",
  "Volthe",
  "Voor",
  "Voorne",
  "Voorrijp",
  "Voorst",
  "Voorstad",
  "Voorste",
  "Voorster",
  "Voort",
  "Voortje",
  "Voorweg",
  "Vorchten",
  "Vorst",
  "Vorsten",
  "Voske",
  "Voskuil",
  "Vosse",
  "Vossebelt",
  "Vosselen",
  "Vossen",
  "Voulwames",
  "Vrachelen",
  "Vragender",
  "Vredepeel",
  "Vree",
  "Vries",
  "Vriezen",
  "Vrij",
  "Vrijhoeve",
  "Vrilk",
  "Vroe",
  "Vroelen",
  "Vuile",
  "Vuilpan",
  "Vuren",
  "Waaksens",
  "Waal",
  "Waar",
  "Waard",
  "Waarde",
  "Waarden",
  "Waarder",
  "Waatskamp",
  "Wachtum",
  "Waddinx",
  "Wadway",
  "Wadwerd",
  "Wagen",
  "Waije",
  "Walder",
  "Walik",
  "Walsert",
  "Wammert",
  "Wanneper",
  "Wanroij",
  "Wapen",
  "Wapse",
  "Wapser",
  "Warf",
  "Warffum",
  "Warfster",
  "Warmen",
  "Warmond",
  "Warnia",
  "Warstiens",
  "Warten",
  "Waspik",
  "Water",
  "Wateren",
  "Waterkant",
  "Waterop",
  "Waterval",
  "Waver",
  "Weakens",
  "Wedde",
  "Wedder",
  "Wee",
  "Weeg",
  "Weende",
  "Weerd",
  "Weerdinge",
  "Weere",
  "Weert",
  "Weerwille",
  "Wehe",
  "Wehl",
  "Weidum",
  "Weij",
  "Weijer",
  "Weijpoort",
  "Weilens",
  "Weimeren",
  "Weipoort",
  "Weite",
  "Weitemans",
  "Weiwerd",
  "Wekerom",
  "Wele",
  "Wells",
  "Welsum",
  "Wely",
  "Wenum",
  "Weper",
  "Wercheren",
  "Weren",
  "Wergea",
  "Werk",
  "Wernhouts",
  "Wesch",
  "Wessing",
  "Wessinge",
  "West",
  "Westeneng",
  "Wester",
  "Westerein",
  "Westerlee",
  "Westernie",
  "Westerse",
  "Westhim",
  "Westlaren",
  "Westmaas",
  "Westrik",
  "Wetering",
  "Wetsens",
  "Weurt",
  "Wevers",
  "Weverslo",
  "Wezel",
  "Wezep",
  "Wezup",
  "Wezuper",
  "Wielder",
  "Wieler",
  "Wielse",
  "Wiene",
  "Wierren",
  "Wierum",
  "Wiesel",
  "Wieuwens",
  "Wijchen",
  "Wijnaldum",
  "Wijnb",
  "Wijnje",
  "Wijster",
  "Wijthmen",
  "Wijzend",
  "Wilderhof",
  "Wildert",
  "Wilgen",
  "Wilp",
  "Wils",
  "Wilsum",
  "Winde",
  "Windraak",
  "Winkel",
  "Winkels",
  "Winssen",
  "Winsum",
  "Wintelre",
  "Winthagen",
  "Wirdum",
  "Wisse",
  "Wissel",
  "Wissen",
  "Witharen",
  "Withuis",
  "Witman",
  "Witmarsum",
  "Witrijt",
  "Witte",
  "Wittelte",
  "Witten",
  "Wiuwert",
  "Wjelsryp",
  "Woerd",
  "Woerdense",
  "Woezik",
  "Wognum",
  "Wolfers",
  "Wolfhaag",
  "Wolfhagen",
  "Wolfheze",
  "Wolfs",
  "Wolfshuis",
  "Wolling",
  "Wolsum",
  "Wommels",
  "Wonne",
  "Wons",
  "Woord",
  "Wopereis",
  "Wordragen",
  "Wormer",
  "Worsum",
  "Woubrugge",
  "Wouwse",
  "Wulpenbek",
  "Wyns",
  "Wytgaard",
  "Wâldsein",
  "Wânswert",
  "Yerseke",
  "Yndyk",
  "Zaamslag",
  "Zaarvlaas",
  "Zalk",
  "Zand",
  "Zande",
  "Zandfort",
  "Zandkant",
  "Zandoerle",
  "Zandplaat",
  "Zandpol",
  "Zandput",
  "Zandvoort",
  "Zee",
  "Zeegat",
  "Zeegse",
  "Zeerijp",
  "Zeesse",
  "Zegge",
  "Zeijen",
  "Zeijer",
  "Zeist",
  "Zelder",
  "Zelen",
  "Zelt",
  "Zenderen",
  "Zethuis",
  "Zeven",
  "Zevenhuis",
  "Zierikzee",
  "Zieuwent",
  "Zijder",
  "Zijdewind",
  "Zijp",
  "Zijper",
  "Zijtaart",
  "Zilven",
  "Zinkweg",
  "Zittard",
  "Zoeke",
  "Zoelen",
  "Zoelmond",
  "Zoerte",
  "Zoeter",
  "Zoggel",
  "Zomerven",
  "Zond",
  "Zorgvlied",
  "Zoutkamp",
  "Zuid",
  "Zuider",
  "Zuidhorn",
  "Zuidlaren",
  "Zuidwolde",
  "Zuidzande",
  "Zuidzijde",
  "Zuilichem",
  "Zundert",
  "Zurich",
  "Zutphen",
  "Zuuk",
  "Zwaag",
  "Zwager",
  "Zwanegat",
  "Zwart",
  "Zwarte",
  "Zweek",
  "Zwiggelte",
  "Zwijn",
  "Zwinderen",
  "Zwolle"
];

},{}],846:[function(require,module,exports){
module["exports"] = [
  " aan de IJssel",
  " aan de Rijn",
  "ambacht",
  "beek",
  "berg",
  "bergen",
  "bosch",
  "broek",
  "brug",
  "buren",
  "burg",
  "buurt",
  "dam",
  "dijk",
  "dijke",
  "donk",
  "dorp",
  "eind",
  "enmaes",
  "gat",
  "geest",
  "heide",
  "hoek",
  "horst",
  "hout",
  "hoven",
  "huizen",
  "ingen",
  "kerk",
  "laar",
  "land",
  "meer",
  "recht",
  "schoten",
  "sluis",
  "stroom",
  "swaerd",
  "veen",
  "veld",
  "vliet",
  "weer",
  "wier",
  "wijk",
  "woud",
  "woude",
  "zijl",
  ""
];

},{}],847:[function(require,module,exports){
module["exports"] = [
  "Afghanistan",
  "Akrotiri",
  "Albanië",
  "Algerije",
  "Amerikaanse Maagdeneilanden",
  "Amerikaans-Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antarctica",
  "Antigua en Barbuda",
  "Arctic Ocean",
  "Argentinië",
  "Armenië",
  "Aruba",
  "Ashmore and Cartier Islands",
  "Atlantic Ocean",
  "Australië",
  "Azerbeidzjan",
  "Bahama's",
  "Bahrein",
  "Bangladesh",
  "Barbados",
  "Belarus",
  "België",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivië",
  "Bosnië-Herzegovina",
  "Botswana",
  "Bouvet Island",
  "Brazilië",
  "British Indian Ocean Territory",
  "Britse Maagdeneilanden",
  "Brunei",
  "Bulgarije",
  "Burkina Faso",
  "Burundi",
  "Cambodja",
  "Canada",
  "Caymaneilanden",
  "Centraal-Afrikaanse Republiek",
  "Chili",
  "China",
  "Christmas Island",
  "Clipperton Island",
  "Cocos (Keeling) Islands",
  "Colombia",
  "Comoren (Unie)",
  "Congo (Democratische Republiek)",
  "Congo (Volksrepubliek)",
  "Cook",
  "Coral Sea Islands",
  "Costa Rica",
  "Cuba",
  "Cyprus",
  "Denemarken",
  "Dhekelia",
  "Djibouti",
  "Dominica",
  "Dominicaanse Republiek",
  "Duitsland",
  "Ecuador",
  "Egypte",
  "El Salvador",
  "Equatoriaal-Guinea",
  "Eritrea",
  "Estland",
  "Ethiopië",
  "European Union",
  "Falkland",
  "Faroe Islands",
  "Fiji",
  "Filipijnen",
  "Finland",
  "Frankrijk",
  "Frans-Polynesië",
  "French Southern and Antarctic Lands",
  "Gabon",
  "Gambia",
  "Gaza Strip",
  "Georgië",
  "Ghana",
  "Gibraltar",
  "Grenada",
  "Griekenland",
  "Groenland",
  "Guam",
  "Guatemala",
  "Guernsey",
  "Guinea",
  "Guinee-Bissau",
  "Guyana",
  "Haïti",
  "Heard Island and McDonald Islands",
  "Heilige Stoel",
  "Honduras",
  "Hongarije",
  "Hongkong",
  "Ierland",
  "IJsland",
  "India",
  "Indian Ocean",
  "Indonesië",
  "Irak",
  "Iran",
  "Isle of Man",
  "Israël",
  "Italië",
  "Ivoorkust",
  "Jamaica",
  "Jan Mayen",
  "Japan",
  "Jemen",
  "Jersey",
  "Jordanië",
  "Kaapverdië",
  "Kameroen",
  "Kazachstan",
  "Kenia",
  "Kirgizstan",
  "Kiribati",
  "Koeweit",
  "Kroatië",
  "Laos",
  "Lesotho",
  "Letland",
  "Libanon",
  "Liberia",
  "Libië",
  "Liechtenstein",
  "Litouwen",
  "Luxemburg",
  "Macao",
  "Macedonië",
  "Madagaskar",
  "Malawi",
  "Maldiven",
  "Maleisië",
  "Mali",
  "Malta",
  "Marokko",
  "Marshall Islands",
  "Mauritanië",
  "Mauritius",
  "Mayotte",
  "Mexico",
  "Micronesia, Federated States of",
  "Moldavië",
  "Monaco",
  "Mongolië",
  "Montenegro",
  "Montserrat",
  "Mozambique",
  "Myanmar",
  "Namibië",
  "Nauru",
  "Navassa Island",
  "Nederland",
  "Nederlandse Antillen",
  "Nepal",
  "Ngwane",
  "Nicaragua",
  "Nieuw-Caledonië",
  "Nieuw-Zeeland",
  "Niger",
  "Nigeria",
  "Niue",
  "Noordelijke Marianen",
  "Noord-Korea",
  "Noorwegen",
  "Norfolk Island",
  "Oekraïne",
  "Oezbekistan",
  "Oman",
  "Oostenrijk",
  "Pacific Ocean",
  "Pakistan",
  "Palau",
  "Panama",
  "Papoea-Nieuw-Guinea",
  "Paracel Islands",
  "Paraguay",
  "Peru",
  "Pitcairn",
  "Polen",
  "Portugal",
  "Puerto Rico",
  "Qatar",
  "Roemenië",
  "Rusland",
  "Rwanda",
  "Saint Helena",
  "Saint Lucia",
  "Saint Vincent en de Grenadines",
  "Saint-Pierre en Miquelon",
  "Salomon",
  "Samoa",
  "San Marino",
  "São Tomé en Principe",
  "Saudi-Arabië",
  "Senegal",
  "Servië",
  "Seychellen",
  "Sierra Leone",
  "Singapore",
  "Sint-Kitts en Nevis",
  "Slovenië",
  "Slowakije",
  "Soedan",
  "Somalië",
  "South Georgia and the South Sandwich Islands",
  "Southern Ocean",
  "Spanje",
  "Spratly Islands",
  "Sri Lanka",
  "Suriname",
  "Svalbard",
  "Syrië",
  "Tadzjikistan",
  "Taiwan",
  "Tanzania",
  "Thailand",
  "Timor Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad en Tobago",
  "Tsjaad",
  "Tsjechië",
  "Tunesië",
  "Turkije",
  "Turkmenistan",
  "Turks-en Caicoseilanden",
  "Tuvalu",
  "Uganda",
  "Uruguay",
  "Vanuatu",
  "Venezuela",
  "Verenigd Koninkrijk",
  "Verenigde Arabische Emiraten",
  "Verenigde Staten van Amerika",
  "Vietnam",
  "Wake Island",
  "Wallis en Futuna",
  "Wereld",
  "West Bank",
  "Westelijke Sahara",
  "Zambia",
  "Zimbabwe",
  "Zuid-Afrika",
  "Zuid-Korea",
  "Zweden",
  "Zwitserland"
];

},{}],848:[function(require,module,exports){
module["exports"] = [
  "Nederland"
];

},{}],849:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.city = require("./city");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.default_country = require("./default_country");

},{"./building_number":843,"./city":844,"./city_prefix":845,"./city_suffix":846,"./country":847,"./default_country":848,"./postcode":850,"./secondary_address":851,"./state":852,"./street_address":853,"./street_name":854,"./street_suffix":855}],850:[function(require,module,exports){
module["exports"] = [
  "#### ??"
];

},{}],851:[function(require,module,exports){
module["exports"] = [
  "1 hoog",
  "2 hoog",
  "3 hoog"
];

},{}],852:[function(require,module,exports){
module["exports"] = [
  "Noord-Holland",
  "Zuid-Holland",
  "Utrecht",
  "Zeeland",
  "Overijssel",
  "Gelderland",
  "Drenthe",
  "Friesland",
  "Groningen",
  "Noord-Brabant",
  "Limburg",
  "Flevoland"
];

},{}],853:[function(require,module,exports){
arguments[4][209][0].apply(exports,arguments)
},{"dup":209}],854:[function(require,module,exports){
arguments[4][760][0].apply(exports,arguments)
},{"dup":760}],855:[function(require,module,exports){
module["exports"] = [
  "straat",
  "laan",
  "weg",
  "plantsoen",
  "park"
];

},{}],856:[function(require,module,exports){
arguments[4][423][0].apply(exports,arguments)
},{"./suffix":857,"dup":423}],857:[function(require,module,exports){
module["exports"] = [
  "BV",
  "V.O.F.",
  "Group",
  "en Zonen"
];

},{}],858:[function(require,module,exports){
var nl = {};
module['exports'] = nl;
nl.title = "Dutch";
nl.address = require("./address");
nl.company = require("./company");
nl.internet = require("./internet");
nl.lorem = require("./lorem");
nl.name = require("./name");
nl.phone_number = require("./phone_number");

},{"./address":849,"./company":856,"./internet":861,"./lorem":862,"./name":866,"./phone_number":873}],859:[function(require,module,exports){
module["exports"] = [
  "nl",
  "com",
  "net",
  "org"
];

},{}],860:[function(require,module,exports){
arguments[4][263][0].apply(exports,arguments)
},{"dup":263}],861:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":859,"./free_email":860,"dup":187}],862:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./supplemental":863,"./words":864,"dup":227}],863:[function(require,module,exports){
arguments[4][228][0].apply(exports,arguments)
},{"dup":228}],864:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"dup":229}],865:[function(require,module,exports){
module["exports"] = [
  "Amber",
  "Anna",
  "Anne",
  "Anouk",
  "Bas",
  "Bram",
  "Britt",
  "Daan",
  "Emma",
  "Eva",
  "Femke",
  "Finn",
  "Fleur",
  "Iris",
  "Isa",
  "Jan",
  "Jasper",
  "Jayden",
  "Jesse",
  "Johannes",
  "Julia",
  "Julian",
  "Kevin",
  "Lars",
  "Lieke",
  "Lisa",
  "Lotte",
  "Lucas",
  "Luuk",
  "Maud",
  "Max",
  "Mike",
  "Milan",
  "Nick",
  "Niels",
  "Noa",
  "Rick",
  "Roos",
  "Ruben",
  "Sander",
  "Sanne",
  "Sem",
  "Sophie",
  "Stijn",
  "Sven",
  "Thijs",
  "Thijs",
  "Thomas",
  "Tim",
  "Tom"
];

},{}],866:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.tussenvoegsel = require("./tussenvoegsel");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./first_name":865,"./last_name":867,"./name":868,"./prefix":869,"./suffix":870,"./tussenvoegsel":871}],867:[function(require,module,exports){
module["exports"] = [
  "Bakker",
  "Beek",
  "Berg",
  "Boer",
  "Bos",
  "Bosch",
  "Brink",
  "Broek",
  "Brouwer",
  "Bruin",
  "Dam",
  "Dekker",
  "Dijk",
  "Dijkstra",
  "Graaf",
  "Groot",
  "Haan",
  "Hendriks",
  "Heuvel",
  "Hoek",
  "Jacobs",
  "Jansen",
  "Janssen",
  "Jong",
  "Klein",
  "Kok",
  "Koning",
  "Koster",
  "Leeuwen",
  "Linden",
  "Maas",
  "Meer",
  "Meijer",
  "Mulder",
  "Peters",
  "Ruiter",
  "Schouten",
  "Smit",
  "Smits",
  "Stichting",
  "Veen",
  "Ven",
  "Vermeulen",
  "Visser",
  "Vliet",
  "Vos",
  "Vries",
  "Wal",
  "Willems",
  "Wit"
];

},{}],868:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name} #{suffix}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{tussenvoegsel} #{last_name}",
  "#{first_name} #{tussenvoegsel} #{last_name}"
];

},{}],869:[function(require,module,exports){
module["exports"] = [
  "Dhr.",
  "Mevr. Dr.",
  "Bsc",
  "Msc",
  "Prof."
];

},{}],870:[function(require,module,exports){
arguments[4][824][0].apply(exports,arguments)
},{"dup":824}],871:[function(require,module,exports){
module["exports"] = [
  "van",
  "van de",
  "van den",
  "van 't",
  "van het",
  "de",
  "den"
];

},{}],872:[function(require,module,exports){
module["exports"] = [
  "(####) ######",
  "##########",
  "06########",
  "06 #### ####"
];

},{}],873:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":872,"dup":197}],874:[function(require,module,exports){
arguments[4][323][0].apply(exports,arguments)
},{"dup":323}],875:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"dup":199}],876:[function(require,module,exports){
module["exports"] = [
  "Aleksandrów Kujawski",
  "Aleksandrów Łódzki",
  "Alwernia",
  "Andrychów",
  "Annopol",
  "Augustów",
  "Babimost",
  "Baborów",
  "Baranów Sandomierski",
  "Barcin",
  "Barczewo",
  "Bardo",
  "Barlinek",
  "Bartoszyce",
  "Barwice",
  "Bełchatów",
  "Bełżyce",
  "Będzin",
  "Biała",
  "Biała Piska",
  "Biała Podlaska",
  "Biała Rawska",
  "Białobrzegi",
  "Białogard",
  "Biały Bór",
  "Białystok",
  "Biecz",
  "Bielawa",
  "Bielsk Podlaski",
  "Bielsko-Biała",
  "Bieruń",
  "Bierutów",
  "Bieżuń",
  "Biłgoraj",
  "Biskupiec",
  "Bisztynek",
  "Blachownia",
  "Błaszki",
  "Błażowa",
  "Błonie",
  "Bobolice",
  "Bobowa",
  "Bochnia",
  "Bodzentyn",
  "Bogatynia",
  "Boguchwała",
  "Boguszów-Gorce",
  "Bojanowo",
  "Bolesławiec",
  "Bolków",
  "Borek Wielkopolski",
  "Borne Sulinowo",
  "Braniewo",
  "Brańsk",
  "Brodnica",
  "Brok",
  "Brusy",
  "Brwinów",
  "Brzeg",
  "Brzeg Dolny",
  "Brzesko",
  "Brzeszcze",
  "Brześć Kujawski",
  "Brzeziny",
  "Brzostek",
  "Brzozów",
  "Buk",
  "Bukowno",
  "Busko-Zdrój",
  "Bychawa",
  "Byczyna",
  "Bydgoszcz",
  "Bystrzyca Kłodzka",
  "Bytom",
  "Bytom Odrzański",
  "Bytów",
  "Cedynia",
  "Chełm",
  "Chełmek",
  "Chełmno",
  "Chełmża",
  "Chęciny",
  "Chmielnik",
  "Chocianów",
  "Chociwel",
  "Chodecz",
  "Chodzież",
  "Chojna",
  "Chojnice",
  "Chojnów",
  "Choroszcz",
  "Chorzele",
  "Chorzów",
  "Choszczno",
  "Chrzanów",
  "Ciechanowiec",
  "Ciechanów",
  "Ciechocinek",
  "Cieszanów",
  "Cieszyn",
  "Ciężkowice",
  "Cybinka",
  "Czaplinek",
  "Czarna Białostocka",
  "Czarna Woda",
  "Czarne",
  "Czarnków",
  "Czchów",
  "Czechowice-Dziedzice",
  "Czeladź",
  "Czempiń",
  "Czerniejewo",
  "Czersk",
  "Czerwieńsk",
  "Czerwionka-Leszczyny",
  "Częstochowa",
  "Człopa",
  "Człuchów",
  "Czyżew",
  "Ćmielów",
  "Daleszyce",
  "Darłowo",
  "Dąbie",
  "Dąbrowa Białostocka",
  "Dąbrowa Górnicza",
  "Dąbrowa Tarnowska",
  "Debrzno",
  "Dębica",
  "Dęblin",
  "Dębno",
  "Dobczyce",
  "Dobiegniew",
  "Dobra (powiat łobeski)",
  "Dobra (powiat turecki)",
  "Dobre Miasto",
  "Dobrodzień",
  "Dobrzany",
  "Dobrzyń nad Wisłą",
  "Dolsk",
  "Drawno",
  "Drawsko Pomorskie",
  "Drezdenko",
  "Drobin",
  "Drohiczyn",
  "Drzewica",
  "Dukla",
  "Duszniki-Zdrój",
  "Dynów",
  "Działdowo",
  "Działoszyce",
  "Działoszyn",
  "Dzierzgoń",
  "Dzierżoniów",
  "Dziwnów",
  "Elbląg",
  "Ełk",
  "Frampol",
  "Frombork",
  "Garwolin",
  "Gąbin",
  "Gdańsk",
  "Gdynia",
  "Giżycko",
  "Glinojeck",
  "Gliwice",
  "Głogów",
  "Głogów Małopolski",
  "Głogówek",
  "Głowno",
  "Głubczyce",
  "Głuchołazy",
  "Głuszyca",
  "Gniew",
  "Gniewkowo",
  "Gniezno",
  "Gogolin",
  "Golczewo",
  "Goleniów",
  "Golina",
  "Golub-Dobrzyń",
  "Gołańcz",
  "Gołdap",
  "Goniądz",
  "Gorlice",
  "Gorzów Śląski",
  "Gorzów Wielkopolski",
  "Gostynin",
  "Gostyń",
  "Gościno",
  "Gozdnica",
  "Góra",
  "Góra Kalwaria",
  "Górowo Iławeckie",
  "Górzno",
  "Grabów nad Prosną",
  "Grajewo",
  "Grodków",
  "Grodzisk Mazowiecki",
  "Grodzisk Wielkopolski",
  "Grójec",
  "Grudziądz",
  "Grybów",
  "Gryfice",
  "Gryfino",
  "Gryfów Śląski",
  "Gubin",
  "Hajnówka",
  "Halinów",
  "Hel",
  "Hrubieszów",
  "Iława",
  "Iłowa",
  "Iłża",
  "Imielin",
  "Inowrocław",
  "Ińsko",
  "Iwonicz-Zdrój",
  "Izbica Kujawska",
  "Jabłonowo Pomorskie",
  "Janikowo",
  "Janowiec Wielkopolski",
  "Janów Lubelski",
  "Jarocin",
  "Jarosław",
  "Jasień",
  "Jasło",
  "Jastarnia",
  "Jastrowie",
  "Jastrzębie-Zdrój",
  "Jawor",
  "Jaworzno",
  "Jaworzyna Śląska",
  "Jedlicze",
  "Jedlina-Zdrój",
  "Jedwabne",
  "Jelcz-Laskowice",
  "Jelenia Góra",
  "Jeziorany",
  "Jędrzejów",
  "Jordanów",
  "Józefów (powiat biłgorajski)",
  "Józefów (powiat otwocki)",
  "Jutrosin",
  "Kalety",
  "Kalisz",
  "Kalisz Pomorski",
  "Kalwaria Zebrzydowska",
  "Kałuszyn",
  "Kamienna Góra",
  "Kamień Krajeński",
  "Kamień Pomorski",
  "Kamieńsk",
  "Kańczuga",
  "Karczew",
  "Kargowa",
  "Karlino",
  "Karpacz",
  "Kartuzy",
  "Katowice",
  "Kazimierz Dolny",
  "Kazimierza Wielka",
  "Kąty Wrocławskie",
  "Kcynia",
  "Kędzierzyn-Koźle",
  "Kępice",
  "Kępno",
  "Kętrzyn",
  "Kęty",
  "Kielce",
  "Kietrz",
  "Kisielice",
  "Kleczew",
  "Kleszczele",
  "Kluczbork",
  "Kłecko",
  "Kłobuck",
  "Kłodawa",
  "Kłodzko",
  "Knurów",
  "Knyszyn",
  "Kobylin",
  "Kobyłka",
  "Kock",
  "Kolbuszowa",
  "Kolno",
  "Kolonowskie",
  "Koluszki",
  "Kołaczyce",
  "Koło",
  "Kołobrzeg",
  "Koniecpol",
  "Konin",
  "Konstancin-Jeziorna",
  "Konstantynów Łódzki",
  "Końskie",
  "Koprzywnica",
  "Korfantów",
  "Koronowo",
  "Korsze",
  "Kosów Lacki",
  "Kostrzyn",
  "Kostrzyn nad Odrą",
  "Koszalin",
  "Kościan",
  "Kościerzyna",
  "Kowal",
  "Kowalewo Pomorskie",
  "Kowary",
  "Koziegłowy",
  "Kozienice",
  "Koźmin Wielkopolski",
  "Kożuchów",
  "Kórnik",
  "Krajenka",
  "Kraków",
  "Krapkowice",
  "Krasnobród",
  "Krasnystaw",
  "Kraśnik",
  "Krobia",
  "Krosno",
  "Krosno Odrzańskie",
  "Krośniewice",
  "Krotoszyn",
  "Kruszwica",
  "Krynica Morska",
  "Krynica-Zdrój",
  "Krynki",
  "Krzanowice",
  "Krzepice",
  "Krzeszowice",
  "Krzywiń",
  "Krzyż Wielkopolski",
  "Książ Wielkopolski",
  "Kudowa-Zdrój",
  "Kunów",
  "Kutno",
  "Kuźnia Raciborska",
  "Kwidzyn",
  "Lądek-Zdrój",
  "Legionowo",
  "Legnica",
  "Lesko",
  "Leszno",
  "Leśna",
  "Leśnica",
  "Lewin Brzeski",
  "Leżajsk",
  "Lębork",
  "Lędziny",
  "Libiąż",
  "Lidzbark",
  "Lidzbark Warmiński",
  "Limanowa",
  "Lipiany",
  "Lipno",
  "Lipsk",
  "Lipsko",
  "Lubaczów",
  "Lubań",
  "Lubartów",
  "Lubawa",
  "Lubawka",
  "Lubień Kujawski",
  "Lubin",
  "Lublin",
  "Lubliniec",
  "Lubniewice",
  "Lubomierz",
  "Luboń",
  "Lubraniec",
  "Lubsko",
  "Lwówek",
  "Lwówek Śląski",
  "Łabiszyn",
  "Łańcut",
  "Łapy",
  "Łasin",
  "Łask",
  "Łaskarzew",
  "Łaszczów",
  "Łaziska Górne",
  "Łazy",
  "Łeba",
  "Łęczna",
  "Łęczyca",
  "Łęknica",
  "Łobez",
  "Łobżenica",
  "Łochów",
  "Łomianki",
  "Łomża",
  "Łosice",
  "Łowicz",
  "Łódź",
  "Łuków",
  "Maków Mazowiecki",
  "Maków Podhalański",
  "Malbork",
  "Małogoszcz",
  "Małomice",
  "Margonin",
  "Marki",
  "Maszewo",
  "Miasteczko Śląskie",
  "Miastko",
  "Michałowo",
  "Miechów",
  "Miejska Górka",
  "Mielec",
  "Mieroszów",
  "Mieszkowice",
  "Międzybórz",
  "Międzychód",
  "Międzylesie",
  "Międzyrzec Podlaski",
  "Międzyrzecz",
  "Międzyzdroje",
  "Mikołajki",
  "Mikołów",
  "Mikstat",
  "Milanówek",
  "Milicz",
  "Miłakowo",
  "Miłomłyn",
  "Miłosław",
  "Mińsk Mazowiecki",
  "Mirosławiec",
  "Mirsk",
  "Mława",
  "Młynary",
  "Mogielnica",
  "Mogilno",
  "Mońki",
  "Morąg",
  "Mordy",
  "Moryń",
  "Mosina",
  "Mrągowo",
  "Mrocza",
  "Mszana Dolna",
  "Mszczonów",
  "Murowana Goślina",
  "Muszyna",
  "Mysłowice",
  "Myszków",
  "Myszyniec",
  "Myślenice",
  "Myślibórz",
  "Nakło nad Notecią",
  "Nałęczów",
  "Namysłów",
  "Narol",
  "Nasielsk",
  "Nekla",
  "Nidzica",
  "Niemcza",
  "Niemodlin",
  "Niepołomice",
  "Nieszawa",
  "Nisko",
  "Nowa Dęba",
  "Nowa Ruda",
  "Nowa Sarzyna",
  "Nowa Sól",
  "Nowe",
  "Nowe Brzesko",
  "Nowe Miasteczko",
  "Nowe Miasto Lubawskie",
  "Nowe Miasto nad Pilicą",
  "Nowe Skalmierzyce",
  "Nowe Warpno",
  "Nowogard",
  "Nowogrodziec",
  "Nowogród",
  "Nowogród Bobrzański",
  "Nowy Dwór Gdański",
  "Nowy Dwór Mazowiecki",
  "Nowy Sącz",
  "Nowy Staw",
  "Nowy Targ",
  "Nowy Tomyśl",
  "Nowy Wiśnicz",
  "Nysa",
  "Oborniki",
  "Oborniki Śląskie",
  "Obrzycko",
  "Odolanów",
  "Ogrodzieniec",
  "Okonek",
  "Olecko",
  "Olesno",
  "Oleszyce",
  "Oleśnica",
  "Olkusz",
  "Olsztyn",
  "Olsztynek",
  "Olszyna",
  "Oława",
  "Opalenica",
  "Opatów",
  "Opoczno",
  "Opole",
  "Opole Lubelskie",
  "Orneta",
  "Orzesze",
  "Orzysz",
  "Osieczna",
  "Osiek",
  "Ostrołęka",
  "Ostroróg",
  "Ostrowiec Świętokrzyski",
  "Ostróda",
  "Ostrów Lubelski",
  "Ostrów Mazowiecka",
  "Ostrów Wielkopolski",
  "Ostrzeszów",
  "Ośno Lubuskie",
  "Oświęcim",
  "Otmuchów",
  "Otwock",
  "Ozimek",
  "Ozorków",
  "Ożarów",
  "Ożarów Mazowiecki",
  "Pabianice",
  "Paczków",
  "Pajęczno",
  "Pakość",
  "Parczew",
  "Pasłęk",
  "Pasym",
  "Pelplin",
  "Pełczyce",
  "Piaseczno",
  "Piaski",
  "Piastów",
  "Piechowice",
  "Piekary Śląskie",
  "Pieniężno",
  "Pieńsk",
  "Pieszyce",
  "Pilawa",
  "Pilica",
  "Pilzno",
  "Piła",
  "Piława Górna",
  "Pińczów",
  "Pionki",
  "Piotrków Kujawski",
  "Piotrków Trybunalski",
  "Pisz",
  "Piwniczna-Zdrój",
  "Pleszew",
  "Płock",
  "Płońsk",
  "Płoty",
  "Pniewy",
  "Pobiedziska",
  "Poddębice",
  "Podkowa Leśna",
  "Pogorzela",
  "Polanica-Zdrój",
  "Polanów",
  "Police",
  "Polkowice",
  "Połaniec",
  "Połczyn-Zdrój",
  "Poniatowa",
  "Poniec",
  "Poręba",
  "Poznań",
  "Prabuty",
  "Praszka",
  "Prochowice",
  "Proszowice",
  "Prószków",
  "Pruchnik",
  "Prudnik",
  "Prusice",
  "Pruszcz Gdański",
  "Pruszków",
  "Przasnysz",
  "Przecław",
  "Przedbórz",
  "Przedecz",
  "Przemków",
  "Przemyśl",
  "Przeworsk",
  "Przysucha",
  "Pszczyna",
  "Pszów",
  "Puck",
  "Puławy",
  "Pułtusk",
  "Puszczykowo",
  "Pyrzyce",
  "Pyskowice",
  "Pyzdry",
  "Rabka-Zdrój",
  "Raciąż",
  "Racibórz",
  "Radków",
  "Radlin",
  "Radłów",
  "Radom",
  "Radomsko",
  "Radomyśl Wielki",
  "Radymno",
  "Radziejów",
  "Radzionków",
  "Radzymin",
  "Radzyń Chełmiński",
  "Radzyń Podlaski",
  "Rajgród",
  "Rakoniewice",
  "Raszków",
  "Rawa Mazowiecka",
  "Rawicz",
  "Recz",
  "Reda",
  "Rejowiec Fabryczny",
  "Resko",
  "Reszel",
  "Rogoźno",
  "Ropczyce",
  "Różan",
  "Ruciane-Nida",
  "Ruda Śląska",
  "Rudnik nad Sanem",
  "Rumia",
  "Rybnik",
  "Rychwał",
  "Rydułtowy",
  "Rydzyna",
  "Ryglice",
  "Ryki",
  "Rymanów",
  "Ryn",
  "Rypin",
  "Rzepin",
  "Rzeszów",
  "Rzgów",
  "Sandomierz",
  "Sanok",
  "Sejny",
  "Serock",
  "Sędziszów",
  "Sędziszów Małopolski",
  "Sępopol",
  "Sępólno Krajeńskie",
  "Sianów",
  "Siechnice",
  "Siedlce",
  "Siemianowice Śląskie",
  "Siemiatycze",
  "Sieniawa",
  "Sieradz",
  "Sieraków",
  "Sierpc",
  "Siewierz",
  "Skalbmierz",
  "Skała",
  "Skarszewy",
  "Skaryszew",
  "Skarżysko-Kamienna",
  "Skawina",
  "Skępe",
  "Skierniewice",
  "Skoczów",
  "Skoki",
  "Skórcz",
  "Skwierzyna",
  "Sława",
  "Sławków",
  "Sławno",
  "Słomniki",
  "Słubice",
  "Słupca",
  "Słupsk",
  "Sobótka",
  "Sochaczew",
  "Sokołów Małopolski",
  "Sokołów Podlaski",
  "Sokółka",
  "Solec Kujawski",
  "Sompolno",
  "Sopot",
  "Sosnowiec",
  "Sośnicowice",
  "Stalowa Wola",
  "Starachowice",
  "Stargard Szczeciński",
  "Starogard Gdański",
  "Stary Sącz",
  "Staszów",
  "Stawiski",
  "Stawiszyn",
  "Stąporków",
  "Stęszew",
  "Stoczek Łukowski",
  "Stronie Śląskie",
  "Strumień",
  "Stryków",
  "Strzegom",
  "Strzelce Krajeńskie",
  "Strzelce Opolskie",
  "Strzelin",
  "Strzelno",
  "Strzyżów",
  "Sucha Beskidzka",
  "Suchań",
  "Suchedniów",
  "Suchowola",
  "Sulechów",
  "Sulejów",
  "Sulejówek",
  "Sulęcin",
  "Sulmierzyce",
  "Sułkowice",
  "Supraśl",
  "Suraż",
  "Susz",
  "Suwałki",
  "Swarzędz",
  "Syców",
  "Szadek",
  "Szamocin",
  "Szamotuły",
  "Szczawnica",
  "Szczawno-Zdrój",
  "Szczebrzeszyn",
  "Szczecin",
  "Szczecinek",
  "Szczekociny",
  "Szczucin",
  "Szczuczyn",
  "Szczyrk",
  "Szczytna",
  "Szczytno",
  "Szepietowo",
  "Szklarska Poręba",
  "Szlichtyngowa",
  "Szprotawa",
  "Sztum",
  "Szubin",
  "Szydłowiec",
  "Ścinawa",
  "Ślesin",
  "Śmigiel",
  "Śrem",
  "Środa Śląska",
  "Środa Wielkopolska",
  "Świątniki Górne",
  "Świdnica",
  "Świdnik",
  "Świdwin",
  "Świebodzice",
  "Świebodzin",
  "Świecie",
  "Świeradów-Zdrój",
  "Świerzawa",
  "Świętochłowice",
  "Świnoujście",
  "Tarczyn",
  "Tarnobrzeg",
  "Tarnogród",
  "Tarnowskie Góry",
  "Tarnów",
  "Tczew",
  "Terespol",
  "Tłuszcz",
  "Tolkmicko",
  "Tomaszów Lubelski",
  "Tomaszów Mazowiecki",
  "Toruń",
  "Torzym",
  "Toszek",
  "Trzcianka",
  "Trzciel",
  "Trzcińsko-Zdrój",
  "Trzebiatów",
  "Trzebinia",
  "Trzebnica",
  "Trzemeszno",
  "Tuchola",
  "Tuchów",
  "Tuczno",
  "Tuliszków",
  "Turek",
  "Tuszyn",
  "Twardogóra",
  "Tychowo",
  "Tychy",
  "Tyczyn",
  "Tykocin",
  "Tyszowce",
  "Ujazd",
  "Ujście",
  "Ulanów",
  "Uniejów",
  "Ustka",
  "Ustroń",
  "Ustrzyki Dolne",
  "Wadowice",
  "Wałbrzych",
  "Wałcz",
  "Warka",
  "Warszawa",
  "Warta",
  "Wasilków",
  "Wąbrzeźno",
  "Wąchock",
  "Wągrowiec",
  "Wąsosz",
  "Wejherowo",
  "Węgliniec",
  "Węgorzewo",
  "Węgorzyno",
  "Węgrów",
  "Wiązów",
  "Wieleń",
  "Wielichowo",
  "Wieliczka",
  "Wieluń",
  "Wieruszów",
  "Więcbork",
  "Wilamowice",
  "Wisła",
  "Witkowo",
  "Witnica",
  "Wleń",
  "Władysławowo",
  "Włocławek",
  "Włodawa",
  "Włoszczowa",
  "Wodzisław Śląski",
  "Wojcieszów",
  "Wojkowice",
  "Wojnicz",
  "Wolbórz",
  "Wolbrom",
  "Wolin",
  "Wolsztyn",
  "Wołczyn",
  "Wołomin",
  "Wołów",
  "Woźniki",
  "Wrocław",
  "Wronki",
  "Września",
  "Wschowa",
  "Wyrzysk",
  "Wysoka",
  "Wysokie Mazowieckie",
  "Wyszków",
  "Wyszogród",
  "Wyśmierzyce",
  "Zabłudów",
  "Zabrze",
  "Zagórów",
  "Zagórz",
  "Zakliczyn",
  "Zakopane",
  "Zakroczym",
  "Zalewo",
  "Zambrów",
  "Zamość",
  "Zator",
  "Zawadzkie",
  "Zawichost",
  "Zawidów",
  "Zawiercie",
  "Ząbki",
  "Ząbkowice Śląskie",
  "Zbąszynek",
  "Zbąszyń",
  "Zduny",
  "Zduńska Wola",
  "Zdzieszowice",
  "Zelów",
  "Zgierz",
  "Zgorzelec",
  "Zielona Góra",
  "Zielonka",
  "Ziębice",
  "Złocieniec",
  "Złoczew",
  "Złotoryja",
  "Złotów",
  "Złoty Stok",
  "Zwierzyniec",
  "Zwoleń",
  "Żabno",
  "Żagań",
  "Żarki",
  "Żarów",
  "Żary",
  "Żelechów",
  "Żerków",
  "Żmigród",
  "Żnin",
  "Żory",
  "Żukowo",
  "Żuromin",
  "Żychlin",
  "Żyrardów",
  "Żywiec"
];

},{}],877:[function(require,module,exports){
module["exports"] = [
  "Afganistan",
  "Albania",
  "Algieria",
  "Andora",
  "Angola",
  "Antigua i Barbuda",
  "Arabia Saudyjska",
  "Argentyna",
  "Armenia",
  "Australia",
  "Austria",
  "Azerbejdżan",
  "Bahamy",
  "Bahrajn",
  "Bangladesz",
  "Barbados",
  "Belgia",
  "Belize",
  "Benin",
  "Bhutan",
  "Białoruś",
  "Birma",
  "Boliwia",
  "Sucre",
  "Bośnia i Hercegowina",
  "Botswana",
  "Brazylia",
  "Brunei",
  "Bułgaria",
  "Burkina Faso",
  "Burundi",
  "Chile",
  "Chiny",
  "Chorwacja",
  "Cypr",
  "Czad",
  "Czarnogóra",
  "Czechy",
  "Dania",
  "Demokratyczna Republika Konga",
  "Dominika",
  "Dominikana",
  "Dżibuti",
  "Egipt",
  "Ekwador",
  "Erytrea",
  "Estonia",
  "Etiopia",
  "Fidżi",
  "Filipiny",
  "Finlandia",
  "Francja",
  "Gabon",
  "Gambia",
  "Ghana",
  "Grecja",
  "Grenada",
  "Gruzja",
  "Gujana",
  "Gwatemala",
  "Gwinea",
  "Gwinea Bissau",
  "Gwinea Równikowa",
  "Haiti",
  "Hiszpania",
  "Holandia",
  "Haga",
  "Honduras",
  "Indie",
  "Indonezja",
  "Irak",
  "Iran",
  "Irlandia",
  "Islandia",
  "Izrael",
  "Jamajka",
  "Japonia",
  "Jemen",
  "Jordania",
  "Kambodża",
  "Kamerun",
  "Kanada",
  "Katar",
  "Kazachstan",
  "Kenia",
  "Kirgistan",
  "Kiribati",
  "Kolumbia",
  "Komory",
  "Kongo",
  "Korea Południowa",
  "Korea Północna",
  "Kostaryka",
  "Kuba",
  "Kuwejt",
  "Laos",
  "Lesotho",
  "Liban",
  "Liberia",
  "Libia",
  "Liechtenstein",
  "Litwa",
  "Luksemburg",
  "Łotwa",
  "Macedonia",
  "Madagaskar",
  "Malawi",
  "Malediwy",
  "Malezja",
  "Mali",
  "Malta",
  "Maroko",
  "Mauretania",
  "Mauritius",
  "Meksyk",
  "Mikronezja",
  "Mołdawia",
  "Monako",
  "Mongolia",
  "Mozambik",
  "Namibia",
  "Nauru",
  "Nepal",
  "Niemcy",
  "Niger",
  "Nigeria",
  "Nikaragua",
  "Norwegia",
  "Nowa Zelandia",
  "Oman",
  "Pakistan",
  "Palau",
  "Panama",
  "Papua-Nowa Gwinea",
  "Paragwaj",
  "Peru",
  "Polska",
  "322 575",
  "Portugalia",
  "Republika Południowej Afryki",
  "Republika Środkowoafrykańska",
  "Republika Zielonego Przylądka",
  "Rosja",
  "Rumunia",
  "Rwanda",
  "Saint Kitts i Nevis",
  "Saint Lucia",
  "Saint Vincent i Grenadyny",
  "Salwador",
  "Samoa",
  "San Marino",
  "Senegal",
  "Serbia",
  "Seszele",
  "Sierra Leone",
  "Singapur",
  "Słowacja",
  "Słowenia",
  "Somalia",
  "Sri Lanka",
  "Stany Zjednoczone",
  "Suazi",
  "Sudan",
  "Sudan Południowy",
  "Surinam",
  "Syria",
  "Szwajcaria",
  "Szwecja",
  "Tadżykistan",
  "Tajlandia",
  "Tanzania",
  "Timor Wschodni",
  "Togo",
  "Tonga",
  "Trynidad i Tobago",
  "Tunezja",
  "Turcja",
  "Turkmenistan",
  "Tuvalu",
  "Funafuti",
  "Uganda",
  "Ukraina",
  "Urugwaj",
  2008,
  "Uzbekistan",
  "Vanuatu",
  "Watykan",
  "Wenezuela",
  "Węgry",
  "Wielka Brytania",
  "Wietnam",
  "Włochy",
  "Wybrzeże Kości Słoniowej",
  "Wyspy Marshalla",
  "Wyspy Salomona",
  "Wyspy Świętego Tomasza i Książęca",
  "Zambia",
  "Zimbabwe",
  "Zjednoczone Emiraty Arabskie"
];

},{}],878:[function(require,module,exports){
module["exports"] = [
  "Polska"
];

},{}],879:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.street_prefix = require("./street_prefix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":874,"./city":875,"./city_name":876,"./country":877,"./default_country":878,"./postcode":880,"./secondary_address":881,"./state":882,"./state_abbr":883,"./street_address":884,"./street_name":885,"./street_prefix":886}],880:[function(require,module,exports){
module["exports"] = [
  "##-###"
];

},{}],881:[function(require,module,exports){
arguments[4][205][0].apply(exports,arguments)
},{"dup":205}],882:[function(require,module,exports){
module["exports"] = [
  "Dolnośląskie",
  "Kujawsko-pomorskie",
  "Lubelskie",
  "Lubuskie",
  "Łódzkie",
  "Małopolskie",
  "Mazowieckie",
  "Opolskie",
  "Podkarpackie",
  "Podlaskie",
  "Pomorskie",
  "Śląskie",
  "Świętokrzyskie",
  "Warmińsko-mazurskie",
  "Wielkopolskie",
  "Zachodniopomorskie"
];

},{}],883:[function(require,module,exports){
module["exports"] = [
  "DŚ",
  "KP",
  "LB",
  "LS",
  "ŁD",
  "MP",
  "MZ",
  "OP",
  "PK",
  "PL",
  "PM",
  "ŚL",
  "ŚK",
  "WM",
  "WP",
  "ZP"
];

},{}],884:[function(require,module,exports){
arguments[4][209][0].apply(exports,arguments)
},{"dup":209}],885:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{Name.last_name}"
];

},{}],886:[function(require,module,exports){
module["exports"] = [
  "ul.",
  "al."
];

},{}],887:[function(require,module,exports){
module["exports"] = [
  "50-###-##-##",
  "51-###-##-##",
  "53-###-##-##",
  "57-###-##-##",
  "60-###-##-##",
  "66-###-##-##",
  "69-###-##-##",
  "72-###-##-##",
  "73-###-##-##",
  "78-###-##-##",
  "79-###-##-##",
  "88-###-##-##"
];

},{}],888:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":887,"dup":256}],889:[function(require,module,exports){
arguments[4][212][0].apply(exports,arguments)
},{"dup":212}],890:[function(require,module,exports){
arguments[4][356][0].apply(exports,arguments)
},{"dup":356}],891:[function(require,module,exports){
arguments[4][357][0].apply(exports,arguments)
},{"dup":357}],892:[function(require,module,exports){
arguments[4][214][0].apply(exports,arguments)
},{"dup":214}],893:[function(require,module,exports){
arguments[4][215][0].apply(exports,arguments)
},{"dup":215}],894:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjetive = require("./adjetive");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.bs_adjective = require("./bs_adjective");
company.bs_noun = require("./bs_noun");
company.name = require("./name");

},{"./adjetive":889,"./bs_adjective":890,"./bs_noun":891,"./bs_verb":892,"./descriptor":893,"./name":895,"./noun":896,"./suffix":897}],895:[function(require,module,exports){
arguments[4][361][0].apply(exports,arguments)
},{"dup":361}],896:[function(require,module,exports){
arguments[4][218][0].apply(exports,arguments)
},{"dup":218}],897:[function(require,module,exports){
arguments[4][363][0].apply(exports,arguments)
},{"dup":363}],898:[function(require,module,exports){
var pl = {};
module['exports'] = pl;
pl.title = "Polish";
pl.name = require("./name");
pl.address = require("./address");
pl.company = require("./company");
pl.internet = require("./internet");
pl.lorem = require("./lorem");
pl.phone_number = require("./phone_number");
pl.cell_phone = require("./cell_phone");

},{"./address":879,"./cell_phone":888,"./company":894,"./internet":901,"./lorem":902,"./name":906,"./phone_number":912}],899:[function(require,module,exports){
module["exports"] = [
  "com",
  "pl",
  "com.pl",
  "net",
  "org"
];

},{}],900:[function(require,module,exports){
arguments[4][263][0].apply(exports,arguments)
},{"dup":263}],901:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":899,"./free_email":900,"dup":187}],902:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./supplemental":903,"./words":904,"dup":227}],903:[function(require,module,exports){
arguments[4][228][0].apply(exports,arguments)
},{"dup":228}],904:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"dup":229}],905:[function(require,module,exports){
module["exports"] = [
  "Aaron",
  "Abraham",
  "Adam",
  "Adrian",
  "Atanazy",
  "Agaton",
  "Alan",
  "Albert",
  "Aleksander",
  "Aleksy",
  "Alfred",
  "Alwar",
  "Ambroży",
  "Anatol",
  "Andrzej",
  "Antoni",
  "Apollinary",
  "Apollo",
  "Arkady",
  "Arkadiusz",
  "Archibald",
  "Arystarch",
  "Arnold",
  "Arseniusz",
  "Artur",
  "August",
  "Baldwin",
  "Bazyli",
  "Benedykt",
  "Beniamin",
  "Bernard",
  "Bertrand",
  "Bertram",
  "Borys",
  "Brajan",
  "Bruno",
  "Cezary",
  "Cecyliusz",
  "Karol",
  "Krystian",
  "Krzysztof",
  "Klarencjusz",
  "Klaudiusz",
  "Klemens",
  "Konrad",
  "Konstanty",
  "Konstantyn",
  "Kornel",
  "Korneliusz",
  "Korneli",
  "Cyryl",
  "Cyrus",
  "Damian",
  "Daniel",
  "Dariusz",
  "Dawid",
  "Dionizy",
  "Demetriusz",
  "Dominik",
  "Donald",
  "Dorian",
  "Edgar",
  "Edmund",
  "Edward",
  "Edwin",
  "Efrem",
  "Efraim",
  "Eliasz",
  "Eleazar",
  "Emil",
  "Emanuel",
  "Erast",
  "Ernest",
  "Eugeniusz",
  "Eustracjusz",
  "Fabian",
  "Feliks",
  "Florian",
  "Franciszek",
  "Fryderyk",
  "Gabriel",
  "Gedeon",
  "Galfryd",
  "Jerzy",
  "Gerald",
  "Gerazym",
  "Gilbert",
  "Gonsalwy",
  "Grzegorz",
  "Gwido",
  "Harald",
  "Henryk",
  "Herbert",
  "Herman",
  "Hilary",
  "Horacy",
  "Hubert",
  "Hugo",
  "Ignacy",
  "Igor",
  "Hilarion",
  "Innocenty",
  "Hipolit",
  "Ireneusz",
  "Erwin",
  "Izaak",
  "Izajasz",
  "Izydor",
  "Jakub",
  "Jeremi",
  "Jeremiasz",
  "Hieronim",
  "Gerald",
  "Joachim",
  "Jan",
  "Janusz",
  "Jonatan",
  "Józef",
  "Jozue",
  "Julian",
  "Juliusz",
  "Justyn",
  "Kalistrat",
  "Kazimierz",
  "Wawrzyniec",
  "Laurenty",
  "Laurencjusz",
  "Łazarz",
  "Leon",
  "Leonard",
  "Leonid",
  "Leon",
  "Ludwik",
  "Łukasz",
  "Lucjan",
  "Magnus",
  "Makary",
  "Marceli",
  "Marek",
  "Marcin",
  "Mateusz",
  "Maurycy",
  "Maksym",
  "Maksymilian",
  "Michał",
  "Miron",
  "Modest",
  "Mojżesz",
  "Natan",
  "Natanael",
  "Nazariusz",
  "Nazary",
  "Nestor",
  "Mikołaj",
  "Nikodem",
  "Olaf",
  "Oleg",
  "Oliwier",
  "Onufry",
  "Orestes",
  "Oskar",
  "Ansgary",
  "Osmund",
  "Pankracy",
  "Pantaleon",
  "Patryk",
  "Patrycjusz",
  "Patrycy",
  "Paweł",
  "Piotr",
  "Filemon",
  "Filip",
  "Platon",
  "Polikarp",
  "Porfiry",
  "Porfiriusz",
  "Prokles",
  "Prokul",
  "Prokop",
  "Kwintyn",
  "Randolf",
  "Rafał",
  "Rajmund",
  "Reginald",
  "Rajnold",
  "Ryszard",
  "Robert",
  "Roderyk",
  "Roger",
  "Roland",
  "Roman",
  "Romeo",
  "Reginald",
  "Rudolf",
  "Samson",
  "Samuel",
  "Salwator",
  "Sebastian",
  "Serafin",
  "Sergiusz",
  "Seweryn",
  "Zygmunt",
  "Sylwester",
  "Szymon",
  "Salomon",
  "Spirydion",
  "Stanisław",
  "Szczepan",
  "Stefan",
  "Terencjusz",
  "Teodor",
  "Tomasz",
  "Tymoteusz",
  "Tobiasz",
  "Walenty",
  "Walentyn",
  "Walerian",
  "Walery",
  "Wiktor",
  "Wincenty",
  "Witalis",
  "Włodzimierz",
  "Władysław",
  "Błażej",
  "Walter",
  "Walgierz",
  "Wacław",
  "Wilfryd",
  "Wilhelm",
  "Ksawery",
  "Ksenofont",
  "Jerzy",
  "Zachariasz",
  "Zachary",
  "Ada",
  "Adelajda",
  "Agata",
  "Agnieszka",
  "Agrypina",
  "Aida",
  "Aleksandra",
  "Alicja",
  "Alina",
  "Amanda",
  "Anastazja",
  "Angela",
  "Andżelika",
  "Angelina",
  "Anna",
  "Hanna",
  "—",
  "Antonina",
  "Ariadna",
  "Aurora",
  "Barbara",
  "Beatrycze",
  "Berta",
  "Brygida",
  "Kamila",
  "Karolina",
  "Karolina",
  "Kornelia",
  "Katarzyna",
  "Cecylia",
  "Karolina",
  "Chloe",
  "Krystyna",
  "Klara",
  "Klaudia",
  "Klementyna",
  "Konstancja",
  "Koralia",
  "Daria",
  "Diana",
  "Dina",
  "Dorota",
  "Edyta",
  "Eleonora",
  "Eliza",
  "Elżbieta",
  "Izabela",
  "Elwira",
  "Emilia",
  "Estera",
  "Eudoksja",
  "Eudokia",
  "Eugenia",
  "Ewa",
  "Ewelina",
  "Ferdynanda",
  "Florencja",
  "Franciszka",
  "Gabriela",
  "Gertruda",
  "Gloria",
  "Gracja",
  "Jadwiga",
  "Helena",
  "Henryka",
  "Nadzieja",
  "Ida",
  "Ilona",
  "Helena",
  "Irena",
  "Irma",
  "Izabela",
  "Izolda",
  "Jakubina",
  "Joanna",
  "Janina",
  "Żaneta",
  "Joanna",
  "Ginewra",
  "Józefina",
  "Judyta",
  "Julia",
  "Julia",
  "Julita",
  "Justyna",
  "Kira",
  "Cyra",
  "Kleopatra",
  "Larysa",
  "Laura",
  "Laurencja",
  "Laurentyna",
  "Lea",
  "Leila",
  "Eleonora",
  "Liliana",
  "Lilianna",
  "Lilia",
  "Lilla",
  "Liza",
  "Eliza",
  "Laura",
  "Ludwika",
  "Luiza",
  "Łucja",
  "Lucja",
  "Lidia",
  "Amabela",
  "Magdalena",
  "Malwina",
  "Małgorzata",
  "Greta",
  "Marianna",
  "Maryna",
  "Marta",
  "Martyna",
  "Maria",
  "Matylda",
  "Maja",
  "Maja",
  "Melania",
  "Michalina",
  "Monika",
  "Nadzieja",
  "Noemi",
  "Natalia",
  "Nikola",
  "Nina",
  "Olga",
  "Olimpia",
  "Oliwia",
  "Ofelia",
  "Patrycja",
  "Paula",
  "Pelagia",
  "Penelopa",
  "Filipa",
  "Paulina",
  "Rachela",
  "Rebeka",
  "Regina",
  "Renata",
  "Rozalia",
  "Róża",
  "Roksana",
  "Rufina",
  "Ruta",
  "Sabina",
  "Sara",
  "Serafina",
  "Sybilla",
  "Sylwia",
  "Zofia",
  "Stella",
  "Stefania",
  "Zuzanna",
  "Tamara",
  "Tacjana",
  "Tekla",
  "Teodora",
  "Teresa",
  "Walentyna",
  "Waleria",
  "Wanesa",
  "Wiara",
  "Weronika",
  "Wiktoria",
  "Wirginia",
  "Bibiana",
  "Bibianna",
  "Wanda",
  "Wilhelmina",
  "Ksawera",
  "Ksenia",
  "Zoe"
];

},{}],906:[function(require,module,exports){
arguments[4][637][0].apply(exports,arguments)
},{"./first_name":905,"./last_name":907,"./name":908,"./prefix":909,"./title":910,"dup":637}],907:[function(require,module,exports){
module["exports"] = [
  "Adamczak",
  "Adamczyk",
  "Adamek",
  "Adamiak",
  "Adamiec",
  "Adamowicz",
  "Adamski",
  "Adamus",
  "Aleksandrowicz",
  "Andrzejczak",
  "Andrzejewski",
  "Antczak",
  "Augustyn",
  "Augustyniak",
  "Bagiński",
  "Balcerzak",
  "Banach",
  "Banasiak",
  "Banasik",
  "Banaś",
  "Baran",
  "Baranowski",
  "Barański",
  "Bartczak",
  "Bartkowiak",
  "Bartnik",
  "Bartosik",
  "Bednarczyk",
  "Bednarek",
  "Bednarski",
  "Bednarz",
  "Białas",
  "Białek",
  "Białkowski",
  "Bielak",
  "Bielawski",
  "Bielecki",
  "Bielski",
  "Bieniek",
  "Biernacki",
  "Biernat",
  "Bieńkowski",
  "Bilski",
  "Bober",
  "Bochenek",
  "Bogucki",
  "Bogusz",
  "Borek",
  "Borkowski",
  "Borowiec",
  "Borowski",
  "Bożek",
  "Broda",
  "Brzeziński",
  "Brzozowski",
  "Buczek",
  "Buczkowski",
  "Buczyński",
  "Budziński",
  "Budzyński",
  "Bujak",
  "Bukowski",
  "Burzyński",
  "Bąk",
  "Bąkowski",
  "Błaszczak",
  "Błaszczyk",
  "Cebula",
  "Chmiel",
  "Chmielewski",
  "Chmura",
  "Chojnacki",
  "Chojnowski",
  "Cholewa",
  "Chrzanowski",
  "Chudzik",
  "Cichocki",
  "Cichoń",
  "Cichy",
  "Ciesielski",
  "Cieśla",
  "Cieślak",
  "Cieślik",
  "Ciszewski",
  "Cybulski",
  "Cygan",
  "Czaja",
  "Czajka",
  "Czajkowski",
  "Czapla",
  "Czarnecki",
  "Czech",
  "Czechowski",
  "Czekaj",
  "Czerniak",
  "Czerwiński",
  "Czyż",
  "Czyżewski",
  "Dec",
  "Dobosz",
  "Dobrowolski",
  "Dobrzyński",
  "Domagała",
  "Domański",
  "Dominiak",
  "Drabik",
  "Drozd",
  "Drozdowski",
  "Drzewiecki",
  "Dróżdż",
  "Dubiel",
  "Duda",
  "Dudek",
  "Dudziak",
  "Dudzik",
  "Dudziński",
  "Duszyński",
  "Dziedzic",
  "Dziuba",
  "Dąbek",
  "Dąbkowski",
  "Dąbrowski",
  "Dębowski",
  "Dębski",
  "Długosz",
  "Falkowski",
  "Fijałkowski",
  "Filipek",
  "Filipiak",
  "Filipowicz",
  "Flak",
  "Flis",
  "Florczak",
  "Florek",
  "Frankowski",
  "Frąckowiak",
  "Frączek",
  "Frątczak",
  "Furman",
  "Gadomski",
  "Gajda",
  "Gajewski",
  "Gaweł",
  "Gawlik",
  "Gawron",
  "Gawroński",
  "Gałka",
  "Gałązka",
  "Gil",
  "Godlewski",
  "Golec",
  "Gołąb",
  "Gołębiewski",
  "Gołębiowski",
  "Grabowski",
  "Graczyk",
  "Grochowski",
  "Grudzień",
  "Gruszczyński",
  "Gruszka",
  "Grzegorczyk",
  "Grzelak",
  "Grzesiak",
  "Grzesik",
  "Grześkowiak",
  "Grzyb",
  "Grzybowski",
  "Grzywacz",
  "Gutowski",
  "Guzik",
  "Gwóźdź",
  "Góra",
  "Góral",
  "Górecki",
  "Górka",
  "Górniak",
  "Górny",
  "Górski",
  "Gąsior",
  "Gąsiorowski",
  "Głogowski",
  "Głowacki",
  "Głąb",
  "Hajduk",
  "Herman",
  "Iwański",
  "Izdebski",
  "Jabłoński",
  "Jackowski",
  "Jagielski",
  "Jagiełło",
  "Jagodziński",
  "Jakubiak",
  "Jakubowski",
  "Janas",
  "Janiak",
  "Janicki",
  "Janik",
  "Janiszewski",
  "Jankowiak",
  "Jankowski",
  "Janowski",
  "Janus",
  "Janusz",
  "Januszewski",
  "Jaros",
  "Jarosz",
  "Jarząbek",
  "Jasiński",
  "Jastrzębski",
  "Jaworski",
  "Jaśkiewicz",
  "Jezierski",
  "Jurek",
  "Jurkiewicz",
  "Jurkowski",
  "Juszczak",
  "Jóźwiak",
  "Jóźwik",
  "Jędrzejczak",
  "Jędrzejczyk",
  "Jędrzejewski",
  "Kacprzak",
  "Kaczmarczyk",
  "Kaczmarek",
  "Kaczmarski",
  "Kaczor",
  "Kaczorowski",
  "Kaczyński",
  "Kaleta",
  "Kalinowski",
  "Kalisz",
  "Kamiński",
  "Kania",
  "Kaniewski",
  "Kapusta",
  "Karaś",
  "Karczewski",
  "Karpiński",
  "Karwowski",
  "Kasperek",
  "Kasprzak",
  "Kasprzyk",
  "Kaszuba",
  "Kawa",
  "Kawecki",
  "Kałuża",
  "Kaźmierczak",
  "Kiełbasa",
  "Kisiel",
  "Kita",
  "Klimczak",
  "Klimek",
  "Kmiecik",
  "Kmieć",
  "Knapik",
  "Kobus",
  "Kogut",
  "Kolasa",
  "Komorowski",
  "Konieczna",
  "Konieczny",
  "Konopka",
  "Kopczyński",
  "Koper",
  "Kopeć",
  "Korzeniowski",
  "Kos",
  "Kosiński",
  "Kosowski",
  "Kostecki",
  "Kostrzewa",
  "Kot",
  "Kotowski",
  "Kowal",
  "Kowalczuk",
  "Kowalczyk",
  "Kowalewski",
  "Kowalik",
  "Kowalski",
  "Koza",
  "Kozak",
  "Kozieł",
  "Kozioł",
  "Kozłowski",
  "Kołakowski",
  "Kołodziej",
  "Kołodziejczyk",
  "Kołodziejski",
  "Krajewski",
  "Krakowiak",
  "Krawczyk",
  "Krawiec",
  "Kruk",
  "Krukowski",
  "Krupa",
  "Krupiński",
  "Kruszewski",
  "Krysiak",
  "Krzemiński",
  "Krzyżanowski",
  "Król",
  "Królikowski",
  "Książek",
  "Kubacki",
  "Kubiak",
  "Kubica",
  "Kubicki",
  "Kubik",
  "Kuc",
  "Kucharczyk",
  "Kucharski",
  "Kuchta",
  "Kuciński",
  "Kuczyński",
  "Kujawa",
  "Kujawski",
  "Kula",
  "Kulesza",
  "Kulig",
  "Kulik",
  "Kuliński",
  "Kurek",
  "Kurowski",
  "Kuś",
  "Kwaśniewski",
  "Kwiatkowski",
  "Kwiecień",
  "Kwieciński",
  "Kędzierski",
  "Kędziora",
  "Kępa",
  "Kłos",
  "Kłosowski",
  "Lach",
  "Laskowski",
  "Lasota",
  "Lech",
  "Lenart",
  "Lesiak",
  "Leszczyński",
  "Lewandowski",
  "Lewicki",
  "Leśniak",
  "Leśniewski",
  "Lipiński",
  "Lipka",
  "Lipski",
  "Lis",
  "Lisiecki",
  "Lisowski",
  "Maciejewski",
  "Maciąg",
  "Mackiewicz",
  "Madej",
  "Maj",
  "Majcher",
  "Majchrzak",
  "Majewski",
  "Majka",
  "Makowski",
  "Malec",
  "Malicki",
  "Malinowski",
  "Maliszewski",
  "Marchewka",
  "Marciniak",
  "Marcinkowski",
  "Marczak",
  "Marek",
  "Markiewicz",
  "Markowski",
  "Marszałek",
  "Marzec",
  "Masłowski",
  "Matusiak",
  "Matuszak",
  "Matuszewski",
  "Matysiak",
  "Mazur",
  "Mazurek",
  "Mazurkiewicz",
  "Maćkowiak",
  "Małecki",
  "Małek",
  "Maślanka",
  "Michalak",
  "Michalczyk",
  "Michalik",
  "Michalski",
  "Michałek",
  "Michałowski",
  "Mielczarek",
  "Mierzejewski",
  "Mika",
  "Mikołajczak",
  "Mikołajczyk",
  "Mikulski",
  "Milczarek",
  "Milewski",
  "Miller",
  "Misiak",
  "Misztal",
  "Miśkiewicz",
  "Modzelewski",
  "Molenda",
  "Morawski",
  "Motyka",
  "Mroczek",
  "Mroczkowski",
  "Mrozek",
  "Mróz",
  "Mucha",
  "Murawski",
  "Musiał",
  "Muszyński",
  "Młynarczyk",
  "Napierała",
  "Nawrocki",
  "Nawrot",
  "Niedziela",
  "Niedzielski",
  "Niedźwiecki",
  "Niemczyk",
  "Niemiec",
  "Niewiadomski",
  "Noga",
  "Nowacki",
  "Nowaczyk",
  "Nowak",
  "Nowakowski",
  "Nowicki",
  "Nowiński",
  "Olczak",
  "Olejniczak",
  "Olejnik",
  "Olszewski",
  "Orzechowski",
  "Orłowski",
  "Osiński",
  "Ossowski",
  "Ostrowski",
  "Owczarek",
  "Paczkowski",
  "Pająk",
  "Pakuła",
  "Paluch",
  "Panek",
  "Partyka",
  "Pasternak",
  "Paszkowski",
  "Pawelec",
  "Pawlak",
  "Pawlicki",
  "Pawlik",
  "Pawlikowski",
  "Pawłowski",
  "Pałka",
  "Piasecki",
  "Piechota",
  "Piekarski",
  "Pietras",
  "Pietruszka",
  "Pietrzak",
  "Pietrzyk",
  "Pilarski",
  "Pilch",
  "Piotrowicz",
  "Piotrowski",
  "Piwowarczyk",
  "Piórkowski",
  "Piątek",
  "Piątkowski",
  "Piłat",
  "Pluta",
  "Podgórski",
  "Polak",
  "Popławski",
  "Porębski",
  "Prokop",
  "Prus",
  "Przybylski",
  "Przybysz",
  "Przybył",
  "Przybyła",
  "Ptak",
  "Puchalski",
  "Pytel",
  "Płonka",
  "Raczyński",
  "Radecki",
  "Radomski",
  "Rak",
  "Rakowski",
  "Ratajczak",
  "Robak",
  "Rogala",
  "Rogalski",
  "Rogowski",
  "Rojek",
  "Romanowski",
  "Rosa",
  "Rosiak",
  "Rosiński",
  "Ruciński",
  "Rudnicki",
  "Rudziński",
  "Rudzki",
  "Rusin",
  "Rutkowski",
  "Rybak",
  "Rybarczyk",
  "Rybicki",
  "Rzepka",
  "Różański",
  "Różycki",
  "Sadowski",
  "Sawicki",
  "Serafin",
  "Siedlecki",
  "Sienkiewicz",
  "Sieradzki",
  "Sikora",
  "Sikorski",
  "Sitek",
  "Siwek",
  "Skalski",
  "Skiba",
  "Skibiński",
  "Skoczylas",
  "Skowron",
  "Skowronek",
  "Skowroński",
  "Skrzypczak",
  "Skrzypek",
  "Skóra",
  "Smoliński",
  "Sobczak",
  "Sobczyk",
  "Sobieraj",
  "Sobolewski",
  "Socha",
  "Sochacki",
  "Sokołowski",
  "Sokół",
  "Sosnowski",
  "Sowa",
  "Sowiński",
  "Sołtys",
  "Sołtysiak",
  "Sroka",
  "Stachowiak",
  "Stachowicz",
  "Stachura",
  "Stachurski",
  "Stanek",
  "Staniszewski",
  "Stanisławski",
  "Stankiewicz",
  "Stasiak",
  "Staszewski",
  "Stawicki",
  "Stec",
  "Stefaniak",
  "Stefański",
  "Stelmach",
  "Stolarczyk",
  "Stolarski",
  "Strzelczyk",
  "Strzelecki",
  "Stępień",
  "Stępniak",
  "Surma",
  "Suski",
  "Szafrański",
  "Szatkowski",
  "Szczepaniak",
  "Szczepanik",
  "Szczepański",
  "Szczerba",
  "Szcześniak",
  "Szczygieł",
  "Szczęsna",
  "Szczęsny",
  "Szeląg",
  "Szewczyk",
  "Szostak",
  "Szulc",
  "Szwarc",
  "Szwed",
  "Szydłowski",
  "Szymański",
  "Szymczak",
  "Szymczyk",
  "Szymkowiak",
  "Szyszka",
  "Sławiński",
  "Słowik",
  "Słowiński",
  "Tarnowski",
  "Tkaczyk",
  "Tokarski",
  "Tomala",
  "Tomaszewski",
  "Tomczak",
  "Tomczyk",
  "Tracz",
  "Trojanowski",
  "Trzciński",
  "Trzeciak",
  "Turek",
  "Twardowski",
  "Urban",
  "Urbanek",
  "Urbaniak",
  "Urbanowicz",
  "Urbańczyk",
  "Urbański",
  "Walczak",
  "Walkowiak",
  "Warchoł",
  "Wasiak",
  "Wasilewski",
  "Wawrzyniak",
  "Wesołowski",
  "Wieczorek",
  "Wierzbicki",
  "Wilczek",
  "Wilczyński",
  "Wilk",
  "Winiarski",
  "Witczak",
  "Witek",
  "Witkowski",
  "Wiącek",
  "Więcek",
  "Więckowski",
  "Wiśniewski",
  "Wnuk",
  "Wojciechowski",
  "Wojtas",
  "Wojtasik",
  "Wojtczak",
  "Wojtkowiak",
  "Wolak",
  "Woliński",
  "Wolny",
  "Wolski",
  "Woś",
  "Woźniak",
  "Wrona",
  "Wroński",
  "Wróbel",
  "Wróblewski",
  "Wypych",
  "Wysocki",
  "Wyszyński",
  "Wójcicki",
  "Wójcik",
  "Wójtowicz",
  "Wąsik",
  "Węgrzyn",
  "Włodarczyk",
  "Włodarski",
  "Zaborowski",
  "Zabłocki",
  "Zagórski",
  "Zając",
  "Zajączkowski",
  "Zakrzewski",
  "Zalewski",
  "Zaremba",
  "Zarzycki",
  "Zaręba",
  "Zawada",
  "Zawadzki",
  "Zdunek",
  "Zieliński",
  "Zielonka",
  "Ziółkowski",
  "Zięba",
  "Ziętek",
  "Zwoliński",
  "Zych",
  "Zygmunt",
  "Łapiński",
  "Łuczak",
  "Łukasiewicz",
  "Łukasik",
  "Łukaszewski",
  "Śliwa",
  "Śliwiński",
  "Ślusarczyk",
  "Świderski",
  "Świerczyński",
  "Świątek",
  "Żak",
  "Żebrowski",
  "Żmuda",
  "Żuk",
  "Żukowski",
  "Żurawski",
  "Żurek",
  "Żyła"
];

},{}],908:[function(require,module,exports){
arguments[4][682][0].apply(exports,arguments)
},{"dup":682}],909:[function(require,module,exports){
module["exports"] = [
  "Pan",
  "Pani"
];

},{}],910:[function(require,module,exports){
arguments[4][408][0].apply(exports,arguments)
},{"dup":408}],911:[function(require,module,exports){
module["exports"] = [
  "12-###-##-##",
  "13-###-##-##",
  "14-###-##-##",
  "15-###-##-##",
  "16-###-##-##",
  "17-###-##-##",
  "18-###-##-##",
  "22-###-##-##",
  "23-###-##-##",
  "24-###-##-##",
  "25-###-##-##",
  "29-###-##-##",
  "32-###-##-##",
  "33-###-##-##",
  "34-###-##-##",
  "41-###-##-##",
  "42-###-##-##",
  "43-###-##-##",
  "44-###-##-##",
  "46-###-##-##",
  "48-###-##-##",
  "52-###-##-##",
  "54-###-##-##",
  "55-###-##-##",
  "56-###-##-##",
  "58-###-##-##",
  "59-###-##-##",
  "61-###-##-##",
  "62-###-##-##",
  "63-###-##-##",
  "65-###-##-##",
  "67-###-##-##",
  "68-###-##-##",
  "71-###-##-##",
  "74-###-##-##",
  "75-###-##-##",
  "76-###-##-##",
  "77-###-##-##",
  "81-###-##-##",
  "82-###-##-##",
  "83-###-##-##",
  "84-###-##-##",
  "85-###-##-##",
  "86-###-##-##",
  "87-###-##-##",
  "89-###-##-##",
  "91-###-##-##",
  "94-###-##-##",
  "95-###-##-##"
];

},{}],912:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":911,"dup":197}],913:[function(require,module,exports){
arguments[4][323][0].apply(exports,arguments)
},{"dup":323}],914:[function(require,module,exports){
module["exports"] = [
  "Nova",
  "Velha",
  "Grande",
  "Vila",
  "Município de"
];

},{}],915:[function(require,module,exports){
module["exports"] = [
  "do Descoberto",
  "de Nossa Senhora",
  "do Norte",
  "do Sul"
];

},{}],916:[function(require,module,exports){
module["exports"] = [
  "Afeganistão",
  "Albânia",
  "Algéria",
  "Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antigua and Barbada",
  "Argentina",
  "Armênia",
  "Aruba",
  "Austrália",
  "Áustria",
  "Alzerbajão",
  "Bahamas",
  "Barém",
  "Bangladesh",
  "Barbado",
  "Belgrado",
  "Bélgica",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolívia",
  "Bôsnia",
  "Botuasuna",
  "Bouvetoia",
  "Brasil",
  "Arquipélago de Chagos",
  "Ilhas Virgens",
  "Brunei",
  "Bulgária",
  "Burkina Faso",
  "Burundi",
  "Cambójia",
  "Camarões",
  "Canadá",
  "Cabo Verde",
  "Ilhas Caiman",
  "República da África Central",
  "Chad",
  "Chile",
  "China",
  "Ilhas Natal",
  "Ilhas Cocos",
  "Colômbia",
  "Comoros",
  "Congo",
  "Ilhas Cook",
  "Costa Rica",
  "Costa do Marfim",
  "Croácia",
  "Cuba",
  "Cyprus",
  "República Tcheca",
  "Dinamarca",
  "Djibouti",
  "Dominica",
  "República Dominicana",
  "Equador",
  "Egito",
  "El Salvador",
  "Guiné Equatorial",
  "Eritrea",
  "Estônia",
  "Etiópia",
  "Ilhas Faroe",
  "Malvinas",
  "Fiji",
  "Finlândia",
  "França",
  "Guiné Francesa",
  "Polinésia Francesa",
  "Gabão",
  "Gâmbia",
  "Georgia",
  "Alemanha",
  "Gana",
  "Gibraltar",
  "Grécia",
  "Groelândia",
  "Granada",
  "Guadalupe",
  "Guano",
  "Guatemala",
  "Guernsey",
  "Guiné",
  "Guiné-Bissau",
  "Guiana",
  "Haiti",
  "Heard Island and McDonald Islands",
  "Vaticano",
  "Honduras",
  "Hong Kong",
  "Hungria",
  "Iceland",
  "Índia",
  "Indonésia",
  "Irã",
  "Iraque",
  "Irlanda",
  "Ilha de Man",
  "Israel",
  "Itália",
  "Jamaica",
  "Japão",
  "Jersey",
  "Jordânia",
  "Cazaquistão",
  "Quênia",
  "Kiribati",
  "Coreia do Norte",
  "Coreia do Sul",
  "Kuwait",
  "Kyrgyz Republic",
  "República Democrática de Lao People",
  "Latvia",
  "Líbano",
  "Lesotho",
  "Libéria",
  "Libyan Arab Jamahiriya",
  "Liechtenstein",
  "Lituânia",
  "Luxemburgo",
  "Macao",
  "Macedônia",
  "Madagascar",
  "Malawi",
  "Malásia",
  "Maldives",
  "Mali",
  "Malta",
  "Ilhas Marshall",
  "Martinica",
  "Mauritânia",
  "Mauritius",
  "Mayotte",
  "México",
  "Micronésia",
  "Moldova",
  "Mônaco",
  "Mongólia",
  "Montenegro",
  "Montserrat",
  "Marrocos",
  "Moçambique",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Antilhas Holandesas",
  "Holanda",
  "Nova Caledonia",
  "Nova Zelândia",
  "Nicarágua",
  "Nigéria",
  "Niue",
  "Ilha Norfolk",
  "Northern Mariana Islands",
  "Noruega",
  "Oman",
  "Paquistão",
  "Palau",
  "Território da Palestina",
  "Panamá",
  "Nova Guiné Papua",
  "Paraguai",
  "Peru",
  "Filipinas",
  "Polônia",
  "Portugal",
  "Puerto Rico",
  "Qatar",
  "Romênia",
  "Rússia",
  "Ruanda",
  "São Bartolomeu",
  "Santa Helena",
  "Santa Lúcia",
  "Saint Martin",
  "Saint Pierre and Miquelon",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tomé e Príncipe",
  "Arábia Saudita",
  "Senegal",
  "Sérvia",
  "Seychelles",
  "Serra Leoa",
  "Singapura",
  "Eslováquia",
  "Eslovênia",
  "Ilhas Salomão",
  "Somália",
  "África do Sul",
  "South Georgia and the South Sandwich Islands",
  "Spanha",
  "Sri Lanka",
  "Sudão",
  "Suriname",
  "Svalbard & Jan Mayen Islands",
  "Swaziland",
  "Suécia",
  "Suíça",
  "Síria",
  "Taiwan",
  "Tajiquistão",
  "Tanzânia",
  "Tailândia",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidá e Tobago",
  "Tunísia",
  "Turquia",
  "Turcomenistão",
  "Turks and Caicos Islands",
  "Tuvalu",
  "Uganda",
  "Ucrânia",
  "Emirados Árabes Unidos",
  "Reino Unido",
  "Estados Unidos da América",
  "Estados Unidos das Ilhas Virgens",
  "Uruguai",
  "Uzbequistão",
  "Vanuatu",
  "Venezuela",
  "Vietnã",
  "Wallis and Futuna",
  "Sahara",
  "Yemen",
  "Zâmbia",
  "Zimbábue"
];

},{}],917:[function(require,module,exports){
module["exports"] = [
  "Brasil"
];

},{}],918:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.default_country = require("./default_country");

},{"./building_number":913,"./city_prefix":914,"./city_suffix":915,"./country":916,"./default_country":917,"./postcode":919,"./secondary_address":920,"./state":921,"./state_abbr":922,"./street_suffix":923}],919:[function(require,module,exports){
module["exports"] = [
  "#####",
  "#####-###"
];

},{}],920:[function(require,module,exports){
module["exports"] = [
  "Apto. ###",
  "Sobrado ##",
  "Casa #",
  "Lote ##",
  "Quadra ##"
];

},{}],921:[function(require,module,exports){
module["exports"] = [
  "Acre",
  "Alagoas",
  "Amapá",
  "Amazonas",
  "Bahia",
  "Ceará",
  "Distrito Federal",
  "Espírito Santo",
  "Goiás",
  "Maranhão",
  "Mato Grosso",
  "Mato Grosso do Sul",
  "Minas Gerais",
  "Pará",
  "Paraíba",
  "Paraná",
  "Pernambuco",
  "Piauí",
  "Rio de Janeiro",
  "Rio Grande do Norte",
  "Rio Grande do Sul",
  "Rondônia",
  "Roraima",
  "Santa Catarina",
  "São Paulo",
  "Sergipe",
  "Tocantins"
];

},{}],922:[function(require,module,exports){
module["exports"] = [
  "AC",
  "AL",
  "AP",
  "AM",
  "BA",
  "CE",
  "DF",
  "ES",
  "GO",
  "MA",
  "MT",
  "MS",
  "PA",
  "PB",
  "PR",
  "PE",
  "PI",
  "RJ",
  "RN",
  "RS",
  "RO",
  "RR",
  "SC",
  "SP"
];

},{}],923:[function(require,module,exports){
module["exports"] = [
  "Rua",
  "Avenida",
  "Travessa",
  "Ponte",
  "Alameda",
  "Marginal",
  "Viela",
  "Rodovia"
];

},{}],924:[function(require,module,exports){
arguments[4][310][0].apply(exports,arguments)
},{"./name":925,"./suffix":926,"dup":310}],925:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} e #{Name.last_name}"
];

},{}],926:[function(require,module,exports){
module["exports"] = [
  "S.A.",
  "LTDA",
  "e Associados",
  "Comércio"
];

},{}],927:[function(require,module,exports){
var pt_BR = {};
module['exports'] = pt_BR;
pt_BR.title = "Portuguese (Brazil)";
pt_BR.address = require("./address");
pt_BR.company = require("./company");
pt_BR.internet = require("./internet");
pt_BR.lorem = require("./lorem");
pt_BR.name = require("./name");
pt_BR.phone_number = require("./phone_number");

},{"./address":918,"./company":924,"./internet":930,"./lorem":931,"./name":934,"./phone_number":939}],928:[function(require,module,exports){
module["exports"] = [
  "br",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],929:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com",
  "live.com",
  "bol.com.br"
];

},{}],930:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":928,"./free_email":929,"dup":187}],931:[function(require,module,exports){
arguments[4][265][0].apply(exports,arguments)
},{"./words":932,"dup":265}],932:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"dup":229}],933:[function(require,module,exports){
module["exports"] = [
  "Alessandro",
  "Alessandra",
  "Alexandre",
  "Aline",
  "Antônio",
  "Breno",
  "Bruna",
  "Carlos",
  "Carla",
  "Célia",
  "Cecília",
  "César",
  "Danilo",
  "Dalila",
  "Deneval",
  "Eduardo",
  "Eduarda",
  "Esther",
  "Elísio",
  "Fábio",
  "Fabrício",
  "Fabrícia",
  "Félix",
  "Felícia",
  "Feliciano",
  "Frederico",
  "Fabiano",
  "Gustavo",
  "Guilherme",
  "Gúbio",
  "Heitor",
  "Hélio",
  "Hugo",
  "Isabel",
  "Isabela",
  "Ígor",
  "João",
  "Joana",
  "Júlio César",
  "Júlio",
  "Júlia",
  "Janaína",
  "Karla",
  "Kléber",
  "Lucas",
  "Lorena",
  "Lorraine",
  "Larissa",
  "Ladislau",
  "Marcos",
  "Meire",
  "Marcelo",
  "Marcela",
  "Margarida",
  "Mércia",
  "Márcia",
  "Marli",
  "Morgana",
  "Maria",
  "Norberto",
  "Natália",
  "Nataniel",
  "Núbia",
  "Ofélia",
  "Paulo",
  "Paula",
  "Pablo",
  "Pedro",
  "Raul",
  "Rafael",
  "Rafaela",
  "Ricardo",
  "Roberto",
  "Roberta",
  "Sílvia",
  "Sílvia",
  "Silas",
  "Suélen",
  "Sara",
  "Salvador",
  "Sirineu",
  "Talita",
  "Tertuliano",
  "Vicente",
  "Víctor",
  "Vitória",
  "Yango",
  "Yago",
  "Yuri",
  "Washington",
  "Warley"
];

},{}],934:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");

},{"./first_name":933,"./last_name":935,"./prefix":936,"./suffix":937}],935:[function(require,module,exports){
module["exports"] = [
  "Silva",
  "Souza",
  "Carvalho",
  "Santos",
  "Reis",
  "Xavier",
  "Franco",
  "Braga",
  "Macedo",
  "Batista",
  "Barros",
  "Moraes",
  "Costa",
  "Pereira",
  "Carvalho",
  "Melo",
  "Saraiva",
  "Nogueira",
  "Oliveira",
  "Martins",
  "Moreira",
  "Albuquerque"
];

},{}],936:[function(require,module,exports){
module["exports"] = [
  "Sr.",
  "Sra.",
  "Srta.",
  "Dr."
];

},{}],937:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Neto",
  "Filho"
];

},{}],938:[function(require,module,exports){
module["exports"] = [
  "(##) ####-####",
  "+55 (##) ####-####",
  "(##) #####-####"
];

},{}],939:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":938,"dup":197}],940:[function(require,module,exports){
arguments[4][160][0].apply(exports,arguments)
},{"dup":160}],941:[function(require,module,exports){
arguments[4][161][0].apply(exports,arguments)
},{"dup":161}],942:[function(require,module,exports){
module["exports"] = [
  "Москва",
  "Владимир",
  "Санкт-Петербург",
  "Новосибирск",
  "Екатеринбург",
  "Нижний Новгород",
  "Самара",
  "Казань",
  "Омск",
  "Челябинск",
  "Ростов-на-Дону",
  "Уфа",
  "Волгоград",
  "Пермь",
  "Красноярск",
  "Воронеж",
  "Саратов",
  "Краснодар",
  "Тольятти",
  "Ижевск",
  "Барнаул",
  "Ульяновск",
  "Тюмень",
  "Иркутск",
  "Владивосток",
  "Ярославль",
  "Хабаровск",
  "Махачкала",
  "Оренбург",
  "Новокузнецк",
  "Томск",
  "Кемерово",
  "Рязань",
  "Астрахань",
  "Пенза",
  "Липецк",
  "Тула",
  "Киров",
  "Чебоксары",
  "Курск",
  "Брянскm Магнитогорск",
  "Иваново",
  "Тверь",
  "Ставрополь",
  "Белгород",
  "Сочи"
];

},{}],943:[function(require,module,exports){
module["exports"] = [
  "Австралия",
  "Австрия",
  "Азербайджан",
  "Албания",
  "Алжир",
  "Американское Самоа (не признана)",
  "Ангилья",
  "Ангола",
  "Андорра",
  "Антарктика (не признана)",
  "Антигуа и Барбуда",
  "Антильские Острова (не признана)",
  "Аомынь (не признана)",
  "Аргентина",
  "Армения",
  "Афганистан",
  "Багамские Острова",
  "Бангладеш",
  "Барбадос",
  "Бахрейн",
  "Беларусь",
  "Белиз",
  "Бельгия",
  "Бенин",
  "Болгария",
  "Боливия",
  "Босния и Герцеговина",
  "Ботсвана",
  "Бразилия",
  "Бруней",
  "Буркина-Фасо",
  "Бурунди",
  "Бутан",
  "Вануату",
  "Ватикан",
  "Великобритания",
  "Венгрия",
  "Венесуэла",
  "Восточный Тимор",
  "Вьетнам",
  "Габон",
  "Гаити",
  "Гайана",
  "Гамбия",
  "Гана",
  "Гваделупа (не признана)",
  "Гватемала",
  "Гвиана (не признана)",
  "Гвинея",
  "Гвинея-Бисау",
  "Германия",
  "Гондурас",
  "Гренада",
  "Греция",
  "Грузия",
  "Дания",
  "Джибути",
  "Доминика",
  "Доминиканская Республика",
  "Египет",
  "Замбия",
  "Зимбабве",
  "Израиль",
  "Индия",
  "Индонезия",
  "Иордания",
  "Ирак",
  "Иран",
  "Ирландия",
  "Исландия",
  "Испания",
  "Италия",
  "Йемен",
  "Кабо-Верде",
  "Казахстан",
  "Камбоджа",
  "Камерун",
  "Канада",
  "Катар",
  "Кения",
  "Кипр",
  "Кирибати",
  "Китай",
  "Колумбия",
  "Коморские Острова",
  "Конго",
  "Демократическая Республика",
  "Корея (Северная)",
  "Корея (Южная)",
  "Косово",
  "Коста-Рика",
  "Кот-д'Ивуар",
  "Куба",
  "Кувейт",
  "Кука острова",
  "Кыргызстан",
  "Лаос",
  "Латвия",
  "Лесото",
  "Либерия",
  "Ливан",
  "Ливия",
  "Литва",
  "Лихтенштейн",
  "Люксембург",
  "Маврикий",
  "Мавритания",
  "Мадагаскар",
  "Македония",
  "Малави",
  "Малайзия",
  "Мали",
  "Мальдивы",
  "Мальта",
  "Маршалловы Острова",
  "Мексика",
  "Микронезия",
  "Мозамбик",
  "Молдова",
  "Монако",
  "Монголия",
  "Марокко",
  "Мьянма",
  "Намибия",
  "Науру",
  "Непал",
  "Нигер",
  "Нигерия",
  "Нидерланды",
  "Никарагуа",
  "Новая Зеландия",
  "Норвегия",
  "Объединенные Арабские Эмираты",
  "Оман",
  "Пакистан",
  "Палау",
  "Панама",
  "Папуа — Новая Гвинея",
  "Парагвай",
  "Перу",
  "Польша",
  "Португалия",
  "Республика Конго",
  "Россия",
  "Руанда",
  "Румыния",
  "Сальвадор",
  "Самоа",
  "Сан-Марино",
  "Сан-Томе и Принсипи",
  "Саудовская Аравия",
  "Свазиленд",
  "Сейшельские острова",
  "Сенегал",
  "Сент-Винсент и Гренадины",
  "Сент-Киттс и Невис",
  "Сент-Люсия",
  "Сербия",
  "Сингапур",
  "Сирия",
  "Словакия",
  "Словения",
  "Соединенные Штаты Америки",
  "Соломоновы Острова",
  "Сомали",
  "Судан",
  "Суринам",
  "Сьерра-Леоне",
  "Таджикистан",
  "Таиланд",
  "Тайвань (не признана)",
  "Тамил-Илам (не признана)",
  "Танзания",
  "Тёркс и Кайкос (не признана)",
  "Того",
  "Токелау (не признана)",
  "Тонга",
  "Тринидад и Тобаго",
  "Тувалу",
  "Тунис",
  "Турецкая Республика Северного Кипра (не признана)",
  "Туркменистан",
  "Турция",
  "Уганда",
  "Узбекистан",
  "Украина",
  "Уругвай",
  "Фарерские Острова (не признана)",
  "Фиджи",
  "Филиппины",
  "Финляндия",
  "Франция",
  "Французская Полинезия (не признана)",
  "Хорватия",
  "Центральноафриканская Республика",
  "Чад",
  "Черногория",
  "Чехия",
  "Чили",
  "Швейцария",
  "Швеция",
  "Шри-Ланка",
  "Эквадор",
  "Экваториальная Гвинея",
  "Эритрея",
  "Эстония",
  "Эфиопия",
  "Южно-Африканская Республика",
  "Ямайка",
  "Япония"
];

},{}],944:[function(require,module,exports){
module["exports"] = [
  "Россия"
];

},{}],945:[function(require,module,exports){
arguments[4][165][0].apply(exports,arguments)
},{"./building_number":940,"./city":941,"./city_name":942,"./country":943,"./default_country":944,"./postcode":946,"./secondary_address":947,"./state":948,"./street_address":949,"./street_name":950,"./street_suffix":951,"./street_title":952,"dup":165}],946:[function(require,module,exports){
module["exports"] = [
  "######"
];

},{}],947:[function(require,module,exports){
module["exports"] = [
  "кв. ###"
];

},{}],948:[function(require,module,exports){
module["exports"] = [
  "Республика Адыгея",
  "Республика Башкортостан",
  "Республика Бурятия",
  "Республика Алтай Республика Дагестан",
  "Республика Ингушетия",
  "Кабардино-Балкарская Республика",
  "Республика Калмыкия",
  "Республика Карачаево-Черкессия",
  "Республика Карелия",
  "Республика Коми",
  "Республика Марий Эл",
  "Республика Мордовия",
  "Республика Саха (Якутия)",
  "Республика Северная Осетия-Алания",
  "Республика Татарстан",
  "Республика Тыва",
  "Удмуртская Республика",
  "Республика Хакасия",
  "Чувашская Республика",
  "Алтайский край",
  "Краснодарский край",
  "Красноярский край",
  "Приморский край",
  "Ставропольский край",
  "Хабаровский край",
  "Амурская область",
  "Архангельская область",
  "Астраханская область",
  "Белгородская область",
  "Брянская область",
  "Владимирская область",
  "Волгоградская область",
  "Вологодская область",
  "Воронежская область",
  "Ивановская область",
  "Иркутская область",
  "Калиниградская область",
  "Калужская область",
  "Камчатская область",
  "Кемеровская область",
  "Кировская область",
  "Костромская область",
  "Курганская область",
  "Курская область",
  "Ленинградская область",
  "Липецкая область",
  "Магаданская область",
  "Московская область",
  "Мурманская область",
  "Нижегородская область",
  "Новгородская область",
  "Новосибирская область",
  "Омская область",
  "Оренбургская область",
  "Орловская область",
  "Пензенская область",
  "Пермская область",
  "Псковская область",
  "Ростовская область",
  "Рязанская область",
  "Самарская область",
  "Саратовская область",
  "Сахалинская область",
  "Свердловская область",
  "Смоленская область",
  "Тамбовская область",
  "Тверская область",
  "Томская область",
  "Тульская область",
  "Тюменская область",
  "Ульяновская область",
  "Челябинская область",
  "Читинская область",
  "Ярославская область",
  "Еврейская автономная область",
  "Агинский Бурятский авт. округ",
  "Коми-Пермяцкий автономный округ",
  "Корякский автономный округ",
  "Ненецкий автономный округ",
  "Таймырский (Долгано-Ненецкий) автономный округ",
  "Усть-Ордынский Бурятский автономный округ",
  "Ханты-Мансийский автономный округ",
  "Чукотский автономный округ",
  "Эвенкийский автономный округ",
  "Ямало-Ненецкий автономный округ",
  "Чеченская Республика"
];

},{}],949:[function(require,module,exports){
arguments[4][169][0].apply(exports,arguments)
},{"dup":169}],950:[function(require,module,exports){
arguments[4][170][0].apply(exports,arguments)
},{"dup":170}],951:[function(require,module,exports){
module["exports"] = [
  "ул.",
  "улица",
  "проспект",
  "пр.",
  "площадь",
  "пл."
];

},{}],952:[function(require,module,exports){
module["exports"] = [
  "Советская",
  "Молодежная",
  "Центральная",
  "Школьная",
  "Новая",
  "Садовая",
  "Лесная",
  "Набережная",
  "Ленина",
  "Мира",
  "Октябрьская",
  "Зеленая",
  "Комсомольская",
  "Заречная",
  "Первомайская",
  "Гагарина",
  "Полевая",
  "Луговая",
  "Пионерская",
  "Кирова",
  "Юбилейная",
  "Северная",
  "Пролетарская",
  "Степная",
  "Пушкина",
  "Калинина",
  "Южная",
  "Колхозная",
  "Рабочая",
  "Солнечная",
  "Железнодорожная",
  "Восточная",
  "Заводская",
  "Чапаева",
  "Нагорная",
  "Строителей",
  "Береговая",
  "Победы",
  "Горького",
  "Кооперативная",
  "Красноармейская",
  "Совхозная",
  "Речная",
  "Школьный",
  "Спортивная",
  "Озерная",
  "Строительная",
  "Парковая",
  "Чкалова",
  "Мичурина",
  "речень улиц",
  "Подгорная",
  "Дружбы",
  "Почтовая",
  "Партизанская",
  "Вокзальная",
  "Лермонтова",
  "Свободы",
  "Дорожная",
  "Дачная",
  "Маяковского",
  "Западная",
  "Фрунзе",
  "Дзержинского",
  "Московская",
  "Свердлова",
  "Некрасова",
  "Гоголя",
  "Красная",
  "Трудовая",
  "Шоссейная",
  "Чехова",
  "Коммунистическая",
  "Труда",
  "Комарова",
  "Матросова",
  "Островского",
  "Сосновая",
  "Клубная",
  "Куйбышева",
  "Крупской",
  "Березовая",
  "Карла Маркса",
  "8 Марта",
  "Больничная",
  "Садовый",
  "Интернациональная",
  "Суворова",
  "Цветочная",
  "Трактовая",
  "Ломоносова",
  "Горная",
  "Космонавтов",
  "Энергетиков",
  "Шевченко",
  "Весенняя",
  "Механизаторов",
  "Коммунальная",
  "Лесной",
  "40 лет Победы",
  "Майская"
];

},{}],953:[function(require,module,exports){
module["exports"] = [
  "красный",
  "зеленый",
  "синий",
  "желтый",
  "багровый",
  "мятный",
  "зеленовато-голубой",
  "белый",
  "черный",
  "оранжевый",
  "розовый",
  "серый",
  "красно-коричневый",
  "фиолетовый",
  "бирюзовый",
  "желто-коричневый",
  "небесно голубой",
  "оранжево-розовый",
  "темно-фиолетовый",
  "орхидный",
  "оливковый",
  "пурпурный",
  "лимонный",
  "кремовый",
  "сине-фиолетовый",
  "золотой",
  "красно-пурпурный",
  "голубой",
  "лазурный",
  "лиловый",
  "серебряный"
];

},{}],954:[function(require,module,exports){
module["exports"] = [
  "Книги",
  "Фильмы",
  "музыка",
  "игры",
  "Электроника",
  "компьютеры",
  "Дом",
  "садинструмент",
  "Бакалея",
  "здоровье",
  "красота",
  "Игрушки",
  "детское",
  "для малышей",
  "Одежда",
  "обувь",
  "украшения",
  "Спорт",
  "туризм",
  "Автомобильное",
  "промышленное"
];

},{}],955:[function(require,module,exports){
arguments[4][175][0].apply(exports,arguments)
},{"./color":953,"./department":954,"./product_name":956,"dup":175}],956:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Маленький",
    "Эргономичный",
    "Грубый",
    "Интеллектуальный",
    "Великолепный",
    "Невероятный",
    "Фантастический",
    "Практчиный",
    "Лоснящийся",
    "Потрясающий"
  ],
  "material": [
    "Стальной",
    "Деревянный",
    "Бетонный",
    "Пластиковый",
    "Хлопковый",
    "Гранитный",
    "Резиновый"
  ],
  "product": [
    "Стул",
    "Автомобиль",
    "Компьютер",
    "Берет",
    "Кулон",
    "Стол",
    "Свитер",
    "Ремень",
    "Ботинок"
  ]
};

},{}],957:[function(require,module,exports){
arguments[4][177][0].apply(exports,arguments)
},{"./name":958,"./prefix":959,"./suffix":960,"dup":177}],958:[function(require,module,exports){
arguments[4][178][0].apply(exports,arguments)
},{"dup":178}],959:[function(require,module,exports){
module["exports"] = [
  "ИП",
  "ООО",
  "ЗАО",
  "ОАО",
  "НКО",
  "ТСЖ",
  "ОП"
];

},{}],960:[function(require,module,exports){
module["exports"] = [
  "Снаб",
  "Торг",
  "Пром",
  "Трейд",
  "Сбыт"
];

},{}],961:[function(require,module,exports){
arguments[4][181][0].apply(exports,arguments)
},{"./month":962,"./weekday":963,"dup":181}],962:[function(require,module,exports){
// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1734
module["exports"] = {
  wide: [
    "январь",
    "февраль",
    "март",
    "апрель",
    "май",
    "июнь",
    "июль",
    "август",
    "сентябрь",
    "октябрь",
    "ноябрь",
    "декабрь"
  ],
  wide_context: [
    "января",
    "февраля",
    "марта",
    "апреля",
    "мая",
    "июня",
    "июля",
    "августа",
    "сентября",
    "октября",
    "ноября",
    "декабря"
  ],
  abbr: [
    "янв.",
    "февр.",
    "март",
    "апр.",
    "май",
    "июнь",
    "июль",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек."
  ],
  abbr_context: [
    "янв.",
    "февр.",
    "марта",
    "апр.",
    "мая",
    "июня",
    "июля",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек."
  ]
};

},{}],963:[function(require,module,exports){
// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1825
module["exports"] = {
  wide: [
    "Воскресенье",
    "Понедельник",
    "Вторник",
    "Среда",
    "Четверг",
    "Пятница",
    "Суббота"
  ],
  wide_context: [
    "воскресенье",
    "понедельник",
    "вторник",
    "среда",
    "четверг",
    "пятница",
    "суббота"
  ],
  abbr: [
    "Вс",
    "Пн",
    "Вт",
    "Ср",
    "Чт",
    "Пт",
    "Сб"
  ],
  abbr_context: [
    "вс",
    "пн",
    "вт",
    "ср",
    "чт",
    "пт",
    "сб"
  ]
};

},{}],964:[function(require,module,exports){
var ru = {};
module['exports'] = ru;
ru.title = "Russian";
ru.separator = " и ";
ru.address = require("./address");
ru.internet = require("./internet");
ru.name = require("./name");
ru.phone_number = require("./phone_number");
ru.commerce = require("./commerce");
ru.company = require("./company");
ru.date = require("./date");

},{"./address":945,"./commerce":955,"./company":957,"./date":961,"./internet":967,"./name":971,"./phone_number":979}],965:[function(require,module,exports){
module["exports"] = [
  "com",
  "ru",
  "info",
  "рф",
  "net",
  "org"
];

},{}],966:[function(require,module,exports){
module["exports"] = [
  "yandex.ru",
  "ya.ru",
  "mail.ru",
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],967:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":965,"./free_email":966,"dup":187}],968:[function(require,module,exports){
module["exports"] = [
  "Анна",
  "Алёна",
  "Алевтина",
  "Александра",
  "Алина",
  "Алла",
  "Анастасия",
  "Ангелина",
  "Анжела",
  "Анжелика",
  "Антонида",
  "Антонина",
  "Анфиса",
  "Арина",
  "Валентина",
  "Валерия",
  "Варвара",
  "Василиса",
  "Вера",
  "Вероника",
  "Виктория",
  "Галина",
  "Дарья",
  "Евгения",
  "Екатерина",
  "Елена",
  "Елизавета",
  "Жанна",
  "Зинаида",
  "Зоя",
  "Ирина",
  "Кира",
  "Клавдия",
  "Ксения",
  "Лариса",
  "Лидия",
  "Любовь",
  "Людмила",
  "Маргарита",
  "Марина",
  "Мария",
  "Надежда",
  "Наталья",
  "Нина",
  "Оксана",
  "Ольга",
  "Раиса",
  "Регина",
  "Римма",
  "Светлана",
  "София",
  "Таисия",
  "Тамара",
  "Татьяна",
  "Ульяна",
  "Юлия"
];

},{}],969:[function(require,module,exports){
module["exports"] = [
  "Смирнова",
  "Иванова",
  "Кузнецова",
  "Попова",
  "Соколова",
  "Лебедева",
  "Козлова",
  "Новикова",
  "Морозова",
  "Петрова",
  "Волкова",
  "Соловьева",
  "Васильева",
  "Зайцева",
  "Павлова",
  "Семенова",
  "Голубева",
  "Виноградова",
  "Богданова",
  "Воробьева",
  "Федорова",
  "Михайлова",
  "Беляева",
  "Тарасова",
  "Белова",
  "Комарова",
  "Орлова",
  "Киселева",
  "Макарова",
  "Андреева",
  "Ковалева",
  "Ильина",
  "Гусева",
  "Титова",
  "Кузьмина",
  "Кудрявцева",
  "Баранова",
  "Куликова",
  "Алексеева",
  "Степанова",
  "Яковлева",
  "Сорокина",
  "Сергеева",
  "Романова",
  "Захарова",
  "Борисова",
  "Королева",
  "Герасимова",
  "Пономарева",
  "Григорьева",
  "Лазарева",
  "Медведева",
  "Ершова",
  "Никитина",
  "Соболева",
  "Рябова",
  "Полякова",
  "Цветкова",
  "Данилова",
  "Жукова",
  "Фролова",
  "Журавлева",
  "Николаева",
  "Крылова",
  "Максимова",
  "Сидорова",
  "Осипова",
  "Белоусова",
  "Федотова",
  "Дорофеева",
  "Егорова",
  "Матвеева",
  "Боброва",
  "Дмитриева",
  "Калинина",
  "Анисимова",
  "Петухова",
  "Антонова",
  "Тимофеева",
  "Никифорова",
  "Веселова",
  "Филиппова",
  "Маркова",
  "Большакова",
  "Суханова",
  "Миронова",
  "Ширяева",
  "Александрова",
  "Коновалова",
  "Шестакова",
  "Казакова",
  "Ефимова",
  "Денисова",
  "Громова",
  "Фомина",
  "Давыдова",
  "Мельникова",
  "Щербакова",
  "Блинова",
  "Колесникова",
  "Карпова",
  "Афанасьева",
  "Власова",
  "Маслова",
  "Исакова",
  "Тихонова",
  "Аксенова",
  "Гаврилова",
  "Родионова",
  "Котова",
  "Горбунова",
  "Кудряшова",
  "Быкова",
  "Зуева",
  "Третьякова",
  "Савельева",
  "Панова",
  "Рыбакова",
  "Суворова",
  "Абрамова",
  "Воронова",
  "Мухина",
  "Архипова",
  "Трофимова",
  "Мартынова",
  "Емельянова",
  "Горшкова",
  "Чернова",
  "Овчинникова",
  "Селезнева",
  "Панфилова",
  "Копылова",
  "Михеева",
  "Галкина",
  "Назарова",
  "Лобанова",
  "Лукина",
  "Белякова",
  "Потапова",
  "Некрасова",
  "Хохлова",
  "Жданова",
  "Наумова",
  "Шилова",
  "Воронцова",
  "Ермакова",
  "Дроздова",
  "Игнатьева",
  "Савина",
  "Логинова",
  "Сафонова",
  "Капустина",
  "Кириллова",
  "Моисеева",
  "Елисеева",
  "Кошелева",
  "Костина",
  "Горбачева",
  "Орехова",
  "Ефремова",
  "Исаева",
  "Евдокимова",
  "Калашникова",
  "Кабанова",
  "Носкова",
  "Юдина",
  "Кулагина",
  "Лапина",
  "Прохорова",
  "Нестерова",
  "Харитонова",
  "Агафонова",
  "Муравьева",
  "Ларионова",
  "Федосеева",
  "Зимина",
  "Пахомова",
  "Шубина",
  "Игнатова",
  "Филатова",
  "Крюкова",
  "Рогова",
  "Кулакова",
  "Терентьева",
  "Молчанова",
  "Владимирова",
  "Артемьева",
  "Гурьева",
  "Зиновьева",
  "Гришина",
  "Кононова",
  "Дементьева",
  "Ситникова",
  "Симонова",
  "Мишина",
  "Фадеева",
  "Комиссарова",
  "Мамонтова",
  "Носова",
  "Гуляева",
  "Шарова",
  "Устинова",
  "Вишнякова",
  "Евсеева",
  "Лаврентьева",
  "Брагина",
  "Константинова",
  "Корнилова",
  "Авдеева",
  "Зыкова",
  "Бирюкова",
  "Шарапова",
  "Никонова",
  "Щукина",
  "Дьячкова",
  "Одинцова",
  "Сазонова",
  "Якушева",
  "Красильникова",
  "Гордеева",
  "Самойлова",
  "Князева",
  "Беспалова",
  "Уварова",
  "Шашкова",
  "Бобылева",
  "Доронина",
  "Белозерова",
  "Рожкова",
  "Самсонова",
  "Мясникова",
  "Лихачева",
  "Бурова",
  "Сысоева",
  "Фомичева",
  "Русакова",
  "Стрелкова",
  "Гущина",
  "Тетерина",
  "Колобова",
  "Субботина",
  "Фокина",
  "Блохина",
  "Селиверстова",
  "Пестова",
  "Кондратьева",
  "Силина",
  "Меркушева",
  "Лыткина",
  "Турова"
];

},{}],970:[function(require,module,exports){
module["exports"] = [
  "Александровна",
  "Алексеевна",
  "Альбертовна",
  "Анатольевна",
  "Андреевна",
  "Антоновна",
  "Аркадьевна",
  "Арсеньевна",
  "Артёмовна",
  "Борисовна",
  "Вадимовна",
  "Валентиновна",
  "Валерьевна",
  "Васильевна",
  "Викторовна",
  "Витальевна",
  "Владимировна",
  "Владиславовна",
  "Вячеславовна",
  "Геннадьевна",
  "Георгиевна",
  "Германовна",
  "Григорьевна",
  "Данииловна",
  "Денисовна",
  "Дмитриевна",
  "Евгеньевна",
  "Егоровна",
  "Ивановна",
  "Игнатьевна",
  "Игоревна",
  "Ильинична",
  "Константиновна",
  "Лаврентьевна",
  "Леонидовна",
  "Макаровна",
  "Максимовна",
  "Матвеевна",
  "Михайловна",
  "Никитична",
  "Николаевна",
  "Олеговна",
  "Романовна",
  "Семёновна",
  "Сергеевна",
  "Станиславовна",
  "Степановна",
  "Фёдоровна",
  "Эдуардовна",
  "Юрьевна",
  "Ярославовна"
];

},{}],971:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.male_middle_name = require("./male_middle_name");
name.male_last_name = require("./male_last_name");
name.female_first_name = require("./female_first_name");
name.female_middle_name = require("./female_middle_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./female_first_name":968,"./female_last_name":969,"./female_middle_name":970,"./male_first_name":972,"./male_last_name":973,"./male_middle_name":974,"./name":975,"./prefix":976,"./suffix":977}],972:[function(require,module,exports){
module["exports"] = [
  "Александр",
  "Алексей",
  "Альберт",
  "Анатолий",
  "Андрей",
  "Антон",
  "Аркадий",
  "Арсений",
  "Артём",
  "Борис",
  "Вадим",
  "Валентин",
  "Валерий",
  "Василий",
  "Виктор",
  "Виталий",
  "Владимир",
  "Владислав",
  "Вячеслав",
  "Геннадий",
  "Георгий",
  "Герман",
  "Григорий",
  "Даниил",
  "Денис",
  "Дмитрий",
  "Евгений",
  "Егор",
  "Иван",
  "Игнатий",
  "Игорь",
  "Илья",
  "Константин",
  "Лаврентий",
  "Леонид",
  "Лука",
  "Макар",
  "Максим",
  "Матвей",
  "Михаил",
  "Никита",
  "Николай",
  "Олег",
  "Роман",
  "Семён",
  "Сергей",
  "Станислав",
  "Степан",
  "Фёдор",
  "Эдуард",
  "Юрий",
  "Ярослав"
];

},{}],973:[function(require,module,exports){
module["exports"] = [
  "Смирнов",
  "Иванов",
  "Кузнецов",
  "Попов",
  "Соколов",
  "Лебедев",
  "Козлов",
  "Новиков",
  "Морозов",
  "Петров",
  "Волков",
  "Соловьев",
  "Васильев",
  "Зайцев",
  "Павлов",
  "Семенов",
  "Голубев",
  "Виноградов",
  "Богданов",
  "Воробьев",
  "Федоров",
  "Михайлов",
  "Беляев",
  "Тарасов",
  "Белов",
  "Комаров",
  "Орлов",
  "Киселев",
  "Макаров",
  "Андреев",
  "Ковалев",
  "Ильин",
  "Гусев",
  "Титов",
  "Кузьмин",
  "Кудрявцев",
  "Баранов",
  "Куликов",
  "Алексеев",
  "Степанов",
  "Яковлев",
  "Сорокин",
  "Сергеев",
  "Романов",
  "Захаров",
  "Борисов",
  "Королев",
  "Герасимов",
  "Пономарев",
  "Григорьев",
  "Лазарев",
  "Медведев",
  "Ершов",
  "Никитин",
  "Соболев",
  "Рябов",
  "Поляков",
  "Цветков",
  "Данилов",
  "Жуков",
  "Фролов",
  "Журавлев",
  "Николаев",
  "Крылов",
  "Максимов",
  "Сидоров",
  "Осипов",
  "Белоусов",
  "Федотов",
  "Дорофеев",
  "Егоров",
  "Матвеев",
  "Бобров",
  "Дмитриев",
  "Калинин",
  "Анисимов",
  "Петухов",
  "Антонов",
  "Тимофеев",
  "Никифоров",
  "Веселов",
  "Филиппов",
  "Марков",
  "Большаков",
  "Суханов",
  "Миронов",
  "Ширяев",
  "Александров",
  "Коновалов",
  "Шестаков",
  "Казаков",
  "Ефимов",
  "Денисов",
  "Громов",
  "Фомин",
  "Давыдов",
  "Мельников",
  "Щербаков",
  "Блинов",
  "Колесников",
  "Карпов",
  "Афанасьев",
  "Власов",
  "Маслов",
  "Исаков",
  "Тихонов",
  "Аксенов",
  "Гаврилов",
  "Родионов",
  "Котов",
  "Горбунов",
  "Кудряшов",
  "Быков",
  "Зуев",
  "Третьяков",
  "Савельев",
  "Панов",
  "Рыбаков",
  "Суворов",
  "Абрамов",
  "Воронов",
  "Мухин",
  "Архипов",
  "Трофимов",
  "Мартынов",
  "Емельянов",
  "Горшков",
  "Чернов",
  "Овчинников",
  "Селезнев",
  "Панфилов",
  "Копылов",
  "Михеев",
  "Галкин",
  "Назаров",
  "Лобанов",
  "Лукин",
  "Беляков",
  "Потапов",
  "Некрасов",
  "Хохлов",
  "Жданов",
  "Наумов",
  "Шилов",
  "Воронцов",
  "Ермаков",
  "Дроздов",
  "Игнатьев",
  "Савин",
  "Логинов",
  "Сафонов",
  "Капустин",
  "Кириллов",
  "Моисеев",
  "Елисеев",
  "Кошелев",
  "Костин",
  "Горбачев",
  "Орехов",
  "Ефремов",
  "Исаев",
  "Евдокимов",
  "Калашников",
  "Кабанов",
  "Носков",
  "Юдин",
  "Кулагин",
  "Лапин",
  "Прохоров",
  "Нестеров",
  "Харитонов",
  "Агафонов",
  "Муравьев",
  "Ларионов",
  "Федосеев",
  "Зимин",
  "Пахомов",
  "Шубин",
  "Игнатов",
  "Филатов",
  "Крюков",
  "Рогов",
  "Кулаков",
  "Терентьев",
  "Молчанов",
  "Владимиров",
  "Артемьев",
  "Гурьев",
  "Зиновьев",
  "Гришин",
  "Кононов",
  "Дементьев",
  "Ситников",
  "Симонов",
  "Мишин",
  "Фадеев",
  "Комиссаров",
  "Мамонтов",
  "Носов",
  "Гуляев",
  "Шаров",
  "Устинов",
  "Вишняков",
  "Евсеев",
  "Лаврентьев",
  "Брагин",
  "Константинов",
  "Корнилов",
  "Авдеев",
  "Зыков",
  "Бирюков",
  "Шарапов",
  "Никонов",
  "Щукин",
  "Дьячков",
  "Одинцов",
  "Сазонов",
  "Якушев",
  "Красильников",
  "Гордеев",
  "Самойлов",
  "Князев",
  "Беспалов",
  "Уваров",
  "Шашков",
  "Бобылев",
  "Доронин",
  "Белозеров",
  "Рожков",
  "Самсонов",
  "Мясников",
  "Лихачев",
  "Буров",
  "Сысоев",
  "Фомичев",
  "Русаков",
  "Стрелков",
  "Гущин",
  "Тетерин",
  "Колобов",
  "Субботин",
  "Фокин",
  "Блохин",
  "Селиверстов",
  "Пестов",
  "Кондратьев",
  "Силин",
  "Меркушев",
  "Лыткин",
  "Туров"
];

},{}],974:[function(require,module,exports){
module["exports"] = [
  "Александрович",
  "Алексеевич",
  "Альбертович",
  "Анатольевич",
  "Андреевич",
  "Антонович",
  "Аркадьевич",
  "Арсеньевич",
  "Артёмович",
  "Борисович",
  "Вадимович",
  "Валентинович",
  "Валерьевич",
  "Васильевич",
  "Викторович",
  "Витальевич",
  "Владимирович",
  "Владиславович",
  "Вячеславович",
  "Геннадьевич",
  "Георгиевич",
  "Германович",
  "Григорьевич",
  "Даниилович",
  "Денисович",
  "Дмитриевич",
  "Евгеньевич",
  "Егорович",
  "Иванович",
  "Игнатьевич",
  "Игоревич",
  "Ильич",
  "Константинович",
  "Лаврентьевич",
  "Леонидович",
  "Лукич",
  "Макарович",
  "Максимович",
  "Матвеевич",
  "Михайлович",
  "Никитич",
  "Николаевич",
  "Олегович",
  "Романович",
  "Семёнович",
  "Сергеевич",
  "Станиславович",
  "Степанович",
  "Фёдорович",
  "Эдуардович",
  "Юрьевич",
  "Ярославович"
];

},{}],975:[function(require,module,exports){
module["exports"] = [
  "#{male_first_name} #{male_last_name}",
  "#{male_last_name} #{male_first_name}",
  "#{male_first_name} #{male_middle_name} #{male_last_name}",
  "#{male_last_name} #{male_first_name} #{male_middle_name}",
  "#{female_first_name} #{female_last_name}",
  "#{female_last_name} #{female_first_name}",
  "#{female_first_name} #{female_middle_name} #{female_last_name}",
  "#{female_last_name} #{female_first_name} #{female_middle_name}"
];

},{}],976:[function(require,module,exports){
arguments[4][194][0].apply(exports,arguments)
},{"dup":194}],977:[function(require,module,exports){
arguments[4][194][0].apply(exports,arguments)
},{"dup":194}],978:[function(require,module,exports){
arguments[4][196][0].apply(exports,arguments)
},{"dup":196}],979:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":978,"dup":197}],980:[function(require,module,exports){
arguments[4][198][0].apply(exports,arguments)
},{"dup":198}],981:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"dup":199}],982:[function(require,module,exports){
module["exports"] = [
  "Bánovce nad Bebravou",
  "Banská Bystrica",
  "Banská Štiavnica",
  "Bardejov",
  "Bratislava I",
  "Bratislava II",
  "Bratislava III",
  "Bratislava IV",
  "Bratislava V",
  "Brezno",
  "Bytča",
  "Čadca",
  "Detva",
  "Dolný Kubín",
  "Dunajská Streda",
  "Galanta",
  "Gelnica",
  "Hlohovec",
  "Humenné",
  "Ilava",
  "Kežmarok",
  "Komárno",
  "Košice I",
  "Košice II",
  "Košice III",
  "Košice IV",
  "Košice-okolie",
  "Krupina",
  "Kysucké Nové Mesto",
  "Levice",
  "Levoča",
  "Liptovský Mikuláš",
  "Lučenec",
  "Malacky",
  "Martin",
  "Medzilaborce",
  "Michalovce",
  "Myjava",
  "Námestovo",
  "Nitra",
  "Nové Mesto n.Váhom",
  "Nové Zámky",
  "Partizánske",
  "Pezinok",
  "Piešťany",
  "Poltár",
  "Poprad",
  "Považská Bystrica",
  "Prešov",
  "Prievidza",
  "Púchov",
  "Revúca",
  "Rimavská Sobota",
  "Rožňava",
  "Ružomberok",
  "Sabinov",
  "Šaľa",
  "Senec",
  "Senica",
  "Skalica",
  "Snina",
  "Sobrance",
  "Spišská Nová Ves",
  "Stará Ľubovňa",
  "Stropkov",
  "Svidník",
  "Topoľčany",
  "Trebišov",
  "Trenčín",
  "Trnava",
  "Turčianske Teplice",
  "Tvrdošín",
  "Veľký Krtíš",
  "Vranov nad Topľou",
  "Žarnovica",
  "Žiar nad Hronom",
  "Žilina",
  "Zlaté Moravce",
  "Zvolen"
];

},{}],983:[function(require,module,exports){
arguments[4][325][0].apply(exports,arguments)
},{"dup":325}],984:[function(require,module,exports){
arguments[4][326][0].apply(exports,arguments)
},{"dup":326}],985:[function(require,module,exports){
module["exports"] = [
  "Afganistan",
  "Afgánsky islamský štát",
  "Albánsko",
  "Albánska republika",
  "Alžírsko",
  "Alžírska demokratická ľudová republika",
  "Andorra",
  "Andorrské kniežatsvo",
  "Angola",
  "Angolská republika",
  "Antigua a Barbuda",
  "Antigua a Barbuda",
  "Argentína",
  "Argentínska republika",
  "Arménsko",
  "Arménska republika",
  "Austrália",
  "Austrálsky zväz",
  "Azerbajdžan",
  "Azerbajdžanská republika",
  "Bahamy",
  "Bahamské spoločenstvo",
  "Bahrajn",
  "Bahrajnské kráľovstvo",
  "Bangladéš",
  "Bangladéšska ľudová republika",
  "Barbados",
  "Barbados",
  "Belgicko",
  "Belgické kráľovstvo",
  "Belize",
  "Belize",
  "Benin",
  "Beninská republika",
  "Bhután",
  "Bhutánske kráľovstvo",
  "Bielorusko",
  "Bieloruská republika",
  "Bolívia",
  "Bolívijská republika",
  "Bosna a Hercegovina",
  "Republika Bosny a Hercegoviny",
  "Botswana",
  "Botswanská republika",
  "Brazília",
  "Brazílska federatívna republika",
  "Brunej",
  "Brunejský sultanát",
  "Bulharsko",
  "Bulharská republika",
  "Burkina Faso",
  "Burkina Faso",
  "Burundi",
  "Burundská republika",
  "Cyprus",
  "Cyperská republika",
  "Čad",
  "Republika Čad",
  "Česko",
  "Česká republika",
  "Čína",
  "Čínska ľudová republika",
  "Dánsko",
  "Dánsko kráľovstvo",
  "Dominika",
  "Spoločenstvo Dominika",
  "Dominikánska republika",
  "Dominikánska republika",
  "Džibutsko",
  "Džibutská republika",
  "Egypt",
  "Egyptská arabská republika",
  "Ekvádor",
  "Ekvádorská republika",
  "Eritrea",
  "Eritrejský štát",
  "Estónsko",
  "Estónska republika",
  "Etiópia",
  "Etiópska federatívna demokratická republika",
  "Fidži",
  "Republika ostrovy Fidži",
  "Filipíny",
  "Filipínska republika",
  "Fínsko",
  "Fínska republika",
  "Francúzsko",
  "Francúzska republika",
  "Gabon",
  "Gabonská republika",
  "Gambia",
  "Gambijská republika",
  "Ghana",
  "Ghanská republika",
  "Grécko",
  "Helénska republika",
  "Grenada",
  "Grenada",
  "Gruzínsko",
  "Gruzínsko",
  "Guatemala",
  "Guatemalská republika",
  "Guinea",
  "Guinejská republika",
  "Guinea-Bissau",
  "Republika Guinea-Bissau",
  "Guayana",
  "Guayanská republika",
  "Haiti",
  "Republika Haiti",
  "Holandsko",
  "Holandské kráľovstvo",
  "Honduras",
  "Honduraská republika",
  "Chile",
  "Čílska republika",
  "Chorvátsko",
  "Chorvátska republika",
  "India",
  "Indická republika",
  "Indonézia",
  "Indonézska republika",
  "Irak",
  "Iracká republika",
  "Irán",
  "Iránska islamská republika",
  "Island",
  "Islandská republika",
  "Izrael",
  "Štát Izrael",
  "Írsko",
  "Írska republika",
  "Jamajka",
  "Jamajka",
  "Japonsko",
  "Japonsko",
  "Jemen",
  "Jemenská republika",
  "Jordánsko",
  "Jordánske hášimovské kráľovstvo",
  "Južná Afrika",
  "Juhoafrická republika",
  "Kambodža",
  "Kambodžské kráľovstvo",
  "Kamerun",
  "Kamerunská republika",
  "Kanada",
  "Kanada",
  "Kapverdy",
  "Kapverdská republika",
  "Katar",
  "Štát Katar",
  "Kazachstan",
  "Kazašská republika",
  "Keňa",
  "Kenská republika",
  "Kirgizsko",
  "Kirgizská republika",
  "Kiribati",
  "Kiribatská republika",
  "Kolumbia",
  "Kolumbijská republika",
  "Komory",
  "Komorská únia",
  "Kongo",
  "Konžská demokratická republika",
  "Kongo (\"Brazzaville\")",
  "Konžská republika",
  "Kórea (\"Južná\")",
  "Kórejská republika",
  "Kórea (\"Severná\")",
  "Kórejská ľudovodemokratická republika",
  "Kostarika",
  "Kostarická republika",
  "Kuba",
  "Kubánska republika",
  "Kuvajt",
  "Kuvajtský štát",
  "Laos",
  "Laoská ľudovodemokratická republika",
  "Lesotho",
  "Lesothské kráľovstvo",
  "Libanon",
  "Libanonská republika",
  "Libéria",
  "Libérijská republika",
  "Líbya",
  "Líbyjská arabská ľudová socialistická džamáhírija",
  "Lichtenštajnsko",
  "Lichtenštajnské kniežatstvo",
  "Litva",
  "Litovská republika",
  "Lotyšsko",
  "Lotyšská republika",
  "Luxembursko",
  "Luxemburské veľkovojvodstvo",
  "Macedónsko",
  "Macedónska republika",
  "Madagaskar",
  "Madagaskarská republika",
  "Maďarsko",
  "Maďarská republika",
  "Malajzia",
  "Malajzia",
  "Malawi",
  "Malawijská republika",
  "Maldivy",
  "Maldivská republika",
  "Mali",
  "Malijská republika",
  "Malta",
  "Malta",
  "Maroko",
  "Marocké kráľovstvo",
  "Marshallove ostrovy",
  "Republika Marshallových ostrovy",
  "Mauritánia",
  "Mauritánska islamská republika",
  "Maurícius",
  "Maurícijská republika",
  "Mexiko",
  "Spojené štáty mexické",
  "Mikronézia",
  "Mikronézske federatívne štáty",
  "Mjanmarsko",
  "Mjanmarský zväz",
  "Moldavsko",
  "Moldavská republika",
  "Monako",
  "Monacké kniežatstvo",
  "Mongolsko",
  "Mongolsko",
  "Mozambik",
  "Mozambická republika",
  "Namíbia",
  "Namíbijská republika",
  "Nauru",
  "Naurská republika",
  "Nemecko",
  "Nemecká spolková republika",
  "Nepál",
  "Nepálske kráľovstvo",
  "Niger",
  "Nigerská republika",
  "Nigéria",
  "Nigérijská federatívna republika",
  "Nikaragua",
  "Nikaragujská republika",
  "Nový Zéland",
  "Nový Zéland",
  "Nórsko",
  "Nórske kráľovstvo",
  "Omán",
  "Ománsky sultanát",
  "Pakistan",
  "Pakistanská islamská republika",
  "Palau",
  "Palauská republika",
  "Panama",
  "Panamská republika",
  "Papua-Nová Guinea",
  "Nezávislý štát Papua-Nová Guinea",
  "Paraguaj",
  "Paraguajská republika",
  "Peru",
  "Peruánska republika",
  "Pobrežie Slonoviny",
  "Republika Pobrežie Slonoviny",
  "Poľsko",
  "Poľská republika",
  "Portugalsko",
  "Portugalská republika",
  "Rakúsko",
  "Rakúska republika",
  "Rovníková Guinea",
  "Republika Rovníková Guinea",
  "Rumunsko",
  "Rumunsko",
  "Rusko",
  "Ruská federácia",
  "Rwanda",
  "Rwandská republika",
  "Salvádor",
  "Salvádorská republika",
  "Samoa",
  "Nezávislý štát Samoa",
  "San Maríno",
  "Sanmarínska republika",
  "Saudská Arábia",
  "Kráľovstvo Saudskej Arábie",
  "Senegal",
  "Senegalská republika",
  "Seychely",
  "Seychelská republika",
  "Sierra Leone",
  "Republika Sierra Leone",
  "Singapur",
  "Singapurska republika",
  "Slovensko",
  "Slovenská republika",
  "Slovinsko",
  "Slovinská republika",
  "Somálsko",
  "Somálska demokratická republika",
  "Spojené arabské emiráty",
  "Spojené arabské emiráty",
  "Spojené štáty americké",
  "Spojené štáty americké",
  "Srbsko a Čierna Hora",
  "Srbsko a Čierna Hora",
  "Srí Lanka",
  "Demokratická socialistická republika Srí Lanka",
  "Stredoafrická republika",
  "Stredoafrická republika",
  "Sudán",
  "Sudánska republika",
  "Surinam",
  "Surinamská republika",
  "Svazijsko",
  "Svazijské kráľovstvo",
  "Svätá Lucia",
  "Svätá Lucia",
  "Svätý Krištof a Nevis",
  "Federácia Svätý Krištof a Nevis",
  "Sv. Tomáš a Princov Ostrov",
  "Demokratická republika Svätý Tomáš a Princov Ostrov",
  "Sv. Vincent a Grenadíny",
  "Svätý Vincent a Grenadíny",
  "Sýria",
  "Sýrska arabská republika",
  "Šalamúnove ostrovy",
  "Šalamúnove ostrovy",
  "Španielsko",
  "Španielske kráľovstvo",
  "Švajčiarsko",
  "Švajčiarska konfederácia",
  "Švédsko",
  "Švédske kráľovstvo",
  "Tadžikistan",
  "Tadžická republika",
  "Taliansko",
  "Talianska republika",
  "Tanzánia",
  "Tanzánijská zjednotená republika",
  "Thajsko",
  "Thajské kráľovstvo",
  "Togo",
  "Tožská republika",
  "Tonga",
  "Tonžské kráľovstvo",
  "Trinidad a Tobago",
  "Republika Trinidad a Tobago",
  "Tunisko",
  "Tuniská republika",
  "Turecko",
  "Turecká republika",
  "Turkménsko",
  "Turkménsko",
  "Tuvalu",
  "Tuvalu",
  "Uganda",
  "Ugandská republika",
  "Ukrajina",
  "Uruguaj",
  "Uruguajská východná republika",
  "Uzbekistan",
  "Vanuatu",
  "Vanuatská republika",
  "Vatikán",
  "Svätá Stolica",
  "Veľká Británia",
  "Spojené kráľovstvo Veľkej Británie a Severného Írska",
  "Venezuela",
  "Venezuelská bolívarovská republika",
  "Vietnam",
  "Vietnamská socialistická republika",
  "Východný Timor",
  "Demokratická republika Východný Timor",
  "Zambia",
  "Zambijská republika",
  "Zimbabwe",
  "Zimbabwianska republika"
];

},{}],986:[function(require,module,exports){
module["exports"] = [
  "Slovensko"
];

},{}],987:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city_name = require("./city_name");
address.city = require("./city");
address.street = require("./street");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":980,"./city":981,"./city_name":982,"./city_prefix":983,"./city_suffix":984,"./country":985,"./default_country":986,"./postcode":988,"./secondary_address":989,"./state":990,"./state_abbr":991,"./street":992,"./street_address":993,"./street_name":994,"./time_zone":995}],988:[function(require,module,exports){
module["exports"] = [
  "#####",
  "### ##",
  "## ###"
];

},{}],989:[function(require,module,exports){
arguments[4][205][0].apply(exports,arguments)
},{"dup":205}],990:[function(require,module,exports){
arguments[4][194][0].apply(exports,arguments)
},{"dup":194}],991:[function(require,module,exports){
arguments[4][194][0].apply(exports,arguments)
},{"dup":194}],992:[function(require,module,exports){
module["exports"] = [
  "Adámiho",
  "Ahoj",
  "Albína Brunovského",
  "Albrechtova",
  "Alejová",
  "Alešova",
  "Alibernetová",
  "Alžbetínska",
  "Alžbety Gwerkovej",
  "Ambroseho",
  "Ambrušova",
  "Americká",
  "Americké námestie",
  "Americké námestie",
  "Andreja Mráza",
  "Andreja Plávku",
  "Andrusovova",
  "Anenská",
  "Anenská",
  "Antolská",
  "Astronomická",
  "Astrová",
  "Azalková",
  "Azovská",
  "Babuškova",
  "Bachova",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajzova",
  "Bancíkovej",
  "Banícka",
  "Baníkova",
  "Banskobystrická",
  "Banšelova",
  "Bardejovská",
  "Bartókova",
  "Bartoňova",
  "Bartoškova",
  "Baštová",
  "Bazová",
  "Bažantia",
  "Beblavého",
  "Beckovská",
  "Bedľová",
  "Belániková",
  "Belehradská",
  "Belinského",
  "Belopotockého",
  "Beňadická",
  "Bencúrova",
  "Benediktiho",
  "Beniakova",
  "Bernolákova",
  "Beskydská",
  "Betliarska",
  "Bezručova",
  "Biela",
  "Bielkova",
  "Björnsonova",
  "Blagoevova",
  "Blatnická",
  "Blumentálska",
  "Blyskáčová",
  "Bočná",
  "Bohrova",
  "Bohúňova",
  "Bojnická",
  "Borodáčova",
  "Borská",
  "Bosákova",
  "Botanická",
  "Bottova",
  "Boženy Němcovej",
  "Bôrik",
  "Bradáčova",
  "Bradlianska",
  "Brančská",
  "Bratská",
  "Brestová",
  "Brezovská",
  "Briežky",
  "Brnianska",
  "Brodná",
  "Brodská",
  "Broskyňová",
  "Břeclavská",
  "Budatínska",
  "Budatínska",
  "Budatínska",
  "Búdkova  cesta",
  "Budovateľská",
  "Budyšínska",
  "Budyšínska",
  "Buková",
  "Bukureštská",
  "Bulharská",
  "Bulíkova",
  "Bystrého",
  "Bzovícka",
  "Cablkova",
  "Cesta na Červený most",
  "Cesta na Červený most",
  "Cesta na Senec",
  "Cikkerova",
  "Cintorínska",
  "Cintulova",
  "Cukrová",
  "Cyrilova",
  "Čajakova",
  "Čajkovského",
  "Čaklovská",
  "Čalovská",
  "Čapajevova",
  "Čapkova",
  "Čárskeho",
  "Čavojského",
  "Čečinová",
  "Čelakovského",
  "Čerešňová",
  "Černyševského",
  "Červeňova",
  "Česká",
  "Československých par",
  "Čipkárska",
  "Čmelíkova",
  "Čmeľovec",
  "Čulenova",
  "Daliborovo námestie",
  "Dankovského",
  "Dargovská",
  "Ďatelinová",
  "Daxnerovo námestie",
  "Devínska cesta",
  "Dlhé diely I.",
  "Dlhé diely II.",
  "Dlhé diely III.",
  "Dobrovičova",
  "Dobrovičova",
  "Dobrovského",
  "Dobšinského",
  "Dohnalova",
  "Dohnányho",
  "Doležalova",
  "Dolná",
  "Dolnozemská cesta",
  "Domkárska",
  "Domové role",
  "Donnerova",
  "Donovalova",
  "Dostojevského rad",
  "Dr. Vladimíra Clemen",
  "Drevená",
  "Drieňová",
  "Drieňová",
  "Drieňová",
  "Drotárska cesta",
  "Drotárska cesta",
  "Drotárska cesta",
  "Družicová",
  "Družstevná",
  "Dubnická",
  "Dubová",
  "Dúbravská cesta",
  "Dudova",
  "Dulovo námestie",
  "Dulovo námestie",
  "Dunajská",
  "Dvořákovo nábrežie",
  "Edisonova",
  "Einsteinova",
  "Elektrárenská",
  "Exnárova",
  "F. Kostku",
  "Fadruszova",
  "Fajnorovo nábrežie",
  "Fándlyho",
  "Farebná",
  "Farská",
  "Farského",
  "Fazuľová",
  "Fedinova",
  "Ferienčíkova",
  "Fialkové údolie",
  "Fibichova",
  "Filiálne nádražie",
  "Flöglova",
  "Floriánske námestie",
  "Fraňa Kráľa",
  "Francisciho",
  "Francúzskych partizá",
  "Františkánska",
  "Františkánske námest",
  "Furdekova",
  "Furdekova",
  "Gabčíkova",
  "Gagarinova",
  "Gagarinova",
  "Gagarinova",
  "Gajova",
  "Galaktická",
  "Galandova",
  "Gallova",
  "Galvaniho",
  "Gašparíkova",
  "Gaštanová",
  "Gavlovičova",
  "Gemerská",
  "Gercenova",
  "Gessayova",
  "Gettingová",
  "Godrova",
  "Gogoľova",
  "Goláňova",
  "Gondova",
  "Goralská",
  "Gorazdova",
  "Gorkého",
  "Gregorovej",
  "Grösslingova",
  "Gruzínska",
  "Gunduličova",
  "Gusevova",
  "Haanova",
  "Haburská",
  "Halašova",
  "Hálkova",
  "Hálova",
  "Hamuliakova",
  "Hanácka",
  "Handlovská",
  "Hany Meličkovej",
  "Harmanecká",
  "Hasičská",
  "Hattalova",
  "Havlíčkova",
  "Havrania",
  "Haydnova",
  "Herlianska",
  "Herlianska",
  "Heydukova",
  "Hlaváčikova",
  "Hlavatého",
  "Hlavné námestie",
  "Hlboká cesta",
  "Hlboká cesta",
  "Hlivová",
  "Hlučínska",
  "Hodálova",
  "Hodžovo námestie",
  "Holekova",
  "Holíčska",
  "Hollého",
  "Holubyho",
  "Hontianska",
  "Horárska",
  "Horné Židiny",
  "Horská",
  "Horská",
  "Hrad",
  "Hradné údolie",
  "Hrachová",
  "Hraničná",
  "Hrebendova",
  "Hríbová",
  "Hriňovská",
  "Hrobákova",
  "Hrobárska",
  "Hroboňova",
  "Hudecova",
  "Humenské námestie",
  "Hummelova",
  "Hurbanovo námestie",
  "Hurbanovo námestie",
  "Hviezdoslavovo námes",
  "Hýrošova",
  "Chalupkova",
  "Chemická",
  "Chlumeckého",
  "Chorvátska",
  "Chorvátska",
  "Iľjušinova",
  "Ilkovičova",
  "Inovecká",
  "Inovecká",
  "Iskerníková",
  "Ivana Horvátha",
  "Ivánska cesta",
  "J.C.Hronského",
  "Jabloňová",
  "Jadrová",
  "Jakabova",
  "Jakubovo námestie",
  "Jamnického",
  "Jána Stanislava",
  "Janáčkova",
  "Jančova",
  "Janíkove role",
  "Jankolova",
  "Jánošíkova",
  "Jánoškova",
  "Janotova",
  "Jánska",
  "Jantárová cesta",
  "Jarabinková",
  "Jarná",
  "Jaroslavova",
  "Jarošova",
  "Jaseňová",
  "Jasná",
  "Jasovská",
  "Jastrabia",
  "Jašíkova",
  "Javorinská",
  "Javorová",
  "Jazdecká",
  "Jedlíkova",
  "Jégého",
  "Jelačičova",
  "Jelenia",
  "Jesenná",
  "Jesenského",
  "Jiráskova",
  "Jiskrova",
  "Jozefská",
  "Junácka",
  "Jungmannova",
  "Jurigovo námestie",
  "Jurovského",
  "Jurská",
  "Justičná",
  "K lomu",
  "K Železnej studienke",
  "Kalinčiakova",
  "Kamenárska",
  "Kamenné námestie",
  "Kapicova",
  "Kapitulská",
  "Kapitulský dvor",
  "Kapucínska",
  "Kapušianska",
  "Karadžičova",
  "Karadžičova",
  "Karadžičova",
  "Karadžičova",
  "Karloveská",
  "Karloveské rameno",
  "Karpatská",
  "Kašmírska",
  "Kaštielska",
  "Kaukazská",
  "Kempelenova",
  "Kežmarské námestie",
  "Kladnianska",
  "Klariská",
  "Kláštorská",
  "Klatovská",
  "Klatovská",
  "Klemensova",
  "Klincová",
  "Klobučnícka",
  "Klokočova",
  "Kľukatá",
  "Kmeťovo námestie",
  "Koceľova",
  "Kočánkova",
  "Kohútova",
  "Kolárska",
  "Kolískova",
  "Kollárovo námestie",
  "Kollárovo námestie",
  "Kolmá",
  "Komárňanská",
  "Komárnická",
  "Komárnická",
  "Komenského námestie",
  "Kominárska",
  "Komonicová",
  "Konopná",
  "Konvalinková",
  "Konventná",
  "Kopanice",
  "Kopčianska",
  "Koperníkova",
  "Korabinského",
  "Koreničova",
  "Kostlivého",
  "Kostolná",
  "Košická",
  "Košická",
  "Košická",
  "Kováčska",
  "Kovorobotnícka",
  "Kozia",
  "Koziarka",
  "Kozmonautická",
  "Krajná",
  "Krakovská",
  "Kráľovské údolie",
  "Krasinského",
  "Kraskova",
  "Krásna",
  "Krásnohorská",
  "Krasovského",
  "Krátka",
  "Krčméryho",
  "Kremnická",
  "Kresánkova",
  "Krivá",
  "Križkova",
  "Krížna",
  "Krížna",
  "Krížna",
  "Krížna",
  "Krmanova",
  "Krompašská",
  "Krupinská",
  "Krupkova",
  "Kubániho",
  "Kubínska",
  "Kuklovská",
  "Kukučínova",
  "Kukuričná",
  "Kulíškova",
  "Kultúrna",
  "Kupeckého",
  "Kúpeľná",
  "Kutlíkova",
  "Kutuzovova",
  "Kuzmányho",
  "Kvačalova",
  "Kvetná",
  "Kýčerského",
  "Kyjevská",
  "Kysucká",
  "Laborecká",
  "Lackova",
  "Ladislava Sáru",
  "Ľadová",
  "Lachova",
  "Ľaliová",
  "Lamačská cesta",
  "Lamačská cesta",
  "Lamanského",
  "Landererova",
  "Langsfeldova",
  "Ľanová",
  "Laskomerského",
  "Laučekova",
  "Laurinská",
  "Lazaretská",
  "Lazaretská",
  "Legerského",
  "Legionárska",
  "Legionárska",
  "Lehockého",
  "Lehockého",
  "Lenardova",
  "Lermontovova",
  "Lesná",
  "Leškova",
  "Letecká",
  "Letisko M.R.Štefánik",
  "Letná",
  "Levárska",
  "Levická",
  "Levočská",
  "Lidická",
  "Lietavská",
  "Lichardova",
  "Lipová",
  "Lipovinová",
  "Liptovská",
  "Listová",
  "Líščie nivy",
  "Líščie údolie",
  "Litovská",
  "Lodná",
  "Lombardiniho",
  "Lomonosovova",
  "Lopenícka",
  "Lovinského",
  "Ľubietovská",
  "Ľubinská",
  "Ľubľanská",
  "Ľubochnianska",
  "Ľubovnianska",
  "Lúčna",
  "Ľudové námestie",
  "Ľudovíta Fullu",
  "Luhačovická",
  "Lužická",
  "Lužná",
  "Lýcejná",
  "Lykovcová",
  "M. Hella",
  "Magnetová",
  "Macharova",
  "Majakovského",
  "Majerníkova",
  "Májkova",
  "Májová",
  "Makovického",
  "Malá",
  "Malé pálenisko",
  "Malinová",
  "Malý Draždiak",
  "Malý trh",
  "Mamateyova",
  "Mamateyova",
  "Mánesovo námestie",
  "Mariánska",
  "Marie Curie-Sklodows",
  "Márie Medveďovej",
  "Markova",
  "Marótyho",
  "Martákovej",
  "Martinčekova",
  "Martinčekova",
  "Martinengova",
  "Martinská",
  "Mateja Bela",
  "Matejkova",
  "Matičná",
  "Matúšova",
  "Medená",
  "Medzierka",
  "Medzilaborecká",
  "Merlotová",
  "Mesačná",
  "Mestská",
  "Meteorová",
  "Metodova",
  "Mickiewiczova",
  "Mierová",
  "Michalská",
  "Mikovíniho",
  "Mikulášska",
  "Miletičova",
  "Miletičova",
  "Mišíkova",
  "Mišíkova",
  "Mišíkova",
  "Mliekárenská",
  "Mlynarovičova",
  "Mlynská dolina",
  "Mlynská dolina",
  "Mlynská dolina",
  "Mlynské luhy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlyny",
  "Modranská",
  "Mojmírova",
  "Mokráň záhon",
  "Mokrohájska cesta",
  "Moldavská",
  "Molecova",
  "Moravská",
  "Moskovská",
  "Most SNP",
  "Mostová",
  "Mošovského",
  "Motýlia",
  "Moyzesova",
  "Mozartova",
  "Mraziarenská",
  "Mudroňova",
  "Mudroňova",
  "Mudroňova",
  "Muchovo námestie",
  "Murgašova",
  "Muškátová",
  "Muštová",
  "Múzejná",
  "Myjavská",
  "Mýtna",
  "Mýtna",
  "Na Baránku",
  "Na Brezinách",
  "Na Hrebienku",
  "Na Kalvárii",
  "Na Kampárke",
  "Na kopci",
  "Na križovatkách",
  "Na lánoch",
  "Na paši",
  "Na piesku",
  "Na Riviére",
  "Na Sitine",
  "Na Slavíne",
  "Na stráni",
  "Na Štyridsiatku",
  "Na úvrati",
  "Na vŕšku",
  "Na výslní",
  "Nábělkova",
  "Nábrežie arm. gen. L",
  "Nábrežná",
  "Nad Dunajom",
  "Nad lomom",
  "Nad lúčkami",
  "Nad lúčkami",
  "Nad ostrovom",
  "Nad Sihoťou",
  "Námestie 1. mája",
  "Námestie Alexandra D",
  "Námestie Biely kríž",
  "Námestie Hraničiarov",
  "Námestie Jána Pavla",
  "Námestie Ľudovíta Št",
  "Námestie Martina Ben",
  "Nám. M.R.Štefánika",
  "Námestie slobody",
  "Námestie slobody",
  "Námestie SNP",
  "Námestie SNP",
  "Námestie sv. Františ",
  "Narcisová",
  "Nedbalova",
  "Nekrasovova",
  "Neronetová",
  "Nerudova",
  "Nevädzová",
  "Nezábudková",
  "Niťová",
  "Nitrianska",
  "Nížinná",
  "Nobelova",
  "Nobelovo námestie",
  "Nová",
  "Nová Rožňavská",
  "Novackého",
  "Nové pálenisko",
  "Nové záhrady I",
  "Nové záhrady II",
  "Nové záhrady III",
  "Nové záhrady IV",
  "Nové záhrady V",
  "Nové záhrady VI",
  "Nové záhrady VII",
  "Novinárska",
  "Novobanská",
  "Novohradská",
  "Novosvetská",
  "Novosvetská",
  "Novosvetská",
  "Obežná",
  "Obchodná",
  "Očovská",
  "Odbojárov",
  "Odborárska",
  "Odborárske námestie",
  "Odborárske námestie",
  "Ohnicová",
  "Okánikova",
  "Okružná",
  "Olbrachtova",
  "Olejkárska",
  "Ondavská",
  "Ondrejovova",
  "Oravská",
  "Orechová cesta",
  "Orechový rad",
  "Oriešková",
  "Ormisova",
  "Osadná",
  "Ostravská",
  "Ostredková",
  "Osuského",
  "Osvetová",
  "Otonelská",
  "Ovručská",
  "Ovsištské námestie",
  "Pajštúnska",
  "Palackého",
  "Palárikova",
  "Palárikova",
  "Pálavská",
  "Palisády",
  "Palisády",
  "Palisády",
  "Palkovičova",
  "Panenská",
  "Pankúchova",
  "Panónska cesta",
  "Panská",
  "Papánkovo námestie",
  "Papraďová",
  "Páričkova",
  "Parková",
  "Partizánska",
  "Pasienky",
  "Paulínyho",
  "Pavlovičova",
  "Pavlovova",
  "Pavlovská",
  "Pažického",
  "Pažítková",
  "Pečnianska",
  "Pernecká",
  "Pestovateľská",
  "Peterská",
  "Petzvalova",
  "Pezinská",
  "Piesočná",
  "Piešťanská",
  "Pifflova",
  "Pilárikova",
  "Pionierska",
  "Pivoňková",
  "Planckova",
  "Planét",
  "Plátenícka",
  "Pluhová",
  "Plynárenská",
  "Plzenská",
  "Pobrežná",
  "Pod Bôrikom",
  "Pod Kalváriou",
  "Pod lesom",
  "Pod Rovnicami",
  "Pod vinicami",
  "Podhorského",
  "Podjavorinskej",
  "Podlučinského",
  "Podniková",
  "Podtatranského",
  "Pohronská",
  "Polárna",
  "Poloreckého",
  "Poľná",
  "Poľská",
  "Poludníková",
  "Porubského",
  "Poštová",
  "Považská",
  "Povraznícka",
  "Povraznícka",
  "Pražská",
  "Predstaničné námesti",
  "Prepoštská",
  "Prešernova",
  "Prešovská",
  "Prešovská",
  "Prešovská",
  "Pri Bielom kríži",
  "Pri dvore",
  "Pri Dynamitke",
  "Pri Habánskom mlyne",
  "Pri hradnej studni",
  "Pri seči",
  "Pri Starej Prachárni",
  "Pri Starom háji",
  "Pri Starom Mýte",
  "Pri strelnici",
  "Pri Suchom mlyne",
  "Pri zvonici",
  "Pribinova",
  "Pribinova",
  "Pribinova",
  "Pribišova",
  "Pribylinská",
  "Priečna",
  "Priekopy",
  "Priemyselná",
  "Priemyselná",
  "Prievozská",
  "Prievozská",
  "Prievozská",
  "Príkopova",
  "Primaciálne námestie",
  "Prístav",
  "Prístavná",
  "Prokofievova",
  "Prokopa Veľkého",
  "Prokopova",
  "Prúdová",
  "Prvosienková",
  "Púpavová",
  "Pustá",
  "Puškinova",
  "Račianska",
  "Račianska",
  "Račianske mýto",
  "Radarová",
  "Rádiová",
  "Radlinského",
  "Radničná",
  "Radničné námestie",
  "Radvanská",
  "Rajská",
  "Raketová",
  "Rákosová",
  "Rastislavova",
  "Rázusovo nábrežie",
  "Repná",
  "Rešetkova",
  "Revolučná",
  "Révová",
  "Revúcka",
  "Rezedová",
  "Riazanská",
  "Riazanská",
  "Ribayová",
  "Riečna",
  "Rigeleho",
  "Rízlingová",
  "Riznerova",
  "Robotnícka",
  "Romanova",
  "Röntgenova",
  "Rosná",
  "Rovná",
  "Rovniankova",
  "Rovníková",
  "Rozmarínová",
  "Rožňavská",
  "Rožňavská",
  "Rožňavská",
  "Rubinsteinova",
  "Rudnayovo námestie",
  "Rumančeková",
  "Rusovská cesta",
  "Ružičková",
  "Ružinovská",
  "Ružinovská",
  "Ružinovská",
  "Ružomberská",
  "Ružová dolina",
  "Ružová dolina",
  "Rybárska brána",
  "Rybné námestie",
  "Rýdziková",
  "Sabinovská",
  "Sabinovská",
  "Sad Janka Kráľa",
  "Sadová",
  "Sartorisova",
  "Sasinkova",
  "Seberíniho",
  "Sečovská",
  "Sedlárska",
  "Sedmokrásková",
  "Segnerova",
  "Sekulská",
  "Semianova",
  "Senická",
  "Senná",
  "Schillerova",
  "Schody pri starej vo",
  "Sibírska",
  "Sienkiewiczova",
  "Silvánska",
  "Sinokvetná",
  "Skalická cesta",
  "Skalná",
  "Sklenárova",
  "Sklenárska",
  "Sládkovičova",
  "Sladová",
  "Slávičie údolie",
  "Slavín",
  "Slepá",
  "Sliačska",
  "Sliezska",
  "Slivková",
  "Slnečná",
  "Slovanská",
  "Slovinská",
  "Slovnaftská",
  "Slowackého",
  "Smetanova",
  "Smikova",
  "Smolenická",
  "Smolnícka",
  "Smrečianska",
  "Soferove schody",
  "Socháňova",
  "Sokolská",
  "Solivarská",
  "Sološnická",
  "Somolického",
  "Somolického",
  "Sosnová",
  "Spišská",
  "Spojná",
  "Spoločenská",
  "Sputniková",
  "Sreznevského",
  "Srnčia",
  "Stachanovská",
  "Stálicová",
  "Staničná",
  "Stará Černicová",
  "Stará Ivánska cesta",
  "Stará Prievozská",
  "Stará Vajnorská",
  "Stará vinárska",
  "Staré Grunty",
  "Staré ihrisko",
  "Staré záhrady",
  "Starhradská",
  "Starohájska",
  "Staromestská",
  "Staroturský chodník",
  "Staviteľská",
  "Stodolova",
  "Stoklasová",
  "Strakova",
  "Strážnická",
  "Strážny dom",
  "Strečnianska",
  "Stredná",
  "Strelecká",
  "Strmá cesta",
  "Strojnícka",
  "Stropkovská",
  "Struková",
  "Studená",
  "Stuhová",
  "Súbežná",
  "Súhvezdná",
  "Suché mýto",
  "Suchohradská",
  "Súkennícka",
  "Súľovská",
  "Sumbalova",
  "Súmračná",
  "Súťažná",
  "Svätého Vincenta",
  "Svätoplukova",
  "Svätoplukova",
  "Svätovojtešská",
  "Svetlá",
  "Svíbová",
  "Svidnícka",
  "Svoradova",
  "Svrčia",
  "Syslia",
  "Šafárikovo námestie",
  "Šafárikovo námestie",
  "Šafránová",
  "Šagátova",
  "Šalviová",
  "Šancová",
  "Šancová",
  "Šancová",
  "Šancová",
  "Šándorova",
  "Šarišská",
  "Šášovská",
  "Šaštínska",
  "Ševčenkova",
  "Šintavská",
  "Šípková",
  "Škarniclova",
  "Školská",
  "Škovránčia",
  "Škultétyho",
  "Šoltésovej",
  "Špieszova",
  "Špitálska",
  "Športová",
  "Šrobárovo námestie",
  "Šťastná",
  "Štedrá",
  "Štefánikova",
  "Štefánikova",
  "Štefánikova",
  "Štefanovičova",
  "Štefunkova",
  "Štetinova",
  "Štiavnická",
  "Štúrova",
  "Štyndlova",
  "Šulekova",
  "Šulekova",
  "Šulekova",
  "Šumavská",
  "Šuňavcova",
  "Šustekova",
  "Švabinského",
  "Tabaková",
  "Tablicova",
  "Táborská",
  "Tajovského",
  "Tallerova",
  "Tehelná",
  "Technická",
  "Tekovská",
  "Telocvičná",
  "Tematínska",
  "Teplická",
  "Terchovská",
  "Teslova",
  "Tetmayerova",
  "Thurzova",
  "Tichá",
  "Tilgnerova",
  "Timravina",
  "Tobrucká",
  "Tokajícka",
  "Tolstého",
  "Tománkova",
  "Tomášikova",
  "Tomášikova",
  "Tomášikova",
  "Tomášikova",
  "Tomášikova",
  "Topoľčianska",
  "Topoľová",
  "Továrenská",
  "Trebišovská",
  "Trebišovská",
  "Trebišovská",
  "Trenčianska",
  "Treskoňova",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavské mýto",
  "Tŕňová",
  "Trojdomy",
  "Tučkova",
  "Tupolevova",
  "Turbínova",
  "Turčianska",
  "Turnianska",
  "Tvarožkova",
  "Tylova",
  "Tyršovo nábrežie",
  "Údernícka",
  "Údolná",
  "Uhorková",
  "Ukrajinská",
  "Ulica 29. augusta",
  "Ulica 29. augusta",
  "Ulica 29. augusta",
  "Ulica 29. augusta",
  "Ulica Imricha Karvaš",
  "Ulica Jozefa Krónera",
  "Ulica Viktora Tegelh",
  "Úprkova",
  "Úradnícka",
  "Uránová",
  "Urbánkova",
  "Ursínyho",
  "Uršulínska",
  "Úzka",
  "V záhradách",
  "Vajanského nábrežie",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Valašská",
  "Valchárska",
  "Vansovej",
  "Vápenná",
  "Varínska",
  "Varšavská",
  "Varšavská",
  "Vavilovova",
  "Vavrínova",
  "Vazovova",
  "Včelárska",
  "Velehradská",
  "Veltlínska",
  "Ventúrska",
  "Veterná",
  "Veternicová",
  "Vetvová",
  "Viedenská cesta",
  "Viedenská cesta",
  "Vietnamská",
  "Vígľašská",
  "Vihorlatská",
  "Viktorínova",
  "Vilová",
  "Vincenta Hložníka",
  "Vínna",
  "Vlastenecké námestie",
  "Vlčkova",
  "Vlčkova",
  "Vlčkova",
  "Vodný vrch",
  "Votrubova",
  "Vrábeľská",
  "Vrakunská cesta",
  "Vranovská",
  "Vretenová",
  "Vrchná",
  "Vrútocká",
  "Vyhliadka",
  "Vyhnianska cesta",
  "Vysoká",
  "Vyšehradská",
  "Vyšná",
  "Wattova",
  "Wilsonova",
  "Wolkrova",
  "Za Kasárňou",
  "Za sokolovňou",
  "Za Stanicou",
  "Za tehelňou",
  "Záborského",
  "Zadunajská cesta",
  "Záhorácka",
  "Záhradnícka",
  "Záhradnícka",
  "Záhradnícka",
  "Záhradnícka",
  "Záhrebská",
  "Záhrebská",
  "Zálužická",
  "Zámocká",
  "Zámocké schody",
  "Zámočnícka",
  "Západná",
  "Západný rad",
  "Záporožská",
  "Zátišie",
  "Závodníkova",
  "Zelená",
  "Zelinárska",
  "Zimná",
  "Zlaté piesky",
  "Zlaté schody",
  "Znievska",
  "Zohorská",
  "Zochova",
  "Zrinského",
  "Zvolenská",
  "Žabí majer",
  "Žabotova",
  "Žehrianska",
  "Železná",
  "Železničiarska",
  "Žellova",
  "Žiarska",
  "Židovská",
  "Žilinská",
  "Žilinská",
  "Živnostenská",
  "Žižkova",
  "Župné námestie"
];

},{}],993:[function(require,module,exports){
arguments[4][209][0].apply(exports,arguments)
},{"dup":209}],994:[function(require,module,exports){
arguments[4][210][0].apply(exports,arguments)
},{"dup":210}],995:[function(require,module,exports){
arguments[4][211][0].apply(exports,arguments)
},{"dup":211}],996:[function(require,module,exports){
arguments[4][212][0].apply(exports,arguments)
},{"dup":212}],997:[function(require,module,exports){
arguments[4][213][0].apply(exports,arguments)
},{"dup":213}],998:[function(require,module,exports){
arguments[4][214][0].apply(exports,arguments)
},{"dup":214}],999:[function(require,module,exports){
arguments[4][215][0].apply(exports,arguments)
},{"dup":215}],1000:[function(require,module,exports){
arguments[4][216][0].apply(exports,arguments)
},{"./adjective":996,"./bs_noun":997,"./bs_verb":998,"./descriptor":999,"./name":1001,"./noun":1002,"./suffix":1003,"dup":216}],1001:[function(require,module,exports){
arguments[4][217][0].apply(exports,arguments)
},{"dup":217}],1002:[function(require,module,exports){
arguments[4][218][0].apply(exports,arguments)
},{"dup":218}],1003:[function(require,module,exports){
arguments[4][219][0].apply(exports,arguments)
},{"dup":219}],1004:[function(require,module,exports){
var sk = {};
module['exports'] = sk;
sk.title = "Slovakian";
sk.address = require("./address");
sk.company = require("./company");
sk.internet = require("./internet");
sk.lorem = require("./lorem");
sk.name = require("./name");
sk.phone_number = require("./phone_number");

},{"./address":987,"./company":1000,"./internet":1007,"./lorem":1008,"./name":1013,"./phone_number":1021}],1005:[function(require,module,exports){
module["exports"] = [
  "sk",
  "com",
  "net",
  "eu",
  "org"
];

},{}],1006:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "zoznam.sk",
  "azet.sk"
];

},{}],1007:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":1005,"./free_email":1006,"dup":187}],1008:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./supplemental":1009,"./words":1010,"dup":227}],1009:[function(require,module,exports){
arguments[4][228][0].apply(exports,arguments)
},{"dup":228}],1010:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"dup":229}],1011:[function(require,module,exports){
module["exports"] = [
  "Alexandra",
  "Karina",
  "Daniela",
  "Andrea",
  "Antónia",
  "Bohuslava",
  "Dáša",
  "Malvína",
  "Kristína",
  "Nataša",
  "Bohdana",
  "Drahomíra",
  "Sára",
  "Zora",
  "Tamara",
  "Ema",
  "Tatiana",
  "Erika",
  "Veronika",
  "Agáta",
  "Dorota",
  "Vanda",
  "Zoja",
  "Gabriela",
  "Perla",
  "Ida",
  "Liana",
  "Miloslava",
  "Vlasta",
  "Lívia",
  "Eleonóra",
  "Etela",
  "Romana",
  "Zlatica",
  "Anežka",
  "Bohumila",
  "Františka",
  "Angela",
  "Matilda",
  "Svetlana",
  "Ľubica",
  "Alena",
  "Soňa",
  "Vieroslava",
  "Zita",
  "Miroslava",
  "Irena",
  "Milena",
  "Estera",
  "Justína",
  "Dana",
  "Danica",
  "Jela",
  "Jaroslava",
  "Jarmila",
  "Lea",
  "Anastázia",
  "Galina",
  "Lesana",
  "Hermína",
  "Monika",
  "Ingrida",
  "Viktória",
  "Blažena",
  "Žofia",
  "Sofia",
  "Gizela",
  "Viola",
  "Gertrúda",
  "Zina",
  "Júlia",
  "Juliana",
  "Želmíra",
  "Ela",
  "Vanesa",
  "Iveta",
  "Vilma",
  "Petronela",
  "Žaneta",
  "Xénia",
  "Karolína",
  "Lenka",
  "Laura",
  "Stanislava",
  "Margaréta",
  "Dobroslava",
  "Blanka",
  "Valéria",
  "Paulína",
  "Sidónia",
  "Adriána",
  "Beáta",
  "Petra",
  "Melánia",
  "Diana",
  "Berta",
  "Patrícia",
  "Lujza",
  "Amália",
  "Milota",
  "Nina",
  "Margita",
  "Kamila",
  "Dušana",
  "Magdaléna",
  "Oľga",
  "Anna",
  "Hana",
  "Božena",
  "Marta",
  "Libuša",
  "Božidara",
  "Dominika",
  "Hortenzia",
  "Jozefína",
  "Štefánia",
  "Ľubomíra",
  "Zuzana",
  "Darina",
  "Marcela",
  "Milica",
  "Elena",
  "Helena",
  "Lýdia",
  "Anabela",
  "Jana",
  "Silvia",
  "Nikola",
  "Ružena",
  "Nora",
  "Drahoslava",
  "Linda",
  "Melinda",
  "Rebeka",
  "Rozália",
  "Regína",
  "Alica",
  "Marianna",
  "Miriama",
  "Martina",
  "Mária",
  "Jolana",
  "Ľudomila",
  "Ľudmila",
  "Olympia",
  "Eugénia",
  "Ľuboslava",
  "Zdenka",
  "Edita",
  "Michaela",
  "Stela",
  "Viera",
  "Natália",
  "Eliška",
  "Brigita",
  "Valentína",
  "Terézia",
  "Vladimíra",
  "Hedviga",
  "Uršuľa",
  "Alojza",
  "Kvetoslava",
  "Sabína",
  "Dobromila",
  "Klára",
  "Simona",
  "Aurélia",
  "Denisa",
  "Renáta",
  "Irma",
  "Agnesa",
  "Klaudia",
  "Alžbeta",
  "Elvíra",
  "Cecília",
  "Emília",
  "Katarína",
  "Henrieta",
  "Bibiána",
  "Barbora",
  "Marína",
  "Izabela",
  "Hilda",
  "Otília",
  "Lucia",
  "Branislava",
  "Bronislava",
  "Ivica",
  "Albína",
  "Kornélia",
  "Sláva",
  "Slávka",
  "Judita",
  "Dagmara",
  "Adela",
  "Nadežda",
  "Eva",
  "Filoména",
  "Ivana",
  "Milada"
];

},{}],1012:[function(require,module,exports){
module["exports"] = [
  "Antalová",
  "Babková",
  "Bahnová",
  "Balážová",
  "Baranová",
  "Baranková",
  "Bartovičová",
  "Bartošová",
  "Bačová",
  "Bernoláková",
  "Beňová",
  "Biceková",
  "Bieliková",
  "Blahová",
  "Bondrová",
  "Bosáková",
  "Bošková",
  "Brezinová",
  "Bukovská",
  "Chalupková",
  "Chudíková",
  "Cibulová",
  "Cibulková",
  "Cyprichová",
  "Cígerová",
  "Danková",
  "Daňková",
  "Daňová",
  "Debnárová",
  "Dejová",
  "Dekýšová",
  "Doležalová",
  "Dočolomanská",
  "Droppová",
  "Dubovská",
  "Dudeková",
  "Dulová",
  "Dullová",
  "Dusíková",
  "Dvončová",
  "Dzurjaninová",
  "Dávidová",
  "Fabianová",
  "Fabiánová",
  "Fajnorová",
  "Farkašovská",
  "Ficová",
  "Filcová",
  "Filipová",
  "Finková",
  "Ftoreková",
  "Gašparová",
  "Gašparovičová",
  "Gocníková",
  "Gregorová",
  "Gregušová",
  "Grznárová",
  "Habláková",
  "Habšudová",
  "Haldová",
  "Halušková",
  "Haláková",
  "Hanková",
  "Hanzalová",
  "Haščáková",
  "Heretiková",
  "Hečková",
  "Hlaváčeková",
  "Hlinková",
  "Holubová",
  "Holubyová",
  "Hossová",
  "Hozová",
  "Hrašková",
  "Hricová",
  "Hrmová",
  "Hrušovská",
  "Hubová",
  "Ihnačáková",
  "Janečeková",
  "Janošková",
  "Jantošovičová",
  "Janíková",
  "Jančeková",
  "Jedľovská",
  "Jendeková",
  "Jonatová",
  "Jurinová",
  "Jurkovičová",
  "Juríková",
  "Jánošíková",
  "Kafendová",
  "Kaliská",
  "Karulová",
  "Kenížová",
  "Klapková",
  "Kmeťová",
  "Kolesárová",
  "Kollárová",
  "Kolniková",
  "Kolníková",
  "Kolárová",
  "Korecová",
  "Kostkaová",
  "Kostrecová",
  "Kováčová",
  "Kováčiková",
  "Kozová",
  "Kočišová",
  "Krajíčeková",
  "Krajčová",
  "Krajčovičová",
  "Krajčírová",
  "Králiková",
  "Krúpová",
  "Kubíková",
  "Kyseľová",
  "Kállayová",
  "Labudová",
  "Lepšíková",
  "Liptáková",
  "Lisická",
  "Lubinová",
  "Lukáčová",
  "Luptáková",
  "Líšková",
  "Madejová",
  "Majeská",
  "Malachovská",
  "Malíšeková",
  "Mamojková",
  "Marcinková",
  "Mariánová",
  "Masaryková",
  "Maslová",
  "Matiašková",
  "Medveďová",
  "Melcerová",
  "Mečiarová",
  "Michalíková",
  "Mihaliková",
  "Mihálová",
  "Miháliková",
  "Miklošková",
  "Mikulíková",
  "Mikušová",
  "Mikúšová",
  "Milotová",
  "Mináčová",
  "Mišíková",
  "Mojžišová",
  "Mokrošová",
  "Morová",
  "Moravčíková",
  "Mydlová",
  "Nemcová",
  "Nováková",
  "Obšutová",
  "Ondrušová",
  "Otčenášová",
  "Pauková",
  "Pavlikovská",
  "Pavúková",
  "Pašeková",
  "Pašková",
  "Pelikánová",
  "Petrovická",
  "Petrušková",
  "Pešková",
  "Plchová",
  "Plekanecová",
  "Podhradská",
  "Podkonická",
  "Poliaková",
  "Pupáková",
  "Raková",
  "Repiská",
  "Romančíková",
  "Rusová",
  "Ružičková",
  "Rybníčeková",
  "Rybárová",
  "Rybáriková",
  "Samsonová",
  "Sedliaková",
  "Senková",
  "Sklenková",
  "Skokanová",
  "Skutecká",
  "Slašťanová",
  "Slobodová",
  "Slobodníková",
  "Slotová",
  "Slováková",
  "Smreková",
  "Stodolová",
  "Straková",
  "Strnisková",
  "Svrbíková",
  "Sámelová",
  "Sýkorová",
  "Tatarová",
  "Tatarková",
  "Tatárová",
  "Tatárkaová",
  "Thomková",
  "Tomečeková",
  "Tomková",
  "Trubenová",
  "Turčoková",
  "Uramová",
  "Urblíková",
  "Vajcíková",
  "Vajdová",
  "Valachová",
  "Valachovičová",
  "Valentová",
  "Valušková",
  "Vaneková",
  "Veselová",
  "Vicenová",
  "Višňovská",
  "Vlachová",
  "Vojteková",
  "Vydarená",
  "Zajacová",
  "Zimová",
  "Zimková",
  "Záborská",
  "Zúbriková",
  "Čapkovičová",
  "Čaplovičová",
  "Čarnogurská",
  "Čierná",
  "Čobrdová",
  "Ďaďová",
  "Ďuricová",
  "Ďurišová",
  "Šidlová",
  "Šimonovičová",
  "Škriniarová",
  "Škultétyová",
  "Šmajdová",
  "Šoltésová",
  "Šoltýsová",
  "Štefanová",
  "Štefanková",
  "Šulcová",
  "Šurková",
  "Švehlová",
  "Šťastná"
];

},{}],1013:[function(require,module,exports){
arguments[4][232][0].apply(exports,arguments)
},{"./female_first_name":1011,"./female_last_name":1012,"./male_first_name":1014,"./male_last_name":1015,"./name":1016,"./prefix":1017,"./suffix":1018,"./title":1019,"dup":232}],1014:[function(require,module,exports){
module["exports"] = [
  "Drahoslav",
  "Severín",
  "Alexej",
  "Ernest",
  "Rastislav",
  "Radovan",
  "Dobroslav",
  "Dalibor",
  "Vincent",
  "Miloš",
  "Timotej",
  "Gejza",
  "Bohuš",
  "Alfonz",
  "Gašpar",
  "Emil",
  "Erik",
  "Blažej",
  "Zdenko",
  "Dezider",
  "Arpád",
  "Valentín",
  "Pravoslav",
  "Jaromír",
  "Roman",
  "Matej",
  "Frederik",
  "Viktor",
  "Alexander",
  "Radomír",
  "Albín",
  "Bohumil",
  "Kazimír",
  "Fridrich",
  "Radoslav",
  "Tomáš",
  "Alan",
  "Branislav",
  "Bruno",
  "Gregor",
  "Vlastimil",
  "Boleslav",
  "Eduard",
  "Jozef",
  "Víťazoslav",
  "Blahoslav",
  "Beňadik",
  "Adrián",
  "Gabriel",
  "Marián",
  "Emanuel",
  "Miroslav",
  "Benjamín",
  "Hugo",
  "Richard",
  "Izidor",
  "Zoltán",
  "Albert",
  "Igor",
  "Július",
  "Aleš",
  "Fedor",
  "Rudolf",
  "Valér",
  "Marcel",
  "Ervín",
  "Slavomír",
  "Vojtech",
  "Juraj",
  "Marek",
  "Jaroslav",
  "Žigmund",
  "Florián",
  "Roland",
  "Pankrác",
  "Servác",
  "Bonifác",
  "Svetozár",
  "Bernard",
  "Júlia",
  "Urban",
  "Dušan",
  "Viliam",
  "Ferdinand",
  "Norbert",
  "Róbert",
  "Medard",
  "Zlatko",
  "Anton",
  "Vasil",
  "Vít",
  "Adolf",
  "Vratislav",
  "Alfréd",
  "Alojz",
  "Ján",
  "Tadeáš",
  "Ladislav",
  "Peter",
  "Pavol",
  "Miloslav",
  "Prokop",
  "Cyril",
  "Metod",
  "Patrik",
  "Oliver",
  "Ivan",
  "Kamil",
  "Henrich",
  "Drahomír",
  "Bohuslav",
  "Iľja",
  "Daniel",
  "Vladimír",
  "Jakub",
  "Krištof",
  "Ignác",
  "Gustáv",
  "Jerguš",
  "Dominik",
  "Oskar",
  "Vavrinec",
  "Ľubomír",
  "Mojmír",
  "Leonard",
  "Tichomír",
  "Filip",
  "Bartolomej",
  "Ľudovít",
  "Samuel",
  "Augustín",
  "Belo",
  "Oleg",
  "Bystrík",
  "Ctibor",
  "Ľudomil",
  "Konštantín",
  "Ľuboslav",
  "Matúš",
  "Móric",
  "Ľuboš",
  "Ľubor",
  "Vladislav",
  "Cyprián",
  "Václav",
  "Michal",
  "Jarolím",
  "Arnold",
  "Levoslav",
  "František",
  "Dionýz",
  "Maximilián",
  "Koloman",
  "Boris",
  "Lukáš",
  "Kristián",
  "Vendelín",
  "Sergej",
  "Aurel",
  "Demeter",
  "Denis",
  "Hubert",
  "Karol",
  "Imrich",
  "René",
  "Bohumír",
  "Teodor",
  "Tibor",
  "Maroš",
  "Martin",
  "Svätopluk",
  "Stanislav",
  "Leopold",
  "Eugen",
  "Félix",
  "Klement",
  "Kornel",
  "Milan",
  "Vratko",
  "Ondrej",
  "Andrej",
  "Edmund",
  "Oldrich",
  "Oto",
  "Mikuláš",
  "Ambróz",
  "Radúz",
  "Bohdan",
  "Adam",
  "Štefan",
  "Dávid",
  "Silvester"
];

},{}],1015:[function(require,module,exports){
module["exports"] = [
  "Antal",
  "Babka",
  "Bahna",
  "Bahno",
  "Baláž",
  "Baran",
  "Baranka",
  "Bartovič",
  "Bartoš",
  "Bača",
  "Bernolák",
  "Beňo",
  "Bicek",
  "Bielik",
  "Blaho",
  "Bondra",
  "Bosák",
  "Boška",
  "Brezina",
  "Bukovský",
  "Chalupka",
  "Chudík",
  "Cibula",
  "Cibulka",
  "Cibuľa",
  "Cyprich",
  "Cíger",
  "Danko",
  "Daňko",
  "Daňo",
  "Debnár",
  "Dej",
  "Dekýš",
  "Doležal",
  "Dočolomanský",
  "Droppa",
  "Dubovský",
  "Dudek",
  "Dula",
  "Dulla",
  "Dusík",
  "Dvonč",
  "Dzurjanin",
  "Dávid",
  "Fabian",
  "Fabián",
  "Fajnor",
  "Farkašovský",
  "Fico",
  "Filc",
  "Filip",
  "Finka",
  "Ftorek",
  "Gašpar",
  "Gašparovič",
  "Gocník",
  "Gregor",
  "Greguš",
  "Grznár",
  "Hablák",
  "Habšuda",
  "Halda",
  "Haluška",
  "Halák",
  "Hanko",
  "Hanzal",
  "Haščák",
  "Heretik",
  "Hečko",
  "Hlaváček",
  "Hlinka",
  "Holub",
  "Holuby",
  "Hossa",
  "Hoza",
  "Hraško",
  "Hric",
  "Hrmo",
  "Hrušovský",
  "Huba",
  "Ihnačák",
  "Janeček",
  "Janoška",
  "Jantošovič",
  "Janík",
  "Janček",
  "Jedľovský",
  "Jendek",
  "Jonata",
  "Jurina",
  "Jurkovič",
  "Jurík",
  "Jánošík",
  "Kafenda",
  "Kaliský",
  "Karul",
  "Keníž",
  "Klapka",
  "Kmeť",
  "Kolesár",
  "Kollár",
  "Kolnik",
  "Kolník",
  "Kolár",
  "Korec",
  "Kostka",
  "Kostrec",
  "Kováč",
  "Kováčik",
  "Koza",
  "Kočiš",
  "Krajíček",
  "Krajči",
  "Krajčo",
  "Krajčovič",
  "Krajčír",
  "Králik",
  "Krúpa",
  "Kubík",
  "Kyseľ",
  "Kállay",
  "Labuda",
  "Lepšík",
  "Lipták",
  "Lisický",
  "Lubina",
  "Lukáč",
  "Lupták",
  "Líška",
  "Madej",
  "Majeský",
  "Malachovský",
  "Malíšek",
  "Mamojka",
  "Marcinko",
  "Marián",
  "Masaryk",
  "Maslo",
  "Matiaško",
  "Medveď",
  "Melcer",
  "Mečiar",
  "Michalík",
  "Mihalik",
  "Mihál",
  "Mihálik",
  "Mikloško",
  "Mikulík",
  "Mikuš",
  "Mikúš",
  "Milota",
  "Mináč",
  "Mišík",
  "Mojžiš",
  "Mokroš",
  "Mora",
  "Moravčík",
  "Mydlo",
  "Nemec",
  "Nitra",
  "Novák",
  "Obšut",
  "Ondruš",
  "Otčenáš",
  "Pauko",
  "Pavlikovský",
  "Pavúk",
  "Pašek",
  "Paška",
  "Paško",
  "Pelikán",
  "Petrovický",
  "Petruška",
  "Peško",
  "Plch",
  "Plekanec",
  "Podhradský",
  "Podkonický",
  "Poliak",
  "Pupák",
  "Rak",
  "Repiský",
  "Romančík",
  "Rus",
  "Ružička",
  "Rybníček",
  "Rybár",
  "Rybárik",
  "Samson",
  "Sedliak",
  "Senko",
  "Sklenka",
  "Skokan",
  "Skutecký",
  "Slašťan",
  "Sloboda",
  "Slobodník",
  "Slota",
  "Slovák",
  "Smrek",
  "Stodola",
  "Straka",
  "Strnisko",
  "Svrbík",
  "Sámel",
  "Sýkora",
  "Tatar",
  "Tatarka",
  "Tatár",
  "Tatárka",
  "Thomka",
  "Tomeček",
  "Tomka",
  "Tomko",
  "Truben",
  "Turčok",
  "Uram",
  "Urblík",
  "Vajcík",
  "Vajda",
  "Valach",
  "Valachovič",
  "Valent",
  "Valuška",
  "Vanek",
  "Vesel",
  "Vicen",
  "Višňovský",
  "Vlach",
  "Vojtek",
  "Vydarený",
  "Zajac",
  "Zima",
  "Zimka",
  "Záborský",
  "Zúbrik",
  "Čapkovič",
  "Čaplovič",
  "Čarnogurský",
  "Čierny",
  "Čobrda",
  "Ďaďo",
  "Ďurica",
  "Ďuriš",
  "Šidlo",
  "Šimonovič",
  "Škriniar",
  "Škultéty",
  "Šmajda",
  "Šoltés",
  "Šoltýs",
  "Štefan",
  "Štefanka",
  "Šulc",
  "Šurka",
  "Švehla",
  "Šťastný"
];

},{}],1016:[function(require,module,exports){
arguments[4][235][0].apply(exports,arguments)
},{"dup":235}],1017:[function(require,module,exports){
arguments[4][236][0].apply(exports,arguments)
},{"dup":236}],1018:[function(require,module,exports){
arguments[4][237][0].apply(exports,arguments)
},{"dup":237}],1019:[function(require,module,exports){
arguments[4][408][0].apply(exports,arguments)
},{"dup":408}],1020:[function(require,module,exports){
module["exports"] = [
  "09## ### ###",
  "0## #### ####",
  "0# #### ####",
  "+421 ### ### ###"
];

},{}],1021:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":1020,"dup":197}],1022:[function(require,module,exports){
arguments[4][655][0].apply(exports,arguments)
},{"dup":655}],1023:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}#{city_suffix}"
];

},{}],1024:[function(require,module,exports){
module["exports"] = [
  "Söder",
  "Norr",
  "Väst",
  "Öster",
  "Aling",
  "Ar",
  "Av",
  "Bo",
  "Br",
  "Bå",
  "Ek",
  "En",
  "Esk",
  "Fal",
  "Gäv",
  "Göte",
  "Ha",
  "Helsing",
  "Karl",
  "Krist",
  "Kram",
  "Kung",
  "Kö",
  "Lyck",
  "Ny"
];

},{}],1025:[function(require,module,exports){
module["exports"] = [
  "stad",
  "land",
  "sås",
  "ås",
  "holm",
  "tuna",
  "sta",
  "berg",
  "löv",
  "borg",
  "mora",
  "hamn",
  "fors",
  "köping",
  "by",
  "hult",
  "torp",
  "fred",
  "vik"
];

},{}],1026:[function(require,module,exports){
module["exports"] = [
  "s Väg",
  "s Gata"
];

},{}],1027:[function(require,module,exports){
module["exports"] = [
  "Ryssland",
  "Kanada",
  "Kina",
  "USA",
  "Brasilien",
  "Australien",
  "Indien",
  "Argentina",
  "Kazakstan",
  "Algeriet",
  "DR Kongo",
  "Danmark",
  "Färöarna",
  "Grönland",
  "Saudiarabien",
  "Mexiko",
  "Indonesien",
  "Sudan",
  "Libyen",
  "Iran",
  "Mongoliet",
  "Peru",
  "Tchad",
  "Niger",
  "Angola",
  "Mali",
  "Sydafrika",
  "Colombia",
  "Etiopien",
  "Bolivia",
  "Mauretanien",
  "Egypten",
  "Tanzania",
  "Nigeria",
  "Venezuela",
  "Namibia",
  "Pakistan",
  "Moçambique",
  "Turkiet",
  "Chile",
  "Zambia",
  "Marocko",
  "Västsahara",
  "Burma",
  "Afghanistan",
  "Somalia",
  "Centralafrikanska republiken",
  "Sydsudan",
  "Ukraina",
  "Botswana",
  "Madagaskar",
  "Kenya",
  "Frankrike",
  "Franska Guyana",
  "Jemen",
  "Thailand",
  "Spanien",
  "Turkmenistan",
  "Kamerun",
  "Papua Nya Guinea",
  "Sverige",
  "Uzbekistan",
  "Irak",
  "Paraguay",
  "Zimbabwe",
  "Japan",
  "Tyskland",
  "Kongo",
  "Finland",
  "Malaysia",
  "Vietnam",
  "Norge",
  "Svalbard",
  "Jan Mayen",
  "Elfenbenskusten",
  "Polen",
  "Italien",
  "Filippinerna",
  "Ecuador",
  "Burkina Faso",
  "Nya Zeeland",
  "Gabon",
  "Guinea",
  "Storbritannien",
  "Ghana",
  "Rumänien",
  "Laos",
  "Uganda",
  "Guyana",
  "Oman",
  "Vitryssland",
  "Kirgizistan",
  "Senegal",
  "Syrien",
  "Kambodja",
  "Uruguay",
  "Tunisien",
  "Surinam",
  "Nepal",
  "Bangladesh",
  "Tadzjikistan",
  "Grekland",
  "Nicaragua",
  "Eritrea",
  "Nordkorea",
  "Malawi",
  "Benin",
  "Honduras",
  "Liberia",
  "Bulgarien",
  "Kuba",
  "Guatemala",
  "Island",
  "Sydkorea",
  "Ungern",
  "Portugal",
  "Jordanien",
  "Serbien",
  "Azerbajdzjan",
  "Österrike",
  "Förenade Arabemiraten",
  "Tjeckien",
  "Panama",
  "Sierra Leone",
  "Irland",
  "Georgien",
  "Sri Lanka",
  "Litauen",
  "Lettland",
  "Togo",
  "Kroatien",
  "Bosnien och Hercegovina",
  "Costa Rica",
  "Slovakien",
  "Dominikanska republiken",
  "Bhutan",
  "Estland",
  "Danmark",
  "Färöarna",
  "Grönland",
  "Nederländerna",
  "Schweiz",
  "Guinea-Bissau",
  "Taiwan",
  "Moldavien",
  "Belgien",
  "Lesotho",
  "Armenien",
  "Albanien",
  "Salomonöarna",
  "Ekvatorialguinea",
  "Burundi",
  "Haiti",
  "Rwanda",
  "Makedonien",
  "Djibouti",
  "Belize",
  "Israel",
  "El Salvador",
  "Slovenien",
  "Fiji",
  "Kuwait",
  "Swaziland",
  "Timor-Leste",
  "Montenegro",
  "Bahamas",
  "Vanuatu",
  "Qatar",
  "Gambia",
  "Jamaica",
  "Kosovo",
  "Libanon",
  "Cypern",
  "Brunei",
  "Trinidad och Tobago",
  "Kap Verde",
  "Samoa",
  "Luxemburg",
  "Komorerna",
  "Mauritius",
  "São Tomé och Príncipe",
  "Kiribati",
  "Dominica",
  "Tonga",
  "Mikronesiens federerade stater",
  "Singapore",
  "Bahrain",
  "Saint Lucia",
  "Andorra",
  "Palau",
  "Seychellerna",
  "Antigua och Barbuda",
  "Barbados",
  "Saint Vincent och Grenadinerna",
  "Grenada",
  "Malta",
  "Maldiverna",
  "Saint Kitts och Nevis",
  "Marshallöarna",
  "Liechtenstein",
  "San Marino",
  "Tuvalu",
  "Nauru",
  "Monaco",
  "Vatikanstaten"
];

},{}],1028:[function(require,module,exports){
module["exports"] = [
  "Sverige"
];

},{}],1029:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.common_street_suffix = require("./common_street_suffix");
address.street_prefix = require("./street_prefix");
address.street_root = require("./street_root");
address.street_suffix = require("./street_suffix");
address.state = require("./state");
address.city = require("./city");
address.street_name = require("./street_name");
address.postcode = require("./postcode");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":1022,"./city":1023,"./city_prefix":1024,"./city_suffix":1025,"./common_street_suffix":1026,"./country":1027,"./default_country":1028,"./postcode":1030,"./secondary_address":1031,"./state":1032,"./street_address":1033,"./street_name":1034,"./street_prefix":1035,"./street_root":1036,"./street_suffix":1037}],1030:[function(require,module,exports){
arguments[4][523][0].apply(exports,arguments)
},{"dup":523}],1031:[function(require,module,exports){
module["exports"] = [
  "Lgh. ###",
  "Hus ###"
];

},{}],1032:[function(require,module,exports){
module["exports"] = [
  "Blekinge",
  "Dalarna",
  "Gotland",
  "Gävleborg",
  "Göteborg",
  "Halland",
  "Jämtland",
  "Jönköping",
  "Kalmar",
  "Kronoberg",
  "Norrbotten",
  "Skaraborg",
  "Skåne",
  "Stockholm",
  "Södermanland",
  "Uppsala",
  "Värmland",
  "Västerbotten",
  "Västernorrland",
  "Västmanland",
  "Älvsborg",
  "Örebro",
  "Östergötland"
];

},{}],1033:[function(require,module,exports){
arguments[4][209][0].apply(exports,arguments)
},{"dup":209}],1034:[function(require,module,exports){
arguments[4][807][0].apply(exports,arguments)
},{"dup":807}],1035:[function(require,module,exports){
module["exports"] = [
  "Västra",
  "Östra",
  "Norra",
  "Södra",
  "Övre",
  "Undre"
];

},{}],1036:[function(require,module,exports){
module["exports"] = [
  "Björk",
  "Järnvägs",
  "Ring",
  "Skol",
  "Skogs",
  "Ny",
  "Gran",
  "Idrotts",
  "Stor",
  "Kyrk",
  "Industri",
  "Park",
  "Strand",
  "Skol",
  "Trädgård",
  "Ängs",
  "Kyrko",
  "Villa",
  "Ek",
  "Kvarn",
  "Stations",
  "Back",
  "Furu",
  "Gen",
  "Fabriks",
  "Åker",
  "Bäck",
  "Asp"
];

},{}],1037:[function(require,module,exports){
module["exports"] = [
  "vägen",
  "gatan",
  "gränden",
  "gärdet",
  "allén"
];

},{}],1038:[function(require,module,exports){
module["exports"] = [
  56,
  62,
  59
];

},{}],1039:[function(require,module,exports){
module["exports"] = [
  "#{common_cell_prefix}-###-####"
];

},{}],1040:[function(require,module,exports){
var cell_phone = {};
module['exports'] = cell_phone;
cell_phone.common_cell_prefix = require("./common_cell_prefix");
cell_phone.formats = require("./formats");

},{"./common_cell_prefix":1038,"./formats":1039}],1041:[function(require,module,exports){
module["exports"] = [
  "vit",
  "silver",
  "grå",
  "svart",
  "röd",
  "grön",
  "blå",
  "gul",
  "lila",
  "indigo",
  "guld",
  "brun",
  "rosa",
  "purpur",
  "korall"
];

},{}],1042:[function(require,module,exports){
module["exports"] = [
  "Böcker",
  "Filmer",
  "Musik",
  "Spel",
  "Elektronik",
  "Datorer",
  "Hem",
  "Trädgård",
  "Verktyg",
  "Livsmedel",
  "Hälsa",
  "Skönhet",
  "Leksaker",
  "Klädsel",
  "Skor",
  "Smycken",
  "Sport"
];

},{}],1043:[function(require,module,exports){
arguments[4][175][0].apply(exports,arguments)
},{"./color":1041,"./department":1042,"./product_name":1044,"dup":175}],1044:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Liten",
    "Ergonomisk",
    "Robust",
    "Intelligent",
    "Söt",
    "Otrolig",
    "Fatastisk",
    "Praktisk",
    "Slimmad",
    "Grym"
  ],
  "material": [
    "Stål",
    "Metall",
    "Trä",
    "Betong",
    "Plast",
    "Bomul",
    "Grnit",
    "Gummi",
    "Latex"
  ],
  "product": [
    "Stol",
    "Bil",
    "Dator",
    "Handskar",
    "Pants",
    "Shirt",
    "Table",
    "Shoes",
    "Hat"
  ]
};

},{}],1045:[function(require,module,exports){
arguments[4][310][0].apply(exports,arguments)
},{"./name":1046,"./suffix":1047,"dup":310}],1046:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} #{suffix}"
];

},{}],1047:[function(require,module,exports){
module["exports"] = [
  "Gruppen",
  "AB",
  "HB",
  "Group",
  "Investment",
  "Kommanditbolag",
  "Aktiebolag"
];

},{}],1048:[function(require,module,exports){
arguments[4][181][0].apply(exports,arguments)
},{"./month":1049,"./weekday":1050,"dup":181}],1049:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799
module["exports"] = {
  wide: [
    "januari",
    "februari",
    "mars",
    "april",
    "maj",
    "juni",
    "juli",
    "augusti",
    "september",
    "oktober",
    "november",
    "december"
  ],
  abbr: [
    "jan",
    "feb",
    "mar",
    "apr",
    "maj",
    "jun",
    "jul",
    "aug",
    "sep",
    "okt",
    "nov",
    "dec"
  ]
};

},{}],1050:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1847
module["exports"] = {
  wide: [
    "söndag",
    "måndag",
    "tisdag",
    "onsdag",
    "torsdag",
    "fredag",
    "lördag"
  ],
  abbr: [
    "sön",
    "mån",
    "tis",
    "ons",
    "tor",
    "fre",
    "lör"
  ]
};

},{}],1051:[function(require,module,exports){
var sv = {};
module['exports'] = sv;
sv.title = "Swedish";
sv.address = require("./address");
sv.company = require("./company");
sv.internet = require("./internet");
sv.name = require("./name");
sv.phone_number = require("./phone_number");
sv.cell_phone = require("./cell_phone");
sv.commerce = require("./commerce");
sv.team = require("./team");
sv.date = require("./date");

},{"./address":1029,"./cell_phone":1040,"./commerce":1043,"./company":1045,"./date":1048,"./internet":1053,"./name":1056,"./phone_number":1062,"./team":1063}],1052:[function(require,module,exports){
module["exports"] = [
  "se",
  "nu",
  "info",
  "com",
  "org"
];

},{}],1053:[function(require,module,exports){
arguments[4][315][0].apply(exports,arguments)
},{"./domain_suffix":1052,"dup":315}],1054:[function(require,module,exports){
module["exports"] = [
  "Erik",
  "Lars",
  "Karl",
  "Anders",
  "Per",
  "Johan",
  "Nils",
  "Lennart",
  "Emil",
  "Hans"
];

},{}],1055:[function(require,module,exports){
module["exports"] = [
  "Maria",
  "Anna",
  "Margareta",
  "Elisabeth",
  "Eva",
  "Birgitta",
  "Kristina",
  "Karin",
  "Elisabet",
  "Marie"
];

},{}],1056:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name_women = require("./first_name_women");
name.first_name_men = require("./first_name_men");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.title = require("./title");
name.name = require("./name");

},{"./first_name_men":1054,"./first_name_women":1055,"./last_name":1057,"./name":1058,"./prefix":1059,"./title":1060}],1057:[function(require,module,exports){
module["exports"] = [
  "Johansson",
  "Andersson",
  "Karlsson",
  "Nilsson",
  "Eriksson",
  "Larsson",
  "Olsson",
  "Persson",
  "Svensson",
  "Gustafsson"
];

},{}],1058:[function(require,module,exports){
module["exports"] = [
  "#{first_name_women} #{last_name}",
  "#{first_name_men} #{last_name}",
  "#{first_name_women} #{last_name}",
  "#{first_name_men} #{last_name}",
  "#{first_name_women} #{last_name}",
  "#{first_name_men} #{last_name}",
  "#{prefix} #{first_name_men} #{last_name}",
  "#{prefix} #{first_name_women} #{last_name}"
];

},{}],1059:[function(require,module,exports){
module["exports"] = [
  "Dr.",
  "Prof.",
  "PhD."
];

},{}],1060:[function(require,module,exports){
arguments[4][408][0].apply(exports,arguments)
},{"dup":408}],1061:[function(require,module,exports){
module["exports"] = [
  "####-#####",
  "####-######"
];

},{}],1062:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":1061,"dup":197}],1063:[function(require,module,exports){
var team = {};
module['exports'] = team;
team.suffix = require("./suffix");
team.name = require("./name");

},{"./name":1064,"./suffix":1065}],1064:[function(require,module,exports){
module["exports"] = [
  "#{Address.city} #{suffix}"
];

},{}],1065:[function(require,module,exports){
module["exports"] = [
  "IF",
  "FF",
  "BK",
  "HK",
  "AIF",
  "SK",
  "FC",
  "SK",
  "BoIS",
  "FK",
  "BIS",
  "FIF",
  "IK"
];

},{}],1066:[function(require,module,exports){
arguments[4][241][0].apply(exports,arguments)
},{"dup":241}],1067:[function(require,module,exports){
module["exports"] = [
  "Adana",
  "Adıyaman",
  "Afyon",
  "Ağrı",
  "Amasya",
  "Ankara",
  "Antalya",
  "Artvin",
  "Aydın",
  "Balıkesir",
  "Bilecik",
  "Bingöl",
  "Bitlis",
  "Bolu",
  "Burdur",
  "Bursa",
  "Çanakkale",
  "Çankırı",
  "Çorum",
  "Denizli",
  "Diyarbakır",
  "Edirne",
  "Elazığ",
  "Erzincan",
  "Erzurum",
  "Eskişehir",
  "Gaziantep",
  "Giresun",
  "Gümüşhane",
  "Hakkari",
  "Hatay",
  "Isparta",
  "İçel (Mersin)",
  "İstanbul",
  "İzmir",
  "Kars",
  "Kastamonu",
  "Kayseri",
  "Kırklareli",
  "Kırşehir",
  "Kocaeli",
  "Konya",
  "Kütahya",
  "Malatya",
  "Manisa",
  "K.maraş",
  "Mardin",
  "Muğla",
  "Muş",
  "Nevşehir",
  "Niğde",
  "Ordu",
  "Rize",
  "Sakarya",
  "Samsun",
  "Siirt",
  "Sinop",
  "Sivas",
  "Tekirdağ",
  "Tokat",
  "Trabzon",
  "Tunceli",
  "Şanlıurfa",
  "Uşak",
  "Van",
  "Yozgat",
  "Zonguldak",
  "Aksaray",
  "Bayburt",
  "Karaman",
  "Kırıkkale",
  "Batman",
  "Şırnak",
  "Bartın",
  "Ardahan",
  "Iğdır",
  "Yalova",
  "Karabük",
  "Kilis",
  "Osmaniye",
  "Düzce"
];

},{}],1068:[function(require,module,exports){
module["exports"] = [
  "Afganistan",
  "Almanya",
  "Amerika Birleşik Devletleri",
  "Amerikan Samoa",
  "Andorra",
  "Angola",
  "Anguilla, İngiltere",
  "Antigua ve Barbuda",
  "Arjantin",
  "Arnavutluk",
  "Aruba, Hollanda",
  "Avustralya",
  "Avusturya",
  "Azerbaycan",
  "Bahama Adaları",
  "Bahreyn",
  "Bangladeş",
  "Barbados",
  "Belçika",
  "Belize",
  "Benin",
  "Bermuda, İngiltere",
  "Beyaz Rusya",
  "Bhutan",
  "Birleşik Arap Emirlikleri",
  "Birmanya (Myanmar)",
  "Bolivya",
  "Bosna Hersek",
  "Botswana",
  "Brezilya",
  "Brunei",
  "Bulgaristan",
  "Burkina Faso",
  "Burundi",
  "Cape Verde",
  "Cayman Adaları, İngiltere",
  "Cebelitarık, İngiltere",
  "Cezayir",
  "Christmas Adası , Avusturalya",
  "Cibuti",
  "Çad",
  "Çek Cumhuriyeti",
  "Çin",
  "Danimarka",
  "Doğu Timor",
  "Dominik Cumhuriyeti",
  "Dominika",
  "Ekvator",
  "Ekvator Ginesi",
  "El Salvador",
  "Endonezya",
  "Eritre",
  "Ermenistan",
  "Estonya",
  "Etiyopya",
  "Fas",
  "Fiji",
  "Fildişi Sahili",
  "Filipinler",
  "Filistin",
  "Finlandiya",
  "Folkland Adaları, İngiltere",
  "Fransa",
  "Fransız Guyanası",
  "Fransız Güney Eyaletleri (Kerguelen Adaları)",
  "Fransız Polinezyası",
  "Gabon",
  "Galler",
  "Gambiya",
  "Gana",
  "Gine",
  "Gine-Bissau",
  "Grenada",
  "Grönland",
  "Guadalup, Fransa",
  "Guam, Amerika",
  "Guatemala",
  "Guyana",
  "Güney Afrika",
  "Güney Georgia ve Güney Sandviç Adaları, İngiltere",
  "Güney Kıbrıs Rum Yönetimi",
  "Güney Kore",
  "Gürcistan H",
  "Haiti",
  "Hırvatistan",
  "Hindistan",
  "Hollanda",
  "Hollanda Antilleri",
  "Honduras",
  "Irak",
  "İngiltere",
  "İran",
  "İrlanda",
  "İspanya",
  "İsrail",
  "İsveç",
  "İsviçre",
  "İtalya",
  "İzlanda",
  "Jamaika",
  "Japonya",
  "Johnston Atoll, Amerika",
  "K.K.T.C.",
  "Kamboçya",
  "Kamerun",
  "Kanada",
  "Kanarya Adaları",
  "Karadağ",
  "Katar",
  "Kazakistan",
  "Kenya",
  "Kırgızistan",
  "Kiribati",
  "Kolombiya",
  "Komorlar",
  "Kongo",
  "Kongo Demokratik Cumhuriyeti",
  "Kosova",
  "Kosta Rika",
  "Kuveyt",
  "Kuzey İrlanda",
  "Kuzey Kore",
  "Kuzey Maryana Adaları",
  "Küba",
  "Laos",
  "Lesotho",
  "Letonya",
  "Liberya",
  "Libya",
  "Liechtenstein",
  "Litvanya",
  "Lübnan",
  "Lüksemburg",
  "Macaristan",
  "Madagaskar",
  "Makau (Makao)",
  "Makedonya",
  "Malavi",
  "Maldiv Adaları",
  "Malezya",
  "Mali",
  "Malta",
  "Marşal Adaları",
  "Martinik, Fransa",
  "Mauritius",
  "Mayotte, Fransa",
  "Meksika",
  "Mısır",
  "Midway Adaları, Amerika",
  "Mikronezya",
  "Moğolistan",
  "Moldavya",
  "Monako",
  "Montserrat",
  "Moritanya",
  "Mozambik",
  "Namibia",
  "Nauru",
  "Nepal",
  "Nijer",
  "Nijerya",
  "Nikaragua",
  "Niue, Yeni Zelanda",
  "Norveç",
  "Orta Afrika Cumhuriyeti",
  "Özbekistan",
  "Pakistan",
  "Palau Adaları",
  "Palmyra Atoll, Amerika",
  "Panama",
  "Papua Yeni Gine",
  "Paraguay",
  "Peru",
  "Polonya",
  "Portekiz",
  "Porto Riko, Amerika",
  "Reunion, Fransa",
  "Romanya",
  "Ruanda",
  "Rusya Federasyonu",
  "Saint Helena, İngiltere",
  "Saint Martin, Fransa",
  "Saint Pierre ve Miquelon, Fransa",
  "Samoa",
  "San Marino",
  "Santa Kitts ve Nevis",
  "Santa Lucia",
  "Santa Vincent ve Grenadinler",
  "Sao Tome ve Principe",
  "Senegal",
  "Seyşeller",
  "Sırbistan",
  "Sierra Leone",
  "Singapur",
  "Slovakya",
  "Slovenya",
  "Solomon Adaları",
  "Somali",
  "Sri Lanka",
  "Sudan",
  "Surinam",
  "Suriye",
  "Suudi Arabistan",
  "Svalbard, Norveç",
  "Svaziland",
  "Şili",
  "Tacikistan",
  "Tanzanya",
  "Tayland",
  "Tayvan",
  "Togo",
  "Tonga",
  "Trinidad ve Tobago",
  "Tunus",
  "Turks ve Caicos Adaları, İngiltere",
  "Tuvalu",
  "Türkiye",
  "Türkmenistan",
  "Uganda",
  "Ukrayna",
  "Umman",
  "Uruguay",
  "Ürdün",
  "Vallis ve Futuna, Fransa",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Virgin Adaları, Amerika",
  "Virgin Adaları, İngiltere",
  "Wake Adaları, Amerika",
  "Yemen",
  "Yeni Kaledonya, Fransa",
  "Yeni Zelanda",
  "Yunanistan",
  "Zambiya",
  "Zimbabve"
];

},{}],1069:[function(require,module,exports){
module["exports"] = [
  "Türkiye"
];

},{}],1070:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city = require("./city");
address.street_root = require("./street_root");
address.country = require("./country");
address.postcode = require("./postcode");
address.default_country = require("./default_country");
address.building_number = require("./building_number");
address.street_name = require("./street_name");
address.street_address = require("./street_address");

},{"./building_number":1066,"./city":1067,"./country":1068,"./default_country":1069,"./postcode":1071,"./street_address":1072,"./street_name":1073,"./street_root":1074}],1071:[function(require,module,exports){
arguments[4][523][0].apply(exports,arguments)
},{"dup":523}],1072:[function(require,module,exports){
arguments[4][209][0].apply(exports,arguments)
},{"dup":209}],1073:[function(require,module,exports){
arguments[4][253][0].apply(exports,arguments)
},{"dup":253}],1074:[function(require,module,exports){
module["exports"] = [
  "Atatürk Bulvarı",
  "Alparslan Türkeş Bulvarı",
  "Ali Çetinkaya Caddesi",
  "Tevfik Fikret Caddesi",
  "Kocatepe Caddesi",
  "İsmet Paşa Caddesi",
  "30 Ağustos Caddesi",
  "İsmet Attila Caddesi",
  "Namık Kemal Caddesi",
  "Lütfi Karadirek Caddesi",
  "Sarıkaya Caddesi",
  "Yunus Emre Sokak",
  "Dar Sokak",
  "Fatih Sokak ",
  "Harman Yolu Sokak ",
  "Ergenekon Sokak  ",
  "Ülkü Sokak",
  "Sağlık Sokak",
  "Okul Sokak",
  "Harman Altı Sokak",
  "Kaldırım Sokak",
  "Mevlana Sokak",
  "Gül Sokak",
  "Sıran Söğüt Sokak",
  "Güven Yaka Sokak",
  "Saygılı Sokak",
  "Menekşe Sokak",
  "Dağınık Evler Sokak",
  "Sevgi Sokak",
  "Afyon Kaya Sokak",
  "Oğuzhan Sokak",
  "İbn-i Sina Sokak",
  "Okul Sokak",
  "Bahçe Sokak",
  "Köypınar Sokak",
  "Kekeçoğlu Sokak",
  "Barış Sokak",
  "Bayır Sokak",
  "Kerimoğlu Sokak",
  "Nalbant Sokak",
  "Bandak Sokak"
];

},{}],1075:[function(require,module,exports){
module["exports"] = [
  "+90-53#-###-##-##",
  "+90-54#-###-##-##",
  "+90-55#-###-##-##",
  "+90-50#-###-##-##"
];

},{}],1076:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":1075,"dup":256}],1077:[function(require,module,exports){
var tr = {};
module['exports'] = tr;
tr.title = "Turkish";
tr.address = require("./address");
tr.internet = require("./internet");
tr.lorem = require("./lorem");
tr.phone_number = require("./phone_number");
tr.cell_phone = require("./cell_phone");
tr.name = require("./name");

},{"./address":1070,"./cell_phone":1076,"./internet":1079,"./lorem":1080,"./name":1083,"./phone_number":1089}],1078:[function(require,module,exports){
module["exports"] = [
  "com.tr",
  "com",
  "biz",
  "info",
  "name",
  "gov.tr"
];

},{}],1079:[function(require,module,exports){
arguments[4][315][0].apply(exports,arguments)
},{"./domain_suffix":1078,"dup":315}],1080:[function(require,module,exports){
arguments[4][265][0].apply(exports,arguments)
},{"./words":1081,"dup":265}],1081:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"dup":229}],1082:[function(require,module,exports){
module["exports"] = [
  "Aba",
  "Abak",
  "Abaka",
  "Abakan",
  "Abakay",
  "Abar",
  "Abay",
  "Abı",
  "Abılay",
  "Abluç",
  "Abşar",
  "Açığ",
  "Açık",
  "Açuk",
  "Adalan",
  "Adaldı",
  "Adalmış",
  "Adar",
  "Adaş",
  "Adberilgen",
  "Adıgüzel",
  "Adık",
  "Adıkutlu",
  "Adıkutlutaş",
  "Adlı",
  "Adlıbeğ",
  "Adraman",
  "Adsız",
  "Afşar",
  "Afşın",
  "Ağabay",
  "Ağakağan",
  "Ağalak",
  "Ağlamış",
  "Ak",
  "Akaş",
  "Akata",
  "Akbaş",
  "Akbay",
  "Akboğa",
  "Akbörü",
  "Akbudak",
  "Akbuğra",
  "Akbulak",
  "Akça",
  "Akçakoca",
  "Akçora",
  "Akdemir",
  "Akdoğan",
  "Akı",
  "Akıbudak",
  "Akım",
  "Akın",
  "Akınçı",
  "Akkun",
  "Akkunlu",
  "Akkurt",
  "Akkuş",
  "Akpıra",
  "Aksungur",
  "Aktan",
  "Al",
  "Ala",
  "Alaban",
  "Alabörü",
  "Aladağ",
  "Aladoğan",
  "Alakurt",
  "Alayunt",
  "Alayuntlu",
  "Aldemir",
  "Aldıgerey",
  "Aldoğan",
  "Algu",
  "Alımga",
  "Alka",
  "Alkabölük",
  "Alkaevli",
  "Alkan",
  "Alkaşı",
  "Alkış",
  "Alp",
  "Alpagut",
  "Alpamış",
  "Alparsbeğ",
  "Alparslan",
  "Alpata",
  "Alpay",
  "Alpaya",
  "Alpaykağan",
  "Alpbamsı",
  "Alpbilge",
  "Alpdirek",
  "Alpdoğan",
  "Alper",
  "Alperen",
  "Alpertunga",
  "Alpgerey",
  "Alpış",
  "Alpilig",
  "Alpkara",
  "Alpkutlu",
  "Alpkülük",
  "Alpşalçı",
  "Alptegin",
  "Alptuğrul",
  "Alptunga",
  "Alpturan",
  "Alptutuk",
  "Alpuluğ",
  "Alpurungu",
  "Alpurungututuk",
  "Alpyörük",
  "Altan",
  "Altankağan",
  "Altankan",
  "Altay",
  "Altın",
  "Altınkağan",
  "Altınkan",
  "Altınoba",
  "Altıntamgan",
  "Altıntamgantarkan",
  "Altıntarkan",
  "Altıntay",
  "Altmışkara",
  "Altuga",
  "Amaç",
  "Amrak",
  "Amul",
  "Ançuk",
  "Andarıman",
  "Anıl",
  "Ant",
  "Apa",
  "Apak",
  "Apatarkan",
  "Aprançur",
  "Araboğa",
  "Arademir",
  "Aral",
  "Arbay",
  "Arbuz",
  "Arçuk",
  "Ardıç",
  "Argıl",
  "Argu",
  "Argun",
  "Arı",
  "Arıboğa",
  "Arık",
  "Arıkağan",
  "Arıkdoruk",
  "Arınç",
  "Arkın",
  "Arkış",
  "Armağan",
  "Arnaç",
  "Arpat",
  "Arsal",
  "Arsıl",
  "Arslan",
  "Arslanargun",
  "Arslanbörü",
  "Arslansungur",
  "Arslantegin",
  "Arslanyabgu",
  "Arşun",
  "Artıınal",
  "Artuk",
  "Artukaç",
  "Artut",
  "Aruk",
  "Asartegin",
  "Asığ",
  "Asrı",
  "Asuğ",
  "Aşan",
  "Aşanboğa",
  "Aşantuğrul",
  "Aşantudun",
  "Aşıkbulmuş",
  "Aşkın",
  "Aştaloğul",
  "Aşuk",
  "Ataç",
  "Atakağan",
  "Atakan",
  "Atalan",
  "Ataldı",
  "Atalmış",
  "Ataman",
  "Atasagun",
  "Atasu",
  "Atberilgen",
  "Atıgay",
  "Atıkutlu",
  "Atıkutlutaş",
  "Atıla",
  "Atılgan",
  "Atım",
  "Atımer",
  "Atış",
  "Atlı",
  "Atlıbeğ",
  "Atlıkağan",
  "Atmaca",
  "Atsız",
  "Atunçu",
  "Avar",
  "Avluç",
  "Avşar",
  "Ay",
  "Ayaçı",
  "Ayas",
  "Ayaş",
  "Ayaz",
  "Aybalta",
  "Ayban",
  "Aybars",
  "Aybeğ",
  "Aydarkağan",
  "Aydemir",
  "Aydın",
  "Aydınalp",
  "Aydoğan",
  "Aydoğdu",
  "Aydoğmuş",
  "Aygırak",
  "Ayıtmış",
  "Ayız",
  "Ayızdağ",
  "Aykağan",
  "Aykan",
  "Aykurt",
  "Ayluç",
  "Ayluçtarkan",
  "Ayma",
  "Ayruk",
  "Aysılığ",
  "Aytak",
  "Ayyıldız",
  "Azak",
  "Azban",
  "Azgan",
  "Azganaz",
  "Azıl",
  "Babır",
  "Babur",
  "Baçara",
  "Baççayman",
  "Baçman",
  "Badabul",
  "Badruk",
  "Badur",
  "Bağa",
  "Bağaalp",
  "Bağaışbara",
  "Bağan",
  "Bağaşatulu",
  "Bağatarkan",
  "Bağatengrikağan",
  "Bağatur",
  "Bağaturçigşi",
  "Bağaturgerey",
  "Bağaturipi",
  "Bağatursepi",
  "Bağış",
  "Bağtaş",
  "Bakağul",
  "Bakır",
  "Bakırsokum",
  "Baksı",
  "Bakşı",
  "Balaban",
  "Balaka",
  "Balakatay",
  "Balamır",
  "Balçar",
  "Baldu",
  "Balkık",
  "Balta",
  "Baltacı",
  "Baltar",
  "Baltır",
  "Baltur",
  "Bamsı",
  "Bangu",
  "Barak",
  "Baraktöre",
  "Baran",
  "Barbeğ",
  "Barboğa",
  "Barbol",
  "Barbulsun",
  "Barça",
  "Barçadoğdu",
  "Barçadoğmuş",
  "Barçadurdu",
  "Barçadurmuş",
  "Barçan",
  "Barçatoyun",
  "Bardıbay",
  "Bargan",
  "Barımtay",
  "Barın",
  "Barkan",
  "Barkdoğdu",
  "Barkdoğmuş",
  "Barkdurdu",
  "Barkdurmuş",
  "Barkın",
  "Barlas",
  "Barlıbay",
  "Barmaklak",
  "Barmaklı",
  "Barman",
  "Bars",
  "Barsbeğ",
  "Barsboğa",
  "Barsgan",
  "Barskan",
  "Barsurungu",
  "Bartu",
  "Basademir",
  "Basan",
  "Basanyalavaç",
  "Basar",
  "Basat",
  "Baskın",
  "Basmıl",
  "Bastı",
  "Bastuğrul",
  "Basu",
  "Basut",
  "Başak",
  "Başbuğ",
  "Başçı",
  "Başgan",
  "Başkırt",
  "Başkurt",
  "Baştar",
  "Batrak",
  "Batu",
  "Batuk",
  "Batur",
  "Baturalp",
  "Bay",
  "Bayançar",
  "Bayankağan",
  "Bayat",
  "Bayazıt",
  "Baybars",
  "Baybayık",
  "Baybiçen",
  "Bayboğa",
  "Baybora",
  "Baybüre",
  "Baydar",
  "Baydemir",
  "Baydur",
  "Bayık",
  "Bayınçur",
  "Bayındır",
  "Baykal",
  "Baykara",
  "Baykoca",
  "Baykuzu",
  "Baymünke",
  "Bayna",
  "Baynal",
  "Baypüre",
  "Bayrı",
  "Bayraç",
  "Bayrak",
  "Bayram",
  "Bayrın",
  "Bayruk",
  "Baysungur",
  "Baytara",
  "Baytaş",
  "Bayunçur",
  "Bayur",
  "Bayurku",
  "Bayutmuş",
  "Bayuttu",
  "Bazır",
  "Beçeapa",
  "Beçkem",
  "Beğ",
  "Beğarslan",
  "Beğbars",
  "Beğbilgeçikşin",
  "Beğboğa",
  "Beğçur",
  "Beğdemir",
  "Beğdilli",
  "Beğdurmuş",
  "Beğkulu",
  "Beğtaş",
  "Beğtegin",
  "Beğtüzün",
  "Begi",
  "Begil",
  "Begine",
  "Begitutuk",
  "Beglen",
  "Begni",
  "Bek",
  "Bekazıl",
  "Bekbekeç",
  "Bekeç",
  "Bekeçarslan",
  "Bekeçarslantegin",
  "Bekeçtegin",
  "Beker",
  "Beklemiş",
  "Bektür",
  "Belçir",
  "Belek",
  "Belgi",
  "Belgüc",
  "Beltir",
  "Bengi",
  "Bengü",
  "Benlidemir",
  "Berdibeğ",
  "Berendey",
  "Bergü",
  "Berginsenge",
  "Berk",
  "Berke",
  "Berkiş",
  "Berkyaruk",
  "Bermek",
  "Besentegin",
  "Betemir",
  "Beyizçi",
  "Beyrek",
  "Beyrem",
  "Bıçkı",
  "Bıçkıcı",
  "Bıdın",
  "Bıtaybıkı",
  "Bıtrı",
  "Biçek",
  "Bilge",
  "Bilgebayunçur",
  "Bilgebeğ",
  "Bilgeçikşin",
  "Bilgeışbara",
  "Bilgeışbaratamgan",
  "Bilgekağan",
  "Bilgekan",
  "Bilgekutluk",
  "Bilgekülüçur",
  "Bilgetaçam",
  "Bilgetamgacı",
  "Bilgetardu",
  "Bilgetegin",
  "Bilgetonyukuk",
  "Bilgez",
  "Bilgiç",
  "Bilgin",
  "Bilig",
  "Biligköngülsengün",
  "Bilik",
  "Binbeği",
  "Bindir",
  "Boğa",
  "Boğaç",
  "Boğaçuk",
  "Boldaz",
  "Bolmuş",
  "Bolsun",
  "Bolun",
  "Boncuk",
  "Bongul",
  "Bongulboğa",
  "Bora",
  "Boran",
  "Borçul",
  "Borlukçu",
  "Bornak",
  "Boyan",
  "Boyankulu",
  "Boylabağa",
  "Boylabağatarkan",
  "Boylakutlutarkan",
  "Bozan",
  "Bozbörü",
  "Bozdoğan",
  "Bozkurt",
  "Bozkuş",
  "Bozok",
  "Bögde",
  "Böge",
  "Bögü",
  "Bökde",
  "Bökde",
  "Böke",
  "Bölen",
  "Bölükbaşı",
  "Bönek",
  "Bönge",
  "Börü",
  "Börübars",
  "Börüsengün",
  "Börteçine",
  "Buçan",
  "Buçur",
  "Budağ",
  "Budak",
  "Budunlu",
  "Buğday",
  "Buğra",
  "Buğrakarakağan",
  "Bukak",
  "Bukaktutuk",
  "Bulaçapan",
  "Bulak",
  "Bulan",
  "Buldur",
  "Bulgak",
  "Bulmaz",
  "Bulmuş",
  "Buluç",
  "Buluğ",
  "Buluk",
  "Buluş",
  "Bulut",
  "Bumın",
  "Bunsuz",
  "Burçak",
  "Burguçan",
  "Burkay",
  "Burslan",
  "Burulday",
  "Burulgu",
  "Burunduk",
  "Buşulgan",
  "Butak",
  "Butuk",
  "Buyan",
  "Buyançuk",
  "Buyandemir",
  "Buyankara",
  "Buyat",
  "Buyraç",
  "Buyruç",
  "Buyruk",
  "Buzaç",
  "Buzaçtutuk",
  "Büdüs",
  "Büdüstudun",
  "Bügü",
  "Bügdüz",
  "Bügdüzemen",
  "Büge",
  "Büğübilge",
  "Bükdüz",
  "Büke",
  "Bükebuyraç",
  "Bükebuyruç",
  "Bükey",
  "Büktegin",
  "Büküşboğa",
  "Bümen",
  "Bünül",
  "Büre",
  "Bürgüt",
  "Bürkek",
  "Bürküt",
  "Bürlük",
  "Cebe",
  "Ceyhun",
  "Cılasun",
  "Çaba",
  "Çabdar",
  "Çablı",
  "Çabuş",
  "Çağan",
  "Çağatay",
  "Çağlar",
  "Çağlayan",
  "Çağrı",
  "Çağrıbeğ",
  "Çağrıtegin",
  "Çağru",
  "Çalapkulu",
  "Çankız",
  "Çemen",
  "Çemgen",
  "Çeykün",
  "Çıngır",
  "Çiçek",
  "Çiçem",
  "Çiğdem",
  "Çilenti",
  "Çimen",
  "Çobulmak",
  "Çocukbörü",
  "Çokramayul",
  "Çolman",
  "Çolpan",
  "Çölü",
  "Damla",
  "Deniz",
  "Dilek",
  "Diri",
  "Dizik",
  "Duru",
  "Dururbunsuz",
  "Duygu",
  "Ebin",
  "Ebkızı",
  "Ebren",
  "Edil",
  "Ediz",
  "Egemen",
  "Eğrim",
  "Ekeç",
  "Ekim",
  "Ekin",
  "Elkin",
  "Elti",
  "Engin",
  "Erdem",
  "Erdeni",
  "Erdeniözük",
  "Erdenikatun",
  "Erentüz",
  "Ergene",
  "Ergenekatun",
  "Erinç",
  "Erke",
  "Ermen",
  "Erten",
  "Ertenözük",
  "Esen",
  "Esenbike",
  "Eser",
  "Esin",
  "Etil",
  "Evin",
  "Eyiz",
  "Gelin",
  "Gelincik",
  "Gökbörü",
  "Gökçe",
  "Gökçegöl",
  "Gökçen",
  "Gökçiçek",
  "Gökşin",
  "Gönül",
  "Görün",
  "Gözde",
  "Gülegen",
  "Gülemen",
  "Güler",
  "Gülümser",
  "Gümüş",
  "Gün",
  "Günay",
  "Günçiçek",
  "Gündoğdu",
  "Gündoğmuş",
  "Güneş",
  "Günyaruk",
  "Gürbüz",
  "Güvercin",
  "Güzey",
  "Işığ",
  "Işık",
  "Işıl",
  "Işılay",
  "Ila",
  "Ilaçın",
  "Ilgın",
  "Inanç",
  "Irmak",
  "Isığ",
  "Isık",
  "Iyık",
  "Iyıktağ",
  "İdil",
  "İkeme",
  "İkiçitoyun",
  "İlbilge",
  "İldike",
  "İlgegü",
  "İmrem",
  "İnci",
  "İnç",
  "İrinç",
  "İrinçköl",
  "İrtiş",
  "İtil",
  "Kancı",
  "Kançı",
  "Kapgar",
  "Karaca",
  "Karaça",
  "Karak",
  "Kargılaç",
  "Karlıgaç",
  "Katun",
  "Katunkız",
  "Kayacık",
  "Kayaçık",
  "Kayça",
  "Kaynak",
  "Kazanç",
  "Kazkatun",
  "Kekik",
  "Keklik",
  "Kepez",
  "Kesme",
  "Keyken",
  "Kezlik",
  "Kımız",
  "Kımızın",
  "Kımızalma",
  "Kımızalmıla",
  "Kırçiçek",
  "Kırgavul",
  "Kırlangıç",
  "Kıvanç",
  "Kıvılcım",
  "Kızdurmuş",
  "Kızılalma"
];

},{}],1083:[function(require,module,exports){
arguments[4][317][0].apply(exports,arguments)
},{"./first_name":1082,"./last_name":1084,"./name":1085,"./prefix":1086,"dup":317}],1084:[function(require,module,exports){
module["exports"] = [
  "Abacı",
  "Abadan",
  "Aclan",
  "Adal",
  "Adan",
  "Adıvar",
  "Akal",
  "Akan",
  "Akar ",
  "Akay",
  "Akaydın",
  "Akbulut",
  "Akgül",
  "Akışık",
  "Akman",
  "Akyürek",
  "Akyüz",
  "Akşit",
  "Alnıaçık",
  "Alpuğan",
  "Alyanak",
  "Arıcan",
  "Arslanoğlu",
  "Atakol",
  "Atan",
  "Avan",
  "Ayaydın",
  "Aybar",
  "Aydan",
  "Aykaç",
  "Ayverdi",
  "Ağaoğlu",
  "Aşıkoğlu",
  "Babacan",
  "Babaoğlu",
  "Bademci",
  "Bakırcıoğlu",
  "Balaban",
  "Balcı",
  "Barbarosoğlu",
  "Baturalp",
  "Baykam",
  "Başoğlu",
  "Berberoğlu",
  "Beşerler",
  "Beşok",
  "Biçer",
  "Bolatlı",
  "Dalkıran",
  "Dağdaş",
  "Dağlaroğlu",
  "Demirbaş",
  "Demirel",
  "Denkel",
  "Dizdar ",
  "Doğan ",
  "Durak ",
  "Durmaz",
  "Duygulu",
  "Düşenkalkar",
  "Egeli",
  "Ekici",
  "Ekşioğlu",
  "Eliçin",
  "Elmastaşoğlu",
  "Elçiboğa",
  "Erbay",
  "Erberk",
  "Erbulak",
  "Erdoğan",
  "Erez",
  "Erginsoy",
  "Erkekli",
  "Eronat",
  "Ertepınar",
  "Ertürk",
  "Erçetin",
  "Evliyaoğlu",
  "Gönültaş",
  "Gümüşpala",
  "Günday",
  "Gürmen",
  "Hakyemez",
  "Hamzaoğlu",
  "Ilıcalı",
  "Kahveci",
  "Kaplangı",
  "Karabulut",
  "Karaböcek",
  "Karadaş",
  "Karaduman",
  "Karaer",
  "Kasapoğlu",
  "Kavaklıoğlu",
  "Kaya ",
  "Keseroğlu",
  "Keçeci",
  "Kılıççı",
  "Kıraç ",
  "Kocabıyık",
  "Korol",
  "Koyuncu",
  "Koç",
  "Koçoğlu",
  "Koçyiğit",
  "Kuday",
  "Kulaksızoğlu",
  "Kumcuoğlu",
  "Kunt",
  "Kunter",
  "Kurutluoğlu",
  "Kutlay",
  "Kuzucu",
  "Körmükçü",
  "Köybaşı",
  "Köylüoğlu",
  "Küçükler",
  "Limoncuoğlu",
  "Mayhoş",
  "Menemencioğlu",
  "Mertoğlu",
  "Nalbantoğlu",
  "Nebioğlu",
  "Numanoğlu",
  "Okumuş",
  "Okur",
  "Oraloğlu",
  "Orbay",
  "Ozansoy",
  "Paksüt",
  "Pekkan",
  "Pektemek",
  "Polat",
  "Poyrazoğlu",
  "Poçan",
  "Sadıklar",
  "Samancı",
  "Sandalcı",
  "Sarıoğlu",
  "Saygıner",
  "Sepetçi",
  "Sezek",
  "Sinanoğlu",
  "Solmaz",
  "Sözeri",
  "Süleymanoğlu",
  "Tahincioğlu",
  "Tanrıkulu",
  "Tazegül",
  "Taşlı",
  "Taşçı",
  "Tekand",
  "Tekelioğlu",
  "Tokatlıoğlu",
  "Tokgöz",
  "Topaloğlu",
  "Topçuoğlu",
  "Toraman",
  "Tunaboylu",
  "Tunçeri",
  "Tuğlu",
  "Tuğluk",
  "Türkdoğan",
  "Türkyılmaz",
  "Tütüncü",
  "Tüzün",
  "Uca",
  "Uluhan",
  "Velioğlu",
  "Yalçın",
  "Yazıcı",
  "Yetkiner",
  "Yeşilkaya",
  "Yıldırım ",
  "Yıldızoğlu",
  "Yılmazer",
  "Yorulmaz",
  "Çamdalı",
  "Çapanoğlu",
  "Çatalbaş",
  "Çağıran",
  "Çetin",
  "Çetiner",
  "Çevik",
  "Çörekçi",
  "Önür",
  "Örge",
  "Öymen",
  "Özberk",
  "Özbey",
  "Özbir",
  "Özdenak",
  "Özdoğan",
  "Özgörkey",
  "Özkara",
  "Özkök ",
  "Öztonga",
  "Öztuna"
];

},{}],1085:[function(require,module,exports){
arguments[4][682][0].apply(exports,arguments)
},{"dup":682}],1086:[function(require,module,exports){
module["exports"] = [
  "Bay",
  "Bayan",
  "Dr.",
  "Prof. Dr."
];

},{}],1087:[function(require,module,exports){
module["exports"] = [
  "392",
  "510",
  "512",
  "522",
  "562",
  "564",
  "592",
  "594",
  "800",
  "811",
  "822",
  "850",
  "888",
  "898",
  "900",
  "322",
  "416",
  "272",
  "472",
  "382",
  "358",
  "312",
  "242",
  "478",
  "466",
  "256",
  "266",
  "378",
  "488",
  "458",
  "228",
  "426",
  "434",
  "374",
  "248",
  "224",
  "286",
  "376",
  "364",
  "258",
  "412",
  "380",
  "284",
  "424",
  "446",
  "442",
  "222",
  "342",
  "454",
  "456",
  "438",
  "326",
  "476",
  "246",
  "216",
  "212",
  "232",
  "344",
  "370",
  "338",
  "474",
  "366",
  "352",
  "318",
  "288",
  "386",
  "348",
  "262",
  "332",
  "274",
  "422",
  "236",
  "482",
  "324",
  "252",
  "436",
  "384",
  "388",
  "452",
  "328",
  "464",
  "264",
  "362",
  "484",
  "368",
  "346",
  "414",
  "486",
  "282",
  "356",
  "462",
  "428",
  "276",
  "432",
  "226",
  "354",
  "372"
];

},{}],1088:[function(require,module,exports){
module["exports"] = [
  "+90-###-###-##-##",
  "+90-###-###-#-###"
];

},{}],1089:[function(require,module,exports){
var phone_number = {};
module['exports'] = phone_number;
phone_number.area_code = require("./area_code");
phone_number.formats = require("./formats");

},{"./area_code":1087,"./formats":1088}],1090:[function(require,module,exports){
arguments[4][198][0].apply(exports,arguments)
},{"dup":198}],1091:[function(require,module,exports){
module["exports"] = [
  "#{city_name}",
  "#{city_prefix} #{Name.male_first_name}"
];

},{}],1092:[function(require,module,exports){
module["exports"] = [
  "Алчевськ",
  "Артемівськ",
  "Бердичів",
  "Бердянськ",
  "Біла Церква",
  "Бровари",
  "Вінниця",
  "Горлівка",
  "Дніпродзержинськ",
  "Дніпропетровськ",
  "Донецьк",
  "Євпаторія",
  "Єнакієве",
  "Житомир",
  "Запоріжжя",
  "Івано-Франківськ",
  "Ізмаїл",
  "Кам’янець-Подільський",
  "Керч",
  "Київ",
  "Кіровоград",
  "Конотоп",
  "Краматорськ",
  "Красний Луч",
  "Кременчук",
  "Кривий Ріг",
  "Лисичанськ",
  "Луганськ",
  "Луцьк",
  "Львів",
  "Макіївка",
  "Маріуполь",
  "Мелітополь",
  "Миколаїв",
  "Мукачеве",
  "Нікополь",
  "Одеса",
  "Олександрія",
  "Павлоград",
  "Полтава",
  "Рівне",
  "Севастополь",
  "Сєвєродонецьк",
  "Сімферополь",
  "Слов’янськ",
  "Суми",
  "Тернопіль",
  "Ужгород",
  "Умань",
  "Харків",
  "Херсон",
  "Хмельницький",
  "Черкаси",
  "Чернівці",
  "Чернігів",
  "Шостка",
  "Ялта"
];

},{}],1093:[function(require,module,exports){
module["exports"] = [
  "Південний",
  "Північний",
  "Східний",
  "Західний"
];

},{}],1094:[function(require,module,exports){
module["exports"] = [
  "град"
];

},{}],1095:[function(require,module,exports){
module["exports"] = [
  "Австралія",
  "Австрія",
  "Азербайджан",
  "Албанія",
  "Алжир",
  "Ангола",
  "Андорра",
  "Антигуа і Барбуда",
  "Аргентина",
  "Афганістан",
  "Багамські Острови",
  "Бангладеш",
  "Барбадос",
  "Бахрейн",
  "Беліз",
  "Бельгія",
  "Бенін",
  "Білорусь",
  "Болгарія",
  "Болівія",
  "Боснія і Герцеговина",
  "Ботсвана",
  "Бразилія",
  "Бруней",
  "Буркіна-Фасо",
  "Бурунді",
  "Бутан",
  "В’єтнам",
  "Вануату",
  "Ватикан",
  "Велика Британія",
  "Венесуела",
  "Вірменія",
  "Габон",
  "Гаїті",
  "Гайана",
  "Гамбія",
  "Гана",
  "Гватемала",
  "Гвінея",
  "Гвінея-Бісау",
  "Гондурас",
  "Гренада",
  "Греція",
  "Грузія",
  "Данія",
  "Демократична Республіка Конго",
  "Джибуті",
  "Домініка",
  "Домініканська Республіка",
  "Еквадор",
  "Екваторіальна Гвінея",
  "Еритрея",
  "Естонія",
  "Ефіопія",
  "Єгипет",
  "Ємен",
  "Замбія",
  "Зімбабве",
  "Ізраїль",
  "Індія",
  "Індонезія",
  "Ірак",
  "Іран",
  "Ірландія",
  "Ісландія",
  "Іспанія",
  "Італія",
  "Йорданія",
  "Кабо-Верде",
  "Казахстан",
  "Камбоджа",
  "Камерун",
  "Канада",
  "Катар",
  "Кенія",
  "Киргизстан",
  "Китай",
  "Кіпр",
  "Кірибаті",
  "Колумбія",
  "Коморські Острови",
  "Конго",
  "Коста-Рика",
  "Кот-д’Івуар",
  "Куба",
  "Кувейт",
  "Лаос",
  "Латвія",
  "Лесото",
  "Литва",
  "Ліберія",
  "Ліван",
  "Лівія",
  "Ліхтенштейн",
  "Люксембург",
  "Маврикій",
  "Мавританія",
  "Мадаґаскар",
  "Македонія",
  "Малаві",
  "Малайзія",
  "Малі",
  "Мальдіви",
  "Мальта",
  "Марокко",
  "Маршаллові Острови",
  "Мексика",
  "Мозамбік",
  "Молдова",
  "Монако",
  "Монголія",
  "Намібія",
  "Науру",
  "Непал",
  "Нігер",
  "Нігерія",
  "Нідерланди",
  "Нікарагуа",
  "Німеччина",
  "Нова Зеландія",
  "Норвегія",
  "Об’єднані Арабські Емірати",
  "Оман",
  "Пакистан",
  "Палау",
  "Панама",
  "Папуа-Нова Гвінея",
  "Парагвай",
  "Перу",
  "Південна Корея",
  "Південний Судан",
  "Південно-Африканська Республіка",
  "Північна Корея",
  "Польща",
  "Португалія",
  "Російська Федерація",
  "Руанда",
  "Румунія",
  "Сальвадор",
  "Самоа",
  "Сан-Марино",
  "Сан-Томе і Принсіпі",
  "Саудівська Аравія",
  "Свазіленд",
  "Сейшельські Острови",
  "Сенеґал",
  "Сент-Вінсент і Гренадини",
  "Сент-Кітс і Невіс",
  "Сент-Люсія",
  "Сербія",
  "Сирія",
  "Сінгапур",
  "Словаччина",
  "Словенія",
  "Соломонові Острови",
  "Сомалі",
  "Судан",
  "Суринам",
  "Східний Тимор",
  "США",
  "Сьєрра-Леоне",
  "Таджикистан",
  "Таїланд",
  "Танзанія",
  "Того",
  "Тонга",
  "Тринідад і Тобаго",
  "Тувалу",
  "Туніс",
  "Туреччина",
  "Туркменістан",
  "Уганда",
  "Угорщина",
  "Узбекистан",
  "Україна",
  "Уругвай",
  "Федеративні Штати Мікронезії",
  "Фіджі",
  "Філіппіни",
  "Фінляндія",
  "Франція",
  "Хорватія",
  "Центральноафриканська Республіка",
  "Чад",
  "Чехія",
  "Чилі",
  "Чорногорія",
  "Швейцарія",
  "Швеція",
  "Шрі-Ланка",
  "Ямайка",
  "Японія"
];

},{}],1096:[function(require,module,exports){
module["exports"] = [
  "Україна"
];

},{}],1097:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.street_prefix = require("./street_prefix");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.street_title = require("./street_title");
address.city_name = require("./city_name");
address.city = require("./city");
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":1090,"./city":1091,"./city_name":1092,"./city_prefix":1093,"./city_suffix":1094,"./country":1095,"./default_country":1096,"./postcode":1098,"./secondary_address":1099,"./state":1100,"./street_address":1101,"./street_name":1102,"./street_prefix":1103,"./street_suffix":1104,"./street_title":1105}],1098:[function(require,module,exports){
arguments[4][523][0].apply(exports,arguments)
},{"dup":523}],1099:[function(require,module,exports){
arguments[4][947][0].apply(exports,arguments)
},{"dup":947}],1100:[function(require,module,exports){
module["exports"] = [
  "АР Крим",
  "Вінницька область",
  "Волинська область",
  "Дніпропетровська область",
  "Донецька область",
  "Житомирська область",
  "Закарпатська область",
  "Запорізька область",
  "Івано-Франківська область",
  "Київська область",
  "Кіровоградська область",
  "Луганська область",
  "Львівська область",
  "Миколаївська область",
  "Одеська область",
  "Полтавська область",
  "Рівненська область",
  "Сумська область",
  "Тернопільська область",
  "Харківська область",
  "Херсонська область",
  "Хмельницька область",
  "Черкаська область",
  "Чернівецька область",
  "Чернігівська область",
  "Київ",
  "Севастополь"
];

},{}],1101:[function(require,module,exports){
arguments[4][169][0].apply(exports,arguments)
},{"dup":169}],1102:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{Address.street_title}",
  "#{Address.street_title} #{street_suffix}"
];

},{}],1103:[function(require,module,exports){
module["exports"] = [
  "вул.",
  "вулиця",
  "пр.",
  "проспект",
  "пл.",
  "площа",
  "пров.",
  "провулок"
];

},{}],1104:[function(require,module,exports){
module["exports"] = [
  "майдан"
];

},{}],1105:[function(require,module,exports){
module["exports"] = [
  "Зелена",
  "Молодіжна",
  "Городоцька",
  "Стрийська",
  "Вузька",
  "Нижанківського",
  "Староміська",
  "Ліста",
  "Вічева",
  "Брюховичів",
  "Винників",
  "Рудного",
  "Коліївщини"
];

},{}],1106:[function(require,module,exports){
arguments[4][177][0].apply(exports,arguments)
},{"./name":1107,"./prefix":1108,"./suffix":1109,"dup":177}],1107:[function(require,module,exports){
arguments[4][178][0].apply(exports,arguments)
},{"dup":178}],1108:[function(require,module,exports){
module["exports"] = [
  "ТОВ",
  "ПАТ",
  "ПрАТ",
  "ТДВ",
  "КТ",
  "ПТ",
  "ДП",
  "ФОП"
];

},{}],1109:[function(require,module,exports){
module["exports"] = [
  "Постач",
  "Торг",
  "Пром",
  "Трейд",
  "Збут"
];

},{}],1110:[function(require,module,exports){
var uk = {};
module['exports'] = uk;
uk.title = "Ukrainian";
uk.address = require("./address");
uk.company = require("./company");
uk.internet = require("./internet");
uk.name = require("./name");
uk.phone_number = require("./phone_number");

},{"./address":1097,"./company":1106,"./internet":1113,"./name":1117,"./phone_number":1126}],1111:[function(require,module,exports){
module["exports"] = [
  "cherkassy.ua",
  "cherkasy.ua",
  "ck.ua",
  "cn.ua",
  "com.ua",
  "crimea.ua",
  "cv.ua",
  "dn.ua",
  "dnepropetrovsk.ua",
  "dnipropetrovsk.ua",
  "donetsk.ua",
  "dp.ua",
  "if.ua",
  "in.ua",
  "ivano-frankivsk.ua",
  "kh.ua",
  "kharkiv.ua",
  "kharkov.ua",
  "kherson.ua",
  "khmelnitskiy.ua",
  "kiev.ua",
  "kirovograd.ua",
  "km.ua",
  "kr.ua",
  "ks.ua",
  "lg.ua",
  "lt.ua",
  "lugansk.ua",
  "lutsk.ua",
  "lutsk.net",
  "lviv.ua",
  "mk.ua",
  "net.ua",
  "nikolaev.ua",
  "od.ua",
  "odessa.ua",
  "org.ua",
  "pl.ua",
  "pl.ua",
  "poltava.ua",
  "rovno.ua",
  "rv.ua",
  "sebastopol.ua",
  "sm.ua",
  "sumy.ua",
  "te.ua",
  "ternopil.ua",
  "ua",
  "uz.ua",
  "uzhgorod.ua",
  "vinnica.ua",
  "vn.ua",
  "volyn.net",
  "volyn.ua",
  "yalta.ua",
  "zaporizhzhe.ua",
  "zhitomir.ua",
  "zp.ua",
  "zt.ua",
  "укр"
];

},{}],1112:[function(require,module,exports){
module["exports"] = [
  "ukr.net",
  "ex.ua",
  "e-mail.ua",
  "i.ua",
  "meta.ua",
  "yandex.ua",
  "gmail.com"
];

},{}],1113:[function(require,module,exports){
arguments[4][187][0].apply(exports,arguments)
},{"./domain_suffix":1111,"./free_email":1112,"dup":187}],1114:[function(require,module,exports){
module["exports"] = [
  "Аврелія",
  "Аврора",
  "Агапія",
  "Агата",
  "Агафія",
  "Агнеса",
  "Агнія",
  "Агрипина",
  "Ада",
  "Аделаїда",
  "Аделіна",
  "Адріана",
  "Азалія",
  "Алевтина",
  "Аліна",
  "Алла",
  "Альбіна",
  "Альвіна",
  "Анастасія",
  "Анастасія",
  "Анатолія",
  "Ангеліна",
  "Анжела",
  "Анна",
  "Антонида",
  "Антоніна",
  "Антонія",
  "Анфіса",
  "Аполлінарія",
  "Аполлонія",
  "Аркадія",
  "Артемія",
  "Афанасія",
  "Білослава",
  "Біляна",
  "Благовіста",
  "Богдана",
  "Богуслава",
  "Божена",
  "Болеслава",
  "Борислава",
  "Броніслава",
  "В’ячеслава",
  "Валентина",
  "Валерія",
  "Варвара",
  "Василина",
  "Вікторія",
  "Вілена",
  "Віленіна",
  "Віліна",
  "Віола",
  "Віолетта",
  "Віра",
  "Віргінія",
  "Віта",
  "Віталіна",
  "Влада",
  "Владислава",
  "Власта",
  "Всеслава",
  "Галина",
  "Ганна",
  "Гелена",
  "Далеслава",
  "Дана",
  "Дарина",
  "Дарислава",
  "Діана",
  "Діяна",
  "Добринка",
  "Добромила",
  "Добромира",
  "Добромисла",
  "Доброслава",
  "Долеслава",
  "Доляна",
  "Жанна",
  "Жозефіна",
  "Забава",
  "Звенислава",
  "Зінаїда",
  "Злата",
  "Зореслава",
  "Зорина",
  "Зоряна",
  "Зоя",
  "Іванна",
  "Ілона",
  "Інна",
  "Іннеса",
  "Ірина",
  "Ірма",
  "Калина",
  "Каріна",
  "Катерина",
  "Квітка",
  "Квітослава",
  "Клавдія",
  "Крентта",
  "Ксенія",
  "Купава",
  "Лада",
  "Лариса",
  "Леся",
  "Ликера",
  "Лідія",
  "Лілія",
  "Любава",
  "Любислава",
  "Любов",
  "Любомила",
  "Любомира",
  "Люборада",
  "Любослава",
  "Людмила",
  "Людомила",
  "Майя",
  "Мальва",
  "Мар’яна",
  "Марина",
  "Марічка",
  "Марія",
  "Марта",
  "Меланія",
  "Мечислава",
  "Милодара",
  "Милослава",
  "Мирослава",
  "Мілана",
  "Мокрина",
  "Мотря",
  "Мстислава",
  "Надія",
  "Наталія",
  "Неля",
  "Немира",
  "Ніна",
  "Огняна",
  "Оксана",
  "Олександра",
  "Олена",
  "Олеся",
  "Ольга",
  "Ореста",
  "Орина",
  "Орислава",
  "Орися",
  "Оріяна",
  "Павліна",
  "Палажка",
  "Пелагея",
  "Пелагія",
  "Поліна",
  "Поляна",
  "Потішана",
  "Радміла",
  "Радослава",
  "Раїна",
  "Раїса",
  "Роксолана",
  "Ромена",
  "Ростислава",
  "Руслана",
  "Світлана",
  "Святослава",
  "Слава",
  "Сміяна",
  "Сніжана",
  "Соломія",
  "Соня",
  "Софія",
  "Станислава",
  "Сюзана",
  "Таїсія",
  "Тамара",
  "Тетяна",
  "Устина",
  "Фаїна",
  "Февронія",
  "Федора",
  "Феодосія",
  "Харитина",
  "Христина",
  "Христя",
  "Юліанна",
  "Юлія",
  "Юстина",
  "Юхима",
  "Юхимія",
  "Яна",
  "Ярина",
  "Ярослава"
];

},{}],1115:[function(require,module,exports){
module["exports"] = [
  "Андрухович",
  "Бабух",
  "Балабан",
  "Балабуха",
  "Балакун",
  "Балицька",
  "Бамбула",
  "Бандера",
  "Барановська",
  "Бачей",
  "Башук",
  "Бердник",
  "Білич",
  "Бондаренко",
  "Борецька",
  "Боровська",
  "Борочко",
  "Боярчук",
  "Брицька",
  "Бурмило",
  "Бутько",
  "Василишина",
  "Васильківська",
  "Вергун",
  "Вередун",
  "Верещук",
  "Витребенько",
  "Вітряк",
  "Волощук",
  "Гайдук",
  "Гайова",
  "Гайчук",
  "Галаєнко",
  "Галатей",
  "Галаціон",
  "Гаман",
  "Гамула",
  "Ганич",
  "Гарай",
  "Гарун",
  "Гладківська",
  "Гладух",
  "Глинська",
  "Гнатишина",
  "Гойко",
  "Головець",
  "Горбач",
  "Гордійчук",
  "Горова",
  "Городоцька",
  "Гречко",
  "Григоришина",
  "Гриневецька",
  "Гриневська",
  "Гришко",
  "Громико",
  "Данилишина",
  "Данилко",
  "Демків",
  "Демчишина",
  "Дзюб’як",
  "Дзюба",
  "Дідух",
  "Дмитришина",
  "Дмитрук",
  "Довгалевська",
  "Дурдинець",
  "Євенко",
  "Євпак",
  "Ємець",
  "Єрмак",
  "Забіла",
  "Зварич",
  "Зінкевич",
  "Зленко",
  "Іванишина",
  "Калач",
  "Кандиба",
  "Карпух",
  "Кивач",
  "Коваленко",
  "Ковальська",
  "Коломієць",
  "Коман",
  "Компанієць",
  "Кононець",
  "Кордун",
  "Корецька",
  "Корнїйчук",
  "Коров’як",
  "Коцюбинська",
  "Кулинич",
  "Кульчицька",
  "Лагойда",
  "Лазірко",
  "Ланова",
  "Латан",
  "Латанська",
  "Лахман",
  "Левадовська",
  "Ликович",
  "Линдик",
  "Ліхно",
  "Лобачевська",
  "Ломова",
  "Лугова",
  "Луцька",
  "Луцьків",
  "Лученко",
  "Лучко",
  "Люта",
  "Лящук",
  "Магера",
  "Мазайло",
  "Мазило",
  "Мазун",
  "Майборода",
  "Майстренко",
  "Маковецька",
  "Малкович",
  "Мамій",
  "Маринич",
  "Марієвська",
  "Марків",
  "Махно",
  "Миклашевська",
  "Миклухо",
  "Милославська",
  "Михайлюк",
  "Міняйло",
  "Могилевська",
  "Москаль",
  "Москалюк",
  "Мотрієнко",
  "Негода",
  "Ногачевська",
  "Опенько",
  "Осадко",
  "Павленко",
  "Павлишина",
  "Павлів",
  "Пагутяк",
  "Паламарчук",
  "Палій",
  "Паращук",
  "Пасічник",
  "Пендик",
  "Петик",
  "Петлюра",
  "Петренко",
  "Петрина",
  "Петришина",
  "Петрів",
  "Плаксій",
  "Погиба",
  "Поліщук",
  "Пономарів",
  "Поривай",
  "Поривайло",
  "Потебенько",
  "Потоцька",
  "Пригода",
  "Приймак",
  "Притула",
  "Прядун",
  "Розпутня",
  "Романишина",
  "Ромей",
  "Роменець",
  "Ромочко",
  "Савицька",
  "Саєнко",
  "Свидригайло",
  "Семеночко",
  "Семещук",
  "Сердюк",
  "Силецька",
  "Сідлецька",
  "Сідляк",
  "Сірко",
  "Скиба",
  "Скоропадська",
  "Слободян",
  "Сосюра",
  "Сплюха",
  "Спотикач",
  "Степанець",
  "Стигайло",
  "Сторожук",
  "Сторчак",
  "Стоян",
  "Сучак",
  "Сушко",
  "Тарасюк",
  "Тиндарей",
  "Ткаченко",
  "Третяк",
  "Троян",
  "Трублаєвська",
  "Трясило",
  "Трясун",
  "Уманець",
  "Унич",
  "Усич",
  "Федоришина",
  "Цушко",
  "Червоній",
  "Шамрило",
  "Шевченко",
  "Шестак",
  "Шиндарей",
  "Шиян",
  "Шкараба",
  "Шудрик",
  "Шумило",
  "Шупик",
  "Шухевич",
  "Щербак",
  "Юрчишина",
  "Юхно",
  "Ющик",
  "Ющук",
  "Яворівська",
  "Ялова",
  "Ялюк",
  "Янюк",
  "Ярмак",
  "Яцишина",
  "Яцьків",
  "Ящук"
];

},{}],1116:[function(require,module,exports){
module["exports"] = [
  "Адамівна",
  "Азарівна",
  "Алевтинівна",
  "Альбертівна",
  "Анастасівна",
  "Анатоліївна",
  "Андріївна",
  "Антонівна",
  "Аркадіївна",
  "Арсенівна",
  "Арсеніївна",
  "Артемівна",
  "Архипівна",
  "Аскольдівна",
  "Афанасіївна",
  "Білославівна",
  "Богданівна",
  "Божемирівна",
  "Боженівна",
  "Болеславівна",
  "Боримирівна",
  "Борисівна",
  "Бориславівна",
  "Братиславівна",
  "В’ячеславівна",
  "Вадимівна",
  "Валентинівна",
  "Валеріївна",
  "Василівна",
  "Вікторівна",
  "Віталіївна",
  "Владиславівна",
  "Володимирівна",
  "Всеволодівна",
  "Всеславівна",
  "Гаврилівна",
  "Гарасимівна",
  "Георгіївна",
  "Гнатівна",
  "Гордіївна",
  "Григоріївна",
  "Данилівна",
  "Даромирівна",
  "Денисівна",
  "Дмитрівна",
  "Добромирівна",
  "Доброславівна",
  "Євгенівна",
  "Захарівна",
  "Захаріївна",
  "Збориславівна",
  "Звенимирівна",
  "Звениславівна",
  "Зеновіївна",
  "Зиновіївна",
  "Златомирівна",
  "Зореславівна",
  "Іванівна",
  "Ігорівна",
  "Ізяславівна",
  "Корнеліївна",
  "Корнилівна",
  "Корніївна",
  "Костянтинівна",
  "Лаврентіївна",
  "Любомирівна",
  "Макарівна",
  "Максимівна",
  "Марківна",
  "Маркіянівна",
  "Матвіївна",
  "Мечиславівна",
  "Микитівна",
  "Миколаївна",
  "Миронівна",
  "Мирославівна",
  "Михайлівна",
  "Мстиславівна",
  "Назарівна",
  "Назаріївна",
  "Натанівна",
  "Немирівна",
  "Несторівна",
  "Олегівна",
  "Олександрівна",
  "Олексіївна",
  "Олельківна",
  "Омелянівна",
  "Орестівна",
  "Орхипівна",
  "Остапівна",
  "Охрімівна",
  "Павлівна",
  "Панасівна",
  "Пантелеймонівна",
  "Петрівна",
  "Пилипівна",
  "Радимирівна",
  "Радимівна",
  "Родіонівна",
  "Романівна",
  "Ростиславівна",
  "Русланівна",
  "Святославівна",
  "Сергіївна",
  "Славутівна",
  "Станіславівна",
  "Степанівна",
  "Стефаніївна",
  "Тарасівна",
  "Тимофіївна",
  "Тихонівна",
  "Устимівна",
  "Юріївна",
  "Юхимівна",
  "Ярославівна"
];

},{}],1117:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.male_middle_name = require("./male_middle_name");
name.male_last_name = require("./male_last_name");
name.female_first_name = require("./female_first_name");
name.female_middle_name = require("./female_middle_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.title = require("./title");
name.name = require("./name");

},{"./female_first_name":1114,"./female_last_name":1115,"./female_middle_name":1116,"./male_first_name":1118,"./male_last_name":1119,"./male_middle_name":1120,"./name":1121,"./prefix":1122,"./suffix":1123,"./title":1124}],1118:[function(require,module,exports){
module["exports"] = [
  "Августин",
  "Аврелій",
  "Адам",
  "Адріян",
  "Азарій",
  "Алевтин",
  "Альберт",
  "Анастас",
  "Анастасій",
  "Анатолій",
  "Андрій",
  "Антін",
  "Антон",
  "Антоній",
  "Аркадій",
  "Арсен",
  "Арсеній",
  "Артем",
  "Архип",
  "Аскольд",
  "Афанасій",
  "Біломир",
  "Білослав",
  "Богдан",
  "Божемир",
  "Божен",
  "Болеслав",
  "Боримир",
  "Боримисл",
  "Борис",
  "Борислав",
  "Братимир",
  "Братислав",
  "Братомил",
  "Братослав",
  "Брячислав",
  "Будимир",
  "Буйтур",
  "Буревіст",
  "В’ячеслав",
  "Вадим",
  "Валентин",
  "Валерій",
  "Василь",
  "Велемир",
  "Віктор",
  "Віталій",
  "Влад",
  "Владислав",
  "Володимир",
  "Володислав",
  "Всевлад",
  "Всеволод",
  "Всеслав",
  "Гаврило",
  "Гарнослав",
  "Геннадій",
  "Георгій",
  "Герасим",
  "Гліб",
  "Гнат",
  "Гордій",
  "Горимир",
  "Горислав",
  "Градимир",
  "Григорій",
  "Далемир",
  "Данило",
  "Дарій",
  "Даромир",
  "Денис",
  "Дмитро",
  "Добромир",
  "Добромисл",
  "Доброслав",
  "Євген",
  "Єремій",
  "Захар",
  "Захарій",
  "Зборислав",
  "Звенигор",
  "Звенимир",
  "Звенислав",
  "Земислав",
  "Зеновій",
  "Зиновій",
  "Злат",
  "Златомир",
  "Зоремир",
  "Зореслав",
  "Зорян",
  "Іван",
  "Ігор",
  "Ізяслав",
  "Ілля",
  "Кий",
  "Корнелій",
  "Корнилій",
  "Корнило",
  "Корній",
  "Костянтин",
  "Кузьма",
  "Лаврентій",
  "Лаврін",
  "Лад",
  "Ладислав",
  "Ладо",
  "Ладомир",
  "Левко",
  "Листвич",
  "Лук’ян",
  "Любодар",
  "Любозар",
  "Любомир",
  "Макар",
  "Максим",
  "Мар’ян",
  "Маркіян",
  "Марко",
  "Матвій",
  "Мечислав",
  "Микита",
  "Микола",
  "Мирон",
  "Мирослав",
  "Михайло",
  "Мстислав",
  "Мусій",
  "Назар",
  "Назарій",
  "Натан",
  "Немир",
  "Нестор",
  "Олег",
  "Олександр",
  "Олексій",
  "Олелько",
  "Олесь",
  "Омелян",
  "Орест",
  "Орхип",
  "Остап",
  "Охрім",
  "Павло",
  "Панас",
  "Пантелеймон",
  "Петро",
  "Пилип",
  "Подолян",
  "Потап",
  "Радим",
  "Радимир",
  "Ратибор",
  "Ратимир",
  "Родіон",
  "Родослав",
  "Роксолан",
  "Роман",
  "Ростислав",
  "Руслан",
  "Святополк",
  "Святослав",
  "Семибор",
  "Сергій",
  "Синьоок",
  "Славолюб",
  "Славомир",
  "Славута",
  "Сніжан",
  "Сологуб",
  "Станіслав",
  "Степан",
  "Стефаній",
  "Стожар",
  "Тарас",
  "Тиміш",
  "Тимофій",
  "Тихон",
  "Тур",
  "Устим",
  "Хвалимир",
  "Хорив",
  "Чорнота",
  "Щастислав",
  "Щек",
  "Юліан",
  "Юрій",
  "Юхим",
  "Ян",
  "Ярема",
  "Яровид",
  "Яромил",
  "Яромир",
  "Ярополк",
  "Ярослав"
];

},{}],1119:[function(require,module,exports){
module["exports"] = [
  "Андрухович",
  "Бабух",
  "Балабан",
  "Балабух",
  "Балакун",
  "Балицький",
  "Бамбула",
  "Бандера",
  "Барановський",
  "Бачей",
  "Башук",
  "Бердник",
  "Білич",
  "Бондаренко",
  "Борецький",
  "Боровський",
  "Борочко",
  "Боярчук",
  "Брицький",
  "Бурмило",
  "Бутько",
  "Василин",
  "Василишин",
  "Васильківський",
  "Вергун",
  "Вередун",
  "Верещук",
  "Витребенько",
  "Вітряк",
  "Волощук",
  "Гайдук",
  "Гайовий",
  "Гайчук",
  "Галаєнко",
  "Галатей",
  "Галаціон",
  "Гаман",
  "Гамула",
  "Ганич",
  "Гарай",
  "Гарун",
  "Гладківський",
  "Гладух",
  "Глинський",
  "Гнатишин",
  "Гойко",
  "Головець",
  "Горбач",
  "Гордійчук",
  "Горовий",
  "Городоцький",
  "Гречко",
  "Григоришин",
  "Гриневецький",
  "Гриневський",
  "Гришко",
  "Громико",
  "Данилишин",
  "Данилко",
  "Демків",
  "Демчишин",
  "Дзюб’як",
  "Дзюба",
  "Дідух",
  "Дмитришин",
  "Дмитрук",
  "Довгалевський",
  "Дурдинець",
  "Євенко",
  "Євпак",
  "Ємець",
  "Єрмак",
  "Забіла",
  "Зварич",
  "Зінкевич",
  "Зленко",
  "Іванишин",
  "Іванів",
  "Іванців",
  "Калач",
  "Кандиба",
  "Карпух",
  "Каськів",
  "Кивач",
  "Коваленко",
  "Ковальський",
  "Коломієць",
  "Коман",
  "Компанієць",
  "Кононець",
  "Кордун",
  "Корецький",
  "Корнїйчук",
  "Коров’як",
  "Коцюбинський",
  "Кулинич",
  "Кульчицький",
  "Лагойда",
  "Лазірко",
  "Лановий",
  "Латаний",
  "Латанський",
  "Лахман",
  "Левадовський",
  "Ликович",
  "Линдик",
  "Ліхно",
  "Лобачевський",
  "Ломовий",
  "Луговий",
  "Луцький",
  "Луцьків",
  "Лученко",
  "Лучко",
  "Лютий",
  "Лящук",
  "Магера",
  "Мазайло",
  "Мазило",
  "Мазун",
  "Майборода",
  "Майстренко",
  "Маковецький",
  "Малкович",
  "Мамій",
  "Маринич",
  "Марієвський",
  "Марків",
  "Махно",
  "Миклашевський",
  "Миклухо",
  "Милославський",
  "Михайлюк",
  "Міняйло",
  "Могилевський",
  "Москаль",
  "Москалюк",
  "Мотрієнко",
  "Негода",
  "Ногачевський",
  "Опенько",
  "Осадко",
  "Павленко",
  "Павлишин",
  "Павлів",
  "Пагутяк",
  "Паламарчук",
  "Палій",
  "Паращук",
  "Пасічник",
  "Пендик",
  "Петик",
  "Петлюра",
  "Петренко",
  "Петрин",
  "Петришин",
  "Петрів",
  "Плаксій",
  "Погиба",
  "Поліщук",
  "Пономарів",
  "Поривай",
  "Поривайло",
  "Потебенько",
  "Потоцький",
  "Пригода",
  "Приймак",
  "Притула",
  "Прядун",
  "Розпутній",
  "Романишин",
  "Романів",
  "Ромей",
  "Роменець",
  "Ромочко",
  "Савицький",
  "Саєнко",
  "Свидригайло",
  "Семеночко",
  "Семещук",
  "Сердюк",
  "Силецький",
  "Сідлецький",
  "Сідляк",
  "Сірко",
  "Скиба",
  "Скоропадський",
  "Слободян",
  "Сосюра",
  "Сплюх",
  "Спотикач",
  "Стахів",
  "Степанець",
  "Стецьків",
  "Стигайло",
  "Сторожук",
  "Сторчак",
  "Стоян",
  "Сучак",
  "Сушко",
  "Тарасюк",
  "Тиндарей",
  "Ткаченко",
  "Третяк",
  "Троян",
  "Трублаєвський",
  "Трясило",
  "Трясун",
  "Уманець",
  "Унич",
  "Усич",
  "Федоришин",
  "Хитрово",
  "Цимбалістий",
  "Цушко",
  "Червоній",
  "Шамрило",
  "Шевченко",
  "Шестак",
  "Шиндарей",
  "Шиян",
  "Шкараба",
  "Шудрик",
  "Шумило",
  "Шупик",
  "Шухевич",
  "Щербак",
  "Юрчишин",
  "Юхно",
  "Ющик",
  "Ющук",
  "Яворівський",
  "Яловий",
  "Ялюк",
  "Янюк",
  "Ярмак",
  "Яцишин",
  "Яцьків",
  "Ящук"
];

},{}],1120:[function(require,module,exports){
module["exports"] = [
  "Адамович",
  "Азарович",
  "Алевтинович",
  "Альбертович",
  "Анастасович",
  "Анатолійович",
  "Андрійович",
  "Антонович",
  "Аркадійович",
  "Арсенійович",
  "Арсенович",
  "Артемович",
  "Архипович",
  "Аскольдович",
  "Афанасійович",
  "Білославович",
  "Богданович",
  "Божемирович",
  "Боженович",
  "Болеславович",
  "Боримирович",
  "Борисович",
  "Бориславович",
  "Братиславович",
  "В’ячеславович",
  "Вадимович",
  "Валентинович",
  "Валерійович",
  "Васильович",
  "Вікторович",
  "Віталійович",
  "Владиславович",
  "Володимирович",
  "Всеволодович",
  "Всеславович",
  "Гаврилович",
  "Герасимович",
  "Георгійович",
  "Гнатович",
  "Гордійович",
  "Григорійович",
  "Данилович",
  "Даромирович",
  "Денисович",
  "Дмитрович",
  "Добромирович",
  "Доброславович",
  "Євгенович",
  "Захарович",
  "Захарійович",
  "Збориславович",
  "Звенимирович",
  "Звениславович",
  "Зеновійович",
  "Зиновійович",
  "Златомирович",
  "Зореславович",
  "Іванович",
  "Ігорович",
  "Ізяславович",
  "Корнелійович",
  "Корнилович",
  "Корнійович",
  "Костянтинович",
  "Лаврентійович",
  "Любомирович",
  "Макарович",
  "Максимович",
  "Маркович",
  "Маркіянович",
  "Матвійович",
  "Мечиславович",
  "Микитович",
  "Миколайович",
  "Миронович",
  "Мирославович",
  "Михайлович",
  "Мстиславович",
  "Назарович",
  "Назарійович",
  "Натанович",
  "Немирович",
  "Несторович",
  "Олегович",
  "Олександрович",
  "Олексійович",
  "Олелькович",
  "Омелянович",
  "Орестович",
  "Орхипович",
  "Остапович",
  "Охрімович",
  "Павлович",
  "Панасович",
  "Пантелеймонович",
  "Петрович",
  "Пилипович",
  "Радимирович",
  "Радимович",
  "Родіонович",
  "Романович",
  "Ростиславович",
  "Русланович",
  "Святославович",
  "Сергійович",
  "Славутович",
  "Станіславович",
  "Степанович",
  "Стефанович",
  "Тарасович",
  "Тимофійович",
  "Тихонович",
  "Устимович",
  "Юрійович",
  "Юхимович",
  "Ярославович"
];

},{}],1121:[function(require,module,exports){
arguments[4][975][0].apply(exports,arguments)
},{"dup":975}],1122:[function(require,module,exports){
module["exports"] = [
  "Пан",
  "Пані"
];

},{}],1123:[function(require,module,exports){
module["exports"] = [
  "проф.",
  "доц.",
  "докт. пед. наук",
  "докт. політ. наук",
  "докт. філол. наук",
  "докт. філос. наук",
  "докт. і. наук",
  "докт. юрид. наук",
  "докт. техн. наук",
  "докт. психол. наук",
  "канд. пед. наук",
  "канд. політ. наук",
  "канд. філол. наук",
  "канд. філос. наук",
  "канд. і. наук",
  "канд. юрид. наук",
  "канд. техн. наук",
  "канд. психол. наук"
];

},{}],1124:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Головний",
    "Генеральний",
    "Провідний",
    "Національний",
    "Регіональний",
    "Обласний",
    "Районний",
    "Глобальний",
    "Міжнародний",
    "Центральний"
  ],
  "level": [
    "маркетинговий",
    "оптимізаційний",
    "страховий",
    "функціональний",
    "інтеграційний",
    "логістичний"
  ],
  "job": [
    "інженер",
    "агент",
    "адміністратор",
    "аналітик",
    "архітектор",
    "дизайнер",
    "керівник",
    "консультант",
    "координатор",
    "менеджер",
    "планувальник",
    "помічник",
    "розробник",
    "спеціаліст",
    "співробітник",
    "технік"
  ]
};

},{}],1125:[function(require,module,exports){
module["exports"] = [
  "(044) ###-##-##",
  "(050) ###-##-##",
  "(063) ###-##-##",
  "(066) ###-##-##",
  "(073) ###-##-##",
  "(091) ###-##-##",
  "(092) ###-##-##",
  "(093) ###-##-##",
  "(094) ###-##-##",
  "(095) ###-##-##",
  "(096) ###-##-##",
  "(097) ###-##-##",
  "(098) ###-##-##",
  "(099) ###-##-##"
];

},{}],1126:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":1125,"dup":197}],1127:[function(require,module,exports){
module["exports"] = [
  "#{city_root}"
];

},{}],1128:[function(require,module,exports){
module["exports"] = [
  "Bắc Giang",
  "Bắc Kạn",
  "Bắc Ninh",
  "Cao Bằng",
  "Điện Biên",
  "Hà Giang",
  "Hà Nam",
  "Hà Tây",
  "Hải Dương",
  "TP Hải Phòng",
  "Hòa Bình",
  "Hưng Yên",
  "Lai Châu",
  "Lào Cai",
  "Lạng Sơn",
  "Nam Định",
  "Ninh Bình",
  "Phú Thọ",
  "Quảng Ninh",
  "Sơn La",
  "Thái Bình",
  "Thái Nguyên",
  "Tuyên Quang",
  "Vĩnh Phúc",
  "Yên Bái",
  "TP Đà Nẵng",
  "Bình Định",
  "Đắk Lắk",
  "Đắk Nông",
  "Gia Lai",
  "Hà Tĩnh",
  "Khánh Hòa",
  "Kon Tum",
  "Nghệ An",
  "Phú Yên",
  "Quảng Bình",
  "Quảng Nam",
  "Quảng Ngãi",
  "Quảng Trị",
  "Thanh Hóa",
  "Thừa Thiên Huế",
  "TP TP. Hồ Chí Minh",
  "An Giang",
  "Bà Rịa Vũng Tàu",
  "Bạc Liêu",
  "Bến Tre",
  "Bình Dương",
  "Bình Phước",
  "Bình Thuận",
  "Cà Mau",
  "TP Cần Thơ",
  "Đồng Nai",
  "Đồng Tháp",
  "Hậu Giang",
  "Kiên Giang",
  "Lâm Đồng",
  "Long An",
  "Ninh Thuận",
  "Sóc Trăng",
  "Tây Ninh",
  "Tiền Giang",
  "Trà Vinh",
  "Vĩnh Long"
];

},{}],1129:[function(require,module,exports){
module["exports"] = [
  "Avon",
  "Bedfordshire",
  "Berkshire",
  "Borders",
  "Buckinghamshire",
  "Cambridgeshire",
  "Central",
  "Cheshire",
  "Cleveland",
  "Clwyd",
  "Cornwall",
  "County Antrim",
  "County Armagh",
  "County Down",
  "County Fermanagh",
  "County Londonderry",
  "County Tyrone",
  "Cumbria",
  "Derbyshire",
  "Devon",
  "Dorset",
  "Dumfries and Galloway",
  "Durham",
  "Dyfed",
  "East Sussex",
  "Essex",
  "Fife",
  "Gloucestershire",
  "Grampian",
  "Greater Manchester",
  "Gwent",
  "Gwynedd County",
  "Hampshire",
  "Herefordshire",
  "Hertfordshire",
  "Highlands and Islands",
  "Humberside",
  "Isle of Wight",
  "Kent",
  "Lancashire",
  "Leicestershire",
  "Lincolnshire",
  "Lothian",
  "Merseyside",
  "Mid Glamorgan",
  "Norfolk",
  "North Yorkshire",
  "Northamptonshire",
  "Northumberland",
  "Nottinghamshire",
  "Oxfordshire",
  "Powys",
  "Rutland",
  "Shropshire",
  "Somerset",
  "South Glamorgan",
  "South Yorkshire",
  "Staffordshire",
  "Strathclyde",
  "Suffolk",
  "Surrey",
  "Tayside",
  "Tyne and Wear",
  "Việt Nam",
  "Warwickshire",
  "West Glamorgan",
  "West Midlands",
  "West Sussex",
  "West Yorkshire",
  "Wiltshire",
  "Worcestershire"
];

},{}],1130:[function(require,module,exports){
module["exports"] = [
  "Việt Nam"
];

},{}],1131:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_root = require("./city_root");
address.city = require("./city");
address.county = require("./county");
address.default_country = require("./default_country");

},{"./city":1127,"./city_root":1128,"./county":1129,"./default_country":1130}],1132:[function(require,module,exports){
arguments[4][452][0].apply(exports,arguments)
},{"dup":452}],1133:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"./formats":1132,"dup":256}],1134:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.prefix = require("./prefix");
company.name = require("./name");

},{"./name":1135,"./prefix":1136}],1135:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.last_name}"
];

},{}],1136:[function(require,module,exports){
module["exports"] = [
  "Công ty",
  "Cty TNHH",
  "Cty",
  "Cửa hàng",
  "Trung tâm",
  "Chi nhánh"
];

},{}],1137:[function(require,module,exports){
var vi = {};
module['exports'] = vi;
vi.title = "Vietnamese";
vi.address = require("./address");
vi.internet = require("./internet");
vi.phone_number = require("./phone_number");
vi.cell_phone = require("./cell_phone");
vi.name = require("./name");
vi.company = require("./company");
vi.lorem = require("./lorem");

},{"./address":1131,"./cell_phone":1133,"./company":1134,"./internet":1139,"./lorem":1140,"./name":1143,"./phone_number":1147}],1138:[function(require,module,exports){
module["exports"] = [
  "com",
  "net",
  "info",
  "vn",
  "com.vn"
];

},{}],1139:[function(require,module,exports){
arguments[4][315][0].apply(exports,arguments)
},{"./domain_suffix":1138,"dup":315}],1140:[function(require,module,exports){
arguments[4][265][0].apply(exports,arguments)
},{"./words":1141,"dup":265}],1141:[function(require,module,exports){
module["exports"] = [
  "đã",
  "đang",
  "ừ",
  "ờ",
  "á",
  "không",
  "biết",
  "gì",
  "hết",
  "đâu",
  "nha",
  "thế",
  "thì",
  "là",
  "đánh",
  "đá",
  "đập",
  "phá",
  "viết",
  "vẽ",
  "tô",
  "thuê",
  "mướn",
  "mượn",
  "mua",
  "một",
  "hai",
  "ba",
  "bốn",
  "năm",
  "sáu",
  "bảy",
  "tám",
  "chín",
  "mười",
  "thôi",
  "việc",
  "nghỉ",
  "làm",
  "nhà",
  "cửa",
  "xe",
  "đạp",
  "ác",
  "độc",
  "khoảng",
  "khoan",
  "thuyền",
  "tàu",
  "bè",
  "lầu",
  "xanh",
  "đỏ",
  "tím",
  "vàng",
  "kim",
  "chỉ",
  "khâu",
  "may",
  "vá",
  "em",
  "anh",
  "yêu",
  "thương",
  "thích",
  "con",
  "cái",
  "bàn",
  "ghế",
  "tủ",
  "quần",
  "áo",
  "nón",
  "dép",
  "giày",
  "lỗi",
  "được",
  "ghét",
  "giết",
  "chết",
  "hết",
  "tôi",
  "bạn",
  "tui",
  "trời",
  "trăng",
  "mây",
  "gió",
  "máy",
  "hàng",
  "hóa",
  "leo",
  "núi",
  "bơi",
  "biển",
  "chìm",
  "xuồng",
  "nước",
  "ngọt",
  "ruộng",
  "đồng",
  "quê",
  "hương"
];

},{}],1142:[function(require,module,exports){
module["exports"] = [
  "Phạm",
  "Nguyễn",
  "Trần",
  "Lê",
  "Lý",
  "Hoàng",
  "Phan",
  "Vũ",
  "Tăng",
  "Đặng",
  "Bùi",
  "Đỗ",
  "Hồ",
  "Ngô",
  "Dương",
  "Đào",
  "Đoàn",
  "Vương",
  "Trịnh",
  "Đinh",
  "Lâm",
  "Phùng",
  "Mai",
  "Tô",
  "Trương",
  "Hà"
];

},{}],1143:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.name = require("./name");

},{"./first_name":1142,"./last_name":1144,"./name":1145}],1144:[function(require,module,exports){
module["exports"] = [
  "Nam",
  "Trung",
  "Thanh",
  "Thị",
  "Văn",
  "Dương",
  "Tăng",
  "Quốc",
  "Như",
  "Phạm",
  "Nguyễn",
  "Trần",
  "Lê",
  "Lý",
  "Hoàng",
  "Phan",
  "Vũ",
  "Tăng",
  "Đặng",
  "Bùi",
  "Đỗ",
  "Hồ",
  "Ngô",
  "Dương",
  "Đào",
  "Đoàn",
  "Vương",
  "Trịnh",
  "Đinh",
  "Lâm",
  "Phùng",
  "Mai",
  "Tô",
  "Trương",
  "Hà",
  "Vinh",
  "Nhung",
  "Hòa",
  "Tiến",
  "Tâm",
  "Bửu",
  "Loan",
  "Hiền",
  "Hải",
  "Vân",
  "Kha",
  "Minh",
  "Nhân",
  "Triệu",
  "Tuân",
  "Hữu",
  "Đức",
  "Phú",
  "Khoa",
  "Thắgn",
  "Sơn",
  "Dung",
  "Tú",
  "Trinh",
  "Thảo",
  "Sa",
  "Kim",
  "Long",
  "Thi",
  "Cường",
  "Ngọc",
  "Sinh",
  "Khang",
  "Phong",
  "Thắm",
  "Thu",
  "Thủy",
  "Nhàn"
];

},{}],1145:[function(require,module,exports){
module["exports"] = [
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name} #{last_name}"
];

},{}],1146:[function(require,module,exports){
arguments[4][457][0].apply(exports,arguments)
},{"dup":457}],1147:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":1146,"dup":197}],1148:[function(require,module,exports){
module["exports"] = [
  "#####",
  "####",
  "###",
  "##",
  "#"
];

},{}],1149:[function(require,module,exports){
arguments[4][1023][0].apply(exports,arguments)
},{"dup":1023}],1150:[function(require,module,exports){
module["exports"] = [
  "长",
  "上",
  "南",
  "西",
  "北",
  "诸",
  "宁",
  "珠",
  "武",
  "衡",
  "成",
  "福",
  "厦",
  "贵",
  "吉",
  "海",
  "太",
  "济",
  "安",
  "吉",
  "包"
];

},{}],1151:[function(require,module,exports){
module["exports"] = [
  "沙市",
  "京市",
  "宁市",
  "安市",
  "乡县",
  "海市",
  "码市",
  "汉市",
  "阳市",
  "都市",
  "州市",
  "门市",
  "阳市",
  "口市",
  "原市",
  "南市",
  "徽市",
  "林市",
  "头市"
];

},{}],1152:[function(require,module,exports){
module["exports"] = [
  "中国"
];

},{}],1153:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":1148,"./city":1149,"./city_prefix":1150,"./city_suffix":1151,"./default_country":1152,"./postcode":1154,"./state":1155,"./state_abbr":1156,"./street_address":1157,"./street_name":1158,"./street_suffix":1159}],1154:[function(require,module,exports){
arguments[4][946][0].apply(exports,arguments)
},{"dup":946}],1155:[function(require,module,exports){
module["exports"] = [
  "北京市",
  "上海市",
  "天津市",
  "重庆市",
  "黑龙江省",
  "吉林省",
  "辽宁省",
  "内蒙古",
  "河北省",
  "新疆",
  "甘肃省",
  "青海省",
  "陕西省",
  "宁夏",
  "河南省",
  "山东省",
  "山西省",
  "安徽省",
  "湖北省",
  "湖南省",
  "江苏省",
  "四川省",
  "贵州省",
  "云南省",
  "广西省",
  "西藏",
  "浙江省",
  "江西省",
  "广东省",
  "福建省",
  "台湾省",
  "海南省",
  "香港",
  "澳门"
];

},{}],1156:[function(require,module,exports){
module["exports"] = [
  "京",
  "沪",
  "津",
  "渝",
  "黑",
  "吉",
  "辽",
  "蒙",
  "冀",
  "新",
  "甘",
  "青",
  "陕",
  "宁",
  "豫",
  "鲁",
  "晋",
  "皖",
  "鄂",
  "湘",
  "苏",
  "川",
  "黔",
  "滇",
  "桂",
  "藏",
  "浙",
  "赣",
  "粤",
  "闽",
  "台",
  "琼",
  "港",
  "澳"
];

},{}],1157:[function(require,module,exports){
module["exports"] = [
  "#{street_name}#{building_number}号"
];

},{}],1158:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name}#{street_suffix}"
];

},{}],1159:[function(require,module,exports){
module["exports"] = [
  "巷",
  "街",
  "路",
  "桥",
  "侬",
  "旁",
  "中心",
  "栋"
];

},{}],1160:[function(require,module,exports){
var zh_CN = {};
module['exports'] = zh_CN;
zh_CN.title = "Chinese";
zh_CN.address = require("./address");
zh_CN.name = require("./name");
zh_CN.phone_number = require("./phone_number");

},{"./address":1153,"./name":1162,"./phone_number":1166}],1161:[function(require,module,exports){
module["exports"] = [
  "王",
  "李",
  "张",
  "刘",
  "陈",
  "杨",
  "黄",
  "吴",
  "赵",
  "周",
  "徐",
  "孙",
  "马",
  "朱",
  "胡",
  "林",
  "郭",
  "何",
  "高",
  "罗",
  "郑",
  "梁",
  "谢",
  "宋",
  "唐",
  "许",
  "邓",
  "冯",
  "韩",
  "曹",
  "曾",
  "彭",
  "萧",
  "蔡",
  "潘",
  "田",
  "董",
  "袁",
  "于",
  "余",
  "叶",
  "蒋",
  "杜",
  "苏",
  "魏",
  "程",
  "吕",
  "丁",
  "沈",
  "任",
  "姚",
  "卢",
  "傅",
  "钟",
  "姜",
  "崔",
  "谭",
  "廖",
  "范",
  "汪",
  "陆",
  "金",
  "石",
  "戴",
  "贾",
  "韦",
  "夏",
  "邱",
  "方",
  "侯",
  "邹",
  "熊",
  "孟",
  "秦",
  "白",
  "江",
  "阎",
  "薛",
  "尹",
  "段",
  "雷",
  "黎",
  "史",
  "龙",
  "陶",
  "贺",
  "顾",
  "毛",
  "郝",
  "龚",
  "邵",
  "万",
  "钱",
  "严",
  "赖",
  "覃",
  "洪",
  "武",
  "莫",
  "孔"
];

},{}],1162:[function(require,module,exports){
arguments[4][1143][0].apply(exports,arguments)
},{"./first_name":1161,"./last_name":1163,"./name":1164,"dup":1143}],1163:[function(require,module,exports){
module["exports"] = [
  "绍齐",
  "博文",
  "梓晨",
  "胤祥",
  "瑞霖",
  "明哲",
  "天翊",
  "凯瑞",
  "健雄",
  "耀杰",
  "潇然",
  "子涵",
  "越彬",
  "钰轩",
  "智辉",
  "致远",
  "俊驰",
  "雨泽",
  "烨磊",
  "晟睿",
  "文昊",
  "修洁",
  "黎昕",
  "远航",
  "旭尧",
  "鸿涛",
  "伟祺",
  "荣轩",
  "越泽",
  "浩宇",
  "瑾瑜",
  "皓轩",
  "擎苍",
  "擎宇",
  "志泽",
  "子轩",
  "睿渊",
  "弘文",
  "哲瀚",
  "雨泽",
  "楷瑞",
  "建辉",
  "晋鹏",
  "天磊",
  "绍辉",
  "泽洋",
  "鑫磊",
  "鹏煊",
  "昊强",
  "伟宸",
  "博超",
  "君浩",
  "子骞",
  "鹏涛",
  "炎彬",
  "鹤轩",
  "越彬",
  "风华",
  "靖琪",
  "明辉",
  "伟诚",
  "明轩",
  "健柏",
  "修杰",
  "志泽",
  "弘文",
  "峻熙",
  "嘉懿",
  "煜城",
  "懿轩",
  "烨伟",
  "苑博",
  "伟泽",
  "熠彤",
  "鸿煊",
  "博涛",
  "烨霖",
  "烨华",
  "煜祺",
  "智宸",
  "正豪",
  "昊然",
  "明杰",
  "立诚",
  "立轩",
  "立辉",
  "峻熙",
  "弘文",
  "熠彤",
  "鸿煊",
  "烨霖",
  "哲瀚",
  "鑫鹏",
  "昊天",
  "思聪",
  "展鹏",
  "笑愚",
  "志强",
  "炫明",
  "雪松",
  "思源",
  "智渊",
  "思淼",
  "晓啸",
  "天宇",
  "浩然",
  "文轩",
  "鹭洋",
  "振家",
  "乐驹",
  "晓博",
  "文博",
  "昊焱",
  "立果",
  "金鑫",
  "锦程",
  "嘉熙",
  "鹏飞",
  "子默",
  "思远",
  "浩轩",
  "语堂",
  "聪健",
  "明",
  "文",
  "果",
  "思",
  "鹏",
  "驰",
  "涛",
  "琪",
  "浩",
  "航",
  "彬"
];

},{}],1164:[function(require,module,exports){
module["exports"] = [
  "#{first_name}#{last_name}"
];

},{}],1165:[function(require,module,exports){
module["exports"] = [
  "###-########",
  "####-########",
  "###########"
];

},{}],1166:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":1165,"dup":197}],1167:[function(require,module,exports){
arguments[4][608][0].apply(exports,arguments)
},{"dup":608}],1168:[function(require,module,exports){
arguments[4][1023][0].apply(exports,arguments)
},{"dup":1023}],1169:[function(require,module,exports){
module["exports"] = [
  "臺北",
  "新北",
  "桃園",
  "臺中",
  "臺南",
  "高雄",
  "基隆",
  "新竹",
  "嘉義",
  "苗栗",
  "彰化",
  "南投",
  "雲林",
  "屏東",
  "宜蘭",
  "花蓮",
  "臺東",
  "澎湖",
  "金門",
  "連江"
];

},{}],1170:[function(require,module,exports){
module["exports"] = [
  "縣",
  "市"
];

},{}],1171:[function(require,module,exports){
module["exports"] = [
  "Taiwan (R.O.C.)"
];

},{}],1172:[function(require,module,exports){
arguments[4][1153][0].apply(exports,arguments)
},{"./building_number":1167,"./city":1168,"./city_prefix":1169,"./city_suffix":1170,"./default_country":1171,"./postcode":1173,"./state":1174,"./state_abbr":1175,"./street_address":1176,"./street_name":1177,"./street_suffix":1178,"dup":1153}],1173:[function(require,module,exports){
arguments[4][946][0].apply(exports,arguments)
},{"dup":946}],1174:[function(require,module,exports){
module["exports"] = [
  "福建省",
  "台灣省"
];

},{}],1175:[function(require,module,exports){
module["exports"] = [
  "北",
  "新北",
  "桃",
  "中",
  "南",
  "高",
  "基",
  "竹市",
  "嘉市",
  "竹縣",
  "苗",
  "彰",
  "投",
  "雲",
  "嘉縣",
  "宜",
  "花",
  "東",
  "澎",
  "金",
  "馬"
];

},{}],1176:[function(require,module,exports){
module["exports"] = [
  "#{street_name}#{building_number}號"
];

},{}],1177:[function(require,module,exports){
arguments[4][1158][0].apply(exports,arguments)
},{"dup":1158}],1178:[function(require,module,exports){
module["exports"] = [
  "街",
  "路",
  "北路",
  "南路",
  "東路",
  "西路"
];

},{}],1179:[function(require,module,exports){
var zh_TW = {};
module['exports'] = zh_TW;
zh_TW.title = "Chinese (Taiwan)";
zh_TW.address = require("./address");
zh_TW.name = require("./name");
zh_TW.phone_number = require("./phone_number");

},{"./address":1172,"./name":1181,"./phone_number":1185}],1180:[function(require,module,exports){
module["exports"] = [
  "王",
  "李",
  "張",
  "劉",
  "陳",
  "楊",
  "黃",
  "吳",
  "趙",
  "週",
  "徐",
  "孫",
  "馬",
  "朱",
  "胡",
  "林",
  "郭",
  "何",
  "高",
  "羅",
  "鄭",
  "梁",
  "謝",
  "宋",
  "唐",
  "許",
  "鄧",
  "馮",
  "韓",
  "曹",
  "曾",
  "彭",
  "蕭",
  "蔡",
  "潘",
  "田",
  "董",
  "袁",
  "於",
  "餘",
  "葉",
  "蔣",
  "杜",
  "蘇",
  "魏",
  "程",
  "呂",
  "丁",
  "沈",
  "任",
  "姚",
  "盧",
  "傅",
  "鐘",
  "姜",
  "崔",
  "譚",
  "廖",
  "範",
  "汪",
  "陸",
  "金",
  "石",
  "戴",
  "賈",
  "韋",
  "夏",
  "邱",
  "方",
  "侯",
  "鄒",
  "熊",
  "孟",
  "秦",
  "白",
  "江",
  "閻",
  "薛",
  "尹",
  "段",
  "雷",
  "黎",
  "史",
  "龍",
  "陶",
  "賀",
  "顧",
  "毛",
  "郝",
  "龔",
  "邵",
  "萬",
  "錢",
  "嚴",
  "賴",
  "覃",
  "洪",
  "武",
  "莫",
  "孔"
];

},{}],1181:[function(require,module,exports){
arguments[4][1143][0].apply(exports,arguments)
},{"./first_name":1180,"./last_name":1182,"./name":1183,"dup":1143}],1182:[function(require,module,exports){
module["exports"] = [
  "紹齊",
  "博文",
  "梓晨",
  "胤祥",
  "瑞霖",
  "明哲",
  "天翊",
  "凱瑞",
  "健雄",
  "耀傑",
  "瀟然",
  "子涵",
  "越彬",
  "鈺軒",
  "智輝",
  "致遠",
  "俊馳",
  "雨澤",
  "燁磊",
  "晟睿",
  "文昊",
  "修潔",
  "黎昕",
  "遠航",
  "旭堯",
  "鴻濤",
  "偉祺",
  "榮軒",
  "越澤",
  "浩宇",
  "瑾瑜",
  "皓軒",
  "擎蒼",
  "擎宇",
  "志澤",
  "子軒",
  "睿淵",
  "弘文",
  "哲瀚",
  "雨澤",
  "楷瑞",
  "建輝",
  "晉鵬",
  "天磊",
  "紹輝",
  "澤洋",
  "鑫磊",
  "鵬煊",
  "昊強",
  "偉宸",
  "博超",
  "君浩",
  "子騫",
  "鵬濤",
  "炎彬",
  "鶴軒",
  "越彬",
  "風華",
  "靖琪",
  "明輝",
  "偉誠",
  "明軒",
  "健柏",
  "修傑",
  "志澤",
  "弘文",
  "峻熙",
  "嘉懿",
  "煜城",
  "懿軒",
  "燁偉",
  "苑博",
  "偉澤",
  "熠彤",
  "鴻煊",
  "博濤",
  "燁霖",
  "燁華",
  "煜祺",
  "智宸",
  "正豪",
  "昊然",
  "明杰",
  "立誠",
  "立軒",
  "立輝",
  "峻熙",
  "弘文",
  "熠彤",
  "鴻煊",
  "燁霖",
  "哲瀚",
  "鑫鵬",
  "昊天",
  "思聰",
  "展鵬",
  "笑愚",
  "志強",
  "炫明",
  "雪松",
  "思源",
  "智淵",
  "思淼",
  "曉嘯",
  "天宇",
  "浩然",
  "文軒",
  "鷺洋",
  "振家",
  "樂駒",
  "曉博",
  "文博",
  "昊焱",
  "立果",
  "金鑫",
  "錦程",
  "嘉熙",
  "鵬飛",
  "子默",
  "思遠",
  "浩軒",
  "語堂",
  "聰健"
];

},{}],1183:[function(require,module,exports){
arguments[4][1164][0].apply(exports,arguments)
},{"dup":1164}],1184:[function(require,module,exports){
module["exports"] = [
  "0#-#######",
  "02-########",
  "09##-######"
];

},{}],1185:[function(require,module,exports){
arguments[4][197][0].apply(exports,arguments)
},{"./formats":1184,"dup":197}],1186:[function(require,module,exports){

/**
 *
 * @namespace faker.lorem
 */
var Lorem = function (faker) {
  var self = this;
  var Helpers = faker.helpers;

  /**
   * word
   *
   * @method faker.lorem.word
   * @param {number} num
   */
  self.word = function (num) {
    return faker.random.arrayElement(faker.definitions.lorem.words);
  };

  /**
   * generates a space separated list of words
   *
   * @method faker.lorem.words
   * @param {number} num number of words, defaults to 3
   */
  self.words = function (num) {
      if (typeof num == 'undefined') { num = 3; }
      var words = [];
      for (var i = 0; i < num; i++) {
        words.push(faker.lorem.word());
      }
      return words.join(' ');
  };

  /**
   * sentence
   *
   * @method faker.lorem.sentence
   * @param {number} wordCount defaults to a random number between 3 and 10
   * @param {number} range
   */
  self.sentence = function (wordCount, range) {
      if (typeof wordCount == 'undefined') { wordCount = faker.random.number({ min: 3, max: 10 }); }
      // if (typeof range == 'undefined') { range = 7; }

      // strange issue with the node_min_test failing for captialize, please fix and add faker.lorem.back
      //return  faker.lorem.words(wordCount + Helpers.randomNumber(range)).join(' ').capitalize();

      var sentence = faker.lorem.words(wordCount);
      return sentence.charAt(0).toUpperCase() + sentence.slice(1) + '.';
  };

  /**
   * slug
   *
   * @method faker.lorem.slug
   * @param {number} wordCount number of words, defaults to 3
   */
  self.slug = function (wordCount) {
      var words = faker.lorem.words(wordCount);
      return Helpers.slugify(words);
  };

  /**
   * sentences
   *
   * @method faker.lorem.sentences
   * @param {number} sentenceCount defautls to a random number between 2 and 6
   * @param {string} separator defaults to `' '`
   */
  self.sentences = function (sentenceCount, separator) {
      if (typeof sentenceCount === 'undefined') { sentenceCount = faker.random.number({ min: 2, max: 6 });}
      if (typeof separator == 'undefined') { separator = " "; }
      var sentences = [];
      for (sentenceCount; sentenceCount > 0; sentenceCount--) {
        sentences.push(faker.lorem.sentence());
      }
      return sentences.join(separator);
  };

  /**
   * paragraph
   *
   * @method faker.lorem.paragraph
   * @param {number} sentenceCount defaults to 3
   */
  self.paragraph = function (sentenceCount) {
      if (typeof sentenceCount == 'undefined') { sentenceCount = 3; }
      return faker.lorem.sentences(sentenceCount + faker.random.number(3));
  };

  /**
   * paragraphs
   *
   * @method faker.lorem.paragraphs
   * @param {number} paragraphCount defaults to 3
   * @param {string} separator defaults to `'\n \r'`
   */
  self.paragraphs = function (paragraphCount, separator) {
    if (typeof separator === "undefined") {
      separator = "\n \r";
    }
    if (typeof paragraphCount == 'undefined') { paragraphCount = 3; }
    var paragraphs = [];
    for (paragraphCount; paragraphCount > 0; paragraphCount--) {
        paragraphs.push(faker.lorem.paragraph());
    }
    return paragraphs.join(separator);
  }

  /**
   * returns random text based on a random lorem method
   *
   * @method faker.lorem.text
   * @param {number} times
   */
  self.text = function loremText (times) {
    var loremMethods = ['lorem.word', 'lorem.words', 'lorem.sentence', 'lorem.sentences', 'lorem.paragraph', 'lorem.paragraphs', 'lorem.lines'];
    var randomLoremMethod = faker.random.arrayElement(loremMethods);
    return faker.fake('{{' + randomLoremMethod + '}}');
  };

  /**
   * returns lines of lorem separated by `'\n'`
   *
   * @method faker.lorem.lines
   * @param {number} lineCount defaults to a random number between 1 and 5
   */
  self.lines = function lines (lineCount) {
    if (typeof lineCount === 'undefined') { lineCount = faker.random.number({ min: 1, max: 5 });}
    return faker.lorem.sentences(lineCount, '\n')
  };

  return self;
};


module["exports"] = Lorem;

},{}],1187:[function(require,module,exports){
/**
 *
 * @namespace faker.name
 */
function Name (faker) {

  /**
   * firstName
   *
   * @method firstName
   * @param {mixed} gender
   * @memberof faker.name
   */
  this.firstName = function (gender) {
    if (typeof faker.definitions.name.male_first_name !== "undefined" && typeof faker.definitions.name.female_first_name !== "undefined") {
      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,
      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      if (gender === 0) {
        return faker.random.arrayElement(faker.locales[faker.locale].name.male_first_name)
      } else {
        return faker.random.arrayElement(faker.locales[faker.locale].name.female_first_name);
      }
    }
    return faker.random.arrayElement(faker.definitions.name.first_name);
  };

  /**
   * lastName
   *
   * @method lastName
   * @param {mixed} gender
   * @memberof faker.name
   */
  this.lastName = function (gender) {
    if (typeof faker.definitions.name.male_last_name !== "undefined" && typeof faker.definitions.name.female_last_name !== "undefined") {
      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian
      // see above comment of firstName method
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      if (gender === 0) {
        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);
      } else {
        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);
      }
    }
    return faker.random.arrayElement(faker.definitions.name.last_name);
  };

  /**
   * findName
   *
   * @method findName
   * @param {string} firstName
   * @param {string} lastName
   * @param {mixed} gender
   * @memberof faker.name
   */
  this.findName = function (firstName, lastName, gender) {
      var r = faker.random.number(8);
      var prefix, suffix;
      // in particular locales first and last names split by gender,
      // thus we keep consistency by passing 0 as male and 1 as female
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      firstName = firstName || faker.name.firstName(gender);
      lastName = lastName || faker.name.lastName(gender);
      switch (r) {
      case 0:
          prefix = faker.name.prefix(gender);
          if (prefix) {
              return prefix + " " + firstName + " " + lastName;
          }
      case 1:
          suffix = faker.name.suffix(gender);
          if (suffix) {
              return firstName + " " + lastName + " " + suffix;
          }
      }

      return firstName + " " + lastName;
  };

  /**
   * jobTitle
   *
   * @method jobTitle
   * @memberof faker.name
   */
  this.jobTitle = function () {
    return  faker.name.jobDescriptor() + " " +
      faker.name.jobArea() + " " +
      faker.name.jobType();
  };
  
  /**
   * prefix
   *
   * @method prefix
   * @param {mixed} gender
   * @memberof faker.name
   */
  this.prefix = function (gender) {
    if (typeof faker.definitions.name.male_prefix !== "undefined" && typeof faker.definitions.name.female_prefix !== "undefined") {
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      if (gender === 0) {
        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);
      } else {
        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);
      }
    }
    return faker.random.arrayElement(faker.definitions.name.prefix);
  };

  /**
   * suffix
   *
   * @method suffix
   * @memberof faker.name
   */
  this.suffix = function () {
      return faker.random.arrayElement(faker.definitions.name.suffix);
  };

  /**
   * title
   *
   * @method title
   * @memberof faker.name
   */
  this.title = function() {
      var descriptor  = faker.random.arrayElement(faker.definitions.name.title.descriptor),
          level       = faker.random.arrayElement(faker.definitions.name.title.level),
          job         = faker.random.arrayElement(faker.definitions.name.title.job);

      return descriptor + " " + level + " " + job;
  };

  /**
   * jobDescriptor
   *
   * @method jobDescriptor
   * @memberof faker.name
   */
  this.jobDescriptor = function () {
    return faker.random.arrayElement(faker.definitions.name.title.descriptor);
  };

  /**
   * jobArea
   *
   * @method jobArea
   * @memberof faker.name
   */
  this.jobArea = function () {
    return faker.random.arrayElement(faker.definitions.name.title.level);
  };

  /**
   * jobType
   *
   * @method jobType
   * @memberof faker.name
   */
  this.jobType = function () {
    return faker.random.arrayElement(faker.definitions.name.title.job);
  };

}

module['exports'] = Name;

},{}],1188:[function(require,module,exports){
/**
 *
 * @namespace faker.phone
 */
var Phone = function (faker) {
  var self = this;

  /**
   * phoneNumber
   *
   * @method faker.phone.phoneNumber
   * @param {string} format
   */
  self.phoneNumber = function (format) {
      format = format || faker.phone.phoneFormats();
      return faker.helpers.replaceSymbolWithNumber(format);
  };

  // FIXME: this is strange passing in an array index.
  /**
   * phoneNumberFormat
   *
   * @method faker.phone.phoneFormatsArrayIndex
   * @param phoneFormatsArrayIndex
   */
  self.phoneNumberFormat = function (phoneFormatsArrayIndex) {
      phoneFormatsArrayIndex = phoneFormatsArrayIndex || 0;
      return faker.helpers.replaceSymbolWithNumber(faker.definitions.phone_number.formats[phoneFormatsArrayIndex]);
  };

  /**
   * phoneFormats
   *
   * @method faker.phone.phoneFormats
   */
  self.phoneFormats = function () {
    return faker.random.arrayElement(faker.definitions.phone_number.formats);
  };
  
  return self;

};

module['exports'] = Phone;
},{}],1189:[function(require,module,exports){
var mersenne = require('../vendor/mersenne');

/**
 *
 * @namespace faker.random
 */
function Random (faker, seed) {
  // Use a user provided seed if it exists
  if (seed) {
    if (Array.isArray(seed) && seed.length) {
      mersenne.seed_array(seed);
    }
    else {
      mersenne.seed(seed);
    }
  }
  /**
   * returns a single random number based on a max number or range
   *
   * @method faker.random.number
   * @param {mixed} options
   */
  this.number = function (options) {

    if (typeof options === "number") {
      options = {
        max: options
      };
    }

    options = options || {};

    if (typeof options.min === "undefined") {
      options.min = 0;
    }

    if (typeof options.max === "undefined") {
      options.max = 99999;
    }
    if (typeof options.precision === "undefined") {
      options.precision = 1;
    }

    // Make the range inclusive of the max value
    var max = options.max;
    if (max >= 0) {
      max += options.precision;
    }

    var randomNumber = options.precision * Math.floor(
      mersenne.rand(max / options.precision, options.min / options.precision));

    return randomNumber;

  }

  /**
   * takes an array and returns a random element of the array
   *
   * @method faker.random.arrayElement
   * @param {array} array
   */
  this.arrayElement = function (array) {
      array = array || ["a", "b", "c"];
      var r = faker.random.number({ max: array.length - 1 });
      return array[r];
  }

  /**
   * takes an object and returns the randomly key or value
   *
   * @method faker.random.objectElement
   * @param {object} object
   * @param {mixed} field
   */
  this.objectElement = function (object, field) {
      object = object || { "foo": "bar", "too": "car" };
      var array = Object.keys(object);
      var key = faker.random.arrayElement(array);

      return field === "key" ? key : object[key];
  }

  /**
   * uuid
   *
   * @method faker.random.uuid
   */
  this.uuid = function () {
      var self = this;
      var RFC4122_TEMPLATE = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';
      var replacePlaceholders = function (placeholder) {
          var random = self.number({ min: 0, max: 15 });
          var value = placeholder == 'x' ? random : (random &0x3 | 0x8);
          return value.toString(16);
      };
      return RFC4122_TEMPLATE.replace(/[xy]/g, replacePlaceholders);
  }

  /**
   * boolean
   *
   * @method faker.random.boolean
   */
  this.boolean = function () {
      return !!faker.random.number(1)
  }

  // TODO: have ability to return specific type of word? As in: noun, adjective, verb, etc
  /**
   * word
   *
   * @method faker.random.word
   * @param {string} type
   */
  this.word = function randomWord (type) {

    var wordMethods = [
    'commerce.department',
    'commerce.productName',
    'commerce.productAdjective',
    'commerce.productMaterial',
    'commerce.product',
    'commerce.color',

    'company.catchPhraseAdjective',
    'company.catchPhraseDescriptor',
    'company.catchPhraseNoun',
    'company.bsAdjective',
    'company.bsBuzz',
    'company.bsNoun',
    'address.streetSuffix',
    'address.county',
    'address.country',
    'address.state',

    'finance.accountName',
    'finance.transactionType',
    'finance.currencyName',

    'hacker.noun',
    'hacker.verb',
    'hacker.adjective',
    'hacker.ingverb',
    'hacker.abbreviation',

    'name.jobDescriptor',
    'name.jobArea',
    'name.jobType'];

    // randomly pick from the many faker methods that can generate words
    var randomWordMethod = faker.random.arrayElement(wordMethods);
    return faker.fake('{{' + randomWordMethod + '}}');

  }

  /**
   * randomWords
   *
   * @method faker.random.words
   * @param {number} count defaults to a random value between 1 and 3
   */
  this.words = function randomWords (count) {
    var words = [];
    if (typeof count === "undefined") {
      count = faker.random.number({min:1, max: 3});
    }
    for (var i = 0; i<count; i++) {
      words.push(faker.random.word());
    }
    return words.join(' ');
  }

  /**
   * locale
   *
   * @method faker.random.image
   */
  this.image = function randomImage () {
    return faker.image.image();
  }

  /**
   * locale
   *
   * @method faker.random.locale
   */
  this.locale = function randomLocale () {
    return faker.random.arrayElement(Object.keys(faker.locales));
  };

  /**
   * alphaNumeric
   *
   * @method faker.random.alphaNumeric
   * @param {number} count defaults to 1
   */
  this.alphaNumeric = function alphaNumeric(count) {
    if (typeof count === "undefined") {
      count = 1;
    }

    var wholeString = "";
    for(var i = 0; i < count; i++) {
      wholeString += faker.random.arrayElement(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]);
    }

    return wholeString;
  };

  return this;

}

module['exports'] = Random;

},{"../vendor/mersenne":1191}],1190:[function(require,module,exports){
// generates fake data for many computer systems properties

/**
 *
 * @namespace faker.system
 */
function System (faker) {

  /**
   * generates a file name with extension or optional type
   *
   * @method faker.system.fileName
   * @param {string} ext
   * @param {string} type
   */
  this.fileName = function (ext, type) {
    var str = faker.fake("{{random.words}}.{{system.fileExt}}");
    str = str.replace(/ /g, '_');
    str = str.replace(/\,/g, '_');
    str = str.replace(/\-/g, '_');
    str = str.replace(/\\/g, '_');
    str = str.replace(/\//g, '_');
    str = str.toLowerCase();
    return str;
  };

  /**
   * commonFileName
   *
   * @method faker.system.commonFileName
   * @param {string} ext
   * @param {string} type
   */
  this.commonFileName = function (ext, type) {
    var str = faker.random.words() + "." + (ext || faker.system.commonFileExt());
    str = str.replace(/ /g, '_');
    str = str.replace(/\,/g, '_');
    str = str.replace(/\-/g, '_');
    str = str.replace(/\\/g, '_');
    str = str.replace(/\//g, '_');
    str = str.toLowerCase();
    return str;
  };

  /**
   * mimeType
   *
   * @method faker.system.mimeType
   */
  this.mimeType = function () {
    return faker.random.arrayElement(Object.keys(faker.definitions.system.mimeTypes));
  };

  /**
   * returns a commonly used file type
   *
   * @method faker.system.commonFileType
   */
  this.commonFileType = function () {
    var types = ['video', 'audio', 'image', 'text', 'application'];
    return faker.random.arrayElement(types)
  };

  /**
   * returns a commonly used file extension based on optional type
   *
   * @method faker.system.commonFileExt
   * @param {string} type
   */
  this.commonFileExt = function (type) {
    var types = [
      'application/pdf',
      'audio/mpeg',
      'audio/wav',
      'image/png',
      'image/jpeg',
      'image/gif',
      'video/mp4',
      'video/mpeg',
      'text/html'
    ];
    return faker.system.fileExt(faker.random.arrayElement(types));
  };


  /**
   * returns any file type available as mime-type
   *
   * @method faker.system.fileType
   */
  this.fileType = function () {
    var types = [];
    var mimes = faker.definitions.system.mimeTypes;
    Object.keys(mimes).forEach(function(m){
      var parts = m.split('/');
      if (types.indexOf(parts[0]) === -1) {
        types.push(parts[0]);
      }
    });
    return faker.random.arrayElement(types);
  };

  /**
   * fileExt
   *
   * @method faker.system.fileExt
   * @param {string} mimeType
   */
  this.fileExt = function (mimeType) {
    var exts = [];
    var mimes = faker.definitions.system.mimeTypes;

    // get specific ext by mime-type
    if (typeof mimes[mimeType] === "object") {
      return faker.random.arrayElement(mimes[mimeType].extensions);
    }

    // reduce mime-types to those with file-extensions
    Object.keys(mimes).forEach(function(m){
      if (mimes[m].extensions instanceof Array) {
        mimes[m].extensions.forEach(function(ext){
          exts.push(ext)
        });
      }
    });
    return faker.random.arrayElement(exts);
  };

  /**
   * not yet implemented
   *
   * @method faker.system.directoryPath
   */
  this.directoryPath = function () {
    // TODO
  };

  /**
   * not yet implemented
   *
   * @method faker.system.filePath
   */
  this.filePath = function () {
    // TODO
  };

  /**
   * semver
   *
   * @method faker.system.semver
   */
  this.semver = function () {
      return [faker.random.number(9),
              faker.random.number(9),
              faker.random.number(9)].join('.');
  }

}

module['exports'] = System;

},{}],1191:[function(require,module,exports){
// this program is a JavaScript version of Mersenne Twister, with concealment and encapsulation in class,
// an almost straight conversion from the original program, mt19937ar.c,
// translated by y. okada on July 17, 2006.
// and modified a little at july 20, 2006, but there are not any substantial differences.
// in this program, procedure descriptions and comments of original source code were not removed.
// lines commented with //c// were originally descriptions of c procedure. and a few following lines are appropriate JavaScript descriptions.
// lines commented with /* and */ are original comments.
// lines commented with // are additional comments in this JavaScript version.
// before using this version, create at least one instance of MersenneTwister19937 class, and initialize the each state, given below in c comments, of all the instances.
/*
   A C-program for MT19937, with initialization improved 2002/1/26.
   Coded by Takuji Nishimura and Makoto Matsumoto.

   Before using, initialize the state by using init_genrand(seed)
   or init_by_array(init_key, key_length).

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


   Any feedback is very welcome.
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)
*/

function MersenneTwister19937()
{
	/* constants should be scoped inside the class */
	var N, M, MATRIX_A, UPPER_MASK, LOWER_MASK;
	/* Period parameters */
	//c//#define N 624
	//c//#define M 397
	//c//#define MATRIX_A 0x9908b0dfUL   /* constant vector a */
	//c//#define UPPER_MASK 0x80000000UL /* most significant w-r bits */
	//c//#define LOWER_MASK 0x7fffffffUL /* least significant r bits */
	N = 624;
	M = 397;
	MATRIX_A = 0x9908b0df;   /* constant vector a */
	UPPER_MASK = 0x80000000; /* most significant w-r bits */
	LOWER_MASK = 0x7fffffff; /* least significant r bits */
	//c//static unsigned long mt[N]; /* the array for the state vector  */
	//c//static int mti=N+1; /* mti==N+1 means mt[N] is not initialized */
	var mt = new Array(N);   /* the array for the state vector  */
	var mti = N+1;           /* mti==N+1 means mt[N] is not initialized */

	function unsigned32 (n1) // returns a 32-bits unsiged integer from an operand to which applied a bit operator.
	{
		return n1 < 0 ? (n1 ^ UPPER_MASK) + UPPER_MASK : n1;
	}

	function subtraction32 (n1, n2) // emulates lowerflow of a c 32-bits unsiged integer variable, instead of the operator -. these both arguments must be non-negative integers expressible using unsigned 32 bits.
	{
		return n1 < n2 ? unsigned32((0x100000000 - (n2 - n1)) & 0xffffffff) : n1 - n2;
	}

	function addition32 (n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator +. these both arguments must be non-negative integers expressible using unsigned 32 bits.
	{
		return unsigned32((n1 + n2) & 0xffffffff)
	}

	function multiplication32 (n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator *. these both arguments must be non-negative integers expressible using unsigned 32 bits.
	{
		var sum = 0;
		for (var i = 0; i < 32; ++i){
			if ((n1 >>> i) & 0x1){
				sum = addition32(sum, unsigned32(n2 << i));
			}
		}
		return sum;
	}

	/* initializes mt[N] with a seed */
	//c//void init_genrand(unsigned long s)
	this.init_genrand = function (s)
	{
		//c//mt[0]= s & 0xffffffff;
		mt[0]= unsigned32(s & 0xffffffff);
		for (mti=1; mti<N; mti++) {
			mt[mti] =
			//c//(1812433253 * (mt[mti-1] ^ (mt[mti-1] >> 30)) + mti);
			addition32(multiplication32(1812433253, unsigned32(mt[mti-1] ^ (mt[mti-1] >>> 30))), mti);
			/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */
			/* In the previous versions, MSBs of the seed affect   */
			/* only MSBs of the array mt[].                        */
			/* 2002/01/09 modified by Makoto Matsumoto             */
			//c//mt[mti] &= 0xffffffff;
			mt[mti] = unsigned32(mt[mti] & 0xffffffff);
			/* for >32 bit machines */
		}
	}

	/* initialize by an array with array-length */
	/* init_key is the array for initializing keys */
	/* key_length is its length */
	/* slight change for C++, 2004/2/26 */
	//c//void init_by_array(unsigned long init_key[], int key_length)
	this.init_by_array = function (init_key, key_length)
	{
		//c//int i, j, k;
		var i, j, k;
		//c//init_genrand(19650218);
		this.init_genrand(19650218);
		i=1; j=0;
		k = (N>key_length ? N : key_length);
		for (; k; k--) {
			//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1664525))
			//c//	+ init_key[j] + j; /* non linear */
			mt[i] = addition32(addition32(unsigned32(mt[i] ^ multiplication32(unsigned32(mt[i-1] ^ (mt[i-1] >>> 30)), 1664525)), init_key[j]), j);
			mt[i] =
			//c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */
			unsigned32(mt[i] & 0xffffffff);
			i++; j++;
			if (i>=N) { mt[0] = mt[N-1]; i=1; }
			if (j>=key_length) j=0;
		}
		for (k=N-1; k; k--) {
			//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1566083941))
			//c//- i; /* non linear */
			mt[i] = subtraction32(unsigned32((dbg=mt[i]) ^ multiplication32(unsigned32(mt[i-1] ^ (mt[i-1] >>> 30)), 1566083941)), i);
			//c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */
			mt[i] = unsigned32(mt[i] & 0xffffffff);
			i++;
			if (i>=N) { mt[0] = mt[N-1]; i=1; }
		}
		mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */
	}

    /* moved outside of genrand_int32() by jwatte 2010-11-17; generate less garbage */
    var mag01 = [0x0, MATRIX_A];

	/* generates a random number on [0,0xffffffff]-interval */
	//c//unsigned long genrand_int32(void)
	this.genrand_int32 = function ()
	{
		//c//unsigned long y;
		//c//static unsigned long mag01[2]={0x0UL, MATRIX_A};
		var y;
		/* mag01[x] = x * MATRIX_A  for x=0,1 */

		if (mti >= N) { /* generate N words at one time */
			//c//int kk;
			var kk;

			if (mti == N+1)   /* if init_genrand() has not been called, */
				//c//init_genrand(5489); /* a default initial seed is used */
				this.init_genrand(5489); /* a default initial seed is used */

			for (kk=0;kk<N-M;kk++) {
				//c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);
				//c//mt[kk] = mt[kk+M] ^ (y >> 1) ^ mag01[y & 0x1];
				y = unsigned32((mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK));
				mt[kk] = unsigned32(mt[kk+M] ^ (y >>> 1) ^ mag01[y & 0x1]);
			}
			for (;kk<N-1;kk++) {
				//c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);
				//c//mt[kk] = mt[kk+(M-N)] ^ (y >> 1) ^ mag01[y & 0x1];
				y = unsigned32((mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK));
				mt[kk] = unsigned32(mt[kk+(M-N)] ^ (y >>> 1) ^ mag01[y & 0x1]);
			}
			//c//y = (mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK);
			//c//mt[N-1] = mt[M-1] ^ (y >> 1) ^ mag01[y & 0x1];
			y = unsigned32((mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK));
			mt[N-1] = unsigned32(mt[M-1] ^ (y >>> 1) ^ mag01[y & 0x1]);
			mti = 0;
		}

		y = mt[mti++];

		/* Tempering */
		//c//y ^= (y >> 11);
		//c//y ^= (y << 7) & 0x9d2c5680;
		//c//y ^= (y << 15) & 0xefc60000;
		//c//y ^= (y >> 18);
		y = unsigned32(y ^ (y >>> 11));
		y = unsigned32(y ^ ((y << 7) & 0x9d2c5680));
		y = unsigned32(y ^ ((y << 15) & 0xefc60000));
		y = unsigned32(y ^ (y >>> 18));

		return y;
	}

	/* generates a random number on [0,0x7fffffff]-interval */
	//c//long genrand_int31(void)
	this.genrand_int31 = function ()
	{
		//c//return (genrand_int32()>>1);
		return (this.genrand_int32()>>>1);
	}

	/* generates a random number on [0,1]-real-interval */
	//c//double genrand_real1(void)
	this.genrand_real1 = function ()
	{
		//c//return genrand_int32()*(1.0/4294967295.0);
		return this.genrand_int32()*(1.0/4294967295.0);
		/* divided by 2^32-1 */
	}

	/* generates a random number on [0,1)-real-interval */
	//c//double genrand_real2(void)
	this.genrand_real2 = function ()
	{
		//c//return genrand_int32()*(1.0/4294967296.0);
		return this.genrand_int32()*(1.0/4294967296.0);
		/* divided by 2^32 */
	}

	/* generates a random number on (0,1)-real-interval */
	//c//double genrand_real3(void)
	this.genrand_real3 = function ()
	{
		//c//return ((genrand_int32()) + 0.5)*(1.0/4294967296.0);
		return ((this.genrand_int32()) + 0.5)*(1.0/4294967296.0);
		/* divided by 2^32 */
	}

	/* generates a random number on [0,1) with 53-bit resolution*/
	//c//double genrand_res53(void)
	this.genrand_res53 = function ()
	{
		//c//unsigned long a=genrand_int32()>>5, b=genrand_int32()>>6;
		var a=this.genrand_int32()>>>5, b=this.genrand_int32()>>>6;
		return(a*67108864.0+b)*(1.0/9007199254740992.0);
	}
	/* These real versions are due to Isaku Wada, 2002/01/09 added */
}

//  Exports: Public API

//  Export the twister class
exports.MersenneTwister19937 = MersenneTwister19937;

//  Export a simplified function to generate random numbers
var gen = new MersenneTwister19937;
gen.init_genrand((new Date).getTime() % 1000000000);

// Added max, min range functionality, Marak Squires Sept 11 2014
exports.rand = function(max, min) {
    if (max === undefined)
        {
        min = 0;
        max = 32768;
        }
    return Math.floor(gen.genrand_real2() * (max - min) + min);
}
exports.seed = function(S) {
    if (typeof(S) != 'number')
        {
        throw new Error("seed(S) must take numeric argument; is " + typeof(S));
        }
    gen.init_genrand(S);
}
exports.seed_array = function(A) {
    if (typeof(A) != 'object')
        {
        throw new Error("seed_array(A) must take array of numbers; is " + typeof(A));
        }
    gen.init_by_array(A);
}

},{}],1192:[function(require,module,exports){
/*

Copyright (c) 2012-2014 Jeffrey Mealo

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

------------------------------------------------------------------------------------------------------------------------

Based loosely on Luka Pusic's PHP Script: http://360percents.com/posts/php-random-user-agent-generator/

The license for that script is as follows:

"THE BEER-WARE LICENSE" (Revision 42):

<pusic93@gmail.com> wrote this file. As long as you retain this notice you can do whatever you want with this stuff.
If we meet some day, and you think this stuff is worth it, you can buy me a beer in return. Luka Pusic
*/

function rnd(a, b) {
    //calling rnd() with no arguments is identical to rnd(0, 100)
    a = a || 0;
    b = b || 100;

    if (typeof b === 'number' && typeof a === 'number') {
        //rnd(int min, int max) returns integer between min, max
        return (function (min, max) {
            if (min > max) {
                throw new RangeError('expected min <= max; got min = ' + min + ', max = ' + max);
            }
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }(a, b));
    }

    if (Object.prototype.toString.call(a) === "[object Array]") {
        //returns a random element from array (a), even weighting
        return a[Math.floor(Math.random() * a.length)];
    }

    if (a && typeof a === 'object') {
        //returns a random key from the passed object; keys are weighted by the decimal probability in their value
        return (function (obj) {
            var rand = rnd(0, 100) / 100, min = 0, max = 0, key, return_val;

            for (key in obj) {
                if (obj.hasOwnProperty(key)) {
                    max = obj[key] + min;
                    return_val = key;
                    if (rand >= min && rand <= max) {
                        break;
                    }
                    min = min + obj[key];
                }
            }

            return return_val;
        }(a));
    }

    throw new TypeError('Invalid arguments passed to rnd. (' + (b ? a + ', ' + b : a) + ')');
}

function randomLang() {
    return rnd(['AB', 'AF', 'AN', 'AR', 'AS', 'AZ', 'BE', 'BG', 'BN', 'BO', 'BR', 'BS', 'CA', 'CE', 'CO', 'CS',
                'CU', 'CY', 'DA', 'DE', 'EL', 'EN', 'EO', 'ES', 'ET', 'EU', 'FA', 'FI', 'FJ', 'FO', 'FR', 'FY',
                'GA', 'GD', 'GL', 'GV', 'HE', 'HI', 'HR', 'HT', 'HU', 'HY', 'ID', 'IS', 'IT', 'JA', 'JV', 'KA',
                'KG', 'KO', 'KU', 'KW', 'KY', 'LA', 'LB', 'LI', 'LN', 'LT', 'LV', 'MG', 'MK', 'MN', 'MO', 'MS',
                'MT', 'MY', 'NB', 'NE', 'NL', 'NN', 'NO', 'OC', 'PL', 'PT', 'RM', 'RO', 'RU', 'SC', 'SE', 'SK',
                'SL', 'SO', 'SQ', 'SR', 'SV', 'SW', 'TK', 'TR', 'TY', 'UK', 'UR', 'UZ', 'VI', 'VO', 'YI', 'ZH']);
}

function randomBrowserAndOS() {
    var browser = rnd({
        chrome:    .45132810566,
        iexplorer: .27477061836,
        firefox:   .19384170608,
        safari:    .06186781118,
        opera:     .01574236955
    }),
    os = {
        chrome:  {win: .89,  mac: .09 , lin: .02},
        firefox: {win: .83,  mac: .16,  lin: .01},
        opera:   {win: .91,  mac: .03 , lin: .06},
        safari:  {win: .04 , mac: .96  },
        iexplorer: ['win']
    };

    return [browser, rnd(os[browser])];
}

function randomProc(arch) {
    var procs = {
        lin:['i686', 'x86_64'],
        mac: {'Intel' : .48, 'PPC': .01, 'U; Intel':.48, 'U; PPC' :.01},
        win:['', 'WOW64', 'Win64; x64']
    };
    return rnd(procs[arch]);
}

function randomRevision(dots) {
    var return_val = '';
    //generate a random revision
    //dots = 2 returns .x.y where x & y are between 0 and 9
    for (var x = 0; x < dots; x++) {
        return_val += '.' + rnd(0, 9);
    }
    return return_val;
}

var version_string = {
    net: function () {
        return [rnd(1, 4), rnd(0, 9), rnd(10000, 99999), rnd(0, 9)].join('.');
    },
    nt: function () {
        return rnd(5, 6) + '.' + rnd(0, 3);
    },
    ie: function () {
        return rnd(7, 11);
    },
    trident: function () {
        return rnd(3, 7) + '.' + rnd(0, 1);
    },
    osx: function (delim) {
        return [10, rnd(5, 10), rnd(0, 9)].join(delim || '.');
    },
    chrome: function () {
        return [rnd(13, 39), 0, rnd(800, 899), 0].join('.');
    },
    presto: function () {
        return '2.9.' + rnd(160, 190);
    },
    presto2: function () {
        return rnd(10, 12) + '.00';
    },
    safari: function () {
        return rnd(531, 538) + '.' + rnd(0, 2) + '.' + rnd(0,2);
    }
};

var browser = {
    firefox: function firefox(arch) {
        //https://developer.mozilla.org/en-US/docs/Gecko_user_agent_string_reference
        var firefox_ver = rnd(5, 15) + randomRevision(2),
            gecko_ver = 'Gecko/20100101 Firefox/' + firefox_ver,
            proc = randomProc(arch),
            os_ver = (arch === 'win') ? '(Windows NT ' + version_string.nt() + ((proc) ? '; ' + proc : '')
            : (arch === 'mac') ? '(Macintosh; ' + proc + ' Mac OS X ' + version_string.osx()
            : '(X11; Linux ' + proc;

        return 'Mozilla/5.0 ' + os_ver + '; rv:' + firefox_ver.slice(0, -2) + ') ' + gecko_ver;
    },

    iexplorer: function iexplorer() {
        var ver = version_string.ie();

        if (ver >= 11) {
            //http://msdn.microsoft.com/en-us/library/ie/hh869301(v=vs.85).aspx
            return 'Mozilla/5.0 (Windows NT 6.' + rnd(1,3) + '; Trident/7.0; ' + rnd(['Touch; ', '']) + 'rv:11.0) like Gecko';
        }

        //http://msdn.microsoft.com/en-us/library/ie/ms537503(v=vs.85).aspx
        return 'Mozilla/5.0 (compatible; MSIE ' + ver + '.0; Windows NT ' + version_string.nt() + '; Trident/' +
            version_string.trident() + ((rnd(0, 1) === 1) ? '; .NET CLR ' + version_string.net() : '') + ')';
    },

    opera: function opera(arch) {
        //http://www.opera.com/docs/history/
        var presto_ver = ' Presto/' + version_string.presto() + ' Version/' + version_string.presto2() + ')',
            os_ver = (arch === 'win') ? '(Windows NT ' + version_string.nt() + '; U; ' + randomLang() + presto_ver
            : (arch === 'lin') ? '(X11; Linux ' + randomProc(arch) + '; U; ' + randomLang() + presto_ver
            : '(Macintosh; Intel Mac OS X ' + version_string.osx() + ' U; ' + randomLang() + ' Presto/' +
            version_string.presto() + ' Version/' + version_string.presto2() + ')';

        return 'Opera/' + rnd(9, 14) + '.' + rnd(0, 99) + ' ' + os_ver;
    },

    safari: function safari(arch) {
        var safari = version_string.safari(),
            ver = rnd(4, 7) + '.' + rnd(0,1) + '.' + rnd(0,10),
            os_ver = (arch === 'mac') ? '(Macintosh; ' + randomProc('mac') + ' Mac OS X '+ version_string.osx('_') + ' rv:' + rnd(2, 6) + '.0; '+ randomLang() + ') '
            : '(Windows; U; Windows NT ' + version_string.nt() + ')';

        return 'Mozilla/5.0 ' + os_ver + 'AppleWebKit/' + safari + ' (KHTML, like Gecko) Version/' + ver + ' Safari/' + safari;
    },

    chrome: function chrome(arch) {
        var safari = version_string.safari(),
            os_ver = (arch === 'mac') ? '(Macintosh; ' + randomProc('mac') + ' Mac OS X ' + version_string.osx('_') + ') '
            : (arch === 'win') ? '(Windows; U; Windows NT ' + version_string.nt() + ')'
            : '(X11; Linux ' + randomProc(arch);

        return 'Mozilla/5.0 ' + os_ver + ' AppleWebKit/' + safari + ' (KHTML, like Gecko) Chrome/' + version_string.chrome() + ' Safari/' + safari;
    }
};

exports.generate = function generate() {
    var random = randomBrowserAndOS();
    return browser[random[0]](random[1]);
};

},{}],1193:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;
},{}],1194:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
},{}],1195:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

'use strict';

var camelize = require('./camelize');

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
},{"./camelize":1194}],1196:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

var isTextNode = require('./isTextNode');

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;
},{"./isTextNode":1204}],1197:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],1198:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}).call(this,require('_process'))
},{"_process":1327}],1199:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;
},{}],1200:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
},{}],1201:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

'use strict';

var hyphenate = require('./hyphenate');

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
},{"./hyphenate":1200}],1202:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
}).call(this,require('_process'))
},{"_process":1327}],1203:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
},{}],1204:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var isNode = require('./isNode');

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;
},{"./isNode":1203}],1205:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
},{}],1206:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var emptyFunction = require('./emptyFunction');

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
}).call(this,require('_process'))
},{"./emptyFunction":1197,"_process":1327}],1207:[function(require,module,exports){
(function (process){
var Readable = require('readable-stream').Readable
var inherits = require('inherits')

module.exports = from2

from2.ctor = ctor
from2.obj = obj

var Proto = ctor()

function toFunction(list) {
  list = list.slice()
  return function (_, cb) {
    var err = null
    var item = list.length ? list.shift() : null
    if (item instanceof Error) {
      err = item
      item = null
    }

    cb(err, item)
  }
}

function from2(opts, read) {
  if (typeof opts !== 'object' || Array.isArray(opts)) {
    read = opts
    opts = {}
  }

  var rs = new Proto(opts)
  rs._from = Array.isArray(read) ? toFunction(read) : (read || noop)
  return rs
}

function ctor(opts, read) {
  if (typeof opts === 'function') {
    read = opts
    opts = {}
  }

  opts = defaults(opts)

  inherits(Class, Readable)
  function Class(override) {
    if (!(this instanceof Class)) return new Class(override)
    this._reading = false
    this._callback = check
    this.destroyed = false
    Readable.call(this, override || opts)

    var self = this
    var hwm = this._readableState.highWaterMark

    function check(err, data) {
      if (self.destroyed) return
      if (err) return self.destroy(err)
      if (data === null) return self.push(null)
      self._reading = false
      if (self.push(data)) self._read(hwm)
    }
  }

  Class.prototype._from = read || noop
  Class.prototype._read = function(size) {
    if (this._reading || this.destroyed) return
    this._reading = true
    this._from(size, this._callback)
  }

  Class.prototype.destroy = function(err) {
    if (this.destroyed) return
    this.destroyed = true

    var self = this
    process.nextTick(function() {
      if (err) self.emit('error', err)
      self.emit('close')
    })
  }

  return Class
}

function obj(opts, read) {
  if (typeof opts === 'function' || Array.isArray(opts)) {
    read = opts
    opts = {}
  }

  opts = defaults(opts)
  opts.objectMode = true
  opts.highWaterMark = 16

  return from2(opts, read)
}

function noop () {}

function defaults(opts) {
  opts = opts || {}
  return opts
}

}).call(this,require('_process'))
},{"_process":1327,"inherits":1233,"readable-stream":1358}],1208:[function(require,module,exports){
(function (Buffer){
'use strict';
const PassThrough = require('stream').PassThrough;

module.exports = opts => {
	opts = Object.assign({}, opts);

	const array = opts.array;
	let encoding = opts.encoding;
	const buffer = encoding === 'buffer';
	let objectMode = false;

	if (array) {
		objectMode = !(encoding || buffer);
	} else {
		encoding = encoding || 'utf8';
	}

	if (buffer) {
		encoding = null;
	}

	let len = 0;
	const ret = [];
	const stream = new PassThrough({objectMode});

	if (encoding) {
		stream.setEncoding(encoding);
	}

	stream.on('data', chunk => {
		ret.push(chunk);

		if (objectMode) {
			len = ret.length;
		} else {
			len += chunk.length;
		}
	});

	stream.getBufferedValue = () => {
		if (array) {
			return ret;
		}

		return buffer ? Buffer.concat(ret, len) : ret.join('');
	};

	stream.getBufferedLength = () => len;

	return stream;
};

}).call(this,require("buffer").Buffer)
},{"buffer":71,"stream":1373}],1209:[function(require,module,exports){
'use strict';
const bufferStream = require('./buffer-stream');

function getStream(inputStream, opts) {
	if (!inputStream) {
		return Promise.reject(new Error('Expected a stream'));
	}

	opts = Object.assign({maxBuffer: Infinity}, opts);

	const maxBuffer = opts.maxBuffer;
	let stream;
	let clean;

	const p = new Promise((resolve, reject) => {
		const error = err => {
			if (err) { // null check
				err.bufferedData = stream.getBufferedValue();
			}

			reject(err);
		};

		stream = bufferStream(opts);
		inputStream.once('error', error);
		inputStream.pipe(stream);

		stream.on('data', () => {
			if (stream.getBufferedLength() > maxBuffer) {
				reject(new Error('maxBuffer exceeded'));
			}
		});
		stream.once('error', error);
		stream.on('end', resolve);

		clean = () => {
			// some streams doesn't implement the `stream.Readable` interface correctly
			if (inputStream.unpipe) {
				inputStream.unpipe(stream);
			}
		};
	});

	p.then(clean, clean);

	return p.then(() => stream.getBufferedValue());
}

module.exports = getStream;
module.exports.buffer = (stream, opts) => getStream(stream, Object.assign({}, opts, {encoding: 'buffer'}));
module.exports.array = (stream, opts) => getStream(stream, Object.assign({}, opts, {array: true}));

},{"./buffer-stream":1208}],1210:[function(require,module,exports){
'use strict';
const urlLib = require('url');
const http = require('http');
const PCancelable = require('p-cancelable');
const is = require('@sindresorhus/is');

class GotError extends Error {
	constructor(message, error, opts) {
		super(message);
		Error.captureStackTrace(this, this.constructor);
		this.name = 'GotError';

		if (!is.undefined(error.code)) {
			this.code = error.code;
		}

		Object.assign(this, {
			host: opts.host,
			hostname: opts.hostname,
			method: opts.method,
			path: opts.path,
			protocol: opts.protocol,
			url: opts.href
		});
	}
}

module.exports.GotError = GotError;

module.exports.CacheError = class extends GotError {
	constructor(error, opts) {
		super(error.message, error, opts);
		this.name = 'CacheError';
	}
};

module.exports.RequestError = class extends GotError {
	constructor(error, opts) {
		super(error.message, error, opts);
		this.name = 'RequestError';
	}
};

module.exports.ReadError = class extends GotError {
	constructor(error, opts) {
		super(error.message, error, opts);
		this.name = 'ReadError';
	}
};

module.exports.ParseError = class extends GotError {
	constructor(error, statusCode, opts, data) {
		super(`${error.message} in "${urlLib.format(opts)}": \n${data.slice(0, 77)}...`, error, opts);
		this.name = 'ParseError';
		this.statusCode = statusCode;
		this.statusMessage = http.STATUS_CODES[this.statusCode];
	}
};

module.exports.HTTPError = class extends GotError {
	constructor(statusCode, statusMessage, headers, opts) {
		if (statusMessage) {
			statusMessage = statusMessage.replace(/\r?\n/g, ' ').trim();
		} else {
			statusMessage = http.STATUS_CODES[statusCode];
		}
		super(`Response code ${statusCode} (${statusMessage})`, {}, opts);
		this.name = 'HTTPError';
		this.statusCode = statusCode;
		this.statusMessage = statusMessage;
		this.headers = headers;
	}
};

module.exports.MaxRedirectsError = class extends GotError {
	constructor(statusCode, redirectUrls, opts) {
		super('Redirected 10 times. Aborting.', {}, opts);
		this.name = 'MaxRedirectsError';
		this.statusCode = statusCode;
		this.statusMessage = http.STATUS_CODES[this.statusCode];
		this.redirectUrls = redirectUrls;
	}
};

module.exports.UnsupportedProtocolError = class extends GotError {
	constructor(opts) {
		super(`Unsupported protocol "${opts.protocol}"`, {}, opts);
		this.name = 'UnsupportedProtocolError';
	}
};

module.exports.CancelError = PCancelable.CancelError;

},{"@sindresorhus/is":22,"http":1374,"p-cancelable":1311,"url":1386}],1211:[function(require,module,exports){
(function (process,setImmediate){
'use strict';
const EventEmitter = require('events');
const http = require('http');
const https = require('https');
const PassThrough = require('stream').PassThrough;
const Transform = require('stream').Transform;
const urlLib = require('url');
const fs = require('fs');
const querystring = require('querystring');
const CacheableRequest = require('cacheable-request');
const duplexer3 = require('duplexer3');
const intoStream = require('into-stream');
const is = require('@sindresorhus/is');
const getStream = require('get-stream');
const timedOut = require('timed-out');
const urlParseLax = require('url-parse-lax');
const urlToOptions = require('url-to-options');
const lowercaseKeys = require('lowercase-keys');
const decompressResponse = require('decompress-response');
const mimicResponse = require('mimic-response');
const isRetryAllowed = require('is-retry-allowed');
const isURL = require('isurl');
const PCancelable = require('p-cancelable');
const pTimeout = require('p-timeout');
const pify = require('pify');
const Buffer = require('safe-buffer').Buffer;
const pkg = require('./package.json');
const errors = require('./errors');

const getMethodRedirectCodes = new Set([300, 301, 302, 303, 304, 305, 307, 308]);
const allMethodRedirectCodes = new Set([300, 303, 307, 308]);

const isFormData = body => is.nodeStream(body) && is.function(body.getBoundary);

const getBodySize = opts => {
	const body = opts.body;

	if (opts.headers['content-length']) {
		return Number(opts.headers['content-length']);
	}

	if (!body && !opts.stream) {
		return 0;
	}

	if (is.string(body)) {
		return Buffer.byteLength(body);
	}

	if (isFormData(body)) {
		return pify(body.getLength.bind(body))();
	}

	if (body instanceof fs.ReadStream) {
		return pify(fs.stat)(body.path).then(stat => stat.size);
	}

	if (is.nodeStream(body) && is.buffer(body._buffer)) {
		return body._buffer.length;
	}

	return null;
};

function requestAsEventEmitter(opts) {
	opts = opts || {};

	const ee = new EventEmitter();
	const requestUrl = opts.href || urlLib.resolve(urlLib.format(opts), opts.path);
	const redirects = [];
	const agents = is.object(opts.agent) ? opts.agent : null;
	let retryCount = 0;
	let redirectUrl;
	let uploadBodySize;
	let uploaded = 0;

	const get = opts => {
		if (opts.protocol !== 'http:' && opts.protocol !== 'https:') {
			ee.emit('error', new got.UnsupportedProtocolError(opts));
			return;
		}

		let fn = opts.protocol === 'https:' ? https : http;

		if (agents) {
			const protocolName = opts.protocol === 'https:' ? 'https' : 'http';
			opts.agent = agents[protocolName] || opts.agent;
		}

		if (opts.useElectronNet && process.versions.electron) {
			const electron = require('electron');
			fn = electron.net || electron.remote.net;
		}

		let progressInterval;

		const cacheableRequest = new CacheableRequest(fn.request, opts.cache);
		const cacheReq = cacheableRequest(opts, res => {
			clearInterval(progressInterval);

			ee.emit('uploadProgress', {
				percent: 1,
				transferred: uploaded,
				total: uploadBodySize
			});

			const statusCode = res.statusCode;

			res.url = redirectUrl || requestUrl;
			res.requestUrl = requestUrl;

			const followRedirect = opts.followRedirect && 'location' in res.headers;
			const redirectGet = followRedirect && getMethodRedirectCodes.has(statusCode);
			const redirectAll = followRedirect && allMethodRedirectCodes.has(statusCode);

			if (redirectAll || (redirectGet && (opts.method === 'GET' || opts.method === 'HEAD'))) {
				res.resume();

				if (statusCode === 303) {
					// Server responded with "see other", indicating that the resource exists at another location,
					// and the client should request it from that location via GET or HEAD.
					opts.method = 'GET';
				}

				if (redirects.length >= 10) {
					ee.emit('error', new got.MaxRedirectsError(statusCode, redirects, opts), null, res);
					return;
				}

				const bufferString = Buffer.from(res.headers.location, 'binary').toString();

				redirectUrl = urlLib.resolve(urlLib.format(opts), bufferString);

				redirects.push(redirectUrl);

				const redirectOpts = Object.assign({}, opts, urlLib.parse(redirectUrl));

				ee.emit('redirect', res, redirectOpts);

				get(redirectOpts);

				return;
			}

			setImmediate(() => {
				try {
					getResponse(res, opts, ee, redirects);
				} catch (e) {
					ee.emit('error', e);
				}
			});
		});

		cacheReq.on('error', err => {
			if (err instanceof CacheableRequest.RequestError) {
				ee.emit('error', new got.RequestError(err, opts));
			} else {
				ee.emit('error', new got.CacheError(err, opts));
			}
		});

		cacheReq.once('request', req => {
			let aborted = false;
			req.once('abort', _ => {
				aborted = true;
			});

			req.once('error', err => {
				clearInterval(progressInterval);

				if (aborted) {
					return;
				}

				const backoff = opts.retries(++retryCount, err);

				if (backoff) {
					setTimeout(get, backoff, opts);
					return;
				}

				ee.emit('error', new got.RequestError(err, opts));
			});

			ee.once('request', req => {
				ee.emit('uploadProgress', {
					percent: 0,
					transferred: 0,
					total: uploadBodySize
				});

				const socket = req.connection;
				if (socket) {
					// `._connecting` was the old property which was made public in node v6.1.0
					const isConnecting = socket.connecting === undefined ? socket._connecting : socket.connecting;

					const onSocketConnect = () => {
						const uploadEventFrequency = 150;

						progressInterval = setInterval(() => {
							if (socket.destroyed) {
								clearInterval(progressInterval);
								return;
							}

							const lastUploaded = uploaded;
							const headersSize = Buffer.byteLength(req._header);
							uploaded = socket.bytesWritten - headersSize;

							// Prevent the known issue of `bytesWritten` being larger than body size
							if (uploadBodySize && uploaded > uploadBodySize) {
								uploaded = uploadBodySize;
							}

							// Don't emit events with unchanged progress and
							// prevent last event from being emitted, because
							// it's emitted when `response` is emitted
							if (uploaded === lastUploaded || uploaded === uploadBodySize) {
								return;
							}

							ee.emit('uploadProgress', {
								percent: uploadBodySize ? uploaded / uploadBodySize : 0,
								transferred: uploaded,
								total: uploadBodySize
							});
						}, uploadEventFrequency);
					};

					// Only subscribe to 'connect' event if we're actually connecting a new
					// socket, otherwise if we're already connected (because this is a
					// keep-alive connection) do not bother. This is important since we won't
					// get a 'connect' event for an already connected socket.
					if (isConnecting) {
						socket.once('connect', onSocketConnect);
					} else {
						onSocketConnect();
					}
				}
			});

			if (opts.gotTimeout) {
				clearInterval(progressInterval);
				timedOut(req, opts.gotTimeout);
			}

			setImmediate(() => {
				ee.emit('request', req);
			});
		});
	};

	setImmediate(() => {
		Promise.resolve(getBodySize(opts))
			.then(size => {
				uploadBodySize = size;

				if (
					is.undefined(opts.headers['content-length']) &&
					is.undefined(opts.headers['transfer-encoding']) &&
					isFormData(opts.body)
				) {
					opts.headers['content-length'] = size;
				}

				get(opts);
			})
			.catch(err => {
				ee.emit('error', err);
			});
	});

	return ee;
}

function getResponse(res, opts, ee, redirects) {
	const downloadBodySize = Number(res.headers['content-length']) || null;
	let downloaded = 0;

	const progressStream = new Transform({
		transform(chunk, encoding, callback) {
			downloaded += chunk.length;

			const percent = downloadBodySize ? downloaded / downloadBodySize : 0;

			// Let flush() be responsible for emitting the last event
			if (percent < 1) {
				ee.emit('downloadProgress', {
					percent,
					transferred: downloaded,
					total: downloadBodySize
				});
			}

			callback(null, chunk);
		},

		flush(callback) {
			ee.emit('downloadProgress', {
				percent: 1,
				transferred: downloaded,
				total: downloadBodySize
			});

			callback();
		}
	});

	mimicResponse(res, progressStream);
	progressStream.redirectUrls = redirects;

	const response = opts.decompress === true &&
		is.function(decompressResponse) &&
		opts.method !== 'HEAD' ? decompressResponse(progressStream) : progressStream;

	if (!opts.decompress && ['gzip', 'deflate'].indexOf(res.headers['content-encoding']) !== -1) {
		opts.encoding = null;
	}

	ee.emit('response', response);

	ee.emit('downloadProgress', {
		percent: 0,
		transferred: 0,
		total: downloadBodySize
	});

	res.pipe(progressStream);
}

function asPromise(opts) {
	const timeoutFn = requestPromise => opts.gotTimeout && opts.gotTimeout.request ?
		pTimeout(requestPromise, opts.gotTimeout.request, new got.RequestError({message: 'Request timed out', code: 'ETIMEDOUT'}, opts)) :
		requestPromise;

	const proxy = new EventEmitter();

	const cancelable = new PCancelable((resolve, reject, onCancel) => {
		const ee = requestAsEventEmitter(opts);
		let cancelOnRequest = false;

		onCancel(() => {
			cancelOnRequest = true;
		});

		ee.on('request', req => {
			if (cancelOnRequest) {
				req.abort();
			}

			onCancel(() => {
				req.abort();
			});

			if (is.nodeStream(opts.body)) {
				opts.body.pipe(req);
				opts.body = undefined;
				return;
			}

			req.end(opts.body);
		});

		ee.on('response', res => {
			const stream = is.null(opts.encoding) ? getStream.buffer(res) : getStream(res, opts);

			stream
				.catch(err => reject(new got.ReadError(err, opts)))
				.then(data => {
					const statusCode = res.statusCode;
					const limitStatusCode = opts.followRedirect ? 299 : 399;

					res.body = data;

					if (opts.json && res.body) {
						try {
							res.body = JSON.parse(res.body);
						} catch (err) {
							if (statusCode >= 200 && statusCode < 300) {
								throw new got.ParseError(err, statusCode, opts, data);
							}
						}
					}

					if (opts.throwHttpErrors && statusCode !== 304 && (statusCode < 200 || statusCode > limitStatusCode)) {
						throw new got.HTTPError(statusCode, res.statusMessage, res.headers, opts);
					}

					resolve(res);
				})
				.catch(err => {
					Object.defineProperty(err, 'response', {value: res});
					reject(err);
				});
		});

		ee.once('error', reject);
		ee.on('redirect', proxy.emit.bind(proxy, 'redirect'));
		ee.on('uploadProgress', proxy.emit.bind(proxy, 'uploadProgress'));
		ee.on('downloadProgress', proxy.emit.bind(proxy, 'downloadProgress'));
	});

	// Preserve backwards-compatibility
	// TODO: Remove this in the next major version
	Object.defineProperty(cancelable, 'canceled', {
		get() {
			return cancelable.isCanceled;
		}
	});

	const promise = timeoutFn(cancelable);

	promise.cancel = cancelable.cancel.bind(cancelable);

	promise.on = (name, fn) => {
		proxy.on(name, fn);
		return promise;
	};

	return promise;
}

function asStream(opts) {
	opts.stream = true;

	const input = new PassThrough();
	const output = new PassThrough();
	const proxy = duplexer3(input, output);
	let timeout;

	if (opts.gotTimeout && opts.gotTimeout.request) {
		timeout = setTimeout(() => {
			proxy.emit('error', new got.RequestError({message: 'Request timed out', code: 'ETIMEDOUT'}, opts));
		}, opts.gotTimeout.request);
	}

	if (opts.json) {
		throw new Error('Got can not be used as a stream when the `json` option is used');
	}

	if (opts.body) {
		proxy.write = () => {
			throw new Error('Got\'s stream is not writable when the `body` option is used');
		};
	}

	const ee = requestAsEventEmitter(opts);

	ee.on('request', req => {
		proxy.emit('request', req);

		if (is.nodeStream(opts.body)) {
			opts.body.pipe(req);
			return;
		}

		if (opts.body) {
			req.end(opts.body);
			return;
		}

		if (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {
			input.pipe(req);
			return;
		}

		req.end();
	});

	ee.on('response', res => {
		clearTimeout(timeout);

		const statusCode = res.statusCode;

		res.on('error', err => {
			proxy.emit('error', new got.ReadError(err, opts));
		});

		res.pipe(output);

		if (opts.throwHttpErrors && statusCode !== 304 && (statusCode < 200 || statusCode > 299)) {
			proxy.emit('error', new got.HTTPError(statusCode, res.statusMessage, res.headers, opts), null, res);
			return;
		}

		proxy.emit('response', res);
	});

	ee.on('error', proxy.emit.bind(proxy, 'error'));
	ee.on('redirect', proxy.emit.bind(proxy, 'redirect'));
	ee.on('uploadProgress', proxy.emit.bind(proxy, 'uploadProgress'));
	ee.on('downloadProgress', proxy.emit.bind(proxy, 'downloadProgress'));

	return proxy;
}

function normalizeArguments(url, opts) {
	if (!is.string(url) && !is.object(url)) {
		throw new TypeError(`Parameter \`url\` must be a string or object, not ${is(url)}`);
	} else if (is.string(url)) {
		url = url.replace(/^unix:/, 'http://$&');

		try {
			decodeURI(url);
		} catch (err) {
			throw new Error('Parameter `url` must contain valid UTF-8 character sequences');
		}

		url = urlParseLax(url);
		if (url.auth) {
			throw new Error('Basic authentication must be done with the `auth` option');
		}
	} else if (isURL.lenient(url)) {
		url = urlToOptions(url);
	}

	opts = Object.assign(
		{
			path: '',
			retries: 2,
			cache: false,
			decompress: true,
			useElectronNet: false,
			throwHttpErrors: true
		},
		url,
		{
			protocol: url.protocol || 'http:' // Override both null/undefined with default protocol
		},
		opts
	);

	const headers = lowercaseKeys(opts.headers);
	for (const key of Object.keys(headers)) {
		if (is.nullOrUndefined(headers[key])) {
			delete headers[key];
		}
	}

	opts.headers = Object.assign({
		'user-agent': `${pkg.name}/${pkg.version} (https://github.com/sindresorhus/got)`
	}, headers);

	if (opts.decompress && is.undefined(opts.headers['accept-encoding'])) {
		opts.headers['accept-encoding'] = 'gzip, deflate';
	}

	const query = opts.query;

	if (query) {
		if (!is.string(query)) {
			opts.query = querystring.stringify(query);
		}

		opts.path = `${opts.path.split('?')[0]}?${opts.query}`;
		delete opts.query;
	}

	if (opts.json && is.undefined(opts.headers.accept)) {
		opts.headers.accept = 'application/json';
	}

	const body = opts.body;
	if (is.nullOrUndefined(body)) {
		opts.method = (opts.method || 'GET').toUpperCase();
	} else {
		const headers = opts.headers;
		if (!is.nodeStream(body) && !is.string(body) && !is.buffer(body) && !(opts.form || opts.json)) {
			throw new TypeError('The `body` option must be a stream.Readable, string, Buffer or plain Object');
		}

		const canBodyBeStringified = is.plainObject(body) || is.array(body);
		if ((opts.form || opts.json) && !canBodyBeStringified) {
			throw new TypeError('The `body` option must be a plain Object or Array when the `form` or `json` option is used');
		}

		if (isFormData(body)) {
			// Special case for https://github.com/form-data/form-data
			headers['content-type'] = headers['content-type'] || `multipart/form-data; boundary=${body.getBoundary()}`;
		} else if (opts.form && canBodyBeStringified) {
			headers['content-type'] = headers['content-type'] || 'application/x-www-form-urlencoded';
			opts.body = querystring.stringify(body);
		} else if (opts.json && canBodyBeStringified) {
			headers['content-type'] = headers['content-type'] || 'application/json';
			opts.body = JSON.stringify(body);
		}

		if (is.undefined(headers['content-length']) && is.undefined(headers['transfer-encoding']) && !is.nodeStream(body)) {
			const length = is.string(opts.body) ? Buffer.byteLength(opts.body) : opts.body.length;
			headers['content-length'] = length;
		}

		// Convert buffer to stream to receive upload progress events
		// see https://github.com/sindresorhus/got/pull/322
		if (is.buffer(body)) {
			opts.body = intoStream(body);
			opts.body._buffer = body;
		}

		opts.method = (opts.method || 'POST').toUpperCase();
	}

	if (opts.hostname === 'unix') {
		const matches = /(.+?):(.+)/.exec(opts.path);

		if (matches) {
			opts.socketPath = matches[1];
			opts.path = matches[2];
			opts.host = null;
		}
	}

	if (!is.function(opts.retries)) {
		const retries = opts.retries;

		opts.retries = (iter, err) => {
			if (iter > retries || !isRetryAllowed(err)) {
				return 0;
			}

			const noise = Math.random() * 100;

			return ((1 << iter) * 1000) + noise;
		};
	}

	if (is.undefined(opts.followRedirect)) {
		opts.followRedirect = true;
	}

	if (opts.timeout) {
		if (is.number(opts.timeout)) {
			opts.gotTimeout = {request: opts.timeout};
		} else {
			opts.gotTimeout = opts.timeout;
		}
		delete opts.timeout;
	}

	return opts;
}

function got(url, opts) {
	try {
		const normalizedArgs = normalizeArguments(url, opts);

		if (normalizedArgs.stream) {
			return asStream(normalizedArgs);
		}

		return asPromise(normalizedArgs);
	} catch (err) {
		return Promise.reject(err);
	}
}

got.stream = (url, opts) => asStream(normalizeArguments(url, opts));

const methods = [
	'get',
	'post',
	'put',
	'patch',
	'head',
	'delete'
];

for (const method of methods) {
	got[method] = (url, opts) => got(url, Object.assign({}, opts, {method}));
	got.stream[method] = (url, opts) => got.stream(url, Object.assign({}, opts, {method}));
}

Object.assign(got, errors);

module.exports = got;

}).call(this,require('_process'),require("timers").setImmediate)
},{"./errors":1210,"./package.json":1213,"@sindresorhus/is":22,"_process":1327,"cacheable-request":74,"decompress-response":40,"duplexer3":126,"electron":40,"events":143,"fs":68,"get-stream":1209,"http":1374,"https":1231,"into-stream":1234,"is-retry-allowed":1239,"isurl":1242,"lowercase-keys":1302,"mimic-response":1305,"p-cancelable":1311,"p-timeout":1314,"pify":1212,"querystring":1339,"safe-buffer":1363,"stream":1373,"timed-out":1381,"timers":1382,"url":1386,"url-parse-lax":1384,"url-to-options":1385}],1212:[function(require,module,exports){
'use strict';

const processFn = (fn, opts) => function () {
	const P = opts.promiseModule;
	const args = new Array(arguments.length);

	for (let i = 0; i < arguments.length; i++) {
		args[i] = arguments[i];
	}

	return new P((resolve, reject) => {
		if (opts.errorFirst) {
			args.push(function (err, result) {
				if (opts.multiArgs) {
					const results = new Array(arguments.length - 1);

					for (let i = 1; i < arguments.length; i++) {
						results[i - 1] = arguments[i];
					}

					if (err) {
						results.unshift(err);
						reject(results);
					} else {
						resolve(results);
					}
				} else if (err) {
					reject(err);
				} else {
					resolve(result);
				}
			});
		} else {
			args.push(function (result) {
				if (opts.multiArgs) {
					const results = new Array(arguments.length - 1);

					for (let i = 0; i < arguments.length; i++) {
						results[i] = arguments[i];
					}

					resolve(results);
				} else {
					resolve(result);
				}
			});
		}

		fn.apply(this, args);
	});
};

module.exports = (obj, opts) => {
	opts = Object.assign({
		exclude: [/.+(Sync|Stream)$/],
		errorFirst: true,
		promiseModule: Promise
	}, opts);

	const filter = key => {
		const match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);
		return opts.include ? opts.include.some(match) : !opts.exclude.some(match);
	};

	let ret;
	if (typeof obj === 'function') {
		ret = function () {
			if (opts.excludeMain) {
				return obj.apply(this, arguments);
			}

			return processFn(obj, opts).apply(this, arguments);
		};
	} else {
		ret = Object.create(Object.getPrototypeOf(obj));
	}

	for (const key in obj) { // eslint-disable-line guard-for-in
		const x = obj[key];
		ret[key] = typeof x === 'function' && filter(key) ? processFn(x, opts) : x;
	}

	return ret;
};

},{}],1213:[function(require,module,exports){
module.exports={
  "_args": [
    [
      "got@8.3.1",
      "B:\\Programming\\NodeJS\\CryptoTithe"
    ]
  ],
  "_from": "got@8.3.1",
  "_id": "got@8.3.1",
  "_inBundle": false,
  "_integrity": "sha512-tiLX+bnYm5A56T5N/n9Xo89vMaO1mrS9qoDqj3u/anVooqGozvY/HbXzEpDfbNeKsHCBpK40gSbz8wGYSp3i1w==",
  "_location": "/got",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "got@8.3.1",
    "name": "got",
    "escapedName": "got",
    "rawSpec": "8.3.1",
    "saveSpec": null,
    "fetchSpec": "8.3.1"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/got/-/got-8.3.1.tgz",
  "_spec": "8.3.1",
  "_where": "B:\\Programming\\NodeJS\\CryptoTithe",
  "ava": {
    "concurrency": 4
  },
  "browser": {
    "decompress-response": false,
    "electron": false
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/got/issues"
  },
  "dependencies": {
    "@sindresorhus/is": "^0.7.0",
    "cacheable-request": "^2.1.1",
    "decompress-response": "^3.3.0",
    "duplexer3": "^0.1.4",
    "get-stream": "^3.0.0",
    "into-stream": "^3.1.0",
    "is-retry-allowed": "^1.1.0",
    "isurl": "^1.0.0-alpha5",
    "lowercase-keys": "^1.0.0",
    "mimic-response": "^1.0.0",
    "p-cancelable": "^0.4.0",
    "p-timeout": "^2.0.1",
    "pify": "^3.0.0",
    "safe-buffer": "^5.1.1",
    "timed-out": "^4.0.1",
    "url-parse-lax": "^3.0.0",
    "url-to-options": "^1.0.1"
  },
  "description": "Simplified HTTP requests",
  "devDependencies": {
    "ava": "^0.25.0",
    "coveralls": "^3.0.0",
    "form-data": "^2.1.1",
    "get-port": "^3.0.0",
    "nyc": "^11.0.2",
    "p-event": "^1.3.0",
    "pem": "^1.4.4",
    "proxyquire": "^1.8.0",
    "sinon": "^4.0.0",
    "slow-stream": "0.0.4",
    "tempfile": "^2.0.0",
    "tempy": "^0.2.1",
    "universal-url": "1.0.0-alpha",
    "xo": "^0.20.0"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js",
    "errors.js"
  ],
  "homepage": "https://github.com/sindresorhus/got#readme",
  "keywords": [
    "http",
    "https",
    "get",
    "got",
    "url",
    "uri",
    "request",
    "util",
    "utility",
    "simple",
    "curl",
    "wget",
    "fetch",
    "net",
    "network",
    "electron"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    {
      "name": "Vsevolod Strukchinsky",
      "email": "floatdrop@gmail.com",
      "url": "github.com/floatdrop"
    },
    {
      "name": "Alexander Tesfamichael",
      "email": "alex.tesfamichael@gmail.com",
      "url": "alextes.me"
    }
  ],
  "name": "got",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/got.git"
  },
  "scripts": {
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "test": "xo && nyc ava"
  },
  "version": "8.3.1"
}

},{}],1214:[function(require,module,exports){
/**
 * @file Tests if ES6 Symbol is supported.
 * @version 1.4.2
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module has-symbol-support-x
 */

'use strict';

/**
 * Indicates if `Symbol`exists and creates the correct type.
 * `true`, if it exists and creates the correct type, otherwise `false`.
 *
 * @type boolean
 */
module.exports = typeof Symbol === 'function' && typeof Symbol('') === 'symbol';

},{}],1215:[function(require,module,exports){
/**
 * @file Tests if ES6 @@toStringTag is supported.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-@@tostringtag|26.3.1 @@toStringTag}
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module has-to-string-tag-x
 */

'use strict';

/**
 * Indicates if `Symbol.toStringTag`exists and is the correct type.
 * `true`, if it exists and is the correct type, otherwise `false`.
 *
 * @type boolean
 */
module.exports = require('has-symbol-support-x') && typeof Symbol.toStringTag === 'symbol';

},{"has-symbol-support-x":1214}],1216:[function(require,module,exports){
'use strict'
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var inherits = require('inherits')

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

},{"inherits":1233,"safe-buffer":1363,"stream":1373}],1217:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":1218,"./hash/hmac":1219,"./hash/ripemd":1220,"./hash/sha":1221,"./hash/utils":1228}],1218:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":1228,"minimalistic-assert":1306}],1219:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":1228,"minimalistic-assert":1306}],1220:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./common":1218,"./utils":1228}],1221:[function(require,module,exports){
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":1222,"./sha/224":1223,"./sha/256":1224,"./sha/384":1225,"./sha/512":1226}],1222:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":1218,"../utils":1228,"./common":1227}],1223:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":1228,"./256":1224}],1224:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":1218,"../utils":1228,"./common":1227,"minimalistic-assert":1306}],1225:[function(require,module,exports){
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":1228,"./512":1226}],1226:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../common":1218,"../utils":1228,"minimalistic-assert":1306}],1227:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":1228}],1228:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"inherits":1233,"minimalistic-assert":1306}],1229:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":1217,"minimalistic-assert":1306,"minimalistic-crypto-utils":1307}],1230:[function(require,module,exports){
'use strict';
// rfc7231 6.1

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var statusCodeCacheableByDefault = [200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501];

// This implementation does not understand partial responses (206)
var understoodStatuses = [200, 203, 204, 300, 301, 302, 303, 307, 308, 404, 405, 410, 414, 501];

var hopByHopHeaders = { 'connection': true, 'keep-alive': true, 'proxy-authenticate': true, 'proxy-authorization': true, 'te': true, 'trailer': true, 'transfer-encoding': true, 'upgrade': true };
var excludedFromRevalidationUpdate = {
    // Since the old body is reused, it doesn't make sense to change properties of the body
    'content-length': true, 'content-encoding': true, 'transfer-encoding': true,
    'content-range': true
};

function parseCacheControl(header) {
    var cc = {};
    if (!header) return cc;

    // TODO: When there is more than one value present for a given directive (e.g., two Expires header fields, multiple Cache-Control: max-age directives),
    // the directive's value is considered invalid. Caches are encouraged to consider responses that have invalid freshness information to be stale
    var parts = header.trim().split(/\s*,\s*/); // TODO: lame parsing
    for (var _iterator = parts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
        } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
        }

        var part = _ref;

        var _part$split = part.split(/\s*=\s*/, 2),
            k = _part$split[0],
            v = _part$split[1];

        cc[k] = v === undefined ? true : v.replace(/^"|"$/g, ''); // TODO: lame unquoting
    }

    return cc;
}

function formatCacheControl(cc) {
    var parts = [];
    for (var k in cc) {
        var v = cc[k];
        parts.push(v === true ? k : k + '=' + v);
    }
    if (!parts.length) {
        return undefined;
    }
    return parts.join(', ');
}

module.exports = function () {
    function CachePolicy(req, res) {
        var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
            shared = _ref2.shared,
            cacheHeuristic = _ref2.cacheHeuristic,
            immutableMinTimeToLive = _ref2.immutableMinTimeToLive,
            ignoreCargoCult = _ref2.ignoreCargoCult,
            _fromObject = _ref2._fromObject;

        _classCallCheck(this, CachePolicy);

        if (_fromObject) {
            this._fromObject(_fromObject);
            return;
        }

        if (!res || !res.headers) {
            throw Error("Response headers missing");
        }
        this._assertRequestHasHeaders(req);

        this._responseTime = this.now();
        this._isShared = shared !== false;
        this._cacheHeuristic = undefined !== cacheHeuristic ? cacheHeuristic : 0.1; // 10% matches IE
        this._immutableMinTtl = undefined !== immutableMinTimeToLive ? immutableMinTimeToLive : 24 * 3600 * 1000;

        this._status = 'status' in res ? res.status : 200;
        this._resHeaders = res.headers;
        this._rescc = parseCacheControl(res.headers['cache-control']);
        this._method = 'method' in req ? req.method : 'GET';
        this._url = req.url;
        this._host = req.headers.host;
        this._noAuthorization = !req.headers.authorization;
        this._reqHeaders = res.headers.vary ? req.headers : null; // Don't keep all request headers if they won't be used
        this._reqcc = parseCacheControl(req.headers['cache-control']);

        // Assume that if someone uses legacy, non-standard uncecessary options they don't understand caching,
        // so there's no point stricly adhering to the blindly copy&pasted directives.
        if (ignoreCargoCult && "pre-check" in this._rescc && "post-check" in this._rescc) {
            delete this._rescc['pre-check'];
            delete this._rescc['post-check'];
            delete this._rescc['no-cache'];
            delete this._rescc['no-store'];
            delete this._rescc['must-revalidate'];
            this._resHeaders = Object.assign({}, this._resHeaders, { 'cache-control': formatCacheControl(this._rescc) });
            delete this._resHeaders.expires;
            delete this._resHeaders.pragma;
        }

        // When the Cache-Control header field is not present in a request, caches MUST consider the no-cache request pragma-directive
        // as having the same effect as if "Cache-Control: no-cache" were present (see Section 5.2.1).
        if (!res.headers['cache-control'] && /no-cache/.test(res.headers.pragma)) {
            this._rescc['no-cache'] = true;
        }
    }

    CachePolicy.prototype.now = function now() {
        return Date.now();
    };

    CachePolicy.prototype.storable = function storable() {
        // The "no-store" request directive indicates that a cache MUST NOT store any part of either this request or any response to it.
        return !!(!this._reqcc['no-store'] && (
        // A cache MUST NOT store a response to any request, unless:
        // The request method is understood by the cache and defined as being cacheable, and
        'GET' === this._method || 'HEAD' === this._method || 'POST' === this._method && this._hasExplicitExpiration()) &&
        // the response status code is understood by the cache, and
        understoodStatuses.indexOf(this._status) !== -1 &&
        // the "no-store" cache directive does not appear in request or response header fields, and
        !this._rescc['no-store'] && (
        // the "private" response directive does not appear in the response, if the cache is shared, and
        !this._isShared || !this._rescc.private) && (
        // the Authorization header field does not appear in the request, if the cache is shared,
        !this._isShared || this._noAuthorization || this._allowsStoringAuthenticated()) && (
        // the response either:

        // contains an Expires header field, or
        this._resHeaders.expires ||
        // contains a max-age response directive, or
        // contains a s-maxage response directive and the cache is shared, or
        // contains a public response directive.
        this._rescc.public || this._rescc['max-age'] || this._rescc['s-maxage'] ||
        // has a status code that is defined as cacheable by default
        statusCodeCacheableByDefault.indexOf(this._status) !== -1));
    };

    CachePolicy.prototype._hasExplicitExpiration = function _hasExplicitExpiration() {
        // 4.2.1 Calculating Freshness Lifetime
        return this._isShared && this._rescc['s-maxage'] || this._rescc['max-age'] || this._resHeaders.expires;
    };

    CachePolicy.prototype._assertRequestHasHeaders = function _assertRequestHasHeaders(req) {
        if (!req || !req.headers) {
            throw Error("Request headers missing");
        }
    };

    CachePolicy.prototype.satisfiesWithoutRevalidation = function satisfiesWithoutRevalidation(req) {
        this._assertRequestHasHeaders(req);

        // When presented with a request, a cache MUST NOT reuse a stored response, unless:
        // the presented request does not contain the no-cache pragma (Section 5.4), nor the no-cache cache directive,
        // unless the stored response is successfully validated (Section 4.3), and
        var requestCC = parseCacheControl(req.headers['cache-control']);
        if (requestCC['no-cache'] || /no-cache/.test(req.headers.pragma)) {
            return false;
        }

        if (requestCC['max-age'] && this.age() > requestCC['max-age']) {
            return false;
        }

        if (requestCC['min-fresh'] && this.timeToLive() < 1000 * requestCC['min-fresh']) {
            return false;
        }

        // the stored response is either:
        // fresh, or allowed to be served stale
        if (this.stale()) {
            var allowsStale = requestCC['max-stale'] && !this._rescc['must-revalidate'] && (true === requestCC['max-stale'] || requestCC['max-stale'] > this.age() - this.maxAge());
            if (!allowsStale) {
                return false;
            }
        }

        return this._requestMatches(req, false);
    };

    CachePolicy.prototype._requestMatches = function _requestMatches(req, allowHeadMethod) {
        // The presented effective request URI and that of the stored response match, and
        return (!this._url || this._url === req.url) && this._host === req.headers.host && (
        // the request method associated with the stored response allows it to be used for the presented request, and
        !req.method || this._method === req.method || allowHeadMethod && 'HEAD' === req.method) &&
        // selecting header fields nominated by the stored response (if any) match those presented, and
        this._varyMatches(req);
    };

    CachePolicy.prototype._allowsStoringAuthenticated = function _allowsStoringAuthenticated() {
        //  following Cache-Control response directives (Section 5.2.2) have such an effect: must-revalidate, public, and s-maxage.
        return this._rescc['must-revalidate'] || this._rescc.public || this._rescc['s-maxage'];
    };

    CachePolicy.prototype._varyMatches = function _varyMatches(req) {
        if (!this._resHeaders.vary) {
            return true;
        }

        // A Vary header field-value of "*" always fails to match
        if (this._resHeaders.vary === '*') {
            return false;
        }

        var fields = this._resHeaders.vary.trim().toLowerCase().split(/\s*,\s*/);
        for (var _iterator2 = fields, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
            var _ref3;

            if (_isArray2) {
                if (_i2 >= _iterator2.length) break;
                _ref3 = _iterator2[_i2++];
            } else {
                _i2 = _iterator2.next();
                if (_i2.done) break;
                _ref3 = _i2.value;
            }

            var name = _ref3;

            if (req.headers[name] !== this._reqHeaders[name]) return false;
        }
        return true;
    };

    CachePolicy.prototype._copyWithoutHopByHopHeaders = function _copyWithoutHopByHopHeaders(inHeaders) {
        var headers = {};
        for (var name in inHeaders) {
            if (hopByHopHeaders[name]) continue;
            headers[name] = inHeaders[name];
        }
        // 9.1.  Connection
        if (inHeaders.connection) {
            var tokens = inHeaders.connection.trim().split(/\s*,\s*/);
            for (var _iterator3 = tokens, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
                var _ref4;

                if (_isArray3) {
                    if (_i3 >= _iterator3.length) break;
                    _ref4 = _iterator3[_i3++];
                } else {
                    _i3 = _iterator3.next();
                    if (_i3.done) break;
                    _ref4 = _i3.value;
                }

                var _name = _ref4;

                delete headers[_name];
            }
        }
        if (headers.warning) {
            var warnings = headers.warning.split(/,/).filter(function (warning) {
                return !/^\s*1[0-9][0-9]/.test(warning);
            });
            if (!warnings.length) {
                delete headers.warning;
            } else {
                headers.warning = warnings.join(',').trim();
            }
        }
        return headers;
    };

    CachePolicy.prototype.responseHeaders = function responseHeaders() {
        var headers = this._copyWithoutHopByHopHeaders(this._resHeaders);
        var age = this.age();

        // A cache SHOULD generate 113 warning if it heuristically chose a freshness
        // lifetime greater than 24 hours and the response's age is greater than 24 hours.
        if (age > 3600 * 24 && !this._hasExplicitExpiration() && this.maxAge() > 3600 * 24) {
            headers.warning = (headers.warning ? `${headers.warning}, ` : '') + '113 - "rfc7234 5.5.4"';
        }
        headers.age = `${Math.round(age)}`;
        return headers;
    };

    /**
     * Value of the Date response header or current time if Date was demed invalid
     * @return timestamp
     */


    CachePolicy.prototype.date = function date() {
        var dateValue = Date.parse(this._resHeaders.date);
        var maxClockDrift = 8 * 3600 * 1000;
        if (Number.isNaN(dateValue) || dateValue < this._responseTime - maxClockDrift || dateValue > this._responseTime + maxClockDrift) {
            return this._responseTime;
        }
        return dateValue;
    };

    /**
     * Value of the Age header, in seconds, updated for the current time.
     * May be fractional.
     *
     * @return Number
     */


    CachePolicy.prototype.age = function age() {
        var age = Math.max(0, (this._responseTime - this.date()) / 1000);
        if (this._resHeaders.age) {
            var ageValue = this._ageValue();
            if (ageValue > age) age = ageValue;
        }

        var residentTime = (this.now() - this._responseTime) / 1000;
        return age + residentTime;
    };

    CachePolicy.prototype._ageValue = function _ageValue() {
        var ageValue = parseInt(this._resHeaders.age);
        return isFinite(ageValue) ? ageValue : 0;
    };

    /**
     * Value of applicable max-age (or heuristic equivalent) in seconds. This counts since response's `Date`.
     *
     * For an up-to-date value, see `timeToLive()`.
     *
     * @return Number
     */


    CachePolicy.prototype.maxAge = function maxAge() {
        if (!this.storable() || this._rescc['no-cache']) {
            return 0;
        }

        // Shared responses with cookies are cacheable according to the RFC, but IMHO it'd be unwise to do so by default
        // so this implementation requires explicit opt-in via public header
        if (this._isShared && this._resHeaders['set-cookie'] && !this._rescc.public && !this._rescc.immutable) {
            return 0;
        }

        if (this._resHeaders.vary === '*') {
            return 0;
        }

        if (this._isShared) {
            if (this._rescc['proxy-revalidate']) {
                return 0;
            }
            // if a response includes the s-maxage directive, a shared cache recipient MUST ignore the Expires field.
            if (this._rescc['s-maxage']) {
                return parseInt(this._rescc['s-maxage'], 10);
            }
        }

        // If a response includes a Cache-Control field with the max-age directive, a recipient MUST ignore the Expires field.
        if (this._rescc['max-age']) {
            return parseInt(this._rescc['max-age'], 10);
        }

        var defaultMinTtl = this._rescc.immutable ? this._immutableMinTtl : 0;

        var dateValue = this.date();
        if (this._resHeaders.expires) {
            var expires = Date.parse(this._resHeaders.expires);
            // A cache recipient MUST interpret invalid date formats, especially the value "0", as representing a time in the past (i.e., "already expired").
            if (Number.isNaN(expires) || expires < dateValue) {
                return 0;
            }
            return Math.max(defaultMinTtl, (expires - dateValue) / 1000);
        }

        if (this._resHeaders['last-modified']) {
            var lastModified = Date.parse(this._resHeaders['last-modified']);
            if (isFinite(lastModified) && dateValue > lastModified) {
                return Math.max(defaultMinTtl, (dateValue - lastModified) / 1000 * this._cacheHeuristic);
            }
        }

        return defaultMinTtl;
    };

    CachePolicy.prototype.timeToLive = function timeToLive() {
        return Math.max(0, this.maxAge() - this.age()) * 1000;
    };

    CachePolicy.prototype.stale = function stale() {
        return this.maxAge() <= this.age();
    };

    CachePolicy.fromObject = function fromObject(obj) {
        return new this(undefined, undefined, { _fromObject: obj });
    };

    CachePolicy.prototype._fromObject = function _fromObject(obj) {
        if (this._responseTime) throw Error("Reinitialized");
        if (!obj || obj.v !== 1) throw Error("Invalid serialization");

        this._responseTime = obj.t;
        this._isShared = obj.sh;
        this._cacheHeuristic = obj.ch;
        this._immutableMinTtl = obj.imm !== undefined ? obj.imm : 24 * 3600 * 1000;
        this._status = obj.st;
        this._resHeaders = obj.resh;
        this._rescc = obj.rescc;
        this._method = obj.m;
        this._url = obj.u;
        this._host = obj.h;
        this._noAuthorization = obj.a;
        this._reqHeaders = obj.reqh;
        this._reqcc = obj.reqcc;
    };

    CachePolicy.prototype.toObject = function toObject() {
        return {
            v: 1,
            t: this._responseTime,
            sh: this._isShared,
            ch: this._cacheHeuristic,
            imm: this._immutableMinTtl,
            st: this._status,
            resh: this._resHeaders,
            rescc: this._rescc,
            m: this._method,
            u: this._url,
            h: this._host,
            a: this._noAuthorization,
            reqh: this._reqHeaders,
            reqcc: this._reqcc
        };
    };

    /**
     * Headers for sending to the origin server to revalidate stale response.
     * Allows server to return 304 to allow reuse of the previous response.
     *
     * Hop by hop headers are always stripped.
     * Revalidation headers may be added or removed, depending on request.
     */


    CachePolicy.prototype.revalidationHeaders = function revalidationHeaders(incomingReq) {
        this._assertRequestHasHeaders(incomingReq);
        var headers = this._copyWithoutHopByHopHeaders(incomingReq.headers);

        // This implementation does not understand range requests
        delete headers['if-range'];

        if (!this._requestMatches(incomingReq, true) || !this.storable()) {
            // revalidation allowed via HEAD
            // not for the same resource, or wasn't allowed to be cached anyway
            delete headers['if-none-match'];
            delete headers['if-modified-since'];
            return headers;
        }

        /* MUST send that entity-tag in any cache validation request (using If-Match or If-None-Match) if an entity-tag has been provided by the origin server. */
        if (this._resHeaders.etag) {
            headers['if-none-match'] = headers['if-none-match'] ? `${headers['if-none-match']}, ${this._resHeaders.etag}` : this._resHeaders.etag;
        }

        // Clients MAY issue simple (non-subrange) GET requests with either weak validators or strong validators. Clients MUST NOT use weak validators in other forms of request.
        var forbidsWeakValidators = headers['accept-ranges'] || headers['if-match'] || headers['if-unmodified-since'] || this._method && this._method != 'GET';

        /* SHOULD send the Last-Modified value in non-subrange cache validation requests (using If-Modified-Since) if only a Last-Modified value has been provided by the origin server.
        Note: This implementation does not understand partial responses (206) */
        if (forbidsWeakValidators) {
            delete headers['if-modified-since'];

            if (headers['if-none-match']) {
                var etags = headers['if-none-match'].split(/,/).filter(function (etag) {
                    return !/^\s*W\//.test(etag);
                });
                if (!etags.length) {
                    delete headers['if-none-match'];
                } else {
                    headers['if-none-match'] = etags.join(',').trim();
                }
            }
        } else if (this._resHeaders['last-modified'] && !headers['if-modified-since']) {
            headers['if-modified-since'] = this._resHeaders['last-modified'];
        }

        return headers;
    };

    /**
     * Creates new CachePolicy with information combined from the previews response,
     * and the new revalidation response.
     *
     * Returns {policy, modified} where modified is a boolean indicating
     * whether the response body has been modified, and old cached body can't be used.
     *
     * @return {Object} {policy: CachePolicy, modified: Boolean}
     */


    CachePolicy.prototype.revalidatedPolicy = function revalidatedPolicy(request, response) {
        this._assertRequestHasHeaders(request);
        if (!response || !response.headers) {
            throw Error("Response headers missing");
        }

        // These aren't going to be supported exactly, since one CachePolicy object
        // doesn't know about all the other cached objects.
        var matches = false;
        if (response.status !== undefined && response.status != 304) {
            matches = false;
        } else if (response.headers.etag && !/^\s*W\//.test(response.headers.etag)) {
            // "All of the stored responses with the same strong validator are selected.
            // If none of the stored responses contain the same strong validator,
            // then the cache MUST NOT use the new response to update any stored responses."
            matches = this._resHeaders.etag && this._resHeaders.etag.replace(/^\s*W\//, '') === response.headers.etag;
        } else if (this._resHeaders.etag && response.headers.etag) {
            // "If the new response contains a weak validator and that validator corresponds
            // to one of the cache's stored responses,
            // then the most recent of those matching stored responses is selected for update."
            matches = this._resHeaders.etag.replace(/^\s*W\//, '') === response.headers.etag.replace(/^\s*W\//, '');
        } else if (this._resHeaders['last-modified']) {
            matches = this._resHeaders['last-modified'] === response.headers['last-modified'];
        } else {
            // If the new response does not include any form of validator (such as in the case where
            // a client generates an If-Modified-Since request from a source other than the Last-Modified
            // response header field), and there is only one stored response, and that stored response also
            // lacks a validator, then that stored response is selected for update.
            if (!this._resHeaders.etag && !this._resHeaders['last-modified'] && !response.headers.etag && !response.headers['last-modified']) {
                matches = true;
            }
        }

        if (!matches) {
            return {
                policy: new this.constructor(request, response),
                modified: true
            };
        }

        // use other header fields provided in the 304 (Not Modified) response to replace all instances
        // of the corresponding header fields in the stored response.
        var headers = {};
        for (var k in this._resHeaders) {
            headers[k] = k in response.headers && !excludedFromRevalidationUpdate[k] ? response.headers[k] : this._resHeaders[k];
        }

        var newResponse = Object.assign({}, response, {
            status: this._status,
            method: this._method,
            headers
        });
        return {
            policy: new this.constructor(request, newResponse),
            modified: false
        };
    };

    return CachePolicy;
}();
},{}],1231:[function(require,module,exports){
var http = require('http')
var url = require('url')

var https = module.exports

for (var key in http) {
  if (http.hasOwnProperty(key)) https[key] = http[key]
}

https.request = function (params, cb) {
  params = validateParams(params)
  return http.request.call(this, params, cb)
}

https.get = function (params, cb) {
  params = validateParams(params)
  return http.get.call(this, params, cb)
}

function validateParams (params) {
  if (typeof params === 'string') {
    params = url.parse(params)
  }
  if (!params.protocol) {
    params.protocol = 'https:'
  }
  if (params.protocol !== 'https:') {
    throw new Error('Protocol "' + params.protocol + '" not supported. Expected "https:"')
  }
  return params
}

},{"http":1374,"url":1386}],1232:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],1233:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],1234:[function(require,module,exports){
(function (Buffer,setImmediate){
'use strict';
const from = require('from2');
const pIsPromise = require('p-is-promise');

module.exports = x => {
	if (Array.isArray(x)) {
		x = x.slice();
	}

	let promise;
	let iterator;

	prepare(x);

	function prepare(value) {
		x = value;
		promise = pIsPromise(x) ? x : null;
		// we don't iterate on strings and buffers since slicing them is ~7x faster
		const shouldIterate = !promise && x[Symbol.iterator] && typeof x !== 'string' && !Buffer.isBuffer(x);
		iterator = shouldIterate ? x[Symbol.iterator]() : null;
	}

	return from(function reader(size, cb) {
		if (promise) {
			promise.then(prepare).then(() => reader.call(this, size, cb), cb);
			return;
		}

		if (iterator) {
			const obj = iterator.next();
			setImmediate(cb, null, obj.done ? null : obj.value);
			return;
		}

		if (x.length === 0) {
			setImmediate(cb, null, null);
			return;
		}

		const chunk = x.slice(0, size);
		x = x.slice(size);

		setImmediate(cb, null, chunk);
	});
};

module.exports.obj = x => {
	if (Array.isArray(x)) {
		x = x.slice();
	}

	let promise;
	let iterator;

	prepare(x);

	function prepare(value) {
		x = value;
		promise = pIsPromise(x) ? x : null;
		iterator = !promise && x[Symbol.iterator] ? x[Symbol.iterator]() : null;
	}

	return from.obj(function reader(size, cb) {
		if (promise) {
			promise.then(prepare).then(() => reader.call(this, size, cb), cb);
			return;
		}

		if (iterator) {
			const obj = iterator.next();
			setImmediate(cb, null, obj.done ? null : obj.value);
			return;
		}

		this.push(x);

		setImmediate(cb, null, null);
	});
};

}).call(this,{"isBuffer":require("../is-buffer/index.js")},require("timers").setImmediate)
},{"../is-buffer/index.js":1235,"from2":1207,"p-is-promise":1313,"timers":1382}],1235:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],1236:[function(require,module,exports){
(function (process){
// https://github.com/electron/electron/issues/2288
function isElectron() {
    // Renderer process
    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {
        return true;
    }

    // Main process
    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {
        return true;
    }

    // Detect the user agent when the `nodeIntegration` option is set to true
    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {
        return true;
    }

    return false;
}

module.exports = isElectron;

}).call(this,require('_process'))
},{"_process":1327}],1237:[function(require,module,exports){
"use strict";

module.exports = function isObject(x) {
	return typeof x === "object" && x !== null;
};

},{}],1238:[function(require,module,exports){
'use strict';
var toString = Object.prototype.toString;

module.exports = function (x) {
	var prototype;
	return toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));
};

},{}],1239:[function(require,module,exports){
'use strict';

var WHITELIST = [
	'ETIMEDOUT',
	'ECONNRESET',
	'EADDRINUSE',
	'ESOCKETTIMEDOUT',
	'ECONNREFUSED',
	'EPIPE'
];

var BLACKLIST = [
	'ENOTFOUND',
	'ENETUNREACH',

	// SSL errors from https://github.com/nodejs/node/blob/ed3d8b13ee9a705d89f9e0397d9e96519e7e47ac/src/node_crypto.cc#L1950
	'UNABLE_TO_GET_ISSUER_CERT',
	'UNABLE_TO_GET_CRL',
	'UNABLE_TO_DECRYPT_CERT_SIGNATURE',
	'UNABLE_TO_DECRYPT_CRL_SIGNATURE',
	'UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY',
	'CERT_SIGNATURE_FAILURE',
	'CRL_SIGNATURE_FAILURE',
	'CERT_NOT_YET_VALID',
	'CERT_HAS_EXPIRED',
	'CRL_NOT_YET_VALID',
	'CRL_HAS_EXPIRED',
	'ERROR_IN_CERT_NOT_BEFORE_FIELD',
	'ERROR_IN_CERT_NOT_AFTER_FIELD',
	'ERROR_IN_CRL_LAST_UPDATE_FIELD',
	'ERROR_IN_CRL_NEXT_UPDATE_FIELD',
	'OUT_OF_MEM',
	'DEPTH_ZERO_SELF_SIGNED_CERT',
	'SELF_SIGNED_CERT_IN_CHAIN',
	'UNABLE_TO_GET_ISSUER_CERT_LOCALLY',
	'UNABLE_TO_VERIFY_LEAF_SIGNATURE',
	'CERT_CHAIN_TOO_LONG',
	'CERT_REVOKED',
	'INVALID_CA',
	'PATH_LENGTH_EXCEEDED',
	'INVALID_PURPOSE',
	'CERT_UNTRUSTED',
	'CERT_REJECTED'
];

module.exports = function (err) {
	if (!err || !err.code) {
		return true;
	}

	if (WHITELIST.indexOf(err.code) !== -1) {
		return true;
	}

	if (BLACKLIST.indexOf(err.code) !== -1) {
		return false;
	}

	return true;
};

},{}],1240:[function(require,module,exports){

exports = module.exports = function(bytes)
{
    var i = 0;
    while(i < bytes.length)
    {
        if(     (// ASCII
                    bytes[i] == 0x09 ||
                    bytes[i] == 0x0A ||
                    bytes[i] == 0x0D ||
                    (0x20 <= bytes[i] && bytes[i] <= 0x7E)
                )
          ) {
              i += 1;
              continue;
          }

        if(     (// non-overlong 2-byte
                    (0xC2 <= bytes[i] && bytes[i] <= 0xDF) &&
                    (0x80 <= bytes[i+1] && bytes[i+1] <= 0xBF)
                )
          ) {
              i += 2;
              continue;
          }

        if(     (// excluding overlongs
                    bytes[i] == 0xE0 &&
                    (0xA0 <= bytes[i + 1] && bytes[i + 1] <= 0xBF) &&
                    (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF)
                ) ||
                (// straight 3-byte
                 ((0xE1 <= bytes[i] && bytes[i] <= 0xEC) ||
                  bytes[i] == 0xEE ||
                  bytes[i] == 0xEF) &&
                 (0x80 <= bytes[i + 1] && bytes[i+1] <= 0xBF) &&
                 (0x80 <= bytes[i+2] && bytes[i+2] <= 0xBF)
                ) ||
                (// excluding surrogates
                 bytes[i] == 0xED &&
                 (0x80 <= bytes[i+1] && bytes[i+1] <= 0x9F) &&
                 (0x80 <= bytes[i+2] && bytes[i+2] <= 0xBF)
                )
          ) {
              i += 3;
              continue;
          }

        if(     (// planes 1-3
                    bytes[i] == 0xF0 &&
                    (0x90 <= bytes[i + 1] && bytes[i + 1] <= 0xBF) &&
                    (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF) &&
                    (0x80 <= bytes[i + 3] && bytes[i + 3] <= 0xBF)
                ) ||
                (// planes 4-15
                 (0xF1 <= bytes[i] && bytes[i] <= 0xF3) &&
                 (0x80 <= bytes[i + 1] && bytes[i + 1] <= 0xBF) &&
                 (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF) &&
                 (0x80 <= bytes[i + 3] && bytes[i + 3] <= 0xBF)
                ) ||
                (// plane 16
                 bytes[i] == 0xF4 &&
                 (0x80 <= bytes[i + 1] && bytes[i + 1] <= 0x8F) &&
                 (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF) &&
                 (0x80 <= bytes[i + 3] && bytes[i + 3] <= 0xBF)
                )
          ) {
              i += 4;
              continue;
          }

        return false;
    }

    return true;
}

},{}],1241:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],1242:[function(require,module,exports){
"use strict";
const hasToStringTag = require("has-to-string-tag-x");
const isObject = require("is-object");

const toString = Object.prototype.toString;
const urlClass = "[object URL]";

const hash = "hash";
const host = "host";
const hostname = "hostname";
const href = "href";
const password = "password";
const pathname = "pathname";
const port = "port";
const protocol = "protocol";
const search = "search";
const username = "username";



const isURL = (url, supportIncomplete/*=false*/) =>
{
	if (!isObject(url)) return false;

	// Native implementation in older browsers
	if (!hasToStringTag && toString.call(url) === urlClass) return true;

	if (!(href     in url)) return false;
	if (!(protocol in url)) return false;
	if (!(username in url)) return false;
	if (!(password in url)) return false;
	if (!(hostname in url)) return false;
	if (!(port     in url)) return false;
	if (!(host     in url)) return false;
	if (!(pathname in url)) return false;
	if (!(search   in url)) return false;
	if (!(hash     in url)) return false;

	if (supportIncomplete !== true)
	{
		if (!isObject(url.searchParams)) return false;

		// TODO :: write a separate isURLSearchParams ?
	}

	return true;
}



isURL.lenient = url =>
{
	return isURL(url, true);
};



module.exports = isURL;

},{"has-to-string-tag-x":1215,"is-object":1237}],1243:[function(require,module,exports){
(function (Buffer){
//TODO: handle reviver/dehydrate function like normal
//and handle indentation, like normal.
//if anyone needs this... please send pull request.

exports.stringify = function stringify (o) {
  if('undefined' == typeof o) return o

  if(o && Buffer.isBuffer(o))
    return JSON.stringify(':base64:' + o.toString('base64'))

  if(o && o.toJSON)
    o =  o.toJSON()

  if(o && 'object' === typeof o) {
    var s = ''
    var array = Array.isArray(o)
    s = array ? '[' : '{'
    var first = true

    for(var k in o) {
      var ignore = 'function' == typeof o[k] || (!array && 'undefined' === typeof o[k])
      if(Object.hasOwnProperty.call(o, k) && !ignore) {
        if(!first)
          s += ','
        first = false
        if (array) {
          if(o[k] == undefined)
            s += 'null'
          else
            s += stringify(o[k])
        } else if (o[k] !== void(0)) {
          s += stringify(k) + ':' + stringify(o[k])
        }
      }
    }

    s += array ? ']' : '}'

    return s
  } else if ('string' === typeof o) {
    return JSON.stringify(/^:/.test(o) ? ':' + o : o)
  } else if ('undefined' === typeof o) {
    return 'null';
  } else
    return JSON.stringify(o)
}

exports.parse = function (s) {
  return JSON.parse(s, function (key, value) {
    if('string' === typeof value) {
      if(/^:base64:/.test(value))
        return new Buffer(value.substring(8), 'base64')
      else
        return /^:/.test(value) ? value.substring(1) : value 
    }
    return value
  })
}

}).call(this,require("buffer").Buffer)
},{"buffer":71}],1244:[function(require,module,exports){
'use strict';

const EventEmitter = require('events');
const JSONB = require('json-buffer');

const loadStore = opts => {
	const adapters = {
		redis: '@keyv/redis',
		mongodb: '@keyv/mongo',
		mongo: '@keyv/mongo',
		sqlite: '@keyv/sqlite',
		postgresql: '@keyv/postgres',
		postgres: '@keyv/postgres',
		mysql: '@keyv/mysql'
	};
	if (opts.adapter || opts.uri) {
		const adapter = opts.adapter || /^[^:]*/.exec(opts.uri)[0];
		return new (require(adapters[adapter]))(opts);
	}
	return new Map();
};

class Keyv extends EventEmitter {
	constructor(uri, opts) {
		super();
		this.opts = Object.assign(
			{ namespace: 'keyv' },
			(typeof uri === 'string') ? { uri } : uri,
			opts
		);

		if (!this.opts.store) {
			const adapterOpts = Object.assign({}, this.opts);
			this.opts.store = loadStore(adapterOpts);
		}

		if (typeof this.opts.store.on === 'function') {
			this.opts.store.on('error', err => this.emit('error', err));
		}

		this.opts.store.namespace = this.opts.namespace;
	}

	_getKeyPrefix(key) {
		return `${this.opts.namespace}:${key}`;
	}

	get(key) {
		key = this._getKeyPrefix(key);
		const store = this.opts.store;
		return Promise.resolve()
			.then(() => store.get(key))
			.then(data => {
				data = (typeof data === 'string') ? JSONB.parse(data) : data;
				if (data === undefined) {
					return undefined;
				}
				if (typeof data.expires === 'number' && Date.now() > data.expires) {
					this.delete(key);
					return undefined;
				}
				return data.value;
			});
	}

	set(key, value, ttl) {
		key = this._getKeyPrefix(key);
		if (typeof ttl === 'undefined') {
			ttl = this.opts.ttl;
		}
		if (ttl === 0) {
			ttl = undefined;
		}
		const store = this.opts.store;

		return Promise.resolve()
			.then(() => {
				const expires = (typeof ttl === 'number') ? (Date.now() + ttl) : null;
				value = { value, expires };
				return store.set(key, JSONB.stringify(value), ttl);
			})
			.then(() => true);
	}

	delete(key) {
		key = this._getKeyPrefix(key);
		const store = this.opts.store;
		return Promise.resolve()
			.then(() => store.delete(key));
	}

	clear() {
		const store = this.opts.store;
		return Promise.resolve()
			.then(() => store.clear());
	}
}

module.exports = Keyv;

},{"events":143,"json-buffer":1243}],1245:[function(require,module,exports){
var hashClear = require('./_hashClear'),
    hashDelete = require('./_hashDelete'),
    hashGet = require('./_hashGet'),
    hashHas = require('./_hashHas'),
    hashSet = require('./_hashSet');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;

},{"./_hashClear":1266,"./_hashDelete":1267,"./_hashGet":1268,"./_hashHas":1269,"./_hashSet":1270}],1246:[function(require,module,exports){
var listCacheClear = require('./_listCacheClear'),
    listCacheDelete = require('./_listCacheDelete'),
    listCacheGet = require('./_listCacheGet'),
    listCacheHas = require('./_listCacheHas'),
    listCacheSet = require('./_listCacheSet');

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;

},{"./_listCacheClear":1275,"./_listCacheDelete":1276,"./_listCacheGet":1277,"./_listCacheHas":1278,"./_listCacheSet":1279}],1247:[function(require,module,exports){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;

},{"./_getNative":1263,"./_root":1288}],1248:[function(require,module,exports){
var mapCacheClear = require('./_mapCacheClear'),
    mapCacheDelete = require('./_mapCacheDelete'),
    mapCacheGet = require('./_mapCacheGet'),
    mapCacheHas = require('./_mapCacheHas'),
    mapCacheSet = require('./_mapCacheSet');

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;

},{"./_mapCacheClear":1280,"./_mapCacheDelete":1281,"./_mapCacheGet":1282,"./_mapCacheHas":1283,"./_mapCacheSet":1284}],1249:[function(require,module,exports){
var root = require('./_root');

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;

},{"./_root":1288}],1250:[function(require,module,exports){
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;

},{}],1251:[function(require,module,exports){
var baseAssignValue = require('./_baseAssignValue'),
    eq = require('./eq');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;

},{"./_baseAssignValue":1253,"./eq":1292}],1252:[function(require,module,exports){
var eq = require('./eq');

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;

},{"./eq":1292}],1253:[function(require,module,exports){
var defineProperty = require('./_defineProperty');

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;

},{"./_defineProperty":1260}],1254:[function(require,module,exports){
var Symbol = require('./_Symbol'),
    getRawTag = require('./_getRawTag'),
    objectToString = require('./_objectToString');

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;

},{"./_Symbol":1249,"./_getRawTag":1264,"./_objectToString":1287}],1255:[function(require,module,exports){
var isFunction = require('./isFunction'),
    isMasked = require('./_isMasked'),
    isObject = require('./isObject'),
    toSource = require('./_toSource');

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;

},{"./_isMasked":1274,"./_toSource":1291,"./isFunction":1294,"./isObject":1295}],1256:[function(require,module,exports){
var assignValue = require('./_assignValue'),
    castPath = require('./_castPath'),
    isIndex = require('./_isIndex'),
    isObject = require('./isObject'),
    toKey = require('./_toKey');

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue)
          ? objValue
          : (isIndex(path[index + 1]) ? [] : {});
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;

},{"./_assignValue":1251,"./_castPath":1258,"./_isIndex":1271,"./_toKey":1290,"./isObject":1295}],1257:[function(require,module,exports){
var Symbol = require('./_Symbol'),
    arrayMap = require('./_arrayMap'),
    isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;

},{"./_Symbol":1249,"./_arrayMap":1250,"./isArray":1293,"./isSymbol":1297}],1258:[function(require,module,exports){
var isArray = require('./isArray'),
    isKey = require('./_isKey'),
    stringToPath = require('./_stringToPath'),
    toString = require('./toString');

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;

},{"./_isKey":1272,"./_stringToPath":1289,"./isArray":1293,"./toString":1301}],1259:[function(require,module,exports){
var root = require('./_root');

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;

},{"./_root":1288}],1260:[function(require,module,exports){
var getNative = require('./_getNative');

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;

},{"./_getNative":1263}],1261:[function(require,module,exports){
(function (global){
/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],1262:[function(require,module,exports){
var isKeyable = require('./_isKeyable');

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;

},{"./_isKeyable":1273}],1263:[function(require,module,exports){
var baseIsNative = require('./_baseIsNative'),
    getValue = require('./_getValue');

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;

},{"./_baseIsNative":1255,"./_getValue":1265}],1264:[function(require,module,exports){
var Symbol = require('./_Symbol');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;

},{"./_Symbol":1249}],1265:[function(require,module,exports){
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;

},{}],1266:[function(require,module,exports){
var nativeCreate = require('./_nativeCreate');

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;

},{"./_nativeCreate":1286}],1267:[function(require,module,exports){
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;

},{}],1268:[function(require,module,exports){
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;

},{"./_nativeCreate":1286}],1269:[function(require,module,exports){
var nativeCreate = require('./_nativeCreate');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;

},{"./_nativeCreate":1286}],1270:[function(require,module,exports){
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;

},{"./_nativeCreate":1286}],1271:[function(require,module,exports){
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;

},{}],1272:[function(require,module,exports){
var isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;

},{"./isArray":1293,"./isSymbol":1297}],1273:[function(require,module,exports){
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;

},{}],1274:[function(require,module,exports){
var coreJsData = require('./_coreJsData');

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;

},{"./_coreJsData":1259}],1275:[function(require,module,exports){
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;

},{}],1276:[function(require,module,exports){
var assocIndexOf = require('./_assocIndexOf');

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;

},{"./_assocIndexOf":1252}],1277:[function(require,module,exports){
var assocIndexOf = require('./_assocIndexOf');

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;

},{"./_assocIndexOf":1252}],1278:[function(require,module,exports){
var assocIndexOf = require('./_assocIndexOf');

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;

},{"./_assocIndexOf":1252}],1279:[function(require,module,exports){
var assocIndexOf = require('./_assocIndexOf');

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;

},{"./_assocIndexOf":1252}],1280:[function(require,module,exports){
var Hash = require('./_Hash'),
    ListCache = require('./_ListCache'),
    Map = require('./_Map');

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;

},{"./_Hash":1245,"./_ListCache":1246,"./_Map":1247}],1281:[function(require,module,exports){
var getMapData = require('./_getMapData');

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;

},{"./_getMapData":1262}],1282:[function(require,module,exports){
var getMapData = require('./_getMapData');

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;

},{"./_getMapData":1262}],1283:[function(require,module,exports){
var getMapData = require('./_getMapData');

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;

},{"./_getMapData":1262}],1284:[function(require,module,exports){
var getMapData = require('./_getMapData');

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;

},{"./_getMapData":1262}],1285:[function(require,module,exports){
var memoize = require('./memoize');

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;

},{"./memoize":1299}],1286:[function(require,module,exports){
var getNative = require('./_getNative');

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;

},{"./_getNative":1263}],1287:[function(require,module,exports){
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

},{}],1288:[function(require,module,exports){
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;

},{"./_freeGlobal":1261}],1289:[function(require,module,exports){
var memoizeCapped = require('./_memoizeCapped');

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;

},{"./_memoizeCapped":1285}],1290:[function(require,module,exports){
var isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;

},{"./isSymbol":1297}],1291:[function(require,module,exports){
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;

},{}],1292:[function(require,module,exports){
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;

},{}],1293:[function(require,module,exports){
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;

},{}],1294:[function(require,module,exports){
var baseGetTag = require('./_baseGetTag'),
    isObject = require('./isObject');

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;

},{"./_baseGetTag":1254,"./isObject":1295}],1295:[function(require,module,exports){
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

},{}],1296:[function(require,module,exports){
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;

},{}],1297:[function(require,module,exports){
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;

},{"./_baseGetTag":1254,"./isObjectLike":1296}],1298:[function(require,module,exports){
(function (global){
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.10';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Gets the value at `key`, unless `key` is "__proto__".
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function safeGet(object, key) {
    return key == '__proto__'
      ? undefined
      : object[key];
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });

        return result;
      }

      if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });

        return result;
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    define(function() {
      return _;
    });
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],1299:[function(require,module,exports){
var MapCache = require('./_MapCache');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;

},{"./_MapCache":1248}],1300:[function(require,module,exports){
var baseSet = require('./_baseSet');

/**
 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
 * it's created. Arrays are created for missing index properties while objects
 * are created for all other missing properties. Use `_.setWith` to customize
 * `path` creation.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.set(object, 'a[0].b.c', 4);
 * console.log(object.a[0].b.c);
 * // => 4
 *
 * _.set(object, ['x', '0', 'y', 'z'], 5);
 * console.log(object.x[0].y.z);
 * // => 5
 */
function set(object, path, value) {
  return object == null ? object : baseSet(object, path, value);
}

module.exports = set;

},{"./_baseSet":1256}],1301:[function(require,module,exports){
var baseToString = require('./_baseToString');

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;

},{"./_baseToString":1257}],1302:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"dup":73}],1303:[function(require,module,exports){
(function (Buffer){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

}).call(this,require("buffer").Buffer)
},{"buffer":71,"hash-base":1216,"inherits":1233}],1304:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":38,"brorand":39}],1305:[function(require,module,exports){
'use strict';

// We define these manually to ensure they're always copied
// even if they would move up the prototype chain
// https://nodejs.org/api/http.html#http_class_http_incomingmessage
const knownProps = [
	'destroy',
	'setTimeout',
	'socket',
	'headers',
	'trailers',
	'rawHeaders',
	'statusCode',
	'httpVersion',
	'httpVersionMinor',
	'httpVersionMajor',
	'rawTrailers',
	'statusMessage'
];

module.exports = (fromStream, toStream) => {
	const toProps = Object.keys(toStream);
	const fromProps = new Set(Object.keys(fromStream).concat(knownProps));

	for (const prop of fromProps) {
		// Don't overwrite existing properties
		if (toProps.indexOf(prop) !== -1) {
			continue;
		}

		toStream[prop] = typeof fromStream[prop] === 'function' ? fromStream[prop].bind(fromStream) : fromStream[prop];
	}
};

},{}],1306:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],1307:[function(require,module,exports){
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

},{}],1308:[function(require,module,exports){
'use strict';
const url = require('url');
const punycode = require('punycode');
const queryString = require('query-string');
const prependHttp = require('prepend-http');
const sortKeys = require('sort-keys');

const DEFAULT_PORTS = {
	'http:': 80,
	'https:': 443,
	'ftp:': 21
};

// Protocols that always contain a `//`` bit
const slashedProtocol = {
	http: true,
	https: true,
	ftp: true,
	gopher: true,
	file: true,
	'http:': true,
	'https:': true,
	'ftp:': true,
	'gopher:': true,
	'file:': true
};

function testParameter(name, filters) {
	return filters.some(filter => filter instanceof RegExp ? filter.test(name) : filter === name);
}

module.exports = (str, opts) => {
	opts = Object.assign({
		normalizeProtocol: true,
		normalizeHttps: false,
		stripFragment: true,
		stripWWW: true,
		removeQueryParameters: [/^utm_\w+/i],
		removeTrailingSlash: true,
		removeDirectoryIndex: false,
		sortQueryParameters: true
	}, opts);

	if (typeof str !== 'string') {
		throw new TypeError('Expected a string');
	}

	const hasRelativeProtocol = str.startsWith('//');

	// Prepend protocol
	str = prependHttp(str.trim()).replace(/^\/\//, 'http://');

	const urlObj = url.parse(str);

	if (opts.normalizeHttps && urlObj.protocol === 'https:') {
		urlObj.protocol = 'http:';
	}

	if (!urlObj.hostname && !urlObj.pathname) {
		throw new Error('Invalid URL');
	}

	// Prevent these from being used by `url.format`
	delete urlObj.host;
	delete urlObj.query;

	// Remove fragment
	if (opts.stripFragment) {
		delete urlObj.hash;
	}

	// Remove default port
	const port = DEFAULT_PORTS[urlObj.protocol];
	if (Number(urlObj.port) === port) {
		delete urlObj.port;
	}

	// Remove duplicate slashes
	if (urlObj.pathname) {
		urlObj.pathname = urlObj.pathname.replace(/\/{2,}/g, '/');
	}

	// Decode URI octets
	if (urlObj.pathname) {
		urlObj.pathname = decodeURI(urlObj.pathname);
	}

	// Remove directory index
	if (opts.removeDirectoryIndex === true) {
		opts.removeDirectoryIndex = [/^index\.[a-z]+$/];
	}

	if (Array.isArray(opts.removeDirectoryIndex) && opts.removeDirectoryIndex.length > 0) {
		let pathComponents = urlObj.pathname.split('/');
		const lastComponent = pathComponents[pathComponents.length - 1];

		if (testParameter(lastComponent, opts.removeDirectoryIndex)) {
			pathComponents = pathComponents.slice(0, pathComponents.length - 1);
			urlObj.pathname = pathComponents.slice(1).join('/') + '/';
		}
	}

	// Resolve relative paths, but only for slashed protocols
	if (slashedProtocol[urlObj.protocol]) {
		const domain = urlObj.protocol + '//' + urlObj.hostname;
		const relative = url.resolve(domain, urlObj.pathname);
		urlObj.pathname = relative.replace(domain, '');
	}

	if (urlObj.hostname) {
		// IDN to Unicode
		urlObj.hostname = punycode.toUnicode(urlObj.hostname).toLowerCase();

		// Remove trailing dot
		urlObj.hostname = urlObj.hostname.replace(/\.$/, '');

		// Remove `www.`
		if (opts.stripWWW) {
			urlObj.hostname = urlObj.hostname.replace(/^www\./, '');
		}
	}

	// Remove URL with empty query string
	if (urlObj.search === '?') {
		delete urlObj.search;
	}

	const queryParameters = queryString.parse(urlObj.search);

	// Remove query unwanted parameters
	if (Array.isArray(opts.removeQueryParameters)) {
		for (const key in queryParameters) {
			if (testParameter(key, opts.removeQueryParameters)) {
				delete queryParameters[key];
			}
		}
	}

	// Sort query parameters
	if (opts.sortQueryParameters) {
		urlObj.search = queryString.stringify(sortKeys(queryParameters));
	}

	// Decode query parameters
	if (urlObj.search !== null) {
		urlObj.search = decodeURIComponent(urlObj.search);
	}

	// Take advantage of many of the Node `url` normalizations
	str = url.format(urlObj);

	// Remove ending `/`
	if (opts.removeTrailingSlash || urlObj.pathname === '/') {
		str = str.replace(/\/$/, '');
	}

	// Restore relative protocol, if applicable
	if (hasRelativeProtocol && !opts.normalizeProtocol) {
		str = str.replace(/^http:\/\//, '//');
	}

	return str;
};

},{"prepend-http":1325,"punycode":69,"query-string":1336,"sort-keys":1372,"url":1386}],1309:[function(require,module,exports){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],1310:[function(require,module,exports){
exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

exports.homedir = function () {
	return '/'
};

},{}],1311:[function(require,module,exports){
'use strict';

class CancelError extends Error {
	constructor() {
		super('Promise was canceled');
		this.name = 'CancelError';
	}

	get isCanceled() {
		return true;
	}
}

class PCancelable {
	static fn(userFn) {
		return function () {
			const args = [].slice.apply(arguments);
			return new PCancelable((resolve, reject, onCancel) => {
				args.push(onCancel);
				userFn.apply(null, args).then(resolve, reject);
			});
		};
	}

	constructor(executor) {
		this._cancelHandlers = [];
		this._isPending = true;
		this._isCanceled = false;

		this._promise = new Promise((resolve, reject) => {
			this._reject = reject;

			return executor(
				value => {
					this._isPending = false;
					resolve(value);
				},
				error => {
					this._isPending = false;
					reject(error);
				},
				handler => {
					this._cancelHandlers.push(handler);
				}
			);
		});
	}

	then(onFulfilled, onRejected) {
		return this._promise.then(onFulfilled, onRejected);
	}

	catch(onRejected) {
		return this._promise.catch(onRejected);
	}

	finally(onFinally) {
		return this._promise.finally(onFinally);
	}

	cancel() {
		if (!this._isPending || this._isCanceled) {
			return;
		}

		if (this._cancelHandlers.length > 0) {
			try {
				for (const handler of this._cancelHandlers) {
					handler();
				}
			} catch (err) {
				this._reject(err);
			}
		}

		this._isCanceled = true;
		this._reject(new CancelError());
	}

	get isCanceled() {
		return this._isCanceled;
	}
}

Object.setPrototypeOf(PCancelable.prototype, Promise.prototype);

module.exports = PCancelable;
module.exports.CancelError = CancelError;

},{}],1312:[function(require,module,exports){
'use strict';
module.exports = (promise, onFinally) => {
	onFinally = onFinally || (() => {});

	return promise.then(
		val => new Promise(resolve => {
			resolve(onFinally());
		}).then(() => val),
		err => new Promise(resolve => {
			resolve(onFinally());
		}).then(() => {
			throw err;
		})
	);
};

},{}],1313:[function(require,module,exports){
'use strict';
module.exports = x => (
	x instanceof Promise ||
	(
		x !== null &&
		typeof x === 'object' &&
		typeof x.then === 'function' &&
		typeof x.catch === 'function'
	)
);

},{}],1314:[function(require,module,exports){
'use strict';
const pFinally = require('p-finally');

class TimeoutError extends Error {
	constructor(message) {
		super(message);
		this.name = 'TimeoutError';
	}
}

module.exports = (promise, ms, fallback) => new Promise((resolve, reject) => {
	if (typeof ms !== 'number' || ms < 0) {
		throw new TypeError('Expected `ms` to be a positive number');
	}

	const timer = setTimeout(() => {
		if (typeof fallback === 'function') {
			try {
				resolve(fallback());
			} catch (err) {
				reject(err);
			}
			return;
		}

		const message = typeof fallback === 'string' ? fallback : `Promise timed out after ${ms} milliseconds`;
		const err = fallback instanceof Error ? fallback : new TimeoutError(message);

		if (typeof promise.cancel === 'function') {
			promise.cancel();
		}

		reject(err);
	}, ms);

	pFinally(
		promise.then(resolve, reject),
		() => {
			clearTimeout(timer);
		}
	);
});

module.exports.TimeoutError = TimeoutError;

},{"p-finally":1312}],1315:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],1316:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict'

var asn1 = require('asn1.js')

exports.certificate = require('./certificate')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"./certificate":1317,"asn1.js":23}],1317:[function(require,module,exports){
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

'use strict'

var asn = require('asn1.js')

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate

},{"asn1.js":23}],1318:[function(require,module,exports){
(function (Buffer){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

}).call(this,require("buffer").Buffer)
},{"browserify-aes":43,"buffer":71,"evp_bytestokey":144}],1319:[function(require,module,exports){
(function (Buffer){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

}).call(this,require("buffer").Buffer)
},{"./aesid.json":1315,"./asn1":1316,"./fixProc":1318,"browserify-aes":43,"buffer":71,"pbkdf2":1320}],1320:[function(require,module,exports){
exports.pbkdf2 = require('./lib/async')
exports.pbkdf2Sync = require('./lib/sync')

},{"./lib/async":1321,"./lib/sync":1324}],1321:[function(require,module,exports){
(function (process,global){
var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var sync = require('./sync')
var Buffer = require('safe-buffer').Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}

function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }

  checkParameters(password, salt, iterations, keylen)
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./default-encoding":1322,"./precondition":1323,"./sync":1324,"_process":1327,"safe-buffer":1363}],1322:[function(require,module,exports){
(function (process){
var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
}
module.exports = defaultEncoding

}).call(this,require('_process'))
},{"_process":1327}],1323:[function(require,module,exports){
(function (Buffer){
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

function checkBuffer (buf, name) {
  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {
    throw new TypeError(name + ' must be a buffer or string')
  }
}

module.exports = function (password, salt, iterations, keylen) {
  checkBuffer(password, 'Password')
  checkBuffer(salt, 'Salt')

  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":1235}],1324:[function(require,module,exports){
var md5 = require('create-hash/md5')
var rmd160 = require('ripemd160')
var sha = require('sha.js')

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var Buffer = require('safe-buffer').Buffer
var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(password, salt, iterations, keylen)

  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2

},{"./default-encoding":1322,"./precondition":1323,"create-hash/md5":83,"ripemd160":1362,"safe-buffer":1363,"sha.js":1365}],1325:[function(require,module,exports){
'use strict';
module.exports = (url, opts) => {
	if (typeof url !== 'string') {
		throw new TypeError(`Expected \`url\` to be of type \`string\`, got \`${typeof url}\``);
	}

	url = url.trim();
	opts = Object.assign({https: false}, opts);

	if (/^\.*\/|^(?!localhost)\w+:/.test(url)) {
		return url;
	}

	return url.replace(/^(?!(?:\w+:)?\/\/)/, opts.https ? 'https://' : 'http://');
};

},{}],1326:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


}).call(this,require('_process'))
},{"_process":1327}],1327:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],1328:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require('fbjs/lib/invariant');
  var warning = require('fbjs/lib/warning');
  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;

}).call(this,require('_process'))
},{"./lib/ReactPropTypesSecret":1329,"_process":1327,"fbjs/lib/invariant":1202,"fbjs/lib/warning":1206}],1329:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],1330:[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt');
exports.privateDecrypt = require('./privateDecrypt');

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};
},{"./privateDecrypt":1332,"./publicEncrypt":1333}],1331:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash');
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
}).call(this,require("buffer").Buffer)
},{"buffer":71,"create-hash":82}],1332:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var crt = require('browserify-rsa');
var createHash = require('create-hash');
var withPublic = require('./withPublic');
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":1331,"./withPublic":1334,"./xor":1335,"bn.js":38,"browserify-rsa":61,"buffer":71,"create-hash":82,"parse-asn1":1319}],1333:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var randomBytes = require('randombytes');
var createHash = require('create-hash');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var withPublic = require('./withPublic');
var crt = require('browserify-rsa');

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":1331,"./withPublic":1334,"./xor":1335,"bn.js":38,"browserify-rsa":61,"buffer":71,"create-hash":82,"parse-asn1":1319,"randombytes":1340}],1334:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
}).call(this,require("buffer").Buffer)
},{"bn.js":38,"buffer":71}],1335:[function(require,module,exports){
module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};
},{}],1336:[function(require,module,exports){
'use strict';
var strictUriEncode = require('strict-uri-encode');
var objectAssign = require('object-assign');
var decodeComponent = require('decode-uri-component');

function encoderForArrayFormat(opts) {
	switch (opts.arrayFormat) {
		case 'index':
			return function (key, value, index) {
				return value === null ? [
					encode(key, opts),
					'[',
					index,
					']'
				].join('') : [
					encode(key, opts),
					'[',
					encode(index, opts),
					']=',
					encode(value, opts)
				].join('');
			};

		case 'bracket':
			return function (key, value) {
				return value === null ? encode(key, opts) : [
					encode(key, opts),
					'[]=',
					encode(value, opts)
				].join('');
			};

		default:
			return function (key, value) {
				return value === null ? encode(key, opts) : [
					encode(key, opts),
					'=',
					encode(value, opts)
				].join('');
			};
	}
}

function parserForArrayFormat(opts) {
	var result;

	switch (opts.arrayFormat) {
		case 'index':
			return function (key, value, accumulator) {
				result = /\[(\d*)\]$/.exec(key);

				key = key.replace(/\[\d*\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = {};
				}

				accumulator[key][result[1]] = value;
			};

		case 'bracket':
			return function (key, value, accumulator) {
				result = /(\[\])$/.exec(key);
				key = key.replace(/\[\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				} else if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		default:
			return function (key, value, accumulator) {
				if (accumulator[key] === undefined) {
					accumulator[key] = value;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};
	}
}

function encode(value, opts) {
	if (opts.encode) {
		return opts.strict ? strictUriEncode(value) : encodeURIComponent(value);
	}

	return value;
}

function keysSorter(input) {
	if (Array.isArray(input)) {
		return input.sort();
	} else if (typeof input === 'object') {
		return keysSorter(Object.keys(input)).sort(function (a, b) {
			return Number(a) - Number(b);
		}).map(function (key) {
			return input[key];
		});
	}

	return input;
}

function extract(str) {
	var queryStart = str.indexOf('?');
	if (queryStart === -1) {
		return '';
	}
	return str.slice(queryStart + 1);
}

function parse(str, opts) {
	opts = objectAssign({arrayFormat: 'none'}, opts);

	var formatter = parserForArrayFormat(opts);

	// Create an object with no prototype
	// https://github.com/sindresorhus/query-string/issues/47
	var ret = Object.create(null);

	if (typeof str !== 'string') {
		return ret;
	}

	str = str.trim().replace(/^[?#&]/, '');

	if (!str) {
		return ret;
	}

	str.split('&').forEach(function (param) {
		var parts = param.replace(/\+/g, ' ').split('=');
		// Firefox (pre 40) decodes `%3D` to `=`
		// https://github.com/sindresorhus/query-string/pull/37
		var key = parts.shift();
		var val = parts.length > 0 ? parts.join('=') : undefined;

		// missing `=` should be `null`:
		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
		val = val === undefined ? null : decodeComponent(val);

		formatter(decodeComponent(key), val, ret);
	});

	return Object.keys(ret).sort().reduce(function (result, key) {
		var val = ret[key];
		if (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {
			// Sort object keys, not values
			result[key] = keysSorter(val);
		} else {
			result[key] = val;
		}

		return result;
	}, Object.create(null));
}

exports.extract = extract;
exports.parse = parse;

exports.stringify = function (obj, opts) {
	var defaults = {
		encode: true,
		strict: true,
		arrayFormat: 'none'
	};

	opts = objectAssign(defaults, opts);

	if (opts.sort === false) {
		opts.sort = function () {};
	}

	var formatter = encoderForArrayFormat(opts);

	return obj ? Object.keys(obj).sort(opts.sort).map(function (key) {
		var val = obj[key];

		if (val === undefined) {
			return '';
		}

		if (val === null) {
			return encode(key, opts);
		}

		if (Array.isArray(val)) {
			var result = [];

			val.slice().forEach(function (val2) {
				if (val2 === undefined) {
					return;
				}

				result.push(formatter(key, val2, result.length));
			});

			return result.join('&');
		}

		return encode(key, opts) + '=' + encode(val, opts);
	}).filter(function (x) {
		return x.length > 0;
	}).join('&') : '';
};

exports.parseUrl = function (str, opts) {
	return {
		url: str.split('?')[0] || '',
		query: parse(extract(str), opts)
	};
};

},{"decode-uri-component":115,"object-assign":1309,"strict-uri-encode":1378}],1337:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],1338:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],1339:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":1337,"./encode":1338}],1340:[function(require,module,exports){
(function (process,global){
'use strict'

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }

  // XXX: phantomjs doesn't like a buffer being passed here
  var bytes = Buffer.from(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":1327,"safe-buffer":1363}],1341:[function(require,module,exports){
(function (process,global){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = require('safe-buffer')
var randombytes = require('randombytes')
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":1327,"randombytes":1340,"safe-buffer":1363}],1342:[function(require,module,exports){
(function (process){
/** @license React v16.4.0
 * react-dom.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var invariant = require('fbjs/lib/invariant');
var React = require('react');
var warning = require('fbjs/lib/warning');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var _assign = require('object-assign');
var emptyFunction = require('fbjs/lib/emptyFunction');
var checkPropTypes = require('prop-types/checkPropTypes');
var getActiveElement = require('fbjs/lib/getActiveElement');
var shallowEqual = require('fbjs/lib/shallowEqual');
var containsNode = require('fbjs/lib/containsNode');
var emptyObject = require('fbjs/lib/emptyObject');
var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
var camelizeStyleName = require('fbjs/lib/camelizeStyleName');

// Relying on the `invariant()` implementation lets us
// have preserve the format and params in the www builds.

!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

var invokeGuardedCallback = function (name, func, context, a, b, c, d, e, f) {
  this._hasCaughtError = false;
  this._caughtError = null;
  var funcArgs = Array.prototype.slice.call(arguments, 3);
  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this._caughtError = error;
    this._hasCaughtError = true;
  }
};

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // untintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!

  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;
      var evt = document.createEvent('Event');

      // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.
      var didError = true;

      // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.
      var funcArgs = Array.prototype.slice.call(arguments, 3);
      function callCallback() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false);
        func.apply(context, funcArgs);
        didError = false;
      }

      // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.
      var error = void 0;
      // Use this to track whether the error event is ever called.
      var didSetError = false;
      var isCrossOriginError = false;

      function onError(event) {
        error = event.error;
        didSetError = true;
        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }
      }

      // Create a fake event type.
      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

      // Attach our event handlers
      window.addEventListener('error', onError);
      fakeNode.addEventListener(evtType, callCallback, false);

      // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
        }
        this._hasCaughtError = true;
        this._caughtError = error;
      } else {
        this._hasCaughtError = false;
        this._caughtError = null;
      }

      // Remove our event listeners
      window.removeEventListener('error', onError);
    };

    invokeGuardedCallback = invokeGuardedCallbackDev;
  }
}

var invokeGuardedCallback$1 = invokeGuardedCallback;

var ReactErrorUtils = {
  // Used by Fiber to simulate a try-catch.
  _caughtError: null,
  _hasCaughtError: false,

  // Used by event system to capture/rethrow the first error.
  _rethrowError: null,
  _hasRethrowError: false,

  /**
   * Call a function while guarding against errors that happens within it.
   * Returns an error if it throws, otherwise null.
   *
   * In production, this is implemented using a try-catch. The reason we don't
   * use a try-catch directly is so that we can swap out a different
   * implementation in DEV mode.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallback: function (name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback$1.apply(ReactErrorUtils, arguments);
  },

  /**
   * Same as invokeGuardedCallback, but instead of returning an error, it stores
   * it in a global so it can be rethrown by `rethrowCaughtError` later.
   * TODO: See if _caughtError and _rethrowError can be unified.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallbackAndCatchFirstError: function (name, func, context, a, b, c, d, e, f) {
    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
    if (ReactErrorUtils.hasCaughtError()) {
      var error = ReactErrorUtils.clearCaughtError();
      if (!ReactErrorUtils._hasRethrowError) {
        ReactErrorUtils._hasRethrowError = true;
        ReactErrorUtils._rethrowError = error;
      }
    }
  },

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    return rethrowCaughtError.apply(ReactErrorUtils, arguments);
  },

  hasCaughtError: function () {
    return ReactErrorUtils._hasCaughtError;
  },

  clearCaughtError: function () {
    if (ReactErrorUtils._hasCaughtError) {
      var error = ReactErrorUtils._caughtError;
      ReactErrorUtils._caughtError = null;
      ReactErrorUtils._hasCaughtError = false;
      return error;
    } else {
      invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
    }
  }
};

var rethrowCaughtError = function () {
  if (ReactErrorUtils._hasRethrowError) {
    var error = ReactErrorUtils._rethrowError;
    ReactErrorUtils._rethrowError = null;
    ReactErrorUtils._hasRethrowError = false;
    throw error;
  }
};

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
    if (plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
    plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
  eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
  registrationNameModules[registrationName] = pluginModule;
  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */

/**
 * Ordered list of injected plugins.
 */
var plugins = [];

/**
 * Mapping from event name to dispatch config
 */
var eventNameDispatchConfigs = {};

/**
 * Mapping from registration name to plugin module
 */
var registrationNameModules = {};

/**
 * Mapping from registration name to event name
 */
var registrationNameDependencies = {};

/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */
var possibleRegistrationNames = {};
// Trust the developer to only use possibleRegistrationNames in true

/**
 * Injects an ordering of plugins (by plugin name). This allows the ordering
 * to be decoupled from injection of the actual plugins so that ordering is
 * always deterministic regardless of packaging, on-the-fly injection, etc.
 *
 * @param {array} InjectedEventPluginOrder
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginOrder}
 */
function injectEventPluginOrder(injectedEventPluginOrder) {
  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
  // Clone the ordering so it cannot be dynamically mutated.
  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
  recomputePluginOrdering();
}

/**
 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
 * in the ordering injected by `injectEventPluginOrder`.
 *
 * Plugins can be injected as part of page initialization or on-the-fly.
 *
 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginsByName}
 */
function injectEventPluginsByName(injectedNamesToPlugins) {
  var isOrderingDirty = false;
  for (var pluginName in injectedNamesToPlugins) {
    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue;
    }
    var pluginModule = injectedNamesToPlugins[pluginName];
    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
      namesToPlugins[pluginName] = pluginModule;
      isOrderingDirty = true;
    }
  }
  if (isOrderingDirty) {
    recomputePluginOrdering();
  }
}

var EventPluginRegistry = Object.freeze({
	plugins: plugins,
	eventNameDispatchConfigs: eventNameDispatchConfigs,
	registrationNameModules: registrationNameModules,
	registrationNameDependencies: registrationNameDependencies,
	possibleRegistrationNames: possibleRegistrationNames,
	injectEventPluginOrder: injectEventPluginOrder,
	injectEventPluginsByName: injectEventPluginsByName
});

var getFiberCurrentPropsFromNode = null;
var getInstanceFromNode = null;
var getNodeFromInstance = null;

var injection$1 = {
  injectComponentTree: function (Injected) {
    getFiberCurrentPropsFromNode = Injected.getFiberCurrentPropsFromNode;
    getInstanceFromNode = Injected.getInstanceFromNode;
    getNodeFromInstance = Injected.getNodeFromInstance;

    {
      !(getNodeFromInstance && getInstanceFromNode) ? warning(false, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  }
};

var validateEventDispatches = void 0;
{
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warning(false, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = getNodeFromInstance(inst);
  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */


/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */


/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 * @param {function} cb Callback invoked with each element or a collection.
 * @param {?} [scope] Scope used as `this` in a callback.
 */
function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */

/**
 * Methods for injecting dependencies.
 */
var injection = {
  /**
   * @param {array} InjectedEventPluginOrder
   * @public
   */
  injectEventPluginOrder: injectEventPluginOrder,

  /**
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   */
  injectEventPluginsByName: injectEventPluginsByName
};

/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */
function getListener(inst, registrationName) {
  var listener = void 0;

  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
  // live here; needs to be moved to a better place soon
  var stateNode = inst.stateNode;
  if (!stateNode) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }
  var props = getFiberCurrentPropsFromNode(stateNode);
  if (!props) {
    // Work in progress.
    return null;
  }
  listener = props[registrationName];
  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }
  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
  return listener;
}

/**
 * Allows registered plugins an opportunity to extract events from top-level
 * native browser events.
 *
 * @return {*} An accumulation of synthetic events.
 * @internal
 */
function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = null;
  for (var i = 0; i < plugins.length; i++) {
    // Not every plugin in the ordering may be loaded at runtime.
    var possiblePlugin = plugins[i];
    if (possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      if (extractedEvents) {
        events = accumulateInto(events, extractedEvents);
      }
    }
  }
  return events;
}

function runEventsInBatch(events, simulated) {
  if (events !== null) {
    eventQueue = accumulateInto(eventQueue, events);
  }

  // Set `eventQueue` to null before processing it so that we can tell if more
  // events get enqueued while processing.
  var processingEventQueue = eventQueue;
  eventQueue = null;

  if (!processingEventQueue) {
    return;
  }

  if (simulated) {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
  } else {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
  }
  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
  // This would be a good time to rethrow if any of the event handlers threw.
  ReactErrorUtils.rethrowCaughtError();
}

function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
  runEventsInBatch(events, false);
}

var EventPluginHub = Object.freeze({
	injection: injection,
	getListener: getListener,
	runEventsInBatch: runEventsInBatch,
	runExtractedEventsInBatch: runExtractedEventsInBatch
});

var IndeterminateComponent = 0; // Before we know whether it is functional or class
var FunctionalComponent = 1;
var ClassComponent = 2;
var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
var HostComponent = 5;
var HostText = 6;



var Fragment = 10;
var Mode = 11;
var ContextConsumer = 12;
var ContextProvider = 13;
var ForwardRef = 14;
var Profiler = 15;
var TimeoutComponent = 16;

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactInternalInstance$' + randomKey;
var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  while (!node[internalInstanceKey]) {
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var inst = node[internalInstanceKey];
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber, this will always be the deepest root.
    return inst;
  }

  return null;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode$1(node) {
  var inst = node[internalInstanceKey];
  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText) {
      return inst;
    } else {
      return null;
    }
  }
  return null;
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance$1(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  }

  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  invariant(false, 'getNodeFromInstance: Invalid argument.');
}

function getFiberCurrentPropsFromNode$1(node) {
  return node[internalEventHandlersKey] || null;
}

function updateFiberProps(node, props) {
  node[internalEventHandlersKey] = props;
}

var ReactDOMComponentTree = Object.freeze({
	precacheFiberNode: precacheFiberNode,
	getClosestInstanceFromNode: getClosestInstanceFromNode,
	getInstanceFromNode: getInstanceFromNode$1,
	getNodeFromInstance: getNodeFromInstance$1,
	getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
	updateFiberProps: updateFiberProps
});

function getParent(inst) {
  do {
    inst = inst.return;
    // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);
  if (inst) {
    return inst;
  }
  return null;
}

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;
  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }
    instA = getParent(instA);
    instB = getParent(instB);
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */


/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  return getParent(inst);
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }
  var i = void 0;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (true) {
    if (!from) {
      break;
    }
    if (from === common) {
      break;
    }
    var alternate = from.alternate;
    if (alternate !== null && alternate === common) {
      break;
    }
    pathFrom.push(from);
    from = getParent(from);
  }
  var pathTo = [];
  while (true) {
    if (!to) {
      break;
    }
    if (to === common) {
      break;
    }
    var _alternate = to.alternate;
    if (_alternate !== null && _alternate === common) {
      break;
    }
    pathTo.push(to);
    to = getParent(to);
  }
  for (var i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (var _i = pathTo.length; _i-- > 0;) {
    fn(pathTo[_i], 'captured', argTo);
  }
}

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing even a
 * single one.
 */

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  {
    !inst ? warning(false, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? getParentInstance(targetInst) : null;
    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = Object.freeze({
	accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
	accumulateDirectDispatches: accumulateDirectDispatches
});

// Do not uses the below two methods directly!
// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
// (It is the only module that is allowed to access these methods.)

function unsafeCastStringToDOMTopLevelType(topLevelType) {
  return topLevelType;
}

function unsafeCastDOMTopLevelTypeToString(topLevelType) {
  return topLevelType;
}

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

/**
 * To identify top level events in ReactDOM, we use constants defined by this
 * module. This is the only module that uses the unsafe* methods to express
 * that the constants actually correspond to the browser event names. This lets
 * us save some bundle size by avoiding a top level type -> event name map.
 * The rest of ReactDOM code should import top level types from this file.
 */
var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');

// List of events that need to be individually attached to media elements.
// Note that events in this list will *not* be listened to at the top level
// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.
var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

function getRawEventName(topLevelType) {
  return unsafeCastDOMTopLevelTypeToString(topLevelType);
}

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

/**
 * This helper object stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var compositionState = {
  _root: null,
  _startText: null,
  _fallbackText: null
};

function initialize(nativeEventTarget) {
  compositionState._root = nativeEventTarget;
  compositionState._startText = getText();
  return true;
}

function reset() {
  compositionState._root = null;
  compositionState._startText = null;
  compositionState._fallbackText = null;
}

function getData() {
  if (compositionState._fallbackText) {
    return compositionState._fallbackText;
  }

  var start = void 0;
  var startValue = compositionState._startText;
  var startLength = startValue.length;
  var end = void 0;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;
  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  compositionState._fallbackText = endValue.slice(start, sliceTail);
  return compositionState._fallbackText;
}

function getText() {
  if ('value' in compositionState._root) {
    return compositionState._root.value;
  }
  return compositionState._root[getTextContentAccessor()];
}

/* eslint valid-typeof: 0 */

var didWarnForAddedNewProperty = false;
var EVENT_POOL_SIZE = 10;

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 */
SyntheticEvent.extend = function (Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  function Class() {
    return Super.apply(this, arguments);
  }
  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.extend = Super.extend;
  addEventPoolingTo(Class);

  return Class;
};

/** Proxying after everything set on SyntheticEvent
 * to resolve Proxy issue on some WebKit browsers
 * in which some Event properties are set to undefined (GH#10010)
 */
{
  var isProxySupported = typeof Proxy === 'function' &&
  // https://github.com/facebook/react/issues/12011
  !Object.isSealed(new Proxy({}, {}));

  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              !(didWarnForAddedNewProperty || target.isPersistent()) ? warning(false, "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}

addEventPoolingTo(SyntheticEvent);

/**
 * Helper to nullify syntheticEvent instance properties when destructing
 *
 * @param {String} propName
 * @param {?object} getVal
 * @return {object} defineProperty object
 */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    !warningCondition ? warning(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
  var EventConstructor = this;
  if (EventConstructor.eventPool.length) {
    var instance = EventConstructor.eventPool.pop();
    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
    return instance;
  }
  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
  var EventConstructor = this;
  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;
  event.destructor();
  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
    EventConstructor.eventPool.push(event);
  }
}

function addEventPoolingTo(EventConstructor) {
  EventConstructor.eventPool = [];
  EventConstructor.getPooled = getPooledEvent;
  EventConstructor.release = releasePooledEvent;
}

var SyntheticEvent$1 = SyntheticEvent;

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var SyntheticCompositionEvent = SyntheticEvent$1.extend({
  data: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var SyntheticInputEvent = SyntheticEvent$1.extend({
  data: null
});

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode;

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case TOP_COMPOSITION_START:
      return eventTypes.compositionStart;
    case TOP_COMPOSITION_END:
      return eventTypes.compositionEnd;
    case TOP_COMPOSITION_UPDATE:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_KEY_UP:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case TOP_KEY_DOWN:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case TOP_KEY_PRESS:
    case TOP_MOUSE_DOWN:
    case TOP_BLUR:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition status, if any.
var isComposing = false;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType = void 0;
  var fallbackData = void 0;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === eventTypes.compositionStart) {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_COMPOSITION_END:
      return getDataFromCustomEvent(nativeEvent);
    case TOP_KEY_PRESS:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case TOP_TEXT_INPUT:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case TOP_PASTE:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case TOP_KEY_PRESS:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }
      return null;
    case TOP_COMPOSITION_END:
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars = void 0;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    if (composition === null) {
      return beforeInput;
    }

    if (beforeInput === null) {
      return composition;
    }

    return [composition, beforeInput];
  }
};

// Use to restore controlled state after a change event has fired.

var fiberHostComponent = null;

var ReactControlledComponentInjection = {
  injectFiberControlledHostComponent: function (hostComponentImpl) {
    // The fiber implementation doesn't use dynamic dispatch so we need to
    // inject the implementation.
    fiberHostComponent = hostComponentImpl;
  }
};

var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);
  if (!internalInstance) {
    // Unmounted
    return;
  }
  !(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function') ? invariant(false, 'Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
  fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
}

var injection$2 = ReactControlledComponentInjection;

function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}

function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}

function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }
  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;

  restoreStateOfTarget(target);
  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

var ReactControlledComponent = Object.freeze({
	injection: injection$2,
	enqueueStateRestore: enqueueStateRestore,
	needsStateRestore: needsStateRestore,
	restoreStateIfNeeded: restoreStateIfNeeded
});

// Used as a way to call batchedUpdates when we don't have a reference to
// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.

// Defaults
var _batchedUpdates = function (fn, bookkeeping) {
  return fn(bookkeeping);
};
var _interactiveUpdates = function (fn, a, b) {
  return fn(a, b);
};
var _flushInteractiveUpdates = function () {};

var isBatching = false;
function batchedUpdates(fn, bookkeeping) {
  if (isBatching) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(bookkeeping);
  }
  isBatching = true;
  try {
    return _batchedUpdates(fn, bookkeeping);
  } finally {
    // Here we wait until all updates have propagated, which is important
    // when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    // Then we restore state of any controlled component.
    isBatching = false;
    var controlledComponentsHavePendingUpdates = needsStateRestore();
    if (controlledComponentsHavePendingUpdates) {
      // If a controlled event was fired, we may need to restore the state of
      // the DOM node back to the controlled value. This is necessary when React
      // bails out of the update without touching the DOM.
      _flushInteractiveUpdates();
      restoreStateIfNeeded();
    }
  }
}

function interactiveUpdates(fn, a, b) {
  return _interactiveUpdates(fn, a, b);
}



var injection$3 = {
  injectRenderer: function (renderer) {
    _batchedUpdates = renderer.batchedUpdates;
    _interactiveUpdates = renderer.interactiveUpdates;
    _flushInteractiveUpdates = renderer.flushInteractiveUpdates;
  }
};

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * HTML nodeType values that represent the type of the node
 */

var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';
  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

  var currentValue = '' + node[valueField];

  // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)
  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }
  var get = descriptor.get,
      set = descriptor.set;

  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      set.call(this, value);
    }
  });
  // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768
  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });

  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  }

  // TODO: Once it's just Fiber we can move this to node._wrapperState
  node._valueTracker = trackValueOnNode(node);
}

function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node);
  // if there is no tracker at this point it's unlikely
  // that trying again will succeed
  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);
  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }
  return false;
}

var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_ASYNC_MODE_TYPE:
      return 'AsyncMode';
    case REACT_CONTEXT_TYPE:
      return 'Context.Consumer';
    case REACT_FRAGMENT_TYPE:
      return 'ReactFragment';
    case REACT_PORTAL_TYPE:
      return 'ReactPortal';
    case REACT_PROFILER_TYPE:
      return 'Profiler(' + fiber.pendingProps.id + ')';
    case REACT_PROVIDER_TYPE:
      return 'Context.Provider';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_TIMEOUT_TYPE:
      return 'Timeout';
  }
  if (typeof type === 'object' && type !== null) {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        var functionName = type.render.displayName || type.render.name || '';
        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
    }
  }
  return null;
}

function describeFiber(fiber) {
  switch (fiber.tag) {
    case IndeterminateComponent:
    case FunctionalComponent:
    case ClassComponent:
    case HostComponent:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName(owner);
      }
      return describeComponentFrame(name, source, ownerName);
    default:
      return '';
  }
}

// This function can only be called with a work-in-progress fiber and
// only during begin or complete phase. Do not call it under any other
// circumstances.
function getStackAddendumByWorkInProgressFiber(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);
    // Otherwise this return pointer might point to the wrong tree:
    node = node.return;
  } while (node);
  return info;
}

function getCurrentFiberOwnerName$1() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    var owner = fiber._debugOwner;
    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner);
    }
  }
  return null;
}

function getCurrentFiberStackAddendum$1() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.
    return getStackAddendumByWorkInProgressFiber(fiber);
  }
  return null;
}

function resetCurrentFiber() {
  ReactDebugCurrentFrame.getCurrentStack = null;
  ReactDebugCurrentFiber.current = null;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentFiber(fiber) {
  ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum$1;
  ReactDebugCurrentFiber.current = fiber;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentPhase(phase) {
  ReactDebugCurrentFiber.phase = phase;
}

var ReactDebugCurrentFiber = {
  current: null,
  phase: null,
  resetCurrentFiber: resetCurrentFiber,
  setCurrentFiber: setCurrentFiber,
  setCurrentPhase: setCurrentPhase,
  getCurrentFiberOwnerName: getCurrentFiberOwnerName$1,
  getCurrentFiberStackAddendum: getCurrentFiberStackAddendum$1
};

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0;

// A simple string attribute.
// Attributes that aren't in the whitelist are presumed to have this type.
var STRING = 1;

// A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.
var BOOLEANISH_STRING = 2;

// A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
var BOOLEAN = 3;

// An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.
var OVERLOADED_BOOLEAN = 4;

// An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.
var NUMERIC = 5;

// An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.
var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */
var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';


var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');

var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  {
    warning(false, 'Invalid attribute name: `%s`', attributeName);
  }
  return false;
}

function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }
  return false;
}

function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }
  switch (typeof value) {
    case 'function':
    // $FlowIssue symbol is perfectly valid here
    case 'symbol':
      // eslint-disable-line
      return true;
    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }
        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }
    default:
      return false;
  }
}

function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }
  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (propertyInfo !== null) {
    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;
      case OVERLOADED_BOOLEAN:
        return value === false;
      case NUMERIC:
        return isNaN(value);
      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }
  return false;
}

function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
}

// When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.
var properties = {};

// These props are reserved by React. They shouldn't be written to the DOM.
['children', 'dangerouslySetInnerHTML',
// TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.
[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];

  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null);
} // attributeNamespace
);

// These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.
['autoReverse', 'externalResourcesRequired', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// These are HTML boolean attributes.
['allowFullScreen', 'async',
// Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',
// Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.
['checked',
// Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.
['capture', 'download'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that must be positive numbers.
['cols', 'rows', 'size', 'span'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that must be numbers.
['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

var CAMELIZE = /[\-\:]([a-z])/g;
var capitalize = function (token) {
  return token[1].toUpperCase();
};

// This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML whitelist.
// Some of these attributes can be hard to find. This list was created by
// scrapping the MDN documentation.
['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null);
} // attributeNamespace
);

// String SVG attributes with the xlink namespace.
['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink');
});

// String SVG attributes with the xml namespace.
['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace');
});

// Special case: this attribute exists both in HTML and SVG.
// Its "tabindex" attribute name is case-sensitive in SVG so we can't just use
// its React `tabIndex` name, like we do for attributes that exist only in HTML.
properties.tabIndex = new PropertyInfoRecord('tabIndex', STRING, false, // mustUseProperty
'tabindex', // attributeName
null);

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;

      return node[propertyName];
    } else {
      var attributeName = propertyInfo.attributeName;

      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);
          if (value === '') {
            return true;
          }
          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          }
          if (value === '' + expected) {
            return expected;
          }
          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }
        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        }
        // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.
        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue;
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}

/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */
function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }
    var value = node.getAttribute(name);
    if (value === '' + expected) {
      return expected;
    }
    return value;
  }
}

/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */
function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);
  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }
  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  }
  // If the prop isn't in the special list, treat it as a simple attribute.
  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;
      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        node.setAttribute(_attributeName, '' + value);
      }
    }
    return;
  }
  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;

      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }
    return;
  }
  // The rest are treated as attributes with special cases.
  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;

    var attributeValue = void 0;
    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      attributeValue = '' + value;
    }
    if (attributeNamespace) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    } else {
      node.setAttribute(attributeName, attributeValue);
    }
  }
}

var ReactControlledValuePropTypes = {
  checkPropTypes: null
};

{
  var hasReadOnlyValue = {
    button: true,
    checkbox: true,
    image: true,
    hidden: true,
    radio: true,
    reset: true,
    submit: true
  };

  var propTypes = {
    value: function (props, propName, componentName) {
      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  };

  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */
  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
    checkPropTypes(propTypes, props, 'prop', tagName, getStack);
  };
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */

function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;

  var hostProps = _assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}

function initWrapperState(element, props) {
  {
    ReactControlledValuePropTypes.checkPropTypes('input', props, getCurrentFiberStackAddendum);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
      didWarnCheckedDefaultChecked = true;
    }
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;

  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getSafeValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}

function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;
  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}

function updateWrapper(element, props) {
  var node = element;
  {
    var _controlled = isControlled(props);

    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
      warning(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
      didWarnUncontrolledToControlled = true;
    }
    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
      warning(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);

  var value = getSafeValue(props.value);

  if (value != null) {
    if (props.type === 'number') {
      if (value === 0 && node.value === '' ||
      // eslint-disable-next-line
      node.value != value) {
        node.value = '' + value;
      }
    } else if (node.value !== '' + value) {
      node.value = '' + value;
    }
  }

  if (props.hasOwnProperty('value')) {
    setDefaultValue(node, props.type, value);
  } else if (props.hasOwnProperty('defaultValue')) {
    setDefaultValue(node, props.type, getSafeValue(props.defaultValue));
  }

  if (props.checked == null && props.defaultChecked != null) {
    node.defaultChecked = !!props.defaultChecked;
  }
}

function postMountWrapper(element, props) {
  var node = element;

  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.
    if (node.value === '') {
      node.value = '' + node._wrapperState.initialValue;
    }

    // value must be assigned before defaultValue. This fixes an issue where the
    // visually displayed value of date inputs disappears on mobile Safari and Chrome:
    // https://github.com/facebook/react/issues/7233
    node.defaultValue = '' + node._wrapperState.initialValue;
  }

  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.
  var name = node.name;
  if (name !== '') {
    node.name = '';
  }
  node.defaultChecked = !node.defaultChecked;
  node.defaultChecked = !node.defaultChecked;
  if (name !== '') {
    node.name = name;
  }
}

function restoreControlledState(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;

      // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set
      updateValueIfChanged(otherNode);

      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      updateWrapper(otherNode, otherProps);
    }
  }
}

// In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253
function setDefaultValue(node, type, value) {
  if (
  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || node.ownerDocument.activeElement !== node) {
    if (value == null) {
      node.defaultValue = '' + node._wrapperState.initialValue;
    } else if (node.defaultValue !== '' + value) {
      node.defaultValue = '' + value;
    }
  }
}

function getSafeValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case 'undefined':
      return value;
    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}

var eventTypes$1 = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent$1.getPooled(eventTypes$1.change, inst, nativeEvent, target);
  event.type = 'change';
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  runEventsInBatch(event, false);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance$1(targetInst);
  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CHANGE) {
    return targetInst;
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === TOP_FOCUS) {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === TOP_BLUR) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CLICK) {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  setDefaultValue(node, 'number', node.value);
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes$1,

  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    var getTargetInstFunc = void 0,
        handleEventFunc = void 0;
    if (shouldUseChangeEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForChangeEvent;
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === TOP_BLUR) {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }
};

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

var SyntheticUIEvent = SyntheticEvent$1.extend({
  view: null,
  detail: null
});

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticMouseEvent = SyntheticUIEvent.extend({
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: null,
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  }
});

/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */
var SyntheticPointerEvent = SyntheticMouseEvent.extend({
  pointerId: null,
  width: null,
  height: null,
  pressure: null,
  tiltX: null,
  tiltY: null,
  pointerType: null,
  isPrimary: null
});

var eventTypes$2 = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  pointerEnter: {
    registrationName: 'onPointerEnter',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  },
  pointerLeave: {
    registrationName: 'onPointerLeave',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes$2,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }

    if (!isOutEvent && !isOverEvent) {
      // Must not be a mouse or pointer in or out - ignoring.
      return null;
    }

    var win = void 0;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from = void 0;
    var to = void 0;
    if (isOutEvent) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var eventInterface = void 0,
        leaveEventType = void 0,
        enterEventType = void 0,
        eventTypePrefix = void 0;

    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
      eventInterface = SyntheticMouseEvent;
      leaveEventType = eventTypes$2.mouseLeave;
      enterEventType = eventTypes$2.mouseEnter;
      eventTypePrefix = 'mouse';
    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
      eventInterface = SyntheticPointerEvent;
      leaveEventType = eventTypes$2.pointerLeave;
      enterEventType = eventTypes$2.pointerEnter;
      eventTypePrefix = 'pointer';
    }

    var fromNode = from == null ? win : getNodeFromInstance$1(from);
    var toNode = to == null ? win : getNodeFromInstance$1(to);

    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
    leave.type = eventTypePrefix + 'leave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
    enter.type = eventTypePrefix + 'enter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */

/**
 * This API should be called `delete` but we'd have to make sure to always
 * transform these to strings for IE support. When this transform is fully
 * supported we can rename it.
 */


function get(key) {
  return key._reactInternalFiber;
}

function has(key) {
  return key._reactInternalFiber !== undefined;
}

function set(key, value) {
  key._reactInternalFiber = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoEffect = /*              */0;
var PerformedWork = /*         */1;

// You can change the rest (and add more).
var Placement = /*             */2;
var Update = /*                */4;
var PlacementAndUpdate = /*    */6;
var Deletion = /*              */8;
var ContentReset = /*          */16;
var Callback = /*              */32;
var DidCapture = /*            */64;
var Ref = /*                   */128;
var Snapshot = /*              */256;

// Union of all host effects
var HostEffectMask = /*        */511;

var Incomplete = /*            */512;
var ShouldCapture = /*         */1024;

var MOUNTING = 1;
var MOUNTED = 2;
var UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
  var node = fiber;
  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    if ((node.effectTag & Placement) !== NoEffect) {
      return MOUNTING;
    }
    while (node.return) {
      node = node.return;
      if ((node.effectTag & Placement) !== NoEffect) {
        return MOUNTING;
      }
    }
  } else {
    while (node.return) {
      node = node.return;
    }
  }
  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return MOUNTED;
  }
  // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.
  return UNMOUNTED;
}

function isFiberMounted(fiber) {
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;
    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      !instance._warnedAboutRefsInRender ? warning(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber) || 'A component') : void 0;
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);
  if (!fiber) {
    return false;
  }
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function assertIsMounted(fiber) {
  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;
  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var state = isFiberMountedImpl(fiber);
    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
    if (state === MOUNTING) {
      return null;
    }
    return fiber;
  }
  // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.
  var a = fiber;
  var b = alternate;
  while (true) {
    var parentA = a.return;
    var parentB = parentA ? parentA.alternate : null;
    if (!parentA || !parentB) {
      // We're at the root.
      break;
    }

    // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.
    if (parentA.child === parentB.child) {
      var child = parentA.child;
      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }
        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }
        child = child.sibling;
      }
      // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.
      invariant(false, 'Unable to find node on an unmounted component.');
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;
      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }
        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }
        _child = _child.sibling;
      }
      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;
        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }
          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }
          _child = _child.sibling;
        }
        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
      }
    }

    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  }
  // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.
  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  }
  // Otherwise B has to be current branch.
  return alternate;
}

function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function addEventBubbleListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, false);
}

function addEventCaptureListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, true);
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var SyntheticAnimationEvent = SyntheticEvent$1.extend({
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var SyntheticClipboardEvent = SyntheticEvent$1.extend({
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticFocusEvent = SyntheticUIEvent.extend({
  relatedTarget: null
});

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode = void 0;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.
  if (charCode === 10) {
    charCode = 13;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
});

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticDragEvent = SyntheticMouseEvent.extend({
  dataTransfer: null
});

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var SyntheticTouchEvent = SyntheticUIEvent.extend({
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var SyntheticTransitionEvent = SyntheticEvent$1.extend({
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticWheelEvent = SyntheticMouseEvent.extend({
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },

  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
});

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: [TOP_ABORT],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = new Map([
 *   [TOP_ABORT, { sameConfig }],
 * ]);
 */

var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];
var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];

var eventTypes$4 = {};
var topLevelEventsToDispatchConfig = {};

function addEventTypeNameToConfig(_ref, isInteractive) {
  var topEvent = _ref[0],
      event = _ref[1];

  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent],
    isInteractive: isInteractive
  };
  eventTypes$4[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
}

interactiveEventTypeNames.forEach(function (eventTuple) {
  addEventTypeNameToConfig(eventTuple, true);
});
nonInteractiveEventTypeNames.forEach(function (eventTuple) {
  addEventTypeNameToConfig(eventTuple, false);
});

// Only used in DEV for exhaustiveness validation.
var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];

var SimpleEventPlugin = {
  eventTypes: eventTypes$4,

  isInteractiveTopLevelEventType: function (topLevelType) {
    var config = topLevelEventsToDispatchConfig[topLevelType];
    return config !== undefined && config.isInteractive === true;
  },


  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor = void 0;
    switch (topLevelType) {
      case TOP_KEY_PRESS:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case TOP_BLUR:
      case TOP_FOCUS:
        EventConstructor = SyntheticFocusEvent;
        break;
      case TOP_CLICK:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case TOP_DOUBLE_CLICK:
      case TOP_MOUSE_DOWN:
      case TOP_MOUSE_MOVE:
      case TOP_MOUSE_UP:
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case TOP_MOUSE_OUT:
      case TOP_MOUSE_OVER:
      case TOP_CONTEXT_MENU:
        EventConstructor = SyntheticMouseEvent;
        break;
      case TOP_DRAG:
      case TOP_DRAG_END:
      case TOP_DRAG_ENTER:
      case TOP_DRAG_EXIT:
      case TOP_DRAG_LEAVE:
      case TOP_DRAG_OVER:
      case TOP_DRAG_START:
      case TOP_DROP:
        EventConstructor = SyntheticDragEvent;
        break;
      case TOP_TOUCH_CANCEL:
      case TOP_TOUCH_END:
      case TOP_TOUCH_MOVE:
      case TOP_TOUCH_START:
        EventConstructor = SyntheticTouchEvent;
        break;
      case TOP_ANIMATION_END:
      case TOP_ANIMATION_ITERATION:
      case TOP_ANIMATION_START:
        EventConstructor = SyntheticAnimationEvent;
        break;
      case TOP_TRANSITION_END:
        EventConstructor = SyntheticTransitionEvent;
        break;
      case TOP_SCROLL:
        EventConstructor = SyntheticUIEvent;
        break;
      case TOP_WHEEL:
        EventConstructor = SyntheticWheelEvent;
        break;
      case TOP_COPY:
      case TOP_CUT:
      case TOP_PASTE:
        EventConstructor = SyntheticClipboardEvent;
        break;
      case TOP_GOT_POINTER_CAPTURE:
      case TOP_LOST_POINTER_CAPTURE:
      case TOP_POINTER_CANCEL:
      case TOP_POINTER_DOWN:
      case TOP_POINTER_MOVE:
      case TOP_POINTER_OUT:
      case TOP_POINTER_OVER:
      case TOP_POINTER_UP:
        EventConstructor = SyntheticPointerEvent;
        break;
      default:
        {
          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
            warning(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
          }
        }
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent$1;
        break;
    }
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    accumulateTwoPhaseDispatches(event);
    return event;
  }
};

var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;


var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
var callbackBookkeepingPool = [];

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findRootContainerNode(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst.return) {
    inst = inst.return;
  }
  if (inst.tag !== HostRoot) {
    // This can happen if we're in a detached tree.
    return null;
  }
  return inst.stateNode.containerInfo;
}

// Used to store ancestor hierarchy in top level callback
function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
  if (callbackBookkeepingPool.length) {
    var instance = callbackBookkeepingPool.pop();
    instance.topLevelType = topLevelType;
    instance.nativeEvent = nativeEvent;
    instance.targetInst = targetInst;
    return instance;
  }
  return {
    topLevelType: topLevelType,
    nativeEvent: nativeEvent,
    targetInst: targetInst,
    ancestors: []
  };
}

function releaseTopLevelCallbackBookKeeping(instance) {
  instance.topLevelType = null;
  instance.nativeEvent = null;
  instance.targetInst = null;
  instance.ancestors.length = 0;
  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
    callbackBookkeepingPool.push(instance);
  }
}

function handleTopLevel(bookKeeping) {
  var targetInst = bookKeeping.targetInst;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    if (!ancestor) {
      bookKeeping.ancestors.push(ancestor);
      break;
    }
    var root = findRootContainerNode(ancestor);
    if (!root) {
      break;
    }
    bookKeeping.ancestors.push(ancestor);
    ancestor = getClosestInstanceFromNode(root);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

// TODO: can we stop exporting these?
var _enabled = true;

function setEnabled(enabled) {
  _enabled = !!enabled;
}

function isEnabled() {
  return _enabled;
}

/**
 * Traps top-level events by using event bubbling.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapBubbledEvent(topLevelType, element) {
  if (!element) {
    return null;
  }
  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

  addEventBubbleListener(element, getRawEventName(topLevelType),
  // Check if interactive and wrap in interactiveUpdates
  dispatch.bind(null, topLevelType));
}

/**
 * Traps a top-level event by using event capturing.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapCapturedEvent(topLevelType, element) {
  if (!element) {
    return null;
  }
  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

  addEventCaptureListener(element, getRawEventName(topLevelType),
  // Check if interactive and wrap in interactiveUpdates
  dispatch.bind(null, topLevelType));
}

function dispatchInteractiveEvent(topLevelType, nativeEvent) {
  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
}

function dispatchEvent(topLevelType, nativeEvent) {
  if (!_enabled) {
    return;
  }

  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
    // If we get an event (ex: img onload) before committing that
    // component's mount, ignore it for now (that is, treat it as if it was an
    // event on a non-React tree). We might also consider queueing events and
    // dispatching them after the mount.
    targetInst = null;
  }

  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

  try {
    // Event queue being processed in the same cycle allows
    // `preventDefault`.
    batchedUpdates(handleTopLevel, bookKeeping);
  } finally {
    releaseTopLevelCallbackBookKeeping(bookKeeping);
  }
}

var ReactDOMEventListener = Object.freeze({
	get _enabled () { return _enabled; },
	setEnabled: setEnabled,
	isEnabled: isEnabled,
	trapBubbledEvent: trapBubbledEvent,
	trapCapturedEvent: trapCapturedEvent,
	dispatchEvent: dispatchEvent
});

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactDOMEventListener, which is injected and can therefore support
 *    pluggable event sources. This is the only work that occurs in the main
 *    thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var reactTopListenersCounter = 0;

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * We listen for bubbled touch events on the document object.
 *
 * Firefox v8.01 (and possibly others) exhibited strange behavior when
 * mounting `onmousemove` events at some node that was not the document
 * element. The symptoms were that if your mouse is not moving over something
 * contained within that mount point (for example on the background) the
 * top-level listeners for `onmousemove` won't be called. However, if you
 * register the `mousemove` on the document object, then it will of course
 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
 * top-level listeners to the document object only, at least for these
 * movement types of events and possibly all events.
 *
 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
 *
 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
 * they bubble to document.
 *
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @param {object} mountAt Container where to mount the listener
 */
function listenTo(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      switch (dependency) {
        case TOP_SCROLL:
          trapCapturedEvent(TOP_SCROLL, mountAt);
          break;
        case TOP_FOCUS:
        case TOP_BLUR:
          trapCapturedEvent(TOP_FOCUS, mountAt);
          trapCapturedEvent(TOP_BLUR, mountAt);
          // We set the flag for a single dependency later in this function,
          // but this ensures we mark both as attached rather than just one.
          isListening[TOP_BLUR] = true;
          isListening[TOP_FOCUS] = true;
          break;
        case TOP_CANCEL:
        case TOP_CLOSE:
          if (isEventSupported(getRawEventName(dependency), true)) {
            trapCapturedEvent(dependency, mountAt);
          }
          break;
        case TOP_INVALID:
        case TOP_SUBMIT:
        case TOP_RESET:
          // We listen to them on the target DOM elements.
          // Some of them bubble so we don't want them to fire twice.
          break;
        default:
          // By default, listen on the top level to all non-media events.
          // Media events don't bubble so adding the listener wouldn't do anything.
          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;
          if (!isMediaEvent) {
            trapBubbledEvent(dependency, mountAt);
          }
          break;
      }
      isListening[dependency] = true;
    }
  }
}

function isListeningToAllDependencies(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];
  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      return false;
    }
  }
  return true;
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */
function getOffsets(outerNode) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset;

  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}

/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */
function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }
      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      }
      // Moving from `node` to its first child `next`.
      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }
      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }
      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }
      if ((next = node.nextSibling) !== null) {
        break;
      }
      node = parentNode;
      parentNode = node.parentNode;
    }

    // Moving from `node` to its next sibling `next`.
    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
}

function getSelectionInformation() {
  var focusedElem = getActiveElement();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
  };
}

/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */
function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElement();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;
  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    }

    // Focusing a node can change the scroll position, which is undesirable
    var ancestors = [];
    var ancestor = priorFocusedElem;
    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    priorFocusedElem.focus();

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}

/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */
function getSelection$1(input) {
  var selection = void 0;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || { start: 0, end: 0 };
}

/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */
function setSelection(input, offsets) {
  var start = offsets.start,
      end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes$3 = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
  }
};

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement$1);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent$1.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement$1;

    accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes$3,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : nativeEventTarget.nodeType === DOCUMENT_NODE ? nativeEventTarget : nativeEventTarget.ownerDocument;
    // Track whether all listeners exists for this plugin. If none exist, we do
    // not extract events. See #3639.
    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
      return null;
    }

    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case TOP_FOCUS:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement$1 = targetNode;
          activeElementInst$1 = targetInst;
          lastSelection = null;
        }
        break;
      case TOP_BLUR:
        activeElement$1 = null;
        activeElementInst$1 = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case TOP_MOUSE_DOWN:
        mouseDown = true;
        break;
      case TOP_CONTEXT_MENU:
      case TOP_MOUSE_UP:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case TOP_SELECTION_CHANGE:
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  }
};

/**
 * Inject modules for resolving DOM hierarchy and plugin ordering.
 */
injection.injectEventPluginOrder(DOMEventPluginOrder);
injection$1.injectComponentTree(ReactDOMComponentTree);

/**
 * Some important event plugins included by default (without having to require
 * them).
 */
injection.injectEventPluginsByName({
  SimpleEventPlugin: SimpleEventPlugin,
  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
  ChangeEventPlugin: ChangeEventPlugin,
  SelectEventPlugin: SelectEventPlugin,
  BeforeInputEventPlugin: BeforeInputEventPlugin
});

{
  if (ExecutionEnvironment.canUseDOM && typeof requestAnimationFrame !== 'function') {
    warning(false, 'React depends on requestAnimationFrame. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
  }
}

/**
 * A scheduling library to allow scheduling work with more granular priority and
 * control than requestAnimationFrame and requestIdleCallback.
 * Current TODO items:
 * X- Pull out the scheduleWork polyfill built into React
 * X- Initial test coverage
 * X- Support for multiple callbacks
 * - Support for two priorities; serial and deferred
 * - Better test coverage
 * - Better docblock
 * - Polish documentation, API
 */

// This is a built-in polyfill for requestIdleCallback. It works by scheduling
// a requestAnimationFrame, storing the time for the start of the frame, then
// scheduling a postMessage which gets scheduled after paint. Within the
// postMessage handler do as much work as possible until time + frame rate.
// By separating the idle call into a separate event tick we ensure that
// layout, paint and other browser work is counted against the available time.
// The frame rate is dynamically adjusted.

var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

var now$1 = void 0;
if (hasNativePerformanceNow) {
  now$1 = function () {
    return performance.now();
  };
} else {
  now$1 = function () {
    return Date.now();
  };
}

// TODO: There's no way to cancel, because Fiber doesn't atm.
var scheduleWork = void 0;
var cancelScheduledWork = void 0;

if (!ExecutionEnvironment.canUseDOM) {
  var callbackIdCounter = 0;
  // Timeouts are objects in Node.
  // For consistency, we'll use numbers in the public API anyway.
  var timeoutIds = {};

  scheduleWork = function (callback, options) {
    var callbackId = callbackIdCounter++;
    var timeoutId = setTimeout(function () {
      callback({
        timeRemaining: function () {
          return Infinity;
        },

        didTimeout: false
      });
    });
    timeoutIds[callbackId] = timeoutId;
    return callbackId;
  };
  cancelScheduledWork = function (callbackId) {
    var timeoutId = timeoutIds[callbackId];
    delete timeoutIds[callbackId];
    clearTimeout(timeoutId);
  };
} else {
  // We keep callbacks in a queue.
  // Calling scheduleWork will push in a new callback at the end of the queue.
  // When we get idle time, callbacks are removed from the front of the queue
  var pendingCallbacks = [];

  var _callbackIdCounter = 0;
  var getCallbackId = function () {
    _callbackIdCounter++;
    return _callbackIdCounter;
  };

  // When a callback is scheduled, we register it by adding it's id to this
  // object.
  // If the user calls 'cancelScheduledWork' with the id of that callback, it will be
  // unregistered by removing the id from this object.
  // Then we skip calling any callback which is not registered.
  // This means cancelling is an O(1) time complexity instead of O(n).
  var registeredCallbackIds = {};

  // We track what the next soonest timeoutTime is, to be able to quickly tell
  // if none of the scheduled callbacks have timed out.
  var nextSoonestTimeoutTime = -1;

  var isIdleScheduled = false;
  var isAnimationFrameScheduled = false;

  var frameDeadline = 0;
  // We start out assuming that we run at 30fps but then the heuristic tracking
  // will adjust this value to a faster fps if we get more frequent animation
  // frames.
  var previousFrameTime = 33;
  var activeFrameTime = 33;

  var frameDeadlineObject = {
    didTimeout: false,
    timeRemaining: function () {
      var remaining = frameDeadline - now$1();
      return remaining > 0 ? remaining : 0;
    }
  };

  var safelyCallScheduledCallback = function (callback, callbackId) {
    if (!registeredCallbackIds[callbackId]) {
      // ignore cancelled callbacks
      return;
    }
    try {
      callback(frameDeadlineObject);
      // Avoid using 'catch' to keep errors easy to debug
    } finally {
      // always clean up the callbackId, even if the callback throws
      delete registeredCallbackIds[callbackId];
    }
  };

  /**
   * Checks for timed out callbacks, runs them, and then checks again to see if
   * any more have timed out.
   * Keeps doing this until there are none which have currently timed out.
   */
  var callTimedOutCallbacks = function () {
    if (pendingCallbacks.length === 0) {
      return;
    }

    var currentTime = now$1();
    // TODO: this would be more efficient if deferred callbacks are stored in
    // min heap.
    // Or in a linked list with links for both timeoutTime order and insertion
    // order.
    // For now an easy compromise is the current approach:
    // Keep a pointer to the soonest timeoutTime, and check that first.
    // If it has not expired, we can skip traversing the whole list.
    // If it has expired, then we step through all the callbacks.
    if (nextSoonestTimeoutTime === -1 || nextSoonestTimeoutTime > currentTime) {
      // We know that none of them have timed out yet.
      return;
    }
    nextSoonestTimeoutTime = -1; // we will reset it below

    // keep checking until we don't find any more timed out callbacks
    frameDeadlineObject.didTimeout = true;
    for (var i = 0, len = pendingCallbacks.length; i < len; i++) {
      var currentCallbackConfig = pendingCallbacks[i];
      var _timeoutTime = currentCallbackConfig.timeoutTime;
      if (_timeoutTime !== -1 && _timeoutTime <= currentTime) {
        // it has timed out!
        // call it
        var _callback = currentCallbackConfig.scheduledCallback;
        safelyCallScheduledCallback(_callback, currentCallbackConfig.callbackId);
      } else {
        if (_timeoutTime !== -1 && (nextSoonestTimeoutTime === -1 || _timeoutTime < nextSoonestTimeoutTime)) {
          nextSoonestTimeoutTime = _timeoutTime;
        }
      }
    }
  };

  // We use the postMessage trick to defer idle work until after the repaint.
  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);
  var idleTick = function (event) {
    if (event.source !== window || event.data !== messageKey) {
      return;
    }
    isIdleScheduled = false;

    if (pendingCallbacks.length === 0) {
      return;
    }

    // First call anything which has timed out, until we have caught up.
    callTimedOutCallbacks();

    var currentTime = now$1();
    // Next, as long as we have idle time, try calling more callbacks.
    while (frameDeadline - currentTime > 0 && pendingCallbacks.length > 0) {
      var latestCallbackConfig = pendingCallbacks.shift();
      frameDeadlineObject.didTimeout = false;
      var latestCallback = latestCallbackConfig.scheduledCallback;
      var newCallbackId = latestCallbackConfig.callbackId;
      safelyCallScheduledCallback(latestCallback, newCallbackId);
      currentTime = now$1();
    }
    if (pendingCallbacks.length > 0) {
      if (!isAnimationFrameScheduled) {
        // Schedule another animation callback so we retry later.
        isAnimationFrameScheduled = true;
        requestAnimationFrame(animationTick);
      }
    }
  };
  // Assumes that we have addEventListener in this environment. Might need
  // something better for old IE.
  window.addEventListener('message', idleTick, false);

  var animationTick = function (rafTime) {
    isAnimationFrameScheduled = false;
    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
      if (nextFrameTime < 8) {
        // Defensive coding. We don't support higher frame rates than 120hz.
        // If we get lower than that, it is probably a bug.
        nextFrameTime = 8;
      }
      // If one frame goes long, then the next one can be short to catch up.
      // If two frames are short in a row, then that's an indication that we
      // actually have a higher frame rate than what we're currently optimizing.
      // We adjust our heuristic dynamically accordingly. For example, if we're
      // running on 120hz display or 90hz VR display.
      // Take the max of the two in case one of them was an anomaly due to
      // missed frame deadlines.
      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
    } else {
      previousFrameTime = nextFrameTime;
    }
    frameDeadline = rafTime + activeFrameTime;
    if (!isIdleScheduled) {
      isIdleScheduled = true;
      window.postMessage(messageKey, '*');
    }
  };

  scheduleWork = function (callback, options) {
    var timeoutTime = -1;
    if (options != null && typeof options.timeout === 'number') {
      timeoutTime = now$1() + options.timeout;
    }
    if (nextSoonestTimeoutTime === -1 || timeoutTime !== -1 && timeoutTime < nextSoonestTimeoutTime) {
      nextSoonestTimeoutTime = timeoutTime;
    }

    var newCallbackId = getCallbackId();
    var scheduledCallbackConfig = {
      scheduledCallback: callback,
      callbackId: newCallbackId,
      timeoutTime: timeoutTime
    };
    pendingCallbacks.push(scheduledCallbackConfig);

    registeredCallbackIds[newCallbackId] = true;
    if (!isAnimationFrameScheduled) {
      // If rAF didn't already schedule one, we need to schedule a frame.
      // TODO: If this rAF doesn't materialize because the browser throttles, we
      // might want to still have setTimeout trigger scheduleWork as a backup to ensure
      // that we keep performing work.
      isAnimationFrameScheduled = true;
      requestAnimationFrame(animationTick);
    }
    return newCallbackId;
  };

  cancelScheduledWork = function (callbackId) {
    delete registeredCallbackIds[callbackId];
  };
}

var didWarnSelectedSetOnOption = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  // We can silently skip them because invalid DOM nesting warning
  // catches these cases in Fiber.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */

function validateProps(element, props) {
  // TODO (yungsters): Remove support for `selected` in <option>.
  {
    if (props.selected != null && !didWarnSelectedSetOnOption) {
      warning(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
      didWarnSelectedSetOnOption = true;
    }
  }
}

function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', props.value);
  }
}

function getHostProps$1(element, props) {
  var hostProps = _assign({ children: undefined }, props);
  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$3 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$3 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


var didWarnValueDefaultValue$1 = void 0;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerName$3();
  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 */
function checkSelectPropTypes(props) {
  ReactControlledValuePropTypes.checkPropTypes('select', props, getCurrentFiberStackAddendum$3);

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
    } else if (!props.multiple && isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};
    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }
    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }
      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = '' + propValue;
    var defaultSelected = null;
    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;
        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }
        return;
      }
      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }
    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */

function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}

function initWrapperState$1(element, props) {
  var node = element;
  {
    checkSelectPropTypes(props);
  }

  var value = props.value;
  node._wrapperState = {
    initialValue: value != null ? value : props.defaultValue,
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValueDefaultValue$1 = true;
    }
  }
}

function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}

function postUpdateWrapper(element, props) {
  var node = element;
  // After the initial mount, we control selected-ness manually so don't pass
  // this value down
  node._wrapperState.initialValue = undefined;

  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;

  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}

function restoreControlledState$2(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$4 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */

function getHostProps$3(element, props) {
  var node = element;
  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

  // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.
  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: '' + node._wrapperState.initialValue
  });

  return hostProps;
}

function initWrapperState$2(element, props) {
  var node = element;
  {
    ReactControlledValuePropTypes.checkPropTypes('textarea', props, getCurrentFiberStackAddendum$4);
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value;

  // Only bother fetching default value if we're going to use it
  if (initialValue == null) {
    var defaultValue = props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = props.children;
    if (children != null) {
      {
        warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }
      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
      if (Array.isArray(children)) {
        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: '' + initialValue
  };
}

function updateWrapper$1(element, props) {
  var node = element;
  var value = props.value;
  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = '' + value;

    // To avoid side effects (such as losing text selection), only set value if changed
    if (newValue !== node.value) {
      node.value = newValue;
    }
    if (props.defaultValue == null) {
      node.defaultValue = newValue;
    }
  }
  if (props.defaultValue != null) {
    node.defaultValue = props.defaultValue;
  }
}

function postMountWrapper$3(element, props) {
  var node = element;
  // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.
  var textContent = node.textContent;

  // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
  if (textContent === node._wrapperState.initialValue) {
    node.value = textContent;
  }
}

function restoreControlledState$3(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

var Namespaces = {
  html: HTML_NAMESPACE$1,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
};

// Assumes there is no parent namespace.
function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;
    case 'math':
      return MATH_NAMESPACE;
    default:
      return HTML_NAMESPACE$1;
  }
}

function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }
  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE$1;
  }
  // By default, pass namespace below.
  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer = void 0;

/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node

  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var warnValidStyle = emptyFunction;

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var warnHyphenatedStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), getStack());
  };

  var warnBadVendoredStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), getStack());
  };

  var warnStyleValueWithSemicolon = function (name, value, getStack) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    warning(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.%s', name, value.replace(badStyleValueWithSemicolonPattern, ''), getStack());
  };

  var warnStyleValueIsNaN = function (name, value, getStack) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  var warnStyleValueIsInfinity = function (name, value, getStack) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;
    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  warnValidStyle = function (name, value, getStack) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, getStack);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, getStack);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, getStack);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value, getStack);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value, getStack);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */
function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + hyphenateStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

        delimiter = ';';
      }
    }
    return serialized || null;
  }
}

/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */
function setValueForStyles(node, styles, getStack) {
  var style = node.style;
  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }
    var isCustomProperty = styleName.indexOf('--') === 0;
    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName], getStack);
      }
    }
    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
    if (styleName === 'float') {
      styleName = 'cssFloat';
    }
    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

var HTML$1 = '__html';

function assertValidProps(tag, props, getStack) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getStack()) : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
  }
  {
    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.%s', getStack()) : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getStack()) : void 0;
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }
  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;
    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG whitelist, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',

  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0, // state
  'aria-details': 0,
  'aria-disabled': 0, // state
  'aria-hidden': 0, // state
  'aria-invalid': 0, // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty = Object.prototype.hasOwnProperty;

function getStackAddendum() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperty(tagName, name) {
  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
    return true;
  }

  if (rARIACamel.test(name)) {
    var ariaName = 'aria-' + name.slice(4).toLowerCase();
    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (correctName == null) {
      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== correctName) {
      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  var invalidProps = [];

  for (var key in props) {
    var isValid = validateProperty(type, key);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  } else if (invalidProps.length > 1) {
    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;

function getStackAddendum$1() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperties$1(type, props) {
  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
    return;
  }

  if (props != null && props.value === null && !didWarnValueNull) {
    didWarnValueNull = true;
    if (type === 'select' && props.multiple) {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.%s', type, getStackAddendum$1());
    } else {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$1());
    }
  }
}

function getStackAddendum$2() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();
    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      warning(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
      warnedProperties$1[name] = true;
      return true;
    }

    // We can't rely on the event system being injected on the server.
    if (canUseEventSystem) {
      if (registrationNameModules.hasOwnProperty(name)) {
        return true;
      }
      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
      if (registrationName != null) {
        warning(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
      if (EVENT_NAME_REGEX.test(name)) {
        warning(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        warning(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.%s', name, getStackAddendum$2());
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Let the ARIA attribute hook validate ARIA attributes
    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      warning(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      warning(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      warning(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      warning(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;

    // Known attributes should match the casing specified in the property config.
    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];
      if (standardName !== name) {
        warning(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      warning(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.%s', value, name, name, value, name, getStackAddendum$2());
      } else {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', value, name, name, value, name, name, name, getStackAddendum$2());
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Now that we've validated casing, do not validate
    // data types for reserved props
    if (isReserved) {
      return true;
    }

    // Warn when a known attribute is a bad type
    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, canUseEventSystem) {
  var unknownProps = [];
  for (var key in props) {
    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');
  if (unknownProps.length === 1) {
    warning(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  } else if (unknownProps.length > 1) {
    warning(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  }
};

function validateProperties$2(type, props, canUseEventSystem) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnUnknownProperties(type, props, canUseEventSystem);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$2 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$2 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnInvalidHydration = false;
var didWarnShadyDOM = false;

var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE = 'style';
var HTML = '__html';

var HTML_NAMESPACE = Namespaces.html;


var getStack = emptyFunction.thatReturns('');

var warnedUnknownTags = void 0;
var suppressHydrationWarning = void 0;

var validatePropertiesInDevelopment = void 0;
var warnForTextDifference = void 0;
var warnForPropDifference = void 0;
var warnForExtraAttributes = void 0;
var warnForInvalidEventListener = void 0;

var normalizeMarkupForTextOrAttribute = void 0;
var normalizeHTML = void 0;

{
  getStack = getCurrentFiberStackAddendum$2;

  warnedUnknownTags = {
    // Chrome is the only major browser not shipping <time>. But as of July
    // 2017 it intends to ship it due to widespread usage. We intentionally
    // *don't* warn for <time> even if it's unrecognized by Chrome because
    // it soon will be, and many apps have been using it anyway.
    time: true,
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, /* canUseEventSystem */true);
  };

  // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.
  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
    if (normalizedServerText === normalizedClientText) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
    if (normalizedServerValue === normalizedClientValue) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });
    warning(false, 'Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      warning(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', registrationName, registrationName, registrationName, getCurrentFiberStackAddendum$2());
    } else {
      warning(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.%s', registrationName, typeof listener, getCurrentFiberStackAddendum$2());
    }
  };

  // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.
  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function ensureListeningTo(rootContainerElement, registrationName) {
  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
  listenTo(registrationName, doc);
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = emptyFunction;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = nextProps[propKey];
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      // Relies on `updateStylesByID` not mutating `styleUpdates`.
      setValueForStyles(domElement, nextProp, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // We polyfill it separately on the client during commit.
      // We blacklist it here rather than in the property list because we emit it in SSR.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];
    if (propKey === STYLE) {
      setValueForStyles(domElement, propValue, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement$1(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag = void 0;

  // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.
  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement = void 0;
  var namespaceURI = parentNamespace;
  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }
  if (namespaceURI === HTML_NAMESPACE) {
    {
      isCustomComponentTag = isCustomComponent(type, props);
      // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.
      !(isCustomComponentTag || type === type.toLowerCase()) ? warning(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');
      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.
      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, { is: props.is });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type);
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;
        warning(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}

function createTextNode$1(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}

function setInitialProperties$1(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);
  {
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  var props = void 0;
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      props = rawProps;
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      props = rawProps;
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      props = rawProps;
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      props = rawProps;
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    default:
      props = rawProps;
  }

  assertValidProps(tag, props, getStack);

  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;
    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;
    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }
}

// Calculate the diff between the two objects.
function diffProperties$1(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;

  var lastProps = void 0;
  var nextProps = void 0;
  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;
    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;
      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  assertValidProps(tag, nextProps, getStack);

  var propKey = void 0;
  var styleName = void 0;
  var styleUpdates = null;
  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }
    if (propKey === STYLE) {
      var lastStyle = lastProps[propKey];
      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }
          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
      // Noop. This is handled by the clear text mechanism.
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // Noop. It doesn't work on updates anyway.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the whitelist in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }
  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = '';
          }
        }
        // Update styles that changed since `lastProp`.
        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }
          updatePayload.push(propKey, styleUpdates);
        }
        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      var lastHtml = lastProp ? lastProp[HTML] : undefined;
      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
        }
      } else {
        // TODO: It might be too late to clear this if we have children
        // inserted already.
      }
    } else if (propKey === CHILDREN) {
      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the whitelist during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }
  if (styleUpdates) {
    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
  }
  return updatePayload;
}

// Apply the diff.
function updateProperties$1(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
  // Apply the diff.
  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

  // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.
  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;
    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;
    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();
    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }
    return possibleStandardNames[lowerCasedName] || null;
  }
  return null;
}

function diffHydratedProperties$1(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  var isCustomComponentTag = void 0;
  var extraAttributeNames = void 0;

  {
    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
  }

  assertValidProps(tag, rawProps, getStack);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;
    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();
      switch (name) {
        // Built-in SSR attribute is whitelisted
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.
        case 'value':
          break;
        case 'checked':
          break;
        case 'selected':
          break;
        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;
  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = rawProps[propKey];
    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (true &&
    // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = getPropertyInfo(propKey);
      if (suppressHydrationWarning) {
        // Don't bother comparing. We're ignoring all these warnings.
      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
      // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
        // Noop
      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var rawHtml = nextProp ? nextProp[HTML] || '' : '';
        var serverHTML = domElement.innerHTML;
        var expectedHTML = normalizeHTML(domElement, rawHtml);
        if (expectedHTML !== serverHTML) {
          warnForPropDifference(propKey, serverHTML, expectedHTML);
        }
      } else if (propKey === STYLE) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);
        var expectedStyle = createDangerousStringForStyles(nextProp);
        serverValue = domElement.getAttribute('style');
        if (expectedStyle !== serverValue) {
          warnForPropDifference(propKey, serverValue, expectedStyle);
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;
        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;
          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }
          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);
            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true;
              // $FlowFixMe - Should be inferred as not undefined.
              extraAttributeNames.delete(standardName);
            }
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey);
          }
          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;
    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  return updatePayload;
}

function diffHydratedText$1(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}

function warnForUnmatchedText$1(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}

function warnForDeletedHydratableElement$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}

function warnForDeletedHydratableText$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedElement$1(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedText$1(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}

function restoreControlledState$1(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState(domElement, props);
      return;
    case 'textarea':
      restoreControlledState$3(domElement, props);
      return;
    case 'select':
      restoreControlledState$2(domElement, props);
      return;
  }
}

var ReactDOMFiberComponent = Object.freeze({
	createElement: createElement$1,
	createTextNode: createTextNode$1,
	setInitialProperties: setInitialProperties$1,
	diffProperties: diffProperties$1,
	updateProperties: updateProperties$1,
	diffHydratedProperties: diffHydratedProperties$1,
	diffHydratedText: diffHydratedText$1,
	warnForUnmatchedText: warnForUnmatchedText$1,
	warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
	warnForDeletedHydratableText: warnForDeletedHydratableText$1,
	warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
	warnForInsertedHydratedText: warnForInsertedHydratedText$1,
	restoreControlledState: restoreControlledState$1
});

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$5 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var validateDOMNesting = emptyFunction;

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo$1 = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      !(childTag == null) ? warning(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;
    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var addendum = getCurrentFiberStackAddendum$5();

    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
    if (didWarn[warnKey]) {
      return;
    }
    didWarn[warnKey] = true;

    var tagDisplayName = childTag;
    var whitespaceInfo = '';
    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';
      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
      }
      warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
    } else {
      warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
    }
  };

  // TODO: turn this into a named export
  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;
}

var validateDOMNesting$1 = validateDOMNesting;

// Renderers that don't support persistence
// can re-export everything from this module.

function shim() {
  invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');
}

// Persistence (when unsupported)
var supportsPersistence = false;
var cloneInstance = shim;
var createContainerChildSet = shim;
var appendChildToContainerChildSet = shim;
var finalizeContainerChildren = shim;
var replaceContainerChildren = shim;

// Unused

var createElement = createElement$1;
var createTextNode = createTextNode$1;
var setInitialProperties = setInitialProperties$1;
var diffProperties = diffProperties$1;
var updateProperties = updateProperties$1;
var diffHydratedProperties = diffHydratedProperties$1;
var diffHydratedText = diffHydratedText$1;
var warnForUnmatchedText = warnForUnmatchedText$1;
var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
var precacheFiberNode$1 = precacheFiberNode;
var updateFiberProps$1 = updateFiberProps;


var SUPPRESS_HYDRATION_WARNING = void 0;
{
  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
}

var eventsEnabled = null;
var selectionInformation = null;

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }
  return false;
}

function getRootHostContext(rootContainerInstance) {
  var type = void 0;
  var namespace = void 0;
  var nodeType = rootContainerInstance.nodeType;
  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }
    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }
  {
    var validatedTag = type.toLowerCase();
    var _ancestorInfo = updatedAncestorInfo(null, validatedTag, null);
    return { namespace: namespace, ancestorInfo: _ancestorInfo };
  }
  return namespace;
}

function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type, null);
    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
  }
  var parentNamespace = parentHostContext;
  return getChildNamespace(parentNamespace, type);
}

function getPublicInstance(instance) {
  return instance;
}

function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  setEnabled(false);
}

function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  selectionInformation = null;
  setEnabled(eventsEnabled);
  eventsEnabled = null;
}

function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace = void 0;
  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
      validateDOMNesting$1(null, string, ownAncestorInfo);
    }
    parentNamespace = hostContextDev.namespace;
  }
  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode$1(internalInstanceHandle, domElement);
  updateFiberProps$1(domElement, props);
  return domElement;
}

function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);
  return shouldAutoFocusHostComponent(type, props);
}

function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;
    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
      validateDOMNesting$1(null, string, ownAncestorInfo);
    }
  }
  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
}

function shouldSetTextContent(type, props) {
  return type === 'textarea' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && typeof props.dangerouslySetInnerHTML.__html === 'string';
}

function shouldDeprioritizeSubtree(type, props) {
  return !!props.hidden;
}

function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
  }
  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode$1(internalInstanceHandle, textNode);
  return textNode;
}

var now = now$1;
var isPrimaryRenderer = true;
var scheduleDeferredCallback = scheduleWork;
var cancelDeferredCallback = cancelScheduledWork;

// -------------------
//     Mutation
// -------------------

var supportsMutation = true;

function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  if (shouldAutoFocusHostComponent(type, newProps)) {
    domElement.focus();
  }
}

function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Update the props handle so that we know which props are the ones with
  // with current event handlers.
  updateFiberProps$1(domElement, newProps);
  // Apply the diff to the DOM node.
  updateProperties(domElement, updatePayload, type, oldProps, newProps);
}

function resetTextContent(domElement) {
  setTextContent(domElement, '');
}

function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}

function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function appendChildToContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, container);
  } else {
    container.appendChild(child);
  }
}

function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}

function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
}

function removeChild(parentInstance, child) {
  parentInstance.removeChild(child);
}

function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    container.removeChild(child);
  }
}

// -------------------
//     Hydration
// -------------------

var supportsHydration = true;

function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  }
  // This has now been refined to an element node.
  return instance;
}

function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  }
  // This has now been refined to a text node.
  return instance;
}

function getNextHydratableSibling(instance) {
  var node = instance.nextSibling;
  // Skip non-hydratable nodes.
  while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
    node = node.nextSibling;
  }
  return node;
}

function getFirstHydratableChild(parentInstance) {
  var next = parentInstance.firstChild;
  // Skip non-hydratable nodes.
  while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
    next = next.nextSibling;
  }
  return next;
}

function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  precacheFiberNode$1(internalInstanceHandle, instance);
  // TODO: Possibly defer this until the commit phase where all the events
  // get attached.
  updateFiberProps$1(instance, props);
  var parentNamespace = void 0;
  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  }
  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
}

function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
  precacheFiberNode$1(internalInstanceHandle, textInstance);
  return diffHydratedText(textInstance, text);
}

function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
  {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotHydrateContainerInstance(parentContainer, instance) {
  {
    if (instance.nodeType === 1) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}

function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    if (instance.nodeType === 1) {
      warnForDeletedHydratableElement(parentInstance, instance);
    } else {
      warnForDeletedHydratableText(parentInstance, instance);
    }
  }
}

function didNotFindHydratableContainerInstance(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type, props);
  }
}

function didNotFindHydratableContainerTextInstance(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}

function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedElement(parentInstance, type, props);
  }
}

function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedText(parentInstance, text);
  }
}

// Exports ReactDOM.createRoot
var enableUserTimingAPI = true;

// Experimental error-boundary API that can recover from errors within a single
// render phase
var enableGetDerivedStateFromCatch = false;
// Suspense
var enableSuspense = false;
// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
var debugRenderPhaseSideEffects = false;

// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:
var debugRenderPhaseSideEffectsForStrictMode = true;

// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.
var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;

// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
var warnAboutDeprecatedLifecycles = false;

// Warn about legacy context API
var warnAboutLegacyContextAPI = false;

// Gather advanced timing metrics for Profiler subtrees.
var enableProfilerTimer = true;

// Fires getDerivedStateFromProps for state *or* props changes
var fireGetDerivedStateFromPropsOnStateUpdates = true;

// Only used in www builds.

// Prefix measurements so that it's possible to filter them.
// Longer prefixes are hard to read in DevTools.
var reactEmoji = '\u269B';
var warningEmoji = '\u26D4';
var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

// Keep track of current fiber so that we know the path to unwind on pause.
// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
var currentFiber = null;
// If we're in the middle of user code, which fiber and method is it?
// Reusing `currentFiber` would be confusing for this because user code fiber
// can change during commit phase too, but we don't need to unwind it (since
// lifecycles in the commit phase don't resemble a tree).
var currentPhase = null;
var currentPhaseFiber = null;
// Did lifecycle hook schedule an update? This is often a performance problem,
// so we will keep track of it, and include it in the report.
// Track commits caused by cascading updates.
var isCommitting = false;
var hasScheduledUpdateInCurrentCommit = false;
var hasScheduledUpdateInCurrentPhase = false;
var commitCountInCurrentWorkLoop = 0;
var effectCountInCurrentCommit = 0;
var isWaitingForCallback = false;
// During commits, we only show a measurement once per method name
// to avoid stretch the commit phase with measurement overhead.
var labelsInCurrentCommit = new Set();

var formatMarkName = function (markName) {
  return reactEmoji + ' ' + markName;
};

var formatLabel = function (label, warning$$1) {
  var prefix = warning$$1 ? warningEmoji + ' ' : reactEmoji + ' ';
  var suffix = warning$$1 ? ' Warning: ' + warning$$1 : '';
  return '' + prefix + label + suffix;
};

var beginMark = function (markName) {
  performance.mark(formatMarkName(markName));
};

var clearMark = function (markName) {
  performance.clearMarks(formatMarkName(markName));
};

var endMark = function (label, markName, warning$$1) {
  var formattedMarkName = formatMarkName(markName);
  var formattedLabel = formatLabel(label, warning$$1);
  try {
    performance.measure(formattedLabel, formattedMarkName);
  } catch (err) {}
  // If previous mark was missing for some reason, this will throw.
  // This could only happen if React crashed in an unexpected place earlier.
  // Don't pile on with more errors.

  // Clear marks immediately to avoid growing buffer.
  performance.clearMarks(formattedMarkName);
  performance.clearMeasures(formattedLabel);
};

var getFiberMarkName = function (label, debugID) {
  return label + ' (#' + debugID + ')';
};

var getFiberLabel = function (componentName, isMounted, phase) {
  if (phase === null) {
    // These are composite component total time measurements.
    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
  } else {
    // Composite component methods.
    return componentName + '.' + phase;
  }
};

var beginFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);

  if (isCommitting && labelsInCurrentCommit.has(label)) {
    // During the commit phase, we don't show duplicate labels because
    // there is a fixed overhead for every measurement, and we don't
    // want to stretch the commit phase beyond necessary.
    return false;
  }
  labelsInCurrentCommit.add(label);

  var markName = getFiberMarkName(label, debugID);
  beginMark(markName);
  return true;
};

var clearFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  clearMark(markName);
};

var endFiberMark = function (fiber, phase, warning$$1) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  endMark(label, markName, warning$$1);
};

var shouldIgnoreFiber = function (fiber) {
  // Host components should be skipped in the timeline.
  // We could check typeof fiber.type, but does this work with RN?
  switch (fiber.tag) {
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
    case Mode:
      return true;
    default:
      return false;
  }
};

var clearPendingPhaseMeasurement = function () {
  if (currentPhase !== null && currentPhaseFiber !== null) {
    clearFiberMark(currentPhaseFiber, currentPhase);
  }
  currentPhaseFiber = null;
  currentPhase = null;
  hasScheduledUpdateInCurrentPhase = false;
};

var pauseTimers = function () {
  // Stops all currently active measurements so that they can be resumed
  // if we continue in a later deferred loop from the same unit of work.
  var fiber = currentFiber;
  while (fiber) {
    if (fiber._debugIsCurrentlyTiming) {
      endFiberMark(fiber, null, null);
    }
    fiber = fiber.return;
  }
};

var resumeTimersRecursively = function (fiber) {
  if (fiber.return !== null) {
    resumeTimersRecursively(fiber.return);
  }
  if (fiber._debugIsCurrentlyTiming) {
    beginFiberMark(fiber, null);
  }
};

var resumeTimers = function () {
  // Resumes all measurements that were active during the last deferred loop.
  if (currentFiber !== null) {
    resumeTimersRecursively(currentFiber);
  }
};

function recordEffect() {
  if (enableUserTimingAPI) {
    effectCountInCurrentCommit++;
  }
}

function recordScheduleUpdate() {
  if (enableUserTimingAPI) {
    if (isCommitting) {
      hasScheduledUpdateInCurrentCommit = true;
    }
    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
      hasScheduledUpdateInCurrentPhase = true;
    }
  }
}

function startRequestCallbackTimer() {
  if (enableUserTimingAPI) {
    if (supportsUserTiming && !isWaitingForCallback) {
      isWaitingForCallback = true;
      beginMark('(Waiting for async callback...)');
    }
  }
}

function stopRequestCallbackTimer(didExpire, expirationTime) {
  if (enableUserTimingAPI) {
    if (supportsUserTiming) {
      isWaitingForCallback = false;
      var warning$$1 = didExpire ? 'React was blocked by main thread' : null;
      endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning$$1);
    }
  }
}

function startWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, this is the fiber to unwind from.
    currentFiber = fiber;
    if (!beginFiberMark(fiber, null)) {
      return;
    }
    fiber._debugIsCurrentlyTiming = true;
  }
}

function cancelWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // Remember we shouldn't complete measurement for this fiber.
    // Otherwise flamechart will be deep even for small updates.
    fiber._debugIsCurrentlyTiming = false;
    clearFiberMark(fiber, null);
  }
}

function stopWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    endFiberMark(fiber, null, null);
  }
}

function stopFailedWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    var warning$$1 = 'An error was thrown inside this error boundary';
    endFiberMark(fiber, null, warning$$1);
  }
}

function startPhaseTimer(fiber, phase) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    clearPendingPhaseMeasurement();
    if (!beginFiberMark(fiber, phase)) {
      return;
    }
    currentPhaseFiber = fiber;
    currentPhase = phase;
  }
}

function stopPhaseTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    if (currentPhase !== null && currentPhaseFiber !== null) {
      var warning$$1 = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
      endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
    }
    currentPhase = null;
    currentPhaseFiber = null;
  }
}

function startWorkLoopTimer(nextUnitOfWork) {
  if (enableUserTimingAPI) {
    currentFiber = nextUnitOfWork;
    if (!supportsUserTiming) {
      return;
    }
    commitCountInCurrentWorkLoop = 0;
    // This is top level call.
    // Any other measurements are performed within.
    beginMark('(React Tree Reconciliation)');
    // Resume any measurements that were in progress during the last loop.
    resumeTimers();
  }
}

function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var warning$$1 = null;
    if (interruptedBy !== null) {
      if (interruptedBy.tag === HostRoot) {
        warning$$1 = 'A top-level update interrupted the previous render';
      } else {
        var componentName = getComponentName(interruptedBy) || 'Unknown';
        warning$$1 = 'An update to ' + componentName + ' interrupted the previous render';
      }
    } else if (commitCountInCurrentWorkLoop > 1) {
      warning$$1 = 'There were cascading updates';
    }
    commitCountInCurrentWorkLoop = 0;
    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';
    // Pause any measurements until the next loop.
    pauseTimers();
    endMark(label, '(React Tree Reconciliation)', warning$$1);
  }
}

function startCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    isCommitting = true;
    hasScheduledUpdateInCurrentCommit = false;
    labelsInCurrentCommit.clear();
    beginMark('(Committing Changes)');
  }
}

function stopCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning$$1 = null;
    if (hasScheduledUpdateInCurrentCommit) {
      warning$$1 = 'Lifecycle hook scheduled a cascading update';
    } else if (commitCountInCurrentWorkLoop > 0) {
      warning$$1 = 'Caused by a cascading update in earlier commit';
    }
    hasScheduledUpdateInCurrentCommit = false;
    commitCountInCurrentWorkLoop++;
    isCommitting = false;
    labelsInCurrentCommit.clear();

    endMark('(Committing Changes)', '(Committing Changes)', warning$$1);
  }
}

function startCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Snapshot Effects)');
  }
}

function stopCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
  }
}

function startCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Host Effects)');
  }
}

function stopCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
  }
}

function startCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Calling Lifecycle Methods)');
  }
}

function stopCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
  }
}

var valueStack = [];

var fiberStack = void 0;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      warning(false, 'Unexpected pop.');
    }
    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      warning(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];

  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;

  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

function checkThatStackIsEmpty() {
  {
    if (index !== -1) {
      warning(false, 'Expected an empty stack. Something was not reset properly.');
    }
  }
}

function resetStackAfterFatalErrorInDev() {
  {
    index = -1;
    valueStack.length = 0;
    fiberStack.length = 0;
  }
}

var warnedAboutMissingGetChildContext = void 0;

{
  warnedAboutMissingGetChildContext = {};
}

// A cursor to the current merged context object on the stack.
var contextStackCursor = createCursor(emptyObject);
// A cursor to a boolean indicating whether the context has changed.
var didPerformWorkStackCursor = createCursor(false);
// Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.
var previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
  var hasOwnContext = isContextProvider(workInProgress);
  if (hasOwnContext) {
    // If the fiber is a context provider itself, when we read its context
    // we have already pushed its own child context on the stack. A context
    // provider should not "see" its own child context. Therefore we read the
    // previous (parent) context instead for a context provider.
    return previousContext;
  }
  return contextStackCursor.current;
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  var instance = workInProgress.stateNode;
  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

function getMaskedContext(workInProgress, unmaskedContext) {
  var type = workInProgress.type;
  var contextTypes = type.contextTypes;
  if (!contextTypes) {
    return emptyObject;
  }

  // Avoid recreating masked context unless unmasked context has changed.
  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
  // This may trigger infinite loops if componentWillReceiveProps calls setState.
  var instance = workInProgress.stateNode;
  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
    return instance.__reactInternalMemoizedMaskedChildContext;
  }

  var context = {};
  for (var key in contextTypes) {
    context[key] = unmaskedContext[key];
  }

  {
    var name = getComponentName(workInProgress) || 'Unknown';
    checkPropTypes(contextTypes, context, 'context', name, ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // Context is created before the class component is instantiated so check for instance.
  if (instance) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return context;
}

function hasContextChanged() {
  return didPerformWorkStackCursor.current;
}

function isContextConsumer(fiber) {
  return fiber.tag === ClassComponent && fiber.type.contextTypes != null;
}

function isContextProvider(fiber) {
  return fiber.tag === ClassComponent && fiber.type.childContextTypes != null;
}

function popContextProvider(fiber) {
  if (!isContextProvider(fiber)) {
    return;
  }

  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function popTopLevelContextObject(fiber) {
  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function pushTopLevelContextObject(fiber, context, didChange) {
  !(contextStackCursor.current === emptyObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  push(contextStackCursor, context, fiber);
  push(didPerformWorkStackCursor, didChange, fiber);
}

function processChildContext(fiber, parentContext) {
  var instance = fiber.stateNode;
  var childContextTypes = fiber.type.childContextTypes;

  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
  if (typeof instance.getChildContext !== 'function') {
    {
      var componentName = getComponentName(fiber) || 'Unknown';

      if (!warnedAboutMissingGetChildContext[componentName]) {
        warnedAboutMissingGetChildContext[componentName] = true;
        warning(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
      }
    }
    return parentContext;
  }

  var childContext = void 0;
  {
    ReactDebugCurrentFiber.setCurrentPhase('getChildContext');
  }
  startPhaseTimer(fiber, 'getChildContext');
  childContext = instance.getChildContext();
  stopPhaseTimer();
  {
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }
  for (var contextKey in childContext) {
    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(fiber) || 'Unknown', contextKey) : void 0;
  }
  {
    var name = getComponentName(fiber) || 'Unknown';
    checkPropTypes(childContextTypes, childContext, 'child context', name,
    // In practice, there is one case in which we won't get a stack. It's when
    // somebody calls unstable_renderSubtreeIntoContainer() and we process
    // context from the parent component instance. The stack will be missing
    // because it's outside of the reconciliation, and so the pointer has not
    // been set. This is rare and doesn't matter. We'll also remove that API.
    ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  return _assign({}, parentContext, childContext);
}

function pushContextProvider(workInProgress) {
  if (!isContextProvider(workInProgress)) {
    return false;
  }

  var instance = workInProgress.stateNode;
  // We push the context as early as possible to ensure stack integrity.
  // If the instance does not exist yet, we will push null at first,
  // and replace it on the stack later when invalidating the context.
  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

  // Remember the parent context so we can merge with it later.
  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
  previousContext = contextStackCursor.current;
  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

  return true;
}

function invalidateContextProvider(workInProgress, didChange) {
  var instance = workInProgress.stateNode;
  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  if (didChange) {
    // Merge parent and own context.
    // Skip this if we're not updating due to sCU.
    // This avoids unnecessarily recomputing memoized values.
    var mergedContext = processChildContext(workInProgress, previousContext);
    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

    // Replace the old (or empty) context with the new one.
    // It is important to unwind the context in the reverse order.
    pop(didPerformWorkStackCursor, workInProgress);
    pop(contextStackCursor, workInProgress);
    // Now push the new context and mark that it has changed.
    push(contextStackCursor, mergedContext, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  } else {
    pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }
}

function findCurrentUnmaskedContext(fiber) {
  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
  // makes sense elsewhere
  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  var node = fiber;
  while (node.tag !== HostRoot) {
    if (isContextProvider(node)) {
      return node.stateNode.__reactInternalMemoizedMergedChildContext;
    }
    var parent = node.return;
    !parent ? invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    node = parent;
  }
  return node.stateNode.context;
}

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var MAX_SIGNED_31_BIT_INT = 1073741823;

// TODO: Use an opaque type once ESLint et al support the syntax


var NoWork = 0;
var Sync = 1;
var Never = MAX_SIGNED_31_BIT_INT;

var UNIT_SIZE = 10;
var MAGIC_NUMBER_OFFSET = 2;

// 1 unit of expiration time represents 10ms.
function msToExpirationTime(ms) {
  // Always add an offset so that we don't clash with the magic number for NoWork.
  return (ms / UNIT_SIZE | 0) + MAGIC_NUMBER_OFFSET;
}

function expirationTimeToMs(expirationTime) {
  return (expirationTime - MAGIC_NUMBER_OFFSET) * UNIT_SIZE;
}

function ceiling(num, precision) {
  return ((num / precision | 0) + 1) * precision;
}

function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
  return MAGIC_NUMBER_OFFSET + ceiling(currentTime - MAGIC_NUMBER_OFFSET + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
}

var NoContext = 0;
var AsyncMode = 1;
var StrictMode = 2;
var ProfileMode = 4;

var hasBadMapPolyfill = void 0;

{
  hasBadMapPolyfill = false;
  try {
    var nonExtensibleObject = Object.preventExtensions({});
    var testMap = new Map([[nonExtensibleObject, null]]);
    var testSet = new Set([nonExtensibleObject]);
    // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.
    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

// A Fiber is work on a Component that needs to be done or was done. There can
// be more than one per component.


var debugCounter = void 0;

{
  debugCounter = 1;
}

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.type = null;
  this.stateNode = null;

  // Fiber
  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;

  this.ref = null;

  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;

  this.mode = mode;

  // Effects
  this.effectTag = NoEffect;
  this.nextEffect = null;

  this.firstEffect = null;
  this.lastEffect = null;

  this.expirationTime = NoWork;

  this.alternate = null;

  if (enableProfilerTimer) {
    this.selfBaseTime = 0;
    this.treeBaseTime = 0;
  }

  {
    this._debugID = debugCounter++;
    this._debugSource = null;
    this._debugOwner = null;
    this._debugIsCurrentlyTiming = false;
    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
}

// This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.
var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

// This is used to create an alternate fiber to do work on.
function createWorkInProgress(current, pendingProps, expirationTime) {
  var workInProgress = current.alternate;
  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps;

    // We already have an alternate.
    // Reset the effect tag.
    workInProgress.effectTag = NoEffect;

    // The effect list is no longer valid.
    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;
  }

  workInProgress.expirationTime = expirationTime;

  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue;

  // These will be overridden during the parent's reconciliation
  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  if (enableProfilerTimer) {
    workInProgress.selfBaseTime = current.selfBaseTime;
    workInProgress.treeBaseTime = current.treeBaseTime;
  }

  return workInProgress;
}

function createHostRootFiber(isAsync) {
  var mode = isAsync ? AsyncMode | StrictMode : NoContext;
  return createFiber(HostRoot, null, null, mode);
}

function createFiberFromElement(element, mode, expirationTime) {
  var owner = null;
  {
    owner = element._owner;
  }

  var fiber = void 0;
  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;

  var fiberTag = void 0;
  if (typeof type === 'function') {
    fiberTag = shouldConstruct(type) ? ClassComponent : IndeterminateComponent;
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);
      case REACT_ASYNC_MODE_TYPE:
        fiberTag = Mode;
        mode |= AsyncMode | StrictMode;
        break;
      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictMode;
        break;
      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);
      case REACT_TIMEOUT_TYPE:
        fiberTag = TimeoutComponent;
        // Suspense does not require async, but its children should be strict
        // mode compatible.
        mode |= StrictMode;
        break;
      default:
        fiberTag = getFiberTagFromObjectType(type, owner);
        break;
    }
  }

  fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.type = type;
  fiber.expirationTime = expirationTime;

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
}

function getFiberTagFromObjectType(type, owner) {
  var $$typeof = typeof type === 'object' && type !== null ? type.$$typeof : null;

  switch ($$typeof) {
    case REACT_PROVIDER_TYPE:
      return ContextProvider;
    case REACT_CONTEXT_TYPE:
      // This is a consumer
      return ContextConsumer;
    case REACT_FORWARD_REF_TYPE:
      return ForwardRef;
    default:
      {
        var info = '';
        {
          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
            info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
          }
          var ownerName = owner ? getComponentName(owner) : null;
          if (ownerName) {
            info += '\n\nCheck the render method of `' + ownerName + '`.';
          }
        }
        invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
      }
  }
}

function createFiberFromFragment(elements, mode, expirationTime, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
  {
    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
      invariant(false, 'Profiler must specify an "id" string and "onRender" function as props');
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
  fiber.type = REACT_PROFILER_TYPE;
  fiber.expirationTime = expirationTime;
  if (enableProfilerTimer) {
    fiber.stateNode = {
      elapsedPauseTimeAtStart: 0,
      duration: 0,
      startTime: 0
    };
  }

  return fiber;
}

function createFiberFromText(content, mode, expirationTime) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoContext);
  fiber.type = 'DELETED';
  return fiber;
}

function createFiberFromPortal(portal, mode, expirationTime) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.expirationTime = expirationTime;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null, // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
}

// Used for stashing WIP properties to replay failed work in DEV.
function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoContext);
  }

  // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.

  target.tag = source.tag;
  target.key = source.key;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.mode = source.mode;
  target.effectTag = source.effectTag;
  target.nextEffect = source.nextEffect;
  target.firstEffect = source.firstEffect;
  target.lastEffect = source.lastEffect;
  target.expirationTime = source.expirationTime;
  target.alternate = source.alternate;
  if (enableProfilerTimer) {
    target.selfBaseTime = source.selfBaseTime;
    target.treeBaseTime = source.treeBaseTime;
  }
  target._debugID = source._debugID;
  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
  return target;
}

// TODO: This should be lifted into the renderer.


function createFiberRoot(containerInfo, isAsync, hydrate) {
  // Cyclic construction. This cheats the type system right now because
  // stateNode is any.
  var uninitializedFiber = createHostRootFiber(isAsync);
  var root = {
    current: uninitializedFiber,
    containerInfo: containerInfo,
    pendingChildren: null,

    earliestPendingTime: NoWork,
    latestPendingTime: NoWork,
    earliestSuspendedTime: NoWork,
    latestSuspendedTime: NoWork,
    latestPingedTime: NoWork,

    pendingCommitExpirationTime: NoWork,
    finishedWork: null,
    context: null,
    pendingContext: null,
    hydrate: hydrate,
    remainingExpirationTime: NoWork,
    firstBatch: null,
    nextScheduledRoot: null
  };
  uninitializedFiber.stateNode = root;
  return root;
}

var onCommitFiberRoot = null;
var onCommitFiberUnmount = null;
var hasLoggedError = false;

function catchErrors(fn) {
  return function (arg) {
    try {
      return fn(arg);
    } catch (err) {
      if (true && !hasLoggedError) {
        hasLoggedError = true;
        warning(false, 'React DevTools encountered an error: %s', err);
      }
    }
  };
}

function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }
  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }
  if (!hook.supportsFiber) {
    {
      warning(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
    }
    // DevTools exists, even though it doesn't support Fiber.
    return true;
  }
  try {
    var rendererID = hook.inject(internals);
    // We have successfully injected, so now it is safe to set up hooks.
    onCommitFiberRoot = catchErrors(function (root) {
      return hook.onCommitFiberRoot(rendererID, root);
    });
    onCommitFiberUnmount = catchErrors(function (fiber) {
      return hook.onCommitFiberUnmount(rendererID, fiber);
    });
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      warning(false, 'React DevTools encountered an error: %s.', err);
    }
  }
  // DevTools exists
  return true;
}

function onCommitRoot(root) {
  if (typeof onCommitFiberRoot === 'function') {
    onCommitFiberRoot(root);
  }
}

function onCommitUnmount(fiber) {
  if (typeof onCommitFiberUnmount === 'function') {
    onCommitFiberUnmount(fiber);
  }
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var ReactStrictModeWarnings = {
  discardPendingWarnings: function () {},
  flushPendingDeprecationWarnings: function () {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordDeprecationWarnings: function (fiber, instance) {},
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {}
};

{
  var LIFECYCLE_SUGGESTIONS = {
    UNSAFE_componentWillMount: 'componentDidMount',
    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',
    UNSAFE_componentWillUpdate: 'componentDidUpdate'
  };

  var pendingComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUnsafeLifecycleWarnings = new Map();
  var pendingLegacyContextWarning = new Map();

  // Tracks components we have already warned about.
  var didWarnAboutDeprecatedLifecycles = new Set();
  var didWarnAboutUnsafeLifecycles = new Set();
  var didWarnAboutLegacyContext = new Set();

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUnsafeLifecycleWarnings = new Map();
    pendingLegacyContextWarning = new Map();
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {
      var lifecyclesWarningMesages = [];

      Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {
        var lifecycleWarnings = lifecycleWarningsMap[lifecycle];
        if (lifecycleWarnings.length > 0) {
          var componentNames = new Set();
          lifecycleWarnings.forEach(function (fiber) {
            componentNames.add(getComponentName(fiber) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });

          var formatted = lifecycle.replace('UNSAFE_', '');
          var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
          var sortedComponentNames = setToSortedString(componentNames);

          lifecyclesWarningMesages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));
        }
      });

      if (lifecyclesWarningMesages.length > 0) {
        var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

        warning(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\n\n%s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMesages.join('\n\n'));
      }
    });

    pendingUnsafeLifecycleWarnings = new Map();
  };

  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;

    var node = fiber;
    while (node !== null) {
      if (node.mode & StrictMode) {
        maybeStrictRoot = node;
      }
      node = node.return;
    }

    return maybeStrictRoot;
  };

  ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {
    if (pendingComponentWillMountWarnings.length > 0) {
      var uniqueNames = new Set();
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var sortedNames = setToSortedString(uniqueNames);

      lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);

      pendingComponentWillMountWarnings = [];
    }

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      var _uniqueNames = new Set();
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        _uniqueNames.add(getComponentName(fiber) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var _sortedNames = setToSortedString(_uniqueNames);

      lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);

      pendingComponentWillReceivePropsWarnings = [];
    }

    if (pendingComponentWillUpdateWarnings.length > 0) {
      var _uniqueNames2 = new Set();
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        _uniqueNames2.add(getComponentName(fiber) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var _sortedNames2 = setToSortedString(_uniqueNames2);

      lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);

      pendingComponentWillUpdateWarnings = [];
    }
  };

  ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {
    // Dedup strategy: Warn once per component.
    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
      return;
    }

    // Don't warn about react-lifecycles-compat polyfilled components.
    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }
    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }
    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);
    if (strictRoot === null) {
      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    }

    // Dedup strategy: Warn once per component.
    // This is difficult to track any other way since component names
    // are often vague and are likely to collide between 3rd party libraries.
    // An expand property is probably okay to use here since it's DEV-only,
    // and will only be set in the event of serious warnings.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    var warningsForRoot = void 0;
    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
      warningsForRoot = {
        UNSAFE_componentWillMount: [],
        UNSAFE_componentWillReceiveProps: [],
        UNSAFE_componentWillUpdate: []
      };

      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
    } else {
      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);
    }

    var unsafeLifecycles = [];
    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillMount');
    }
    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
    }
    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillUpdate');
    }

    if (unsafeLifecycles.length > 0) {
      unsafeLifecycles.forEach(function (lifecycle) {
        warningsForRoot[lifecycle].push(fiber);
      });
    }
  };

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);
    if (strictRoot === null) {
      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    }

    // Dedup strategy: Warn once per component.
    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }
      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });

      var sortedNames = setToSortedString(uniqueNames);
      var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

      warning(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);
    });
  };
}

// This lets us hook into Fiber to debug what it's doing.
// See https://github.com/facebook/react/pull/8033.
// This is not part of the public API, not even for React DevTools.
// You may only inject a debugTool if you work on React Fiber itself.
var ReactFiberInstrumentation = {
  debugTool: null
};

var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

// TODO: Offscreen updates

function markPendingPriorityLevel(root, expirationTime) {
  if (enableSuspense) {
    // Update the latest and earliest pending times
    var earliestPendingTime = root.earliestPendingTime;
    if (earliestPendingTime === NoWork) {
      // No other pending updates.
      root.earliestPendingTime = root.latestPendingTime = expirationTime;
    } else {
      if (earliestPendingTime > expirationTime) {
        // This is the earliest pending update.
        root.earliestPendingTime = expirationTime;
      } else {
        var latestPendingTime = root.latestPendingTime;
        if (latestPendingTime < expirationTime) {
          // This is the latest pending update
          root.latestPendingTime = expirationTime;
        }
      }
    }
  }
}

function markCommittedPriorityLevels(root, currentTime, earliestRemainingTime) {
  if (enableSuspense) {
    if (earliestRemainingTime === NoWork) {
      // Fast path. There's no remaining work. Clear everything.
      root.earliestPendingTime = NoWork;
      root.latestPendingTime = NoWork;
      root.earliestSuspendedTime = NoWork;
      root.latestSuspendedTime = NoWork;
      root.latestPingedTime = NoWork;
      return;
    }

    // Let's see if the previous latest known pending level was just flushed.
    var latestPendingTime = root.latestPendingTime;
    if (latestPendingTime !== NoWork) {
      if (latestPendingTime < earliestRemainingTime) {
        // We've flushed all the known pending levels.
        root.earliestPendingTime = root.latestPendingTime = NoWork;
      } else {
        var earliestPendingTime = root.earliestPendingTime;
        if (earliestPendingTime < earliestRemainingTime) {
          // We've flushed the earliest known pending level. Set this to the
          // latest pending time.
          root.earliestPendingTime = root.latestPendingTime;
        }
      }
    }

    // Now let's handle the earliest remaining level in the whole tree. We need to
    // decide whether to treat it as a pending level or as suspended. Check
    // it falls within the range of known suspended levels.

    var earliestSuspendedTime = root.earliestSuspendedTime;
    if (earliestSuspendedTime === NoWork) {
      // There's no suspended work. Treat the earliest remaining level as a
      // pending level.
      markPendingPriorityLevel(root, earliestRemainingTime);
      return;
    }

    var latestSuspendedTime = root.latestSuspendedTime;
    if (earliestRemainingTime > latestSuspendedTime) {
      // The earliest remaining level is later than all the suspended work. That
      // means we've flushed all the suspended work.
      root.earliestSuspendedTime = NoWork;
      root.latestSuspendedTime = NoWork;
      root.latestPingedTime = NoWork;

      // There's no suspended work. Treat the earliest remaining level as a
      // pending level.
      markPendingPriorityLevel(root, earliestRemainingTime);
      return;
    }

    if (earliestRemainingTime < earliestSuspendedTime) {
      // The earliest remaining time is earlier than all the suspended work.
      // Treat it as a pending update.
      markPendingPriorityLevel(root, earliestRemainingTime);
      return;
    }

    // The earliest remaining time falls within the range of known suspended
    // levels. We should treat this as suspended work.
  }
}

function markSuspendedPriorityLevel(root, suspendedTime) {
  if (enableSuspense) {
    // First, check the known pending levels and update them if needed.
    var earliestPendingTime = root.earliestPendingTime;
    var latestPendingTime = root.latestPendingTime;
    if (earliestPendingTime === suspendedTime) {
      if (latestPendingTime === suspendedTime) {
        // Both known pending levels were suspended. Clear them.
        root.earliestPendingTime = root.latestPendingTime = NoWork;
      } else {
        // The earliest pending level was suspended. Clear by setting it to the
        // latest pending level.
        root.earliestPendingTime = latestPendingTime;
      }
    } else if (latestPendingTime === suspendedTime) {
      // The latest pending level was suspended. Clear by setting it to the
      // latest pending level.
      root.latestPendingTime = earliestPendingTime;
    }

    // Next, if we're working on the lowest known suspended level, clear the ping.
    // TODO: What if a promise suspends and pings before the root completes?
    var latestSuspendedTime = root.latestSuspendedTime;
    if (latestSuspendedTime === suspendedTime) {
      root.latestPingedTime = NoWork;
    }

    // Finally, update the known suspended levels.
    var earliestSuspendedTime = root.earliestSuspendedTime;
    if (earliestSuspendedTime === NoWork) {
      // No other suspended levels.
      root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
    } else {
      if (earliestSuspendedTime > suspendedTime) {
        // This is the earliest suspended level.
        root.earliestSuspendedTime = suspendedTime;
      } else if (latestSuspendedTime < suspendedTime) {
        // This is the latest suspended level
        root.latestSuspendedTime = suspendedTime;
      }
    }
  }
}

function markPingedPriorityLevel(root, pingedTime) {
  if (enableSuspense) {
    var latestSuspendedTime = root.latestSuspendedTime;
    if (latestSuspendedTime !== NoWork && latestSuspendedTime <= pingedTime) {
      var latestPingedTime = root.latestPingedTime;
      if (latestPingedTime === NoWork || latestPingedTime < pingedTime) {
        root.latestPingedTime = pingedTime;
      }
    }
  }
}

function findNextPendingPriorityLevel(root) {
  if (enableSuspense) {
    var earliestSuspendedTime = root.earliestSuspendedTime;
    var earliestPendingTime = root.earliestPendingTime;
    if (earliestSuspendedTime === NoWork) {
      // Fast path. There's no suspended work.
      return earliestPendingTime;
    }

    // First, check if there's known pending work.
    if (earliestPendingTime !== NoWork) {
      return earliestPendingTime;
    }

    // Finally, if a suspended level was pinged, work on that. Otherwise there's
    // nothing to work on.
    return root.latestPingedTime;
  } else {
    return root.current.expirationTime;
  }
}

// UpdateQueue is a linked list of prioritized updates.
//
// Like fibers, update queues come in pairs: a current queue, which represents
// the visible state of the screen, and a work-in-progress queue, which is
// can be mutated and processed asynchronously before it is committed — a form
// of double buffering. If a work-in-progress render is discarded before
// finishing, we create a new work-in-progress by cloning the current queue.
//
// Both queues share a persistent, singly-linked list structure. To schedule an
// update, we append it to the end of both queues. Each queue maintains a
// pointer to first update in the persistent list that hasn't been processed.
// The work-in-progress pointer always has a position equal to or greater than
// the current queue, since we always work on that one. The current queue's
// pointer is only updated during the commit phase, when we swap in the
// work-in-progress.
//
// For example:
//
//   Current pointer:           A - B - C - D - E - F
//   Work-in-progress pointer:              D - E - F
//                                          ^
//                                          The work-in-progress queue has
//                                          processed more updates than current.
//
// The reason we append to both queues is because otherwise we might drop
// updates without ever processing them. For example, if we only add updates to
// the work-in-progress queue, some updates could be lost whenever a work-in
// -progress render restarts by cloning from current. Similarly, if we only add
// updates to the current queue, the updates will be lost whenever an already
// in-progress queue commits and swaps with the current queue. However, by
// adding to both queues, we guarantee that the update will be part of the next
// work-in-progress. (And because the work-in-progress queue becomes the
// current queue once it commits, there's no danger of applying the same
// update twice.)
//
// Prioritization
// --------------
//
// Updates are not sorted by priority, but by insertion; new updates are always
// appended to the end of the list.
//
// The priority is still important, though. When processing the update queue
// during the render phase, only the updates with sufficient priority are
// included in the result. If we skip an update because it has insufficient
// priority, it remains in the queue to be processed later, during a lower
// priority render. Crucially, all updates subsequent to a skipped update also
// remain in the queue *regardless of their priority*. That means high priority
// updates are sometimes processed twice, at two separate priorities. We also
// keep track of a base state, that represents the state before the first
// update in the queue is applied.
//
// For example:
//
//   Given a base state of '', and the following queue of updates
//
//     A1 - B2 - C1 - D2
//
//   where the number indicates the priority, and the update is applied to the
//   previous state by appending a letter, React will process these updates as
//   two separate renders, one per distinct priority level:
//
//   First render, at priority 1:
//     Base state: ''
//     Updates: [A1, C1]
//     Result state: 'AC'
//
//   Second render, at priority 2:
//     Base state: 'A'            <-  The base state does not include C1,
//                                    because B2 was skipped.
//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
//     Result state: 'ABCD'
//
// Because we process updates in insertion order, and rebase high priority
// updates when preceding updates are skipped, the final result is deterministic
// regardless of priority. Intermediate state may vary according to system
// resources, but the final state is always the same.

var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3;

// Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.
var hasForceUpdate = false;

var didWarnUpdateInsideUpdate = void 0;
var currentlyProcessingQueue = void 0;
var resetCurrentlyProcessingQueue = void 0;
{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;
  resetCurrentlyProcessingQueue = function () {
    currentlyProcessingQueue = null;
  };
}

function createUpdateQueue(baseState) {
  var queue = {
    expirationTime: NoWork,
    baseState: baseState,
    firstUpdate: null,
    lastUpdate: null,
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function cloneUpdateQueue(currentQueue) {
  var queue = {
    expirationTime: currentQueue.expirationTime,
    baseState: currentQueue.baseState,
    firstUpdate: currentQueue.firstUpdate,
    lastUpdate: currentQueue.lastUpdate,

    // TODO: With resuming, if we bail out and resuse the child tree, we should
    // keep these effects.
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,

    firstEffect: null,
    lastEffect: null,

    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function createUpdate(expirationTime) {
  return {
    expirationTime: expirationTime,

    tag: UpdateState,
    payload: null,
    callback: null,

    next: null,
    nextEffect: null
  };
}

function appendUpdateToQueue(queue, update, expirationTime) {
  // Append the update to the end of the list.
  if (queue.lastUpdate === null) {
    // Queue is empty
    queue.firstUpdate = queue.lastUpdate = update;
  } else {
    queue.lastUpdate.next = update;
    queue.lastUpdate = update;
  }
  if (queue.expirationTime === NoWork || queue.expirationTime > expirationTime) {
    // The incoming update has the earliest expiration of any update in the
    // queue. Update the queue's expiration time.
    queue.expirationTime = expirationTime;
  }
}

function enqueueUpdate(fiber, update, expirationTime) {
  // Update queues are created lazily.
  var alternate = fiber.alternate;
  var queue1 = void 0;
  var queue2 = void 0;
  if (alternate === null) {
    // There's only one fiber.
    queue1 = fiber.updateQueue;
    queue2 = null;
    if (queue1 === null) {
      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
    }
  } else {
    // There are two owners.
    queue1 = fiber.updateQueue;
    queue2 = alternate.updateQueue;
    if (queue1 === null) {
      if (queue2 === null) {
        // Neither fiber has an update queue. Create new ones.
        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
      } else {
        // Only one fiber has an update queue. Clone to create a new one.
        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
      }
    } else {
      if (queue2 === null) {
        // Only one fiber has an update queue. Clone to create a new one.
        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
      } else {
        // Both owners have an update queue.
      }
    }
  }
  if (queue2 === null || queue1 === queue2) {
    // There's only a single queue.
    appendUpdateToQueue(queue1, update, expirationTime);
  } else {
    // There are two queues. We need to append the update to both queues,
    // while accounting for the persistent structure of the list — we don't
    // want the same update to be added multiple times.
    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
      // One of the queues is not empty. We must add the update to both queues.
      appendUpdateToQueue(queue1, update, expirationTime);
      appendUpdateToQueue(queue2, update, expirationTime);
    } else {
      // Both queues are non-empty. The last update is the same in both lists,
      // because of structural sharing. So, only append to one of the lists.
      appendUpdateToQueue(queue1, update, expirationTime);
      // But we still need to update the `lastUpdate` pointer of queue2.
      queue2.lastUpdate = update;
    }
  }

  {
    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
      warning(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
      didWarnUpdateInsideUpdate = true;
    }
  }
}

function enqueueCapturedUpdate(workInProgress, update, renderExpirationTime) {
  // Captured updates go into a separate list, and only on the work-in-
  // progress queue.
  var workInProgressQueue = workInProgress.updateQueue;
  if (workInProgressQueue === null) {
    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
  } else {
    // TODO: I put this here rather than createWorkInProgress so that we don't
    // clone the queue unnecessarily. There's probably a better way to
    // structure this.
    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
  }

  // Append the update to the end of the list.
  if (workInProgressQueue.lastCapturedUpdate === null) {
    // This is the first render phase update
    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
  } else {
    workInProgressQueue.lastCapturedUpdate.next = update;
    workInProgressQueue.lastCapturedUpdate = update;
  }
  if (workInProgressQueue.expirationTime === NoWork || workInProgressQueue.expirationTime > renderExpirationTime) {
    // The incoming update has the earliest expiration of any update in the
    // queue. Update the queue's expiration time.
    workInProgressQueue.expirationTime = renderExpirationTime;
  }
}

function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
  var current = workInProgress.alternate;
  if (current !== null) {
    // If the work-in-progress queue is equal to the current queue,
    // we need to clone it first.
    if (queue === current.updateQueue) {
      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
    }
  }
  return queue;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var _payload = update.payload;
        if (typeof _payload === 'function') {
          // Updater function
          {
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload.call(instance, prevState, nextProps);
            }
          }
          return _payload.call(instance, prevState, nextProps);
        }
        // State object
        return _payload;
      }
    case CaptureUpdate:
      {
        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough
    case UpdateState:
      {
        var _payload2 = update.payload;
        var partialState = void 0;
        if (typeof _payload2 === 'function') {
          // Updater function
          {
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload2.call(instance, prevState, nextProps);
            }
          }
          partialState = _payload2.call(instance, prevState, nextProps);
        } else {
          // Partial state object
          partialState = _payload2;
        }
        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        }
        // Merge the partial state and the previous state.
        return _assign({}, prevState, partialState);
      }
    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }
  return prevState;
}

function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
  hasForceUpdate = false;

  if (queue.expirationTime === NoWork || queue.expirationTime > renderExpirationTime) {
    // Insufficient priority. Bailout.
    return;
  }

  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

  {
    currentlyProcessingQueue = queue;
  }

  // These values may change as we process the queue.
  var newBaseState = queue.baseState;
  var newFirstUpdate = null;
  var newExpirationTime = NoWork;

  // Iterate through the list of updates to compute the result.
  var update = queue.firstUpdate;
  var resultState = newBaseState;
  while (update !== null) {
    var updateExpirationTime = update.expirationTime;
    if (updateExpirationTime > renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstUpdate === null) {
        // This is the first skipped update. It will be the first update in
        // the new list.
        newFirstUpdate = update;
        // Since this is the first update that was skipped, the current result
        // is the new base state.
        newBaseState = resultState;
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime === NoWork || newExpirationTime > updateExpirationTime) {
        newExpirationTime = updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback = update.callback;
      if (_callback !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastEffect === null) {
          queue.firstEffect = queue.lastEffect = update;
        } else {
          queue.lastEffect.nextEffect = update;
          queue.lastEffect = update;
        }
      }
    }
    // Continue to the next update.
    update = update.next;
  }

  // Separately, iterate though the list of captured updates.
  var newFirstCapturedUpdate = null;
  update = queue.firstCapturedUpdate;
  while (update !== null) {
    var _updateExpirationTime = update.expirationTime;
    if (_updateExpirationTime > renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstCapturedUpdate === null) {
        // This is the first skipped captured update. It will be the first
        // update in the new list.
        newFirstCapturedUpdate = update;
        // If this is the first update that was skipped, the current result is
        // the new base state.
        if (newFirstUpdate === null) {
          newBaseState = resultState;
        }
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime === NoWork || newExpirationTime > _updateExpirationTime) {
        newExpirationTime = _updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback2 = update.callback;
      if (_callback2 !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastCapturedEffect === null) {
          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
        } else {
          queue.lastCapturedEffect.nextEffect = update;
          queue.lastCapturedEffect = update;
        }
      }
    }
    update = update.next;
  }

  if (newFirstUpdate === null) {
    queue.lastUpdate = null;
  }
  if (newFirstCapturedUpdate === null) {
    queue.lastCapturedUpdate = null;
  } else {
    workInProgress.effectTag |= Callback;
  }
  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
    // We processed every update, without skipping. That means the new base
    // state is the same as the result state.
    newBaseState = resultState;
  }

  queue.baseState = newBaseState;
  queue.firstUpdate = newFirstUpdate;
  queue.firstCapturedUpdate = newFirstCapturedUpdate;
  queue.expirationTime = newExpirationTime;

  workInProgress.memoizedState = resultState;

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;
  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}

function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}

function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
  // If the finished render included captured updates, and there are still
  // lower priority updates left over, we need to keep the captured updates
  // in the queue so that they are rebased and not dropped once we process the
  // queue again at the lower priority.
  if (finishedQueue.firstCapturedUpdate !== null) {
    // Join the captured update list to the end of the normal list.
    if (finishedQueue.lastUpdate !== null) {
      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
    }
    // Clear the list of captured updates.
    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
  }

  // Commit the effects
  var effect = finishedQueue.firstEffect;
  finishedQueue.firstEffect = finishedQueue.lastEffect = null;
  while (effect !== null) {
    var _callback3 = effect.callback;
    if (_callback3 !== null) {
      effect.callback = null;
      callCallback(_callback3, instance);
    }
    effect = effect.nextEffect;
  }

  effect = finishedQueue.firstCapturedEffect;
  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  while (effect !== null) {
    var _callback4 = effect.callback;
    if (_callback4 !== null) {
      effect.callback = null;
      callCallback(_callback4, instance);
    }
    effect = effect.nextEffect;
  }
}

function createCapturedValue(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackAddendumByWorkInProgressFiber(source)
  };
}

var providerCursor = createCursor(null);
var valueCursor = createCursor(null);
var changedBitsCursor = createCursor(0);

var rendererSigil = void 0;
{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

function pushProvider(providerFiber) {
  var context = providerFiber.type._context;

  if (isPrimaryRenderer) {
    push(changedBitsCursor, context._changedBits, providerFiber);
    push(valueCursor, context._currentValue, providerFiber);
    push(providerCursor, providerFiber, providerFiber);

    context._currentValue = providerFiber.pendingProps.value;
    context._changedBits = providerFiber.stateNode;
    {
      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer = rendererSigil;
    }
  } else {
    push(changedBitsCursor, context._changedBits2, providerFiber);
    push(valueCursor, context._currentValue2, providerFiber);
    push(providerCursor, providerFiber, providerFiber);

    context._currentValue2 = providerFiber.pendingProps.value;
    context._changedBits2 = providerFiber.stateNode;
    {
      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer2 = rendererSigil;
    }
  }
}

function popProvider(providerFiber) {
  var changedBits = changedBitsCursor.current;
  var currentValue = valueCursor.current;

  pop(providerCursor, providerFiber);
  pop(valueCursor, providerFiber);
  pop(changedBitsCursor, providerFiber);

  var context = providerFiber.type._context;
  if (isPrimaryRenderer) {
    context._currentValue = currentValue;
    context._changedBits = changedBits;
  } else {
    context._currentValue2 = currentValue;
    context._changedBits2 = changedBits;
  }
}

function getContextCurrentValue(context) {
  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
}

function getContextChangedBits(context) {
  return isPrimaryRenderer ? context._changedBits : context._changedBits2;
}

var NO_CONTEXT = {};

var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber);
  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);

  // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.
  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance);
  // Now that we know this function doesn't throw, replace it.
  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type, rootInstance);

  // Don't push this Fiber's context unless it's unique.
  if (context === nextContext) {
    return;
  }

  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var commitTime = 0;

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {
  if (!enableProfilerTimer) {
    return;
  }
  commitTime = now();
}

/**
 * The "actual" render time is total time required to render the descendants of a Profiler component.
 * This time is stored as a stack, since Profilers can be nested.
 * This time is started during the "begin" phase and stopped during the "complete" phase.
 * It is paused (and accumulated) in the event of an interruption or an aborted render.
 */

var fiberStack$1 = void 0;

{
  fiberStack$1 = [];
}

var timerPausedAt = 0;
var totalElapsedPauseTime = 0;

function checkActualRenderTimeStackEmpty() {
  if (!enableProfilerTimer) {
    return;
  }
  {
    !(fiberStack$1.length === 0) ? warning(false, 'Expected an empty stack. Something was not reset properly.') : void 0;
  }
}

function markActualRenderTimeStarted(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  {
    fiberStack$1.push(fiber);
  }
  var stateNode = fiber.stateNode;
  stateNode.elapsedPauseTimeAtStart = totalElapsedPauseTime;
  stateNode.startTime = now();
}

function pauseActualRenderTimerIfRunning() {
  if (!enableProfilerTimer) {
    return;
  }
  if (timerPausedAt === 0) {
    timerPausedAt = now();
  }
}

function recordElapsedActualRenderTime(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  {
    !(fiber === fiberStack$1.pop()) ? warning(false, 'Unexpected Fiber popped.') : void 0;
  }
  var stateNode = fiber.stateNode;
  stateNode.duration += now() - (totalElapsedPauseTime - stateNode.elapsedPauseTimeAtStart) - stateNode.startTime;
}

function resetActualRenderTimer() {
  if (!enableProfilerTimer) {
    return;
  }
  totalElapsedPauseTime = 0;
}

function resumeActualRenderTimerIfPaused() {
  if (!enableProfilerTimer) {
    return;
  }
  if (timerPausedAt > 0) {
    totalElapsedPauseTime += now() - timerPausedAt;
    timerPausedAt = 0;
  }
}

/**
 * The "base" render time is the duration of the “begin” phase of work for a particular fiber.
 * This time is measured and stored on each fiber.
 * The time for all sibling fibers are accumulated and stored on their parent during the "complete" phase.
 * If a fiber bails out (sCU false) then its "base" timer is cancelled and the fiber is not updated.
 */

var baseStartTime = -1;

function recordElapsedBaseRenderTimeIfRunning(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  if (baseStartTime !== -1) {
    fiber.selfBaseTime = now() - baseStartTime;
  }
}

function startBaseRenderTimer() {
  if (!enableProfilerTimer) {
    return;
  }
  {
    if (baseStartTime !== -1) {
      warning(false, 'Cannot start base timer that is already running. ' + 'This error is likely caused by a bug in React. ' + 'Please file an issue.');
    }
  }
  baseStartTime = now();
}

function stopBaseRenderTimerIfRunning() {
  if (!enableProfilerTimer) {
    return;
  }
  baseStartTime = -1;
}

var fakeInternalInstance = {};
var isArray = Array.isArray;

var didWarnAboutStateAssignmentForComponent = void 0;
var didWarnAboutUninitializedState = void 0;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
var didWarnAboutUndefinedDerivedState = void 0;
var warnOnUndefinedDerivedState = void 0;
var warnOnInvalidCallback$1 = void 0;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();

  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback$1 = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }
    var key = callerName + '_' + callback;
    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);
      warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (workInProgress, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentName(workInProgress) || 'Component';
      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);
        warning(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  };

  // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.
  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;

  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Invoke the function an extra time to help detect side-effects.
      getDerivedStateFromProps(nextProps, prevState);
    }
  }

  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    warnOnUndefinedDerivedState(workInProgress, partialState);
  }
  // Merge the partial state and the previous state.
  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState;

  // Once the update queue is empty, persist the derived state onto the
  // base state.
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null && updateQueue.expirationTime === NoWork) {
    updateQueue.baseState = memoizedState;
  }
}

var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = recalculateCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.payload = payload;
    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'setState');
      }
      update.callback = callback;
    }

    enqueueUpdate(fiber, update, expirationTime);
    scheduleWork$1(fiber, expirationTime);
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = recalculateCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'replaceState');
      }
      update.callback = callback;
    }

    enqueueUpdate(fiber, update, expirationTime);
    scheduleWork$1(fiber, expirationTime);
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var currentTime = recalculateCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'forceUpdate');
      }
      update.callback = callback;
    }

    enqueueUpdate(fiber, update, expirationTime);
    scheduleWork$1(fiber, expirationTime);
  }
};

function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
  var instance = workInProgress.stateNode;
  var ctor = workInProgress.type;
  if (typeof instance.shouldComponentUpdate === 'function') {
    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
    stopPhaseTimer();

    {
      !(shouldUpdate !== undefined) ? warning(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(workInProgress) || 'Component') : void 0;
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress) {
  var instance = workInProgress.stateNode;
  var type = workInProgress.type;
  {
    var name = getComponentName(workInProgress) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (type.prototype && typeof type.prototype.render === 'function') {
        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
    !noGetInitialStateOnES6 ? warning(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
    !noGetDefaultPropsOnES6 ? warning(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
    var noInstancePropTypes = !instance.propTypes;
    !noInstancePropTypes ? warning(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
    var noInstanceContextTypes = !instance.contextTypes;
    !noInstanceContextTypes ? warning(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;
    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
    !noComponentShouldUpdate ? warning(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;
    if (type.prototype && type.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      warning(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(workInProgress) || 'A pure component');
    }
    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
    !noComponentDidUnmount ? warning(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
    !noComponentDidReceiveProps ? warning(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
    !noComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
    !noUnsafeComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
    var hasMutatedProps = instance.props !== workInProgress.pendingProps;
    !(instance.props === undefined || !hasMutatedProps) ? warning(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
    var noInstanceDefaultProps = !instance.defaultProps;
    !noInstanceDefaultProps ? warning(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(type)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(type);
      warning(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(workInProgress));
    }

    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
    !noInstanceGetDerivedStateFromProps ? warning(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromCatch !== 'function';
    !noInstanceGetDerivedStateFromCatch ? warning(false, '%s: getDerivedStateFromCatch() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noStaticGetSnapshotBeforeUpdate = typeof type.getSnapshotBeforeUpdate !== 'function';
    !noStaticGetSnapshotBeforeUpdate ? warning(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
    var _state = instance.state;
    if (_state && (typeof _state !== 'object' || isArray(_state))) {
      warning(false, '%s.state: must be set to an object or null', name);
    }
    if (typeof instance.getChildContext === 'function') {
      !(typeof type.childContextTypes === 'object') ? warning(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance;
  // The instance needs access to the fiber so that it can schedule updates
  set(instance, workInProgress);
  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, props, renderExpirationTime) {
  var ctor = workInProgress.type;
  var unmaskedContext = getUnmaskedContext(workInProgress);
  var needsContext = isContextConsumer(workInProgress);
  var context = needsContext ? getMaskedContext(workInProgress, unmaskedContext) : emptyObject;

  // Instantiate twice to help detect side-effects.
  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      new ctor(props, context); // eslint-disable-line no-new
    }
  }

  var instance = new ctor(props, context);
  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentName(workInProgress) || 'Component';
      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);
        warning(false, '%s: Did not properly initialize state during construction. ' + 'Expected state to be an object, but it was %s.', componentName, instance.state === null ? 'null' : 'undefined');
      }
    }

    // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.
    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;
      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }
      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }
      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }
      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentName(workInProgress) || 'Component';
        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
          warning(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
        }
      }
    }
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.
  if (needsContext) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  startPhaseTimer(workInProgress, 'componentWillMount');
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }
  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  stopPhaseTimer();

  if (oldState !== instance.state) {
    {
      warning(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress) || 'Component');
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
  var oldState = instance.state;
  startPhaseTimer(workInProgress, 'componentWillReceiveProps');
  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, newContext);
  }
  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, newContext);
  }
  stopPhaseTimer();

  if (instance.state !== oldState) {
    {
      var componentName = getComponentName(workInProgress) || 'Component';
      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);
        warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

// Invokes the mount life-cycles on a previously never rendered instance.
function mountClassInstance(workInProgress, renderExpirationTime) {
  var ctor = workInProgress.type;

  {
    checkClassInstance(workInProgress);
  }

  var instance = workInProgress.stateNode;
  var props = workInProgress.pendingProps;
  var unmaskedContext = getUnmaskedContext(workInProgress);

  instance.props = props;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyObject;
  instance.context = getMaskedContext(workInProgress, unmaskedContext);

  {
    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);

      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);
    }
  }

  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
    instance.state = workInProgress.memoizedState;
  }

  var getDerivedStateFromProps = workInProgress.type.getDerivedStateFromProps;
  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
    instance.state = workInProgress.memoizedState;
  }

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance);
    // If we had additional state updates during this life-cycle, let's
    // process them now.
    updateQueue = workInProgress.updateQueue;
    if (updateQueue !== null) {
      processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
      instance.state = workInProgress.memoizedState;
    }
  }

  if (typeof instance.componentDidMount === 'function') {
    workInProgress.effectTag |= Update;
  }
}

function resumeMountClassInstance(workInProgress, renderExpirationTime) {
  var ctor = workInProgress.type;
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  var newProps = workInProgress.pendingProps;
  instance.props = oldProps;

  var oldContext = instance.context;
  var newUnmaskedContext = getUnmaskedContext(workInProgress);
  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== newContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }
  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillMount');
      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }
      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = newContext;

  return shouldUpdate;
}

// Invokes the update life-cycles and returns false if it shouldn't rerender.
function updateClassInstance(current, workInProgress, renderExpirationTime) {
  var ctor = workInProgress.type;
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  var newProps = workInProgress.pendingProps;
  instance.props = oldProps;

  var oldContext = instance.context;
  var newUnmaskedContext = getUnmaskedContext(workInProgress);
  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== newContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    if (fireGetDerivedStateFromPropsOnStateUpdates || oldProps !== newProps) {
      applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
      newState = workInProgress.memoizedState;
    }
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillUpdate');
      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, newContext);
      }
      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, newContext);
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.effectTag |= Update;
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.effectTag |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = newContext;

  return shouldUpdate;
}

var getCurrentFiberStackAddendum$7 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


var didWarnAboutMaps = void 0;
var didWarnAboutStringRefInStrictMode = void 0;
var ownerHasKeyUseWarning = void 0;
var ownerHasFunctionTypeWarning = void 0;
var warnForMissingKey = function (child) {};

{
  didWarnAboutMaps = false;
  didWarnAboutStringRefInStrictMode = {};

  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */
  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child) {
    if (child === null || typeof child !== 'object') {
      return;
    }
    if (!child._store || child._store.validated || child.key != null) {
      return;
    }
    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    child._store.validated = true;

    var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + (getCurrentFiberStackAddendum$7() || '');
    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }
    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

    warning(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.%s', getCurrentFiberStackAddendum$7());
  };
}

var isArray$1 = Array.isArray;

function coerceRef(returnFiber, current, element) {
  var mixedRef = element.ref;
  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      if (returnFiber.mode & StrictMode) {
        var componentName = getComponentName(returnFiber) || 'Component';
        if (!didWarnAboutStringRefInStrictMode[componentName]) {
          warning(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackAddendumByWorkInProgressFiber(returnFiber));
          didWarnAboutStringRefInStrictMode[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst = void 0;
      if (owner) {
        var ownerFiber = owner;
        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Stateless function components cannot have refs.') : void 0;
        inst = ownerFiber.stateNode;
      }
      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
      var stringRef = '' + mixedRef;
      // Check if previous string ref matches new string ref
      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
        return current.ref;
      }
      var ref = function (value) {
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };
      ref._stringRef = stringRef;
      return ref;
    } else {
      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function or a string.') : void 0;
      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a functional component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;
    }
  }
  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';
    {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + (getCurrentFiberStackAddendum$7() || '');
    }
    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
  }
}

function warnOnFunctionType() {
  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + (getCurrentFiberStackAddendum$7() || '');

  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

  warning(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.%s', getCurrentFiberStackAddendum$7() || '');
}

// This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.
function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    }
    // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.
    var last = returnFiber.lastEffect;
    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    }

    // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.
    var childToDelete = currentFirstChild;
    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }
    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    var existingChildren = new Map();

    var existingChild = currentFirstChild;
    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }
      existingChild = existingChild.sibling;
    }
    return existingChildren;
  }

  function useFiber(fiber, pendingProps, expirationTime) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;
    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }
    var current = newFiber.alternate;
    if (current !== null) {
      var oldIndex = current.index;
      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }
    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, expirationTime) {
    if (current === null || current.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, expirationTime) {
    if (current !== null && current.type === element.type) {
      // Move based on index
      var existing = useFiber(current, element.props, expirationTime);
      existing.ref = coerceRef(returnFiber, current, element);
      existing.return = returnFiber;
      {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }
      return existing;
    } else {
      // Insert
      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
      created.ref = coerceRef(returnFiber, current, element);
      created.return = returnFiber;
      return created;
    }
  }

  function updatePortal(returnFiber, current, portal, expirationTime) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, portal.children || [], expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, expirationTime, key) {
    if (current === null || current.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, fragment, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }
        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            _created2.return = returnFiber;
            return _created2;
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
    // Update the fiber if the keys match, otherwise return null.

    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }
      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
              }
              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
            }
            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
          }
        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;
        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  /**
   * Warns if there is a duplicate or missing key
   */
  function warnOnInvalidKey(child, knownKeys) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }
      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child);
          var key = child.key;
          if (typeof key !== 'string') {
            break;
          }
          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }
          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }
          warning(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.%s', key, getCurrentFiberStackAddendum$7());
          break;
        default:
          break;
      }
    }
    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
    // This algorithm can't optimize by searching from boths ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.

    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.

    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.

    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.

    {
      // First, validate keys.
      var knownKeys = null;
      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
        if (!_newFiber) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }
        previousNewFiber = _newFiber;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
      if (_newFiber2) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }
        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.

    var iteratorFn = getIteratorFn(newChildrenIterable);
    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    {
      // Warn about using Maps as children
      if (newChildrenIterable.entries === iteratorFn) {
        !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentFiberStackAddendum$7()) : void 0;
        didWarnAboutMaps = true;
      }

      // First, validate keys.
      // We'll get a different iterator later for the main pass.
      var _newChildren = iteratorFn.call(newChildrenIterable);
      if (_newChildren) {
        var knownKeys = null;
        var _step = _newChildren.next();
        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);
    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    var step = newChildren.next();
    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (!oldFiber) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
        if (_newFiber3 === null) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }
        previousNewFiber = _newFiber3;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }
        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
    // The existing first child is not a text node so we need to create one
    // and delete the existing ones.
    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
    var key = element.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.type === element.type) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, child, element);
          existing.return = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
    var key = portal.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.
  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.

    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    if (typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null) {
      newChild = newChild.props.children;
    }

    // Handle object types
    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
    }

    if (isArray$1(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }
    if (typeof newChild === 'undefined') {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;
              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough
        case FunctionalComponent:
          {
            var Component = returnFiber.type;
            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
          }
      }
    }

    // Remaining cases are all treated as empty.
    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);

function cloneChildFibers(current, workInProgress) {
  !(current === null || workInProgress.child === current.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
  workInProgress.child = newChild;

  newChild.return = workInProgress;
  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
    newChild.return = workInProgress;
  }
  newChild.sibling = null;
}

// The deepest Fiber on the stack involved in a hydration context.
// This may have been an insertion or a hydration.
var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false;

function enterHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChild(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  return true;
}

function deleteHydratableInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
        break;
      case HostComponent:
        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
        break;
    }
  }

  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  childToDelete.effectTag = Deletion;

  // This might seem like it belongs on progressedFirstDeletion. However,
  // these children are not part of the reconciliation list of children.
  // Even if we abort and rereconcile the children, that will try to hydrate
  // again and the nodes are still in the host tree so these will be
  // recreated.
  if (returnFiber.lastEffect !== null) {
    returnFiber.lastEffect.nextEffect = childToDelete;
    returnFiber.lastEffect = childToDelete;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.effectTag |= Placement;
  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;
          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableContainerInstance(parentContainer, type, props);
              break;
            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableContainerTextInstance(parentContainer, text);
              break;
          }
          break;
        }
      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;
          switch (fiber.tag) {
            case HostComponent:
              var _type = fiber.type;
              var _props = fiber.pendingProps;
              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
              break;
            case HostText:
              var _text = fiber.pendingProps;
              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
              break;
          }
          break;
        }
      default:
        return;
    }
  }
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type, props);
        if (instance !== null) {
          fiber.stateNode = instance;
          return true;
        }
        return false;
      }
    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);
        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          return true;
        }
        return false;
      }
    default:
      return false;
  }
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }
  var nextInstance = nextHydratableInstance;
  if (!nextInstance) {
    // Nothing to hydrate. Make it an insertion.
    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }
  var firstAttemptedInstance = nextInstance;
  if (!tryHydrate(fiber, nextInstance)) {
    // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.
    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    }
    // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.
    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
  }
  hydrationParentFiber = fiber;
  nextHydratableInstance = getFirstHydratableChild(nextInstance);
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
  if (!supportsHydration) {
    invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
  }

  var instance = fiber.stateNode;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
  // TODO: Type this specific to this type of component.
  fiber.updateQueue = updatePayload;
  // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.
  if (updatePayload !== null) {
    return true;
  }
  return false;
}

function prepareToHydrateHostTextInstance(fiber) {
  if (!supportsHydration) {
    invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
  }

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
  {
    if (shouldUpdate) {
      // We assume that prepareToHydrateHostTextInstance is called in a context where the
      // hydration parent is the parent host component of this host text.
      var returnFiber = hydrationParentFiber;
      if (returnFiber !== null) {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;
              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
              break;
            }
          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;
              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
              break;
            }
        }
      }
    }
  }
  return shouldUpdate;
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;
  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {
    parent = parent.return;
  }
  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }
  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }
  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  }

  var type = fiber.type;

  // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them.
  // TODO: Better heuristic.
  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
    var nextInstance = nextHydratableInstance;
    while (nextInstance) {
      deleteHydratableInstance(fiber, nextInstance);
      nextInstance = getNextHydratableSibling(nextInstance);
    }
  }

  popToNextHostParent(fiber);
  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  return true;
}

function resetHydrationState() {
  if (!supportsHydration) {
    return;
  }

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
}

var getCurrentFiberStackAddendum$6 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


var didWarnAboutBadClass = void 0;
var didWarnAboutGetDerivedStateOnFunctionalComponent = void 0;
var didWarnAboutStatelessRefs = void 0;

{
  didWarnAboutBadClass = {};
  didWarnAboutGetDerivedStateOnFunctionalComponent = {};
  didWarnAboutStatelessRefs = {};
}

// TODO: Remove this and use reconcileChildrenAtExpirationTime directly.
function reconcileChildren(current, workInProgress, nextChildren) {
  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, workInProgress.expirationTime);
}

function reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime) {
  if (current === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.

    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderExpirationTime);
  }
}

function updateForwardRef(current, workInProgress) {
  var render = workInProgress.type.render;
  var nextProps = workInProgress.pendingProps;
  var ref = workInProgress.ref;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (workInProgress.memoizedProps === nextProps) {
    var currentRef = current !== null ? current.ref : null;
    if (ref === currentRef) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
  }

  var nextChildren = void 0;
  {
    ReactCurrentOwner.current = workInProgress;
    ReactDebugCurrentFiber.setCurrentPhase('render');
    nextChildren = render(nextProps, ref);
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }

  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function updateFragment(current, workInProgress) {
  var nextChildren = workInProgress.pendingProps;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (workInProgress.memoizedProps === nextChildren) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextChildren);
  return workInProgress.child;
}

function updateMode(current, workInProgress) {
  var nextChildren = workInProgress.pendingProps.children;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextChildren);
  return workInProgress.child;
}

function updateProfiler(current, workInProgress) {
  var nextProps = workInProgress.pendingProps;
  if (enableProfilerTimer) {
    // Start render timer here and push start time onto queue
    markActualRenderTimeStarted(workInProgress);

    // Let the "complete" phase know to stop the timer,
    // And the scheduler to record the measured time.
    workInProgress.effectTag |= Update;
  }
  if (workInProgress.memoizedProps === nextProps) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  var nextChildren = nextProps.children;
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function markRef(current, workInProgress) {
  var ref = workInProgress.ref;
  if (current === null && ref !== null || current !== null && current.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.effectTag |= Ref;
  }
}

function updateFunctionalComponent(current, workInProgress) {
  var fn = workInProgress.type;
  var nextProps = workInProgress.pendingProps;

  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else {
    if (workInProgress.memoizedProps === nextProps) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    // TODO: consider bringing fn.shouldComponentUpdate() back.
    // It used to be here.
  }

  var unmaskedContext = getUnmaskedContext(workInProgress);
  var context = getMaskedContext(workInProgress, unmaskedContext);

  var nextChildren = void 0;

  {
    ReactCurrentOwner.current = workInProgress;
    ReactDebugCurrentFiber.setCurrentPhase('render');
    nextChildren = fn(nextProps, context);
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function updateClassComponent(current, workInProgress, renderExpirationTime) {
  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.
  var hasContext = pushContextProvider(workInProgress);
  var shouldUpdate = void 0;
  if (current === null) {
    if (workInProgress.stateNode === null) {
      // In the initial pass we might need to construct the instance.
      constructClassInstance(workInProgress, workInProgress.pendingProps, renderExpirationTime);
      mountClassInstance(workInProgress, renderExpirationTime);

      shouldUpdate = true;
    } else {
      // In a resume, we'll already have an instance we can reuse.
      shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
    }
  } else {
    shouldUpdate = updateClassInstance(current, workInProgress, renderExpirationTime);
  }
  return finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime);
}

function finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current, workInProgress);

  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, false);
    }

    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  var ctor = workInProgress.type;
  var instance = workInProgress.stateNode;

  // Rerender
  ReactCurrentOwner.current = workInProgress;
  var nextChildren = void 0;
  if (didCaptureError && (!enableGetDerivedStateFromCatch || typeof ctor.getDerivedStateFromCatch !== 'function')) {
    // If we captured an error, but getDerivedStateFrom catch is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    if (enableProfilerTimer) {
      stopBaseRenderTimerIfRunning();
    }
  } else {
    {
      ReactDebugCurrentFiber.setCurrentPhase('render');
      nextChildren = instance.render();
      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        instance.render();
      }
      ReactDebugCurrentFiber.setCurrentPhase(null);
    }
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  if (didCaptureError) {
    // If we're recovering from an error, reconcile twice: first to delete
    // all the existing children.
    reconcileChildrenAtExpirationTime(current, workInProgress, null, renderExpirationTime);
    workInProgress.child = null;
    // Now we can continue reconciling like normal. This has the effect of
    // remounting all children regardless of whether their their
    // identity matches.
  }
  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime);
  // Memoize props and state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.
  memoizeState(workInProgress, instance.state);
  memoizeProps(workInProgress, instance.props);

  // The context might have changed so we need to recalculate it.
  if (hasContext) {
    invalidateContextProvider(workInProgress, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;
  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }
  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current, workInProgress, renderExpirationTime) {
  pushHostRootContext(workInProgress);
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    var nextProps = workInProgress.pendingProps;
    var prevState = workInProgress.memoizedState;
    var prevChildren = prevState !== null ? prevState.element : null;
    processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
    var nextState = workInProgress.memoizedState;
    // Caution: React DevTools currently depends on this property
    // being called "element".
    var nextChildren = nextState.element;

    if (nextChildren === prevChildren) {
      // If the state is the same as before, that's a bailout because we had
      // no work that expires at this time.
      resetHydrationState();
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    var root = workInProgress.stateNode;
    if ((current === null || current.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
      // If we don't have any current children this might be the first pass.
      // We always try to hydrate. If this isn't a hydration pass there won't
      // be any children to hydrate which is effectively the same thing as
      // not hydrating.

      // This is a bit of a hack. We track the host root as a placement to
      // know that we're currently in a mounting state. That way isMounted
      // works as expected. We must reset this before committing.
      // TODO: Delete this when we delete isMounted and findDOMNode.
      workInProgress.effectTag |= Placement;

      // Ensure that children mount into this root without tracking
      // side-effects. This ensures that we don't store Placement effects on
      // nodes that will be hydrated.
      workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    } else {
      // Otherwise reset hydration state in case we aborted and resumed another
      // root.
      resetHydrationState();
      reconcileChildren(current, workInProgress, nextChildren);
    }
    return workInProgress.child;
  }
  resetHydrationState();
  // If there is no update queue, that's a bailout because the root has no props.
  return bailoutOnAlreadyFinishedWork(current, workInProgress);
}

function updateHostComponent(current, workInProgress, renderExpirationTime) {
  pushHostContext(workInProgress);

  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var memoizedProps = workInProgress.memoizedProps;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current !== null ? current.memoizedProps : null;

  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (memoizedProps === nextProps) {
    var isHidden = workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps);
    if (isHidden) {
      // Before bailing out, make sure we've deprioritized a hidden component.
      workInProgress.expirationTime = Never;
    }
    if (!isHidden || renderExpirationTime !== Never) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    // If we're rendering a hidden node at hidden priority, don't bailout. The
    // parent is complete, but the children may not be.
  }

  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also have access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.effectTag |= ContentReset;
  }

  markRef(current, workInProgress);

  // Check the host config to see if the children are offscreen/hidden.
  if (renderExpirationTime !== Never && workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps)) {
    // Down-prioritize the children.
    workInProgress.expirationTime = Never;
    // Bailout and come back to this fiber later.
    workInProgress.memoizedProps = nextProps;
    return null;
  }

  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function updateHostText(current, workInProgress) {
  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }
  var nextProps = workInProgress.pendingProps;
  memoizeProps(workInProgress, nextProps);
  // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.
  return null;
}

function mountIndeterminateComponent(current, workInProgress, renderExpirationTime) {
  !(current === null) ? invariant(false, 'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var fn = workInProgress.type;
  var props = workInProgress.pendingProps;
  var unmaskedContext = getUnmaskedContext(workInProgress);
  var context = getMaskedContext(workInProgress, unmaskedContext);

  var value = void 0;

  {
    if (fn.prototype && typeof fn.prototype.render === 'function') {
      var componentName = getComponentName(workInProgress) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        warning(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    ReactCurrentOwner.current = workInProgress;
    value = fn(props, context);
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;

  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    var Component = workInProgress.type;

    // Proceed under the assumption that this is a class instance
    workInProgress.tag = ClassComponent;

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;

    var getDerivedStateFromProps = Component.getDerivedStateFromProps;
    if (typeof getDerivedStateFromProps === 'function') {
      applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
    }

    // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.
    var hasContext = pushContextProvider(workInProgress);
    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, renderExpirationTime);
    return finishClassComponent(current, workInProgress, true, hasContext, renderExpirationTime);
  } else {
    // Proceed under the assumption that this is a functional component
    workInProgress.tag = FunctionalComponent;
    {
      var _Component = workInProgress.type;

      if (_Component) {
        !!_Component.childContextTypes ? warning(false, '%s(...): childContextTypes cannot be defined on a functional component.', _Component.displayName || _Component.name || 'Component') : void 0;
      }
      if (workInProgress.ref !== null) {
        var info = '';
        var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
        if (ownerName) {
          info += '\n\nCheck the render method of `' + ownerName + '`.';
        }

        var warningKey = ownerName || workInProgress._debugID || '';
        var debugSource = workInProgress._debugSource;
        if (debugSource) {
          warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
        }
        if (!didWarnAboutStatelessRefs[warningKey]) {
          didWarnAboutStatelessRefs[warningKey] = true;
          warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber.getCurrentFiberStackAddendum());
        }
      }

      if (typeof fn.getDerivedStateFromProps === 'function') {
        var _componentName = getComponentName(workInProgress) || 'Unknown';

        if (!didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName]) {
          warning(false, '%s: Stateless functional components do not support getDerivedStateFromProps.', _componentName);
          didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName] = true;
        }
      }
    }
    reconcileChildren(current, workInProgress, value);
    memoizeProps(workInProgress, props);
    return workInProgress.child;
  }
}

function updateTimeoutComponent(current, workInProgress, renderExpirationTime) {
  if (enableSuspense) {
    var nextProps = workInProgress.pendingProps;
    var prevProps = workInProgress.memoizedProps;

    var prevDidTimeout = workInProgress.memoizedState;

    // Check if we already attempted to render the normal state. If we did,
    // and we timed out, render the placeholder state.
    var alreadyCaptured = (workInProgress.effectTag & DidCapture) === NoEffect;
    var nextDidTimeout = !alreadyCaptured;

    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
    } else if (nextProps === prevProps && nextDidTimeout === prevDidTimeout) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var render = nextProps.children;
    var nextChildren = render(nextDidTimeout);
    workInProgress.memoizedProps = nextProps;
    workInProgress.memoizedState = nextDidTimeout;
    reconcileChildren(current, workInProgress, nextChildren);
    return workInProgress.child;
  } else {
    return null;
  }
}

function updatePortalComponent(current, workInProgress, renderExpirationTime) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (workInProgress.memoizedProps === nextChildren) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  if (current === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    memoizeProps(workInProgress, nextChildren);
  } else {
    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextChildren);
  }
  return workInProgress.child;
}

function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
  var fiber = workInProgress.child;
  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }
  while (fiber !== null) {
    var nextFiber = void 0;
    // Visit this fiber.
    switch (fiber.tag) {
      case ContextConsumer:
        // Check if the context matches.
        var observedBits = fiber.stateNode | 0;
        if (fiber.type === context && (observedBits & changedBits) !== 0) {
          // Update the expiration time of all the ancestors, including
          // the alternates.
          var node = fiber;
          while (node !== null) {
            var alternate = node.alternate;
            if (node.expirationTime === NoWork || node.expirationTime > renderExpirationTime) {
              node.expirationTime = renderExpirationTime;
              if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
                alternate.expirationTime = renderExpirationTime;
              }
            } else if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
              alternate.expirationTime = renderExpirationTime;
            } else {
              // Neither alternate was updated, which means the rest of the
              // ancestor path already has sufficient priority.
              break;
            }
            node = node.return;
          }
          // Don't scan deeper than a matching consumer. When we render the
          // consumer, we'll continue scanning from that point. This way the
          // scanning work is time-sliced.
          nextFiber = null;
        } else {
          // Traverse down.
          nextFiber = fiber.child;
        }
        break;
      case ContextProvider:
        // Don't scan deeper if this is a matching provider
        nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
        break;
      default:
        // Traverse down.
        nextFiber = fiber.child;
        break;
    }
    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;
      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }
        var sibling = nextFiber.sibling;
        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        }
        // No more siblings. Traverse up.
        nextFiber = nextFiber.return;
      }
    }
    fiber = nextFiber;
  }
}

function updateContextProvider(current, workInProgress, renderExpirationTime) {
  var providerType = workInProgress.type;
  var context = providerType._context;

  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;
  var canBailOnProps = true;

  if (hasContextChanged()) {
    canBailOnProps = false;
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (oldProps === newProps) {
    workInProgress.stateNode = 0;
    pushProvider(workInProgress);
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  var newValue = newProps.value;
  workInProgress.memoizedProps = newProps;

  {
    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackAddendum$6);
    }
  }

  var changedBits = void 0;
  if (oldProps === null) {
    // Initial render
    changedBits = MAX_SIGNED_31_BIT_INT;
  } else {
    if (oldProps.value === newProps.value) {
      // No change. Bailout early if children are the same.
      if (oldProps.children === newProps.children && canBailOnProps) {
        workInProgress.stateNode = 0;
        pushProvider(workInProgress);
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }
      changedBits = 0;
    } else {
      var oldValue = oldProps.value;
      // Use Object.is to compare the new context value to the old value.
      // Inlined Object.is polyfill.
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
      if (oldValue === newValue && (oldValue !== 0 || 1 / oldValue === 1 / newValue) || oldValue !== oldValue && newValue !== newValue // eslint-disable-line no-self-compare
      ) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && canBailOnProps) {
            workInProgress.stateNode = 0;
            pushProvider(workInProgress);
            return bailoutOnAlreadyFinishedWork(current, workInProgress);
          }
          changedBits = 0;
        } else {
        changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
        {
          !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
        }
        changedBits |= 0;

        if (changedBits === 0) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && canBailOnProps) {
            workInProgress.stateNode = 0;
            pushProvider(workInProgress);
            return bailoutOnAlreadyFinishedWork(current, workInProgress);
          }
        } else {
          propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
        }
      }
    }
  }

  workInProgress.stateNode = changedBits;
  pushProvider(workInProgress);

  var newChildren = newProps.children;
  reconcileChildren(current, workInProgress, newChildren);
  return workInProgress.child;
}

function updateContextConsumer(current, workInProgress, renderExpirationTime) {
  var context = workInProgress.type;
  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;

  var newValue = getContextCurrentValue(context);
  var changedBits = getContextChangedBits(context);

  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (changedBits === 0 && oldProps === newProps) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  workInProgress.memoizedProps = newProps;

  var observedBits = newProps.unstable_observedBits;
  if (observedBits === undefined || observedBits === null) {
    // Subscribe to all changes by default
    observedBits = MAX_SIGNED_31_BIT_INT;
  }
  // Store the observedBits on the fiber's stateNode for quick access.
  workInProgress.stateNode = observedBits;

  if ((changedBits & observedBits) !== 0) {
    // Context change propagation stops at matching consumers, for time-
    // slicing. Continue the propagation here.
    propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
  } else if (oldProps === newProps) {
    // Skip over a memoized parent with a bitmask bailout even
    // if we began working on it because of a deeper matching child.
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  // There is no bailout on `children` equality because we expect people
  // to often pass a bound method as a child, but it may reference
  // `this.state` or `this.props` (and thus needs to re-render on `setState`).

  var render = newProps.children;

  {
    !(typeof render === 'function') ? warning(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
  }

  var newChildren = void 0;
  {
    ReactCurrentOwner.current = workInProgress;
    ReactDebugCurrentFiber.setCurrentPhase('render');
    newChildren = render(newValue);
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current, workInProgress, newChildren);
  return workInProgress.child;
}

/*
  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
    let child = firstChild;
    do {
      // Ensure that the first and last effect of the parent corresponds
      // to the children's first and last effect.
      if (!returnFiber.firstEffect) {
        returnFiber.firstEffect = child.firstEffect;
      }
      if (child.lastEffect) {
        if (returnFiber.lastEffect) {
          returnFiber.lastEffect.nextEffect = child.firstEffect;
        }
        returnFiber.lastEffect = child.lastEffect;
      }
    } while (child = child.sibling);
  }
  */

function bailoutOnAlreadyFinishedWork(current, workInProgress) {
  cancelWorkTimer(workInProgress);

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopBaseRenderTimerIfRunning();
  }

  // TODO: We should ideally be able to bail out early if the children have no
  // more work to do. However, since we don't have a separation of this
  // Fiber's priority and its children yet - we don't know without doing lots
  // of the same work we do anyway. Once we have that separation we can just
  // bail out here if the children has no more work at this priority level.
  // if (workInProgress.priorityOfChildren <= priorityLevel) {
  //   // If there are side-effects in these children that have not yet been
  //   // committed we need to ensure that they get properly transferred up.
  //   if (current && current.child !== workInProgress.child) {
  //     reuseChildrenEffects(workInProgress, child);
  //   }
  //   return null;
  // }

  cloneChildFibers(current, workInProgress);
  return workInProgress.child;
}

function bailoutOnLowPriority(current, workInProgress) {
  cancelWorkTimer(workInProgress);

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopBaseRenderTimerIfRunning();
  }

  // TODO: Handle HostComponent tags here as well and call pushHostContext()?
  // See PR 8590 discussion for context
  switch (workInProgress.tag) {
    case HostRoot:
      pushHostRootContext(workInProgress);
      break;
    case ClassComponent:
      pushContextProvider(workInProgress);
      break;
    case HostPortal:
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      break;
    case ContextProvider:
      pushProvider(workInProgress);
      break;
    case Profiler:
      if (enableProfilerTimer) {
        markActualRenderTimeStarted(workInProgress);
      }
      break;
  }
  // TODO: What if this is currently in progress?
  // How can that happen? How is this not being cloned?
  return null;
}

// TODO: Delete memoizeProps/State and move to reconcile/bailout instead
function memoizeProps(workInProgress, nextProps) {
  workInProgress.memoizedProps = nextProps;
}

function memoizeState(workInProgress, nextState) {
  workInProgress.memoizedState = nextState;
  // Don't reset the updateQueue, in case there are pending updates. Resetting
  // is handled by processUpdateQueue.
}

function beginWork(current, workInProgress, renderExpirationTime) {
  if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
    return bailoutOnLowPriority(current, workInProgress);
  }

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      return mountIndeterminateComponent(current, workInProgress, renderExpirationTime);
    case FunctionalComponent:
      return updateFunctionalComponent(current, workInProgress);
    case ClassComponent:
      return updateClassComponent(current, workInProgress, renderExpirationTime);
    case HostRoot:
      return updateHostRoot(current, workInProgress, renderExpirationTime);
    case HostComponent:
      return updateHostComponent(current, workInProgress, renderExpirationTime);
    case HostText:
      return updateHostText(current, workInProgress);
    case TimeoutComponent:
      return updateTimeoutComponent(current, workInProgress, renderExpirationTime);
    case HostPortal:
      return updatePortalComponent(current, workInProgress, renderExpirationTime);
    case ForwardRef:
      return updateForwardRef(current, workInProgress);
    case Fragment:
      return updateFragment(current, workInProgress);
    case Mode:
      return updateMode(current, workInProgress);
    case Profiler:
      return updateProfiler(current, workInProgress);
    case ContextProvider:
      return updateContextProvider(current, workInProgress, renderExpirationTime);
    case ContextConsumer:
      return updateContextConsumer(current, workInProgress, renderExpirationTime);
    default:
      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
  }
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.effectTag |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.effectTag |= Ref;
}

function appendAllChildren(parent, workInProgress) {
  // We only have the top Fiber that was created but we need recurse down its
  // children to find all the terminal nodes.
  var node = workInProgress.child;
  while (node !== null) {
    if (node.tag === HostComponent || node.tag === HostText) {
      appendInitialChild(parent, node.stateNode);
    } else if (node.tag === HostPortal) {
      // If we have a portal child, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === workInProgress) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

var updateHostContainer = void 0;
var updateHostComponent$1 = void 0;
var updateHostText$1 = void 0;
if (supportsMutation) {
  // Mutation mode

  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
    // TODO: Type this specific to this type of component.
    workInProgress.updateQueue = updatePayload;
    // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.
    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
} else if (supportsPersistence) {
  // Persistent host tree mode

  // An unfortunate fork of appendAllChildren because we have two different parent types.
  var appendAllChildrenToContainer = function (containerChildSet, workInProgress) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendChildToContainerChildSet(containerChildSet, node.stateNode);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  };
  updateHostContainer = function (workInProgress) {
    var portalOrRoot = workInProgress.stateNode;
    var childrenUnchanged = workInProgress.firstEffect === null;
    if (childrenUnchanged) {
      // No changes, just reuse the existing instance.
    } else {
      var container = portalOrRoot.containerInfo;
      var newChildSet = createContainerChildSet(container);
      // If children might have changed, we have to add them all to the set.
      appendAllChildrenToContainer(newChildSet, workInProgress);
      portalOrRoot.pendingChildren = newChildSet;
      // Schedule an update on the container to swap out the container.
      markUpdate(workInProgress);
      finalizeContainerChildren(container, newChildSet);
    }
  };
  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
    // If there are no effects associated with this node, then none of our children had any updates.
    // This guarantees that we can reuse all of them.
    var childrenUnchanged = workInProgress.firstEffect === null;
    var currentInstance = current.stateNode;
    if (childrenUnchanged && updatePayload === null) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
    } else {
      var recyclableInstance = workInProgress.stateNode;
      var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
      if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
        markUpdate(workInProgress);
      }
      workInProgress.stateNode = newInstance;
      if (childrenUnchanged) {
        // If there are no other effects in this tree, we need to flag this node as having one.
        // Even though we're not going to use it for anything.
        // Otherwise parents won't know that there are new children to propagate upwards.
        markUpdate(workInProgress);
      } else {
        // If children might have changed, we have to add them all to the set.
        appendAllChildren(newInstance, workInProgress);
      }
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    if (oldText !== newText) {
      // If the text content differs, we'll create a new text instance for it.
      var rootContainerInstance = getRootHostContainer();
      var currentHostContext = getHostContext();
      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
      // We'll have to mark it as having an effect, even though we won't use the effect for anything.
      // This lets the parents know that at least one of their children has changed.
      markUpdate(workInProgress);
    }
  };
} else {
  // No host operations
  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
    // Noop
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // Noop
  };
}

function completeWork(current, workInProgress, renderExpirationTime) {
  var newProps = workInProgress.pendingProps;
  switch (workInProgress.tag) {
    case FunctionalComponent:
      return null;
    case ClassComponent:
      {
        // We are leaving this subtree, so pop context if any.
        popContextProvider(workInProgress);
        return null;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var fiberRoot = workInProgress.stateNode;
        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }
        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          popHydrationState(workInProgress);
          // This resets the hacky state to fix isMounted before committing.
          // TODO: Delete this when we delete isMounted and findDOMNode.
          workInProgress.effectTag &= ~Placement;
        }
        updateHostContainer(workInProgress);
        return null;
      }
    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;
        if (current !== null && workInProgress.stateNode != null) {
          // If we have an alternate, that means this is an update and we need to
          // schedule a side-effect to do the updates.
          var oldProps = current.memoizedProps;
          // If we get updated because one of our children updated, we don't
          // have newProps so we'll have to reuse them.
          // TODO: Split the update API as separate for the props vs. children.
          // Even better would be if children weren't special cased at all tho.
          var instance = workInProgress.stateNode;
          var currentHostContext = getHostContext();
          // TODO: Experiencing an error where oldProps is null. Suggests a host
          // component is hitting the resume path. Figure out why. Possibly
          // related to `hidden`.
          var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

          updateHostComponent$1(current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext);

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            // This can happen when we abort work.
            return null;
          }

          var _currentHostContext = getHostContext();
          // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on we want to add then top->down or
          // bottom->up. Top->down is faster in IE11.
          var wasHydrated = popHydrationState(workInProgress);
          if (wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext)) {
              // If changes to the hydrated node needs to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }
          } else {
            var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

            appendAllChildren(_instance, workInProgress);

            // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.
            if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance, _currentHostContext)) {
              markUpdate(workInProgress);
            }
            workInProgress.stateNode = _instance;
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }
        return null;
      }
    case HostText:
      {
        var newText = newProps;
        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps;
          // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.
          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            // This can happen when we abort work.
            return null;
          }
          var _rootContainerInstance = getRootHostContainer();
          var _currentHostContext2 = getHostContext();
          var _wasHydrated = popHydrationState(workInProgress);
          if (_wasHydrated) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
          }
        }
        return null;
      }
    case ForwardRef:
      return null;
    case TimeoutComponent:
      return null;
    case Fragment:
      return null;
    case Mode:
      return null;
    case Profiler:
      if (enableProfilerTimer) {
        recordElapsedActualRenderTime(workInProgress);
      }
      return null;
    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(workInProgress);
      return null;
    case ContextProvider:
      // Pop provider fiber
      popProvider(workInProgress);
      return null;
    case ContextConsumer:
      return null;
    // Error cases
    case IndeterminateComponent:
      invariant(false, 'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.');
    // eslint-disable-next-line no-fallthrough
    default:
      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
  }
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(capturedError) {
  return true;
}

function logCapturedError(capturedError) {
  var logError = showErrorDialog(capturedError);

  // Allow injected showErrorDialog() to prevent default console.error logging.
  // This enables renderers like ReactNative to better manage redbox behavior.
  if (logError === false) {
    return;
  }

  var error = capturedError.error;
  var suppressLogging = error && error.suppressReactErrorLogging;
  if (suppressLogging) {
    return;
  }

  {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry;


    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

    var errorBoundaryMessage = void 0;
    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
      } else {
        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
    }
    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

    // In development, we provide our own message with just the component stack.
    // We don't include the original error message and JS stack because the browser
    // has already printed it. Even if the application swallows the error, it is still
    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
    console.error(combinedMessage);
  }
}

var invokeGuardedCallback$3 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;


var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
}

function logError(boundary, errorInfo) {
  var source = errorInfo.source;
  var stack = errorInfo.stack;
  if (stack === null && source !== null) {
    stack = getStackAddendumByWorkInProgressFiber(source);
  }

  var capturedError = {
    componentName: source !== null ? getComponentName(source) : null,
    componentStack: stack !== null ? stack : '',
    error: errorInfo.value,
    errorBoundary: null,
    errorBoundaryName: null,
    errorBoundaryFound: false,
    willRetry: false
  };

  if (boundary !== null && boundary.tag === ClassComponent) {
    capturedError.errorBoundary = boundary.stateNode;
    capturedError.errorBoundaryName = getComponentName(boundary);
    capturedError.errorBoundaryFound = true;
    capturedError.willRetry = true;
  }

  try {
    logCapturedError(capturedError);
  } catch (e) {
    // Prevent cycle if logCapturedError() throws.
    // A cycle may still occur if logCapturedError renders a component that throws.
    var suppressLogging = e && e.suppressReactErrorLogging;
    if (!suppressLogging) {
      console.error(e);
    }
  }
}

var callComponentWillUnmountWithTimer = function (current, instance) {
  startPhaseTimer(current, 'componentWillUnmount');
  instance.props = current.memoizedProps;
  instance.state = current.memoizedState;
  instance.componentWillUnmount();
  stopPhaseTimer();
};

// Capture errors so they don't interrupt unmounting.
function safelyCallComponentWillUnmount(current, instance) {
  {
    invokeGuardedCallback$3(null, callComponentWillUnmountWithTimer, null, current, instance);
    if (hasCaughtError$1()) {
      var unmountError = clearCaughtError$1();
      captureCommitPhaseError(current, unmountError);
    }
  }
}

function safelyDetachRef(current) {
  var ref = current.ref;
  if (ref !== null) {
    if (typeof ref === 'function') {
      {
        invokeGuardedCallback$3(null, ref, null, null);
        if (hasCaughtError$1()) {
          var refError = clearCaughtError$1();
          captureCommitPhaseError(current, refError);
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function commitBeforeMutationLifeCycles(current, finishedWork) {
  switch (finishedWork.tag) {
    case ClassComponent:
      {
        if (finishedWork.effectTag & Snapshot) {
          if (current !== null) {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
            var instance = finishedWork.stateNode;
            instance.props = finishedWork.memoizedProps;
            instance.state = finishedWork.memoizedState;
            var snapshot = instance.getSnapshotBeforeUpdate(prevProps, prevState);
            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);
                warning(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork));
              }
            }
            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
            stopPhaseTimer();
          }
        }
        return;
      }
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
      // Nothing to do for these component types
      return;
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitLifeCycles(finishedRoot, current, finishedWork, currentTime, committedExpirationTime) {
  switch (finishedWork.tag) {
    case ClassComponent:
      {
        var instance = finishedWork.stateNode;
        if (finishedWork.effectTag & Update) {
          if (current === null) {
            startPhaseTimer(finishedWork, 'componentDidMount');
            instance.props = finishedWork.memoizedProps;
            instance.state = finishedWork.memoizedState;
            instance.componentDidMount();
            stopPhaseTimer();
          } else {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            startPhaseTimer(finishedWork, 'componentDidUpdate');
            instance.props = finishedWork.memoizedProps;
            instance.state = finishedWork.memoizedState;
            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
            stopPhaseTimer();
          }
        }
        var updateQueue = finishedWork.updateQueue;
        if (updateQueue !== null) {
          instance.props = finishedWork.memoizedProps;
          instance.state = finishedWork.memoizedState;
          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
        }
        return;
      }
    case HostRoot:
      {
        var _updateQueue = finishedWork.updateQueue;
        if (_updateQueue !== null) {
          var _instance = null;
          if (finishedWork.child !== null) {
            switch (finishedWork.child.tag) {
              case HostComponent:
                _instance = getPublicInstance(finishedWork.child.stateNode);
                break;
              case ClassComponent:
                _instance = finishedWork.child.stateNode;
                break;
            }
          }
          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
        }
        return;
      }
    case HostComponent:
      {
        var _instance2 = finishedWork.stateNode;

        // Renderers may schedule work to be done after host components are mounted
        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
        // These effects should only be committed when components are first mounted,
        // aka when there is no current/alternate.
        if (current === null && finishedWork.effectTag & Update) {
          var type = finishedWork.type;
          var props = finishedWork.memoizedProps;
          commitMount(_instance2, type, props, finishedWork);
        }

        return;
      }
    case HostText:
      {
        // We have no life-cycles associated with text.
        return;
      }
    case HostPortal:
      {
        // We have no life-cycles associated with portals.
        return;
      }
    case Profiler:
      {
        // We have no life-cycles associated with Profiler.
        return;
      }
    case TimeoutComponent:
      {
        // We have no life-cycles associated with Timeouts.
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;
  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse = void 0;
    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;
      default:
        instanceToUse = instance;
    }
    if (typeof ref === 'function') {
      ref(instanceToUse);
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          warning(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork), getStackAddendumByWorkInProgressFiber(finishedWork));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function commitDetachRef(current) {
  var currentRef = current.ref;
  if (currentRef !== null) {
    if (typeof currentRef === 'function') {
      currentRef(null);
    } else {
      currentRef.current = null;
    }
  }
}

// User-originating errors (lifecycles and refs) should not interrupt
// deletion, so don't let them throw. Host-originating errors should
// interrupt deletion, so it's okay
function commitUnmount(current) {
  if (typeof onCommitUnmount === 'function') {
    onCommitUnmount(current);
  }

  switch (current.tag) {
    case ClassComponent:
      {
        safelyDetachRef(current);
        var instance = current.stateNode;
        if (typeof instance.componentWillUnmount === 'function') {
          safelyCallComponentWillUnmount(current, instance);
        }
        return;
      }
    case HostComponent:
      {
        safelyDetachRef(current);
        return;
      }
    case HostPortal:
      {
        // TODO: this is recursive.
        // We are also not using this parent because
        // the portal will get pushed immediately.
        if (supportsMutation) {
          unmountHostComponents(current);
        } else if (supportsPersistence) {
          emptyPortalContainer(current);
        }
        return;
      }
  }
}

function commitNestedUnmounts(root) {
  // While we're inside a removed host node we don't want to call
  // removeChild on the inner nodes because they're removed by the top
  // call anyway. We also want to call componentWillUnmount on all
  // composites before this host node is removed from the tree. Therefore
  var node = root;
  while (true) {
    commitUnmount(node);
    // Visit children because they may contain more composite or host nodes.
    // Skip portals because commitUnmount() currently visits them recursively.
    if (node.child !== null && (
    // If we use mutation we drill down into portals using commitUnmount above.
    // If we don't use mutation we drill down into portals here instead.
    !supportsMutation || node.tag !== HostPortal)) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === root) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === root) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function detachFiber(current) {
  // Cut off the return pointers to disconnect it from the tree. Ideally, we
  // should clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child. This child
  // itself will be GC:ed when the parent updates the next time.
  current.return = null;
  current.child = null;
  if (current.alternate) {
    current.alternate.child = null;
    current.alternate.return = null;
  }
}

function emptyPortalContainer(current) {
  if (!supportsPersistence) {
    return;
  }

  var portal = current.stateNode;
  var containerInfo = portal.containerInfo;

  var emptyChildSet = createContainerChildSet(containerInfo);
  replaceContainerChildren(containerInfo, emptyChildSet);
}

function commitContainer(finishedWork) {
  if (!supportsPersistence) {
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
      {
        return;
      }
    case HostComponent:
      {
        return;
      }
    case HostText:
      {
        return;
      }
    case HostRoot:
    case HostPortal:
      {
        var portalOrRoot = finishedWork.stateNode;
        var containerInfo = portalOrRoot.containerInfo,
            _pendingChildren = portalOrRoot.pendingChildren;

        replaceContainerChildren(containerInfo, _pendingChildren);
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;
  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }
    parent = parent.return;
  }
  invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  var node = fiber;
  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
    while (node.tag !== HostComponent && node.tag !== HostText) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.effectTag & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      }
      // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.
      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    }
    // Check if this host node is stable or about to be placed.
    if (!(node.effectTag & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {
  if (!supportsMutation) {
    return;
  }

  // Recursively insert all host nodes into the parent.
  var parentFiber = getHostParentFiber(finishedWork);
  var parent = void 0;
  var isContainer = void 0;
  switch (parentFiber.tag) {
    case HostComponent:
      parent = parentFiber.stateNode;
      isContainer = false;
      break;
    case HostRoot:
      parent = parentFiber.stateNode.containerInfo;
      isContainer = true;
      break;
    case HostPortal:
      parent = parentFiber.stateNode.containerInfo;
      isContainer = true;
      break;
    default:
      invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
  }
  if (parentFiber.effectTag & ContentReset) {
    // Reset the text content of the parent before doing any insertions
    resetTextContent(parent);
    // Clear ContentReset from the effect tag
    parentFiber.effectTag &= ~ContentReset;
  }

  var before = getHostSibling(finishedWork);
  // We only have the top Fiber that was inserted but we need recurse down its
  // children to find all the terminal nodes.
  var node = finishedWork;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      if (before) {
        if (isContainer) {
          insertInContainerBefore(parent, node.stateNode, before);
        } else {
          insertBefore(parent, node.stateNode, before);
        }
      } else {
        if (isContainer) {
          appendChildToContainer(parent, node.stateNode);
        } else {
          appendChild(parent, node.stateNode);
        }
      }
    } else if (node.tag === HostPortal) {
      // If the insertion itself is a portal, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === finishedWork) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === finishedWork) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function unmountHostComponents(current) {
  // We only have the top Fiber that was inserted but we need recurse down its
  var node = current;

  // Each iteration, currentParent is populated with node's host parent if not
  // currentParentIsValid.
  var currentParentIsValid = false;
  var currentParent = void 0;
  var currentParentIsContainer = void 0;

  while (true) {
    if (!currentParentIsValid) {
      var parent = node.return;
      findParent: while (true) {
        !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        switch (parent.tag) {
          case HostComponent:
            currentParent = parent.stateNode;
            currentParentIsContainer = false;
            break findParent;
          case HostRoot:
            currentParent = parent.stateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
          case HostPortal:
            currentParent = parent.stateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
        }
        parent = parent.return;
      }
      currentParentIsValid = true;
    }

    if (node.tag === HostComponent || node.tag === HostText) {
      commitNestedUnmounts(node);
      // After all the children have unmounted, it is now safe to remove the
      // node from the tree.
      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, node.stateNode);
      } else {
        removeChild(currentParent, node.stateNode);
      }
      // Don't visit children because we already visited them.
    } else if (node.tag === HostPortal) {
      // When we go into a portal, it becomes the parent to remove from.
      // We will reassign it back when we pop the portal on the way up.
      currentParent = node.stateNode.containerInfo;
      // Visit children because portals might contain host components.
      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    } else {
      commitUnmount(node);
      // Visit children because we may find more host components below.
      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    }
    if (node === current) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === current) {
        return;
      }
      node = node.return;
      if (node.tag === HostPortal) {
        // When we go out of the portal, we need to restore the parent.
        // Since we don't keep a stack of them, we will search for it.
        currentParentIsValid = false;
      }
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function commitDeletion(current) {
  if (supportsMutation) {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(current);
  } else {
    // Detach refs and call componentWillUnmount() on the whole subtree.
    commitNestedUnmounts(current);
  }
  detachFiber(current);
}

function commitWork(current, finishedWork) {
  if (!supportsMutation) {
    commitContainer(finishedWork);
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
      {
        return;
      }
    case HostComponent:
      {
        var instance = finishedWork.stateNode;
        if (instance != null) {
          // Commit the work prepared earlier.
          var newProps = finishedWork.memoizedProps;
          // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.
          var oldProps = current !== null ? current.memoizedProps : newProps;
          var type = finishedWork.type;
          // TODO: Type the updateQueue to be specific to host components.
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          if (updatePayload !== null) {
            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
          }
        }
        return;
      }
    case HostText:
      {
        !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        var textInstance = finishedWork.stateNode;
        var newText = finishedWork.memoizedProps;
        // For hydration we reuse the update path but we treat the oldProps
        // as the newProps. The updatePayload will contain the real change in
        // this case.
        var oldText = current !== null ? current.memoizedProps : newText;
        commitTextUpdate(textInstance, oldText, newText);
        return;
      }
    case HostRoot:
      {
        return;
      }
    case Profiler:
      {
        if (enableProfilerTimer) {
          var onRender = finishedWork.memoizedProps.onRender;
          onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.stateNode.duration, finishedWork.treeBaseTime, finishedWork.stateNode.startTime, getCommitTime());

          // Reset actualTime after successful commit.
          // By default, we append to this time to account for errors and pauses.
          finishedWork.stateNode.duration = 0;
        }
        return;
      }
    case TimeoutComponent:
      {
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitResetTextContent(current) {
  if (!supportsMutation) {
    return;
  }
  resetTextContent(current.stateNode);
}

function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime);
  // Unmount the root by rendering null.
  update.tag = CaptureUpdate;
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: null };
  var error = errorInfo.value;
  update.callback = function () {
    onUncaughtError(error);
    logError(fiber, errorInfo);
  };
  return update;
}

function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime);
  update.tag = CaptureUpdate;
  var getDerivedStateFromCatch = fiber.type.getDerivedStateFromCatch;
  if (enableGetDerivedStateFromCatch && typeof getDerivedStateFromCatch === 'function') {
    var error = errorInfo.value;
    update.payload = function () {
      return getDerivedStateFromCatch(error);
    };
  }

  var inst = fiber.stateNode;
  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      if (!enableGetDerivedStateFromCatch || getDerivedStateFromCatch !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromCatch is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this);
      }
      var error = errorInfo.value;
      var stack = errorInfo.stack;
      logError(fiber, errorInfo);
      this.componentDidCatch(error, {
        componentStack: stack !== null ? stack : ''
      });
    };
  }
  return update;
}

function schedulePing(finishedWork) {
  // Once the promise resolves, we should try rendering the non-
  // placeholder state again.
  var currentTime = recalculateCurrentTime();
  var expirationTime = computeExpirationForFiber(currentTime, finishedWork);
  var recoveryUpdate = createUpdate(expirationTime);
  enqueueUpdate(finishedWork, recoveryUpdate, expirationTime);
  scheduleWork$1(finishedWork, expirationTime);
}

function throwException(root, returnFiber, sourceFiber, value, renderIsExpired, renderExpirationTime, currentTimeMs) {
  // The source fiber did not complete.
  sourceFiber.effectTag |= Incomplete;
  // Its effect list is no longer valid.
  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

  if (enableSuspense && value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a thenable.
    var thenable = value;

    var expirationTimeMs = expirationTimeToMs(renderExpirationTime);
    var startTimeMs = expirationTimeMs - 5000;
    var elapsedMs = currentTimeMs - startTimeMs;
    if (elapsedMs < 0) {
      elapsedMs = 0;
    }
    var remainingTimeMs = expirationTimeMs - currentTimeMs;

    // Find the earliest timeout of all the timeouts in the ancestor path.
    // TODO: Alternatively, we could store the earliest timeout on the context
    // stack, rather than searching on every suspend.
    var _workInProgress = returnFiber;
    var earliestTimeoutMs = -1;
    searchForEarliestTimeout: do {
      if (_workInProgress.tag === TimeoutComponent) {
        var current = _workInProgress.alternate;
        if (current !== null && current.memoizedState === true) {
          // A parent Timeout already committed in a placeholder state. We
          // need to handle this promise immediately. In other words, we
          // should never suspend inside a tree that already expired.
          earliestTimeoutMs = 0;
          break searchForEarliestTimeout;
        }
        var timeoutPropMs = _workInProgress.pendingProps.ms;
        if (typeof timeoutPropMs === 'number') {
          if (timeoutPropMs <= 0) {
            earliestTimeoutMs = 0;
            break searchForEarliestTimeout;
          } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {
            earliestTimeoutMs = timeoutPropMs;
          }
        } else if (earliestTimeoutMs === -1) {
          earliestTimeoutMs = remainingTimeMs;
        }
      }
      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null);

    // Compute the remaining time until the timeout.
    var msUntilTimeout = earliestTimeoutMs - elapsedMs;

    if (renderExpirationTime === Never || msUntilTimeout > 0) {
      // There's still time remaining.
      suspendRoot(root, thenable, msUntilTimeout, renderExpirationTime);
      var onResolveOrReject = function () {
        retrySuspendedRoot(root, renderExpirationTime);
      };
      thenable.then(onResolveOrReject, onResolveOrReject);
      return;
    } else {
      // No time remaining. Need to fallback to placeholder.
      // Find the nearest timeout that can be retried.
      _workInProgress = returnFiber;
      do {
        switch (_workInProgress.tag) {
          case HostRoot:
            {
              // The root expired, but no fallback was provided. Throw a
              // helpful error.
              var message = renderExpirationTime === Sync ? 'A synchronous update was suspended, but no fallback UI ' + 'was provided.' : 'An update was suspended for longer than the timeout, ' + 'but no fallback UI was provided.';
              value = new Error(message);
              break;
            }
          case TimeoutComponent:
            {
              if ((_workInProgress.effectTag & DidCapture) === NoEffect) {
                _workInProgress.effectTag |= ShouldCapture;
                var _onResolveOrReject = schedulePing.bind(null, _workInProgress);
                thenable.then(_onResolveOrReject, _onResolveOrReject);
                return;
              }
              // Already captured during this render. Continue to the next
              // Timeout ancestor.
              break;
            }
        }
        _workInProgress = _workInProgress.return;
      } while (_workInProgress !== null);
    }
  }

  // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.
  value = createCapturedValue(value, sourceFiber);
  var workInProgress = returnFiber;
  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.effectTag |= ShouldCapture;
          var update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, update, renderExpirationTime);
          return;
        }
      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;
        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromCatch === 'function' && enableGetDerivedStateFromCatch || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.effectTag |= ShouldCapture;
          // Schedule the error boundary to re-render using updated state
          var _update = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, _update, renderExpirationTime);
          return;
        }
        break;
      default:
        break;
    }
    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

function unwindWork(workInProgress, renderIsExpired, renderExpirationTime) {
  switch (workInProgress.tag) {
    case ClassComponent:
      {
        popContextProvider(workInProgress);
        var effectTag = workInProgress.effectTag;
        if (effectTag & ShouldCapture) {
          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var _effectTag = workInProgress.effectTag;
        if (_effectTag & ShouldCapture) {
          workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostComponent:
      {
        popHostContext(workInProgress);
        return null;
      }
    case TimeoutComponent:
      {
        var _effectTag2 = workInProgress.effectTag;
        if (_effectTag2 & ShouldCapture) {
          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostPortal:
      popHostContainer(workInProgress);
      return null;
    case ContextProvider:
      popProvider(workInProgress);
      return null;
    default:
      return null;
  }
}

function unwindInterruptedWork(interruptedWork) {
  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        popContextProvider(interruptedWork);
        break;
      }
    case HostRoot:
      {
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        break;
      }
    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }
    case HostPortal:
      popHostContainer(interruptedWork);
      break;
    case ContextProvider:
      popProvider(interruptedWork);
      break;
    case Profiler:
      if (enableProfilerTimer) {
        // Resume in case we're picking up on work that was paused.
        resumeActualRenderTimerIfPaused();
        recordElapsedActualRenderTime(interruptedWork);
      }
      break;
    default:
      break;
  }
}

var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError = ReactErrorUtils.hasCaughtError;
var clearCaughtError = ReactErrorUtils.clearCaughtError;


var didWarnAboutStateTransition = void 0;
var didWarnSetStateChildContext = void 0;
var warnAboutUpdateOnUnmounted = void 0;
var warnAboutInvalidUpdates = void 0;

{
  didWarnAboutStateTransition = false;
  didWarnSetStateChildContext = false;
  var didWarnStateUpdateForUnmountedComponent = {};

  warnAboutUpdateOnUnmounted = function (fiber) {
    // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.
    var componentName = getComponentName(fiber) || 'ReactClass';
    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
      return;
    }
    warning(false, "Can't call setState (or forceUpdate) on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in the ' + 'componentWillUnmount method.%s', getStackAddendumByWorkInProgressFiber(fiber));
    didWarnStateUpdateForUnmountedComponent[componentName] = true;
  };

  warnAboutInvalidUpdates = function (instance) {
    switch (ReactDebugCurrentFiber.phase) {
      case 'getChildContext':
        if (didWarnSetStateChildContext) {
          return;
        }
        warning(false, 'setState(...): Cannot call setState() inside getChildContext()');
        didWarnSetStateChildContext = true;
        break;
      case 'render':
        if (didWarnAboutStateTransition) {
          return;
        }
        warning(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
        didWarnAboutStateTransition = true;
        break;
    }
  };
}

// Represents the current time in ms.
var originalStartTimeMs = now();
var mostRecentCurrentTime = msToExpirationTime(0);
var mostRecentCurrentTimeMs = originalStartTimeMs;

// Used to ensure computeUniqueAsyncExpiration is monotonically increases.
var lastUniqueAsyncExpiration = 0;

// Represents the expiration time that incoming updates should use. (If this
// is NoWork, use the default strategy: async updates in async mode, sync
// updates in sync mode.)
var expirationContext = NoWork;

var isWorking = false;

// The next work in progress fiber that we're currently working on.
var nextUnitOfWork = null;
var nextRoot = null;
// The time at which we're currently rendering work.
var nextRenderExpirationTime = NoWork;
var nextLatestTimeoutMs = -1;
var nextRenderIsExpired = false;

// The next fiber with an effect that we're currently committing.
var nextEffect = null;

var isCommitting$1 = false;

var isRootReadyForCommit = false;

var legacyErrorBoundariesThatAlreadyFailed = null;

// Used for performance tracking.
var interruptedBy = null;

var stashedWorkInProgressProperties = void 0;
var replayUnitOfWork = void 0;
var isReplayingFailedUnitOfWork = void 0;
var originalReplayError = void 0;
var rethrowOriginalError = void 0;
if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
  stashedWorkInProgressProperties = null;
  isReplayingFailedUnitOfWork = false;
  originalReplayError = null;
  replayUnitOfWork = function (failedUnitOfWork, thrownValue, isAsync) {
    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
      // Don't replay promises. Treat everything else like an error.
      // TODO: Need to figure out a different strategy if/when we add
      // support for catching other types.
      return;
    }

    // Restore the original state of the work-in-progress
    if (stashedWorkInProgressProperties === null) {
      // This should never happen. Don't throw because this code is DEV-only.
      warning(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');
      return;
    }
    assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);

    switch (failedUnitOfWork.tag) {
      case HostRoot:
        popHostContainer(failedUnitOfWork);
        popTopLevelContextObject(failedUnitOfWork);
        break;
      case HostComponent:
        popHostContext(failedUnitOfWork);
        break;
      case ClassComponent:
        popContextProvider(failedUnitOfWork);
        break;
      case HostPortal:
        popHostContainer(failedUnitOfWork);
        break;
      case ContextProvider:
        popProvider(failedUnitOfWork);
        break;
    }
    // Replay the begin phase.
    isReplayingFailedUnitOfWork = true;
    originalReplayError = thrownValue;
    invokeGuardedCallback$2(null, workLoop, null, isAsync);
    isReplayingFailedUnitOfWork = false;
    originalReplayError = null;
    if (hasCaughtError()) {
      clearCaughtError();

      if (enableProfilerTimer) {
        // Stop "base" render timer again (after the re-thrown error).
        stopBaseRenderTimerIfRunning();
      }
    } else {
      // If the begin phase did not fail the second time, set this pointer
      // back to the original value.
      nextUnitOfWork = failedUnitOfWork;
    }
  };
  rethrowOriginalError = function () {
    throw originalReplayError;
  };
}

function resetStack() {
  if (nextUnitOfWork !== null) {
    var interruptedWork = nextUnitOfWork.return;
    while (interruptedWork !== null) {
      unwindInterruptedWork(interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  {
    ReactStrictModeWarnings.discardPendingWarnings();
    checkThatStackIsEmpty();
  }

  nextRoot = null;
  nextRenderExpirationTime = NoWork;
  nextLatestTimeoutMs = -1;
  nextRenderIsExpired = false;
  nextUnitOfWork = null;

  isRootReadyForCommit = false;
}

function commitAllHostEffects() {
  while (nextEffect !== null) {
    {
      ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
    }
    recordEffect();

    var effectTag = nextEffect.effectTag;

    if (effectTag & ContentReset) {
      commitResetTextContent(nextEffect);
    }

    if (effectTag & Ref) {
      var current = nextEffect.alternate;
      if (current !== null) {
        commitDetachRef(current);
      }
    }

    // The following switch statement is only concerned about placement,
    // updates, and deletions. To avoid needing to add a case for every
    // possible bitmap value, we remove the secondary effects from the
    // effect tag and switch on that value.
    var primaryEffectTag = effectTag & (Placement | Update | Deletion);
    switch (primaryEffectTag) {
      case Placement:
        {
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is inserted, before
          // any life-cycles like componentDidMount gets called.
          // TODO: findDOMNode doesn't rely on this any more but isMounted
          // does and isMounted is deprecated anyway so we should be able
          // to kill this.
          nextEffect.effectTag &= ~Placement;
          break;
        }
      case PlacementAndUpdate:
        {
          // Placement
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is inserted, before
          // any life-cycles like componentDidMount gets called.
          nextEffect.effectTag &= ~Placement;

          // Update
          var _current = nextEffect.alternate;
          commitWork(_current, nextEffect);
          break;
        }
      case Update:
        {
          var _current2 = nextEffect.alternate;
          commitWork(_current2, nextEffect);
          break;
        }
      case Deletion:
        {
          commitDeletion(nextEffect);
          break;
        }
    }
    nextEffect = nextEffect.nextEffect;
  }

  {
    ReactDebugCurrentFiber.resetCurrentFiber();
  }
}

function commitBeforeMutationLifecycles() {
  while (nextEffect !== null) {
    var effectTag = nextEffect.effectTag;

    if (effectTag & Snapshot) {
      recordEffect();
      var current = nextEffect.alternate;
      commitBeforeMutationLifeCycles(current, nextEffect);
    }

    // Don't cleanup effects yet;
    // This will be done by commitAllLifeCycles()
    nextEffect = nextEffect.nextEffect;
  }
}

function commitAllLifeCycles(finishedRoot, currentTime, committedExpirationTime) {
  {
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.flushPendingDeprecationWarnings();
    }

    if (warnAboutLegacyContextAPI) {
      ReactStrictModeWarnings.flushLegacyContextWarning();
    }
  }
  while (nextEffect !== null) {
    var effectTag = nextEffect.effectTag;

    if (effectTag & (Update | Callback)) {
      recordEffect();
      var current = nextEffect.alternate;
      commitLifeCycles(finishedRoot, current, nextEffect, currentTime, committedExpirationTime);
    }

    if (effectTag & Ref) {
      recordEffect();
      commitAttachRef(nextEffect);
    }

    var next = nextEffect.nextEffect;
    // Ensure that we clean these up so that we don't accidentally keep them.
    // I'm not actually sure this matters because we can't reset firstEffect
    // and lastEffect since they're on every node, not just the effectful
    // ones. So we have to clean everything as we reuse nodes anyway.
    nextEffect.nextEffect = null;
    // Ensure that we reset the effectTag here so that we can rely on effect
    // tags to reason about the current life-cycle.
    nextEffect = next;
  }
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}

function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function commitRoot(finishedWork) {
  isWorking = true;
  isCommitting$1 = true;
  startCommitTimer();

  var root = finishedWork.stateNode;
  !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var committedExpirationTime = root.pendingCommitExpirationTime;
  !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  root.pendingCommitExpirationTime = NoWork;

  var currentTime = recalculateCurrentTime();

  // Reset this to null before calling lifecycles
  ReactCurrentOwner.current = null;

  var firstEffect = void 0;
  if (finishedWork.effectTag > PerformedWork) {
    // A fiber's effect list consists only of its children, not itself. So if
    // the root has an effect, we need to add it to the end of the list. The
    // resulting list is the set that would belong to the root's parent, if
    // it had one; that is, all the effects in the tree including the root.
    if (finishedWork.lastEffect !== null) {
      finishedWork.lastEffect.nextEffect = finishedWork;
      firstEffect = finishedWork.firstEffect;
    } else {
      firstEffect = finishedWork;
    }
  } else {
    // There is no effect on the root.
    firstEffect = finishedWork.firstEffect;
  }

  prepareForCommit(root.containerInfo);

  // Invoke instances of getSnapshotBeforeUpdate before mutation.
  nextEffect = firstEffect;
  startCommitSnapshotEffectsTimer();
  while (nextEffect !== null) {
    var didError = false;
    var error = void 0;
    {
      invokeGuardedCallback$2(null, commitBeforeMutationLifecycles, null);
      if (hasCaughtError()) {
        didError = true;
        error = clearCaughtError();
      }
    }
    if (didError) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, error);
      // Clean-up
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }
  stopCommitSnapshotEffectsTimer();

  if (enableProfilerTimer) {
    recordCommitTime();
  }

  // Commit all the side-effects within a tree. We'll do this in two passes.
  // The first pass performs all the host insertions, updates, deletions and
  // ref unmounts.
  nextEffect = firstEffect;
  startCommitHostEffectsTimer();
  while (nextEffect !== null) {
    var _didError = false;
    var _error = void 0;
    {
      invokeGuardedCallback$2(null, commitAllHostEffects, null);
      if (hasCaughtError()) {
        _didError = true;
        _error = clearCaughtError();
      }
    }
    if (_didError) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, _error);
      // Clean-up
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }
  stopCommitHostEffectsTimer();

  resetAfterCommit(root.containerInfo);

  // The work-in-progress tree is now the current tree. This must come after
  // the first pass of the commit phase, so that the previous tree is still
  // current during componentWillUnmount, but before the second pass, so that
  // the finished work is current during componentDidMount/Update.
  root.current = finishedWork;

  // In the second pass we'll perform all life-cycles and ref callbacks.
  // Life-cycles happen as a separate pass so that all placements, updates,
  // and deletions in the entire tree have already been invoked.
  // This pass also triggers any renderer-specific initial effects.
  nextEffect = firstEffect;
  startCommitLifeCyclesTimer();
  while (nextEffect !== null) {
    var _didError2 = false;
    var _error2 = void 0;
    {
      invokeGuardedCallback$2(null, commitAllLifeCycles, null, root, currentTime, committedExpirationTime);
      if (hasCaughtError()) {
        _didError2 = true;
        _error2 = clearCaughtError();
      }
    }
    if (_didError2) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, _error2);
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }

  if (enableProfilerTimer) {
    {
      checkActualRenderTimeStackEmpty();
    }
    resetActualRenderTimer();
  }

  isCommitting$1 = false;
  isWorking = false;
  stopCommitLifeCyclesTimer();
  stopCommitTimer();
  if (typeof onCommitRoot === 'function') {
    onCommitRoot(finishedWork.stateNode);
  }
  if (true && ReactFiberInstrumentation_1.debugTool) {
    ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
  }

  markCommittedPriorityLevels(root, currentTime, root.current.expirationTime);
  var remainingTime = findNextPendingPriorityLevel(root);
  if (remainingTime === NoWork) {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }
  return remainingTime;
}

function resetExpirationTime(workInProgress, renderTime) {
  if (renderTime !== Never && workInProgress.expirationTime === Never) {
    // The children of this component are hidden. Don't bubble their
    // expiration times.
    return;
  }

  // Check for pending updates.
  var newExpirationTime = NoWork;
  switch (workInProgress.tag) {
    case HostRoot:
    case ClassComponent:
      {
        var updateQueue = workInProgress.updateQueue;
        if (updateQueue !== null) {
          newExpirationTime = updateQueue.expirationTime;
        }
      }
  }

  // TODO: Calls need to visit stateNode

  // Bubble up the earliest expiration time.
  // (And "base" render timers if that feature flag is enabled)
  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
    var treeBaseTime = workInProgress.selfBaseTime;
    var child = workInProgress.child;
    while (child !== null) {
      treeBaseTime += child.treeBaseTime;
      if (child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > child.expirationTime)) {
        newExpirationTime = child.expirationTime;
      }
      child = child.sibling;
    }
    workInProgress.treeBaseTime = treeBaseTime;
  } else {
    var _child = workInProgress.child;
    while (_child !== null) {
      if (_child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > _child.expirationTime)) {
        newExpirationTime = _child.expirationTime;
      }
      _child = _child.sibling;
    }
  }

  workInProgress.expirationTime = newExpirationTime;
}

function completeUnitOfWork(workInProgress) {
  // Attempt to complete the current unit of work, then move to the
  // next sibling. If there are no more siblings, return to the
  // parent fiber.
  while (true) {
    // The current, flushed, state of this fiber is the alternate.
    // Ideally nothing should rely on this, but relying on it here
    // means that we don't need an additional field on the work in
    // progress.
    var current = workInProgress.alternate;
    {
      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
    }

    var returnFiber = workInProgress.return;
    var siblingFiber = workInProgress.sibling;

    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
      // This fiber completed.
      var next = completeWork(current, workInProgress, nextRenderExpirationTime);
      stopWorkTimer(workInProgress);
      resetExpirationTime(workInProgress, nextRenderExpirationTime);
      {
        ReactDebugCurrentFiber.resetCurrentFiber();
      }

      if (next !== null) {
        stopWorkTimer(workInProgress);
        if (true && ReactFiberInstrumentation_1.debugTool) {
          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
        }
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        return next;
      }

      if (returnFiber !== null &&
      // Do not append effects to parents if a sibling failed to complete
      (returnFiber.effectTag & Incomplete) === NoEffect) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }
        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }
          returnFiber.lastEffect = workInProgress.lastEffect;
        }

        // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if
        // needed, by doing multiple passes over the effect list. We don't want
        // to schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.
        var effectTag = workInProgress.effectTag;
        // Skip both NoWork and PerformedWork tags when creating the effect list.
        // PerformedWork effect is read by React DevTools but shouldn't be committed.
        if (effectTag > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }
          returnFiber.lastEffect = workInProgress;
        }
      }

      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        // We've reached the root.
        isRootReadyForCommit = true;
        return null;
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(workInProgress, nextRenderIsExpired, nextRenderExpirationTime);
      // Because this fiber did not complete, don't reset its expiration time.
      if (workInProgress.effectTag & DidCapture) {
        // Restarting an error boundary
        stopFailedWorkTimer(workInProgress);
      } else {
        stopWorkTimer(workInProgress);
      }

      {
        ReactDebugCurrentFiber.resetCurrentFiber();
      }

      if (_next !== null) {
        stopWorkTimer(workInProgress);
        if (true && ReactFiberInstrumentation_1.debugTool) {
          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
        }
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        _next.effectTag &= HostEffectMask;
        return _next;
      }

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its effect list.
        returnFiber.firstEffect = returnFiber.lastEffect = null;
        returnFiber.effectTag |= Incomplete;
      }

      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        return null;
      }
    }
  }

  // Without this explicit null return Flow complains of invalid return type
  // TODO Remove the above while(true) loop
  // eslint-disable-next-line no-unreachable
  return null;
}

function performUnitOfWork(workInProgress) {
  // The current, flushed, state of this fiber is the alternate.
  // Ideally nothing should rely on this, but relying on it here
  // means that we don't need an additional field on the work in
  // progress.
  var current = workInProgress.alternate;

  // See if beginning this work spawns more work.
  startWorkTimer(workInProgress);
  {
    ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
  }

  if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);
  }

  var next = void 0;
  if (enableProfilerTimer) {
    if (workInProgress.mode & ProfileMode) {
      startBaseRenderTimer();
    }

    next = beginWork(current, workInProgress, nextRenderExpirationTime);

    if (workInProgress.mode & ProfileMode) {
      // Update "base" time if the render wasn't bailed out on.
      recordElapsedBaseRenderTimeIfRunning(workInProgress);
      stopBaseRenderTimerIfRunning();
    }
  } else {
    next = beginWork(current, workInProgress, nextRenderExpirationTime);
  }

  {
    ReactDebugCurrentFiber.resetCurrentFiber();
    if (isReplayingFailedUnitOfWork) {
      // Currently replaying a failed unit of work. This should be unreachable,
      // because the render phase is meant to be idempotent, and it should
      // have thrown again. Since it didn't, rethrow the original error, so
      // React's internal stack is not misaligned.
      rethrowOriginalError();
    }
  }
  if (true && ReactFiberInstrumentation_1.debugTool) {
    ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
  }

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    next = completeUnitOfWork(workInProgress);
  }

  ReactCurrentOwner.current = null;

  return next;
}

function workLoop(isAsync) {
  if (!isAsync) {
    // Flush all expired work.
    while (nextUnitOfWork !== null) {
      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
    }
  } else {
    // Flush asynchronous work until the deadline runs out of time.
    while (nextUnitOfWork !== null && !shouldYield()) {
      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
    }

    if (enableProfilerTimer) {
      // If we didn't finish, pause the "actual" render timer.
      // We'll restart it when we resume work.
      pauseActualRenderTimerIfRunning();
    }
  }
}

function renderRoot(root, expirationTime, isAsync) {
  !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  isWorking = true;

  // Check if we're starting from a fresh stack, or if we're resuming from
  // previously yielded work.
  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {
    // Reset the stack and start working from the root.
    resetStack();
    nextRoot = root;
    nextRenderExpirationTime = expirationTime;
    nextLatestTimeoutMs = -1;
    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);
    root.pendingCommitExpirationTime = NoWork;
  }

  var didFatal = false;

  nextRenderIsExpired = !isAsync || nextRenderExpirationTime <= mostRecentCurrentTime;

  startWorkLoopTimer(nextUnitOfWork);

  do {
    try {
      workLoop(isAsync);
    } catch (thrownValue) {
      if (enableProfilerTimer) {
        // Stop "base" render timer in the event of an error.
        stopBaseRenderTimerIfRunning();
      }

      if (nextUnitOfWork === null) {
        // This is a fatal error.
        didFatal = true;
        onUncaughtError(thrownValue);
      } else {
        {
          // Reset global debug state
          // We assume this is defined in DEV
          resetCurrentlyProcessingQueue();
        }

        var failedUnitOfWork = nextUnitOfWork;
        if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
          replayUnitOfWork(failedUnitOfWork, thrownValue, isAsync);
        }

        // TODO: we already know this isn't true in some cases.
        // At least this shows a nicer error message until we figure out the cause.
        // https://github.com/facebook/react/issues/12449#issuecomment-386727431
        !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;

        var sourceFiber = nextUnitOfWork;
        var returnFiber = sourceFiber.return;
        if (returnFiber === null) {
          // This is the root. The root could capture its own errors. However,
          // we don't know if it errors before or after we pushed the host
          // context. This information is needed to avoid a stack mismatch.
          // Because we're not sure, treat this as a fatal error. We could track
          // which phase it fails in, but doesn't seem worth it. At least
          // for now.
          didFatal = true;
          onUncaughtError(thrownValue);
          break;
        }
        throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderIsExpired, nextRenderExpirationTime, mostRecentCurrentTimeMs);
        nextUnitOfWork = completeUnitOfWork(sourceFiber);
      }
    }
    break;
  } while (true);

  // We're done performing work. Time to clean up.
  var didCompleteRoot = false;
  isWorking = false;

  // Yield back to main thread.
  if (didFatal) {
    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
    interruptedBy = null;
    // There was a fatal error.
    {
      resetStackAfterFatalErrorInDev();
    }
    return null;
  } else if (nextUnitOfWork === null) {
    // We reached the root.
    if (isRootReadyForCommit) {
      didCompleteRoot = true;
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
      // The root successfully completed. It's ready for commit.
      root.pendingCommitExpirationTime = expirationTime;
      var finishedWork = root.current.alternate;
      return finishedWork;
    } else {
      // The root did not complete.
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
      !!nextRenderIsExpired ? invariant(false, 'Expired work should have completed. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      markSuspendedPriorityLevel(root, expirationTime);
      if (nextLatestTimeoutMs >= 0) {
        setTimeout(function () {
          retrySuspendedRoot(root, expirationTime);
        }, nextLatestTimeoutMs);
      }
      var firstUnblockedExpirationTime = findNextPendingPriorityLevel(root);
      onBlock(firstUnblockedExpirationTime);
      return null;
    }
  } else {
    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
    interruptedBy = null;
    // There's more work to do, but we ran out of time. Yield back to
    // the renderer.
    return null;
  }
}

function dispatch(sourceFiber, value, expirationTime) {
  !(!isWorking || isCommitting$1) ? invariant(false, 'dispatch: Cannot dispatch during the render phase.') : void 0;

  var fiber = sourceFiber.return;
  while (fiber !== null) {
    switch (fiber.tag) {
      case ClassComponent:
        var ctor = fiber.type;
        var instance = fiber.stateNode;
        if (typeof ctor.getDerivedStateFromCatch === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
          var errorInfo = createCapturedValue(value, sourceFiber);
          var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);
          enqueueUpdate(fiber, update, expirationTime);
          scheduleWork$1(fiber, expirationTime);
          return;
        }
        break;
      case HostRoot:
        {
          var _errorInfo = createCapturedValue(value, sourceFiber);
          var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);
          enqueueUpdate(fiber, _update, expirationTime);
          scheduleWork$1(fiber, expirationTime);
          return;
        }
    }
    fiber = fiber.return;
  }

  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    var rootFiber = sourceFiber;
    var _errorInfo2 = createCapturedValue(value, rootFiber);
    var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);
    enqueueUpdate(rootFiber, _update2, expirationTime);
    scheduleWork$1(rootFiber, expirationTime);
  }
}

function captureCommitPhaseError(fiber, error) {
  return dispatch(fiber, error, Sync);
}

function computeAsyncExpiration(currentTime) {
  // Given the current clock time, returns an expiration time. We use rounding
  // to batch like updates together.
  // Should complete within ~1000ms. 1200ms max.
  var expirationMs = 5000;
  var bucketSizeMs = 250;
  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
}

function computeInteractiveExpiration(currentTime) {
  var expirationMs = void 0;
  // We intentionally set a higher expiration time for interactive updates in
  // dev than in production.
  // If the main thread is being blocked so long that you hit the expiration,
  // it's a problem that could be solved with better scheduling.
  // People will be more likely to notice this and fix it with the long
  // expiration time in development.
  // In production we opt for better UX at the risk of masking scheduling
  // problems, by expiring fast.
  {
    // Should complete within ~500ms. 600ms max.
    expirationMs = 500;
  }
  var bucketSizeMs = 100;
  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
}

// Creates a unique async expiration time.
function computeUniqueAsyncExpiration() {
  var currentTime = recalculateCurrentTime();
  var result = computeAsyncExpiration(currentTime);
  if (result <= lastUniqueAsyncExpiration) {
    // Since we assume the current time monotonically increases, we only hit
    // this branch when computeUniqueAsyncExpiration is fired multiple times
    // within a 200ms window (or whatever the async bucket size is).
    result = lastUniqueAsyncExpiration + 1;
  }
  lastUniqueAsyncExpiration = result;
  return lastUniqueAsyncExpiration;
}

function computeExpirationForFiber(currentTime, fiber) {
  var expirationTime = void 0;
  if (expirationContext !== NoWork) {
    // An explicit expiration context was set;
    expirationTime = expirationContext;
  } else if (isWorking) {
    if (isCommitting$1) {
      // Updates that occur during the commit phase should have sync priority
      // by default.
      expirationTime = Sync;
    } else {
      // Updates during the render phase should expire at the same time as
      // the work that is being rendered.
      expirationTime = nextRenderExpirationTime;
    }
  } else {
    // No explicit expiration context was set, and we're not currently
    // performing work. Calculate a new expiration time.
    if (fiber.mode & AsyncMode) {
      if (isBatchingInteractiveUpdates) {
        // This is an interactive update
        expirationTime = computeInteractiveExpiration(currentTime);
      } else {
        // This is an async update
        expirationTime = computeAsyncExpiration(currentTime);
      }
    } else {
      // This is a sync update
      expirationTime = Sync;
    }
  }
  if (isBatchingInteractiveUpdates) {
    // This is an interactive update. Keep track of the lowest pending
    // interactive expiration time. This allows us to synchronously flush
    // all interactive updates when needed.
    if (lowestPendingInteractiveExpirationTime === NoWork || expirationTime > lowestPendingInteractiveExpirationTime) {
      lowestPendingInteractiveExpirationTime = expirationTime;
    }
  }
  return expirationTime;
}

// TODO: Rename this to scheduleTimeout or something
function suspendRoot(root, thenable, timeoutMs, suspendedTime) {
  // Schedule the timeout.
  if (timeoutMs >= 0 && nextLatestTimeoutMs < timeoutMs) {
    nextLatestTimeoutMs = timeoutMs;
  }
}

function retrySuspendedRoot(root, suspendedTime) {
  markPingedPriorityLevel(root, suspendedTime);
  var retryTime = findNextPendingPriorityLevel(root);
  if (retryTime !== NoWork) {
    requestRetry(root, retryTime);
  }
}

function scheduleWork$1(fiber, expirationTime) {
  recordScheduleUpdate();

  {
    if (fiber.tag === ClassComponent) {
      var instance = fiber.stateNode;
      warnAboutInvalidUpdates(instance);
    }
  }

  var node = fiber;
  while (node !== null) {
    // Walk the parent path to the root and update each node's
    // expiration time.
    if (node.expirationTime === NoWork || node.expirationTime > expirationTime) {
      node.expirationTime = expirationTime;
    }
    if (node.alternate !== null) {
      if (node.alternate.expirationTime === NoWork || node.alternate.expirationTime > expirationTime) {
        node.alternate.expirationTime = expirationTime;
      }
    }
    if (node.return === null) {
      if (node.tag === HostRoot) {
        var root = node.stateNode;
        if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime < nextRenderExpirationTime) {
          // This is an interruption. (Used for performance tracking.)
          interruptedBy = fiber;
          resetStack();
        }
        markPendingPriorityLevel(root, expirationTime);
        var nextExpirationTimeToWorkOn = findNextPendingPriorityLevel(root);
        if (
        // If we're in the render phase, we don't need to schedule this root
        // for an update, because we'll do it before we exit...
        !isWorking || isCommitting$1 ||
        // ...unless this is a different root than the one we're rendering.
        nextRoot !== root) {
          requestWork(root, nextExpirationTimeToWorkOn);
        }
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
          invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
        }
      } else {
        {
          if (fiber.tag === ClassComponent) {
            warnAboutUpdateOnUnmounted(fiber);
          }
        }
        return;
      }
    }
    node = node.return;
  }
}

function recalculateCurrentTime() {
  // Subtract initial time so it fits inside 32bits
  mostRecentCurrentTimeMs = now() - originalStartTimeMs;
  mostRecentCurrentTime = msToExpirationTime(mostRecentCurrentTimeMs);
  return mostRecentCurrentTime;
}

function deferredUpdates(fn) {
  var previousExpirationContext = expirationContext;
  var currentTime = recalculateCurrentTime();
  expirationContext = computeAsyncExpiration(currentTime);
  try {
    return fn();
  } finally {
    expirationContext = previousExpirationContext;
  }
}
function syncUpdates(fn, a, b, c, d) {
  var previousExpirationContext = expirationContext;
  expirationContext = Sync;
  try {
    return fn(a, b, c, d);
  } finally {
    expirationContext = previousExpirationContext;
  }
}

// TODO: Everything below this is written as if it has been lifted to the
// renderers. I'll do this in a follow-up.

// Linked-list of roots
var firstScheduledRoot = null;
var lastScheduledRoot = null;

var callbackExpirationTime = NoWork;
var callbackID = -1;
var isRendering = false;
var nextFlushedRoot = null;
var nextFlushedExpirationTime = NoWork;
var lowestPendingInteractiveExpirationTime = NoWork;
var deadlineDidExpire = false;
var hasUnhandledError = false;
var unhandledError = null;
var deadline = null;

var isBatchingUpdates = false;
var isUnbatchingUpdates = false;
var isBatchingInteractiveUpdates = false;

var completedBatches = null;

// Use these to prevent an infinite loop of nested updates
var NESTED_UPDATE_LIMIT = 1000;
var nestedUpdateCount = 0;

var timeHeuristicForUnitOfWork = 1;

function scheduleCallbackWithExpiration(expirationTime) {
  if (callbackExpirationTime !== NoWork) {
    // A callback is already scheduled. Check its expiration time (timeout).
    if (expirationTime > callbackExpirationTime) {
      // Existing callback has sufficient timeout. Exit.
      return;
    } else {
      // Existing callback has insufficient timeout. Cancel and schedule a
      // new one.
      cancelDeferredCallback(callbackID);
    }
    // The request callback timer is already running. Don't start a new one.
  } else {
    startRequestCallbackTimer();
  }

  // Compute a timeout for the given expiration time.
  var currentMs = now() - originalStartTimeMs;
  var expirationMs = expirationTimeToMs(expirationTime);
  var timeout = expirationMs - currentMs;

  callbackExpirationTime = expirationTime;
  callbackID = scheduleDeferredCallback(performAsyncWork, { timeout: timeout });
}

function requestRetry(root, expirationTime) {
  if (root.remainingExpirationTime === NoWork || root.remainingExpirationTime < expirationTime) {
    // For a retry, only update the remaining expiration time if it has a
    // *lower priority* than the existing value. This is because, on a retry,
    // we should attempt to coalesce as much as possible.
    requestWork(root, expirationTime);
  }
}

// requestWork is called by the scheduler whenever a root receives an update.
// It's up to the renderer to call renderRoot at some point in the future.
function requestWork(root, expirationTime) {
  addRootToSchedule(root, expirationTime);

  if (isRendering) {
    // Prevent reentrancy. Remaining work will be scheduled at the end of
    // the currently rendering batch.
    return;
  }

  if (isBatchingUpdates) {
    // Flush work at the end of the batch.
    if (isUnbatchingUpdates) {
      // ...unless we're inside unbatchedUpdates, in which case we should
      // flush it now.
      nextFlushedRoot = root;
      nextFlushedExpirationTime = Sync;
      performWorkOnRoot(root, Sync, false);
    }
    return;
  }

  // TODO: Get rid of Sync and use current time?
  if (expirationTime === Sync) {
    performSyncWork();
  } else {
    scheduleCallbackWithExpiration(expirationTime);
  }
}

function addRootToSchedule(root, expirationTime) {
  // Add the root to the schedule.
  // Check if this root is already part of the schedule.
  if (root.nextScheduledRoot === null) {
    // This root is not already scheduled. Add it.
    root.remainingExpirationTime = expirationTime;
    if (lastScheduledRoot === null) {
      firstScheduledRoot = lastScheduledRoot = root;
      root.nextScheduledRoot = root;
    } else {
      lastScheduledRoot.nextScheduledRoot = root;
      lastScheduledRoot = root;
      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
    }
  } else {
    // This root is already scheduled, but its priority may have increased.
    var remainingExpirationTime = root.remainingExpirationTime;
    if (remainingExpirationTime === NoWork || expirationTime < remainingExpirationTime) {
      // Update the priority.
      root.remainingExpirationTime = expirationTime;
    }
  }
}

function findHighestPriorityRoot() {
  var highestPriorityWork = NoWork;
  var highestPriorityRoot = null;
  if (lastScheduledRoot !== null) {
    var previousScheduledRoot = lastScheduledRoot;
    var root = firstScheduledRoot;
    while (root !== null) {
      var remainingExpirationTime = root.remainingExpirationTime;
      if (remainingExpirationTime === NoWork) {
        // This root no longer has work. Remove it from the scheduler.

        // TODO: This check is redudant, but Flow is confused by the branch
        // below where we set lastScheduledRoot to null, even though we break
        // from the loop right after.
        !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        if (root === root.nextScheduledRoot) {
          // This is the only root in the list.
          root.nextScheduledRoot = null;
          firstScheduledRoot = lastScheduledRoot = null;
          break;
        } else if (root === firstScheduledRoot) {
          // This is the first root in the list.
          var next = root.nextScheduledRoot;
          firstScheduledRoot = next;
          lastScheduledRoot.nextScheduledRoot = next;
          root.nextScheduledRoot = null;
        } else if (root === lastScheduledRoot) {
          // This is the last root in the list.
          lastScheduledRoot = previousScheduledRoot;
          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
          root.nextScheduledRoot = null;
          break;
        } else {
          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
          root.nextScheduledRoot = null;
        }
        root = previousScheduledRoot.nextScheduledRoot;
      } else {
        if (highestPriorityWork === NoWork || remainingExpirationTime < highestPriorityWork) {
          // Update the priority, if it's higher
          highestPriorityWork = remainingExpirationTime;
          highestPriorityRoot = root;
        }
        if (root === lastScheduledRoot) {
          break;
        }
        previousScheduledRoot = root;
        root = root.nextScheduledRoot;
      }
    }
  }

  // If the next root is the same as the previous root, this is a nested
  // update. To prevent an infinite loop, increment the nested update count.
  var previousFlushedRoot = nextFlushedRoot;
  if (previousFlushedRoot !== null && previousFlushedRoot === highestPriorityRoot && highestPriorityWork === Sync) {
    nestedUpdateCount++;
  } else {
    // Reset whenever we switch roots.
    nestedUpdateCount = 0;
  }
  nextFlushedRoot = highestPriorityRoot;
  nextFlushedExpirationTime = highestPriorityWork;
}

function performAsyncWork(dl) {
  performWork(NoWork, true, dl);
}

function performSyncWork() {
  performWork(Sync, false, null);
}

function performWork(minExpirationTime, isAsync, dl) {
  deadline = dl;

  // Keep working on roots until there's no more work, or until the we reach
  // the deadline.
  findHighestPriorityRoot();

  if (enableProfilerTimer) {
    resumeActualRenderTimerIfPaused();
  }

  if (enableUserTimingAPI && deadline !== null) {
    var didExpire = nextFlushedExpirationTime < recalculateCurrentTime();
    var timeout = expirationTimeToMs(nextFlushedExpirationTime);
    stopRequestCallbackTimer(didExpire, timeout);
  }

  if (isAsync) {
    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime) && (!deadlineDidExpire || recalculateCurrentTime() >= nextFlushedExpirationTime)) {
      recalculateCurrentTime();
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, !deadlineDidExpire);
      findHighestPriorityRoot();
    }
  } else {
    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime)) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);
      findHighestPriorityRoot();
    }
  }

  // We're done flushing work. Either we ran out of time in this callback,
  // or there's no more work left with sufficient priority.

  // If we're inside a callback, set this to false since we just completed it.
  if (deadline !== null) {
    callbackExpirationTime = NoWork;
    callbackID = -1;
  }
  // If there's work left over, schedule a new callback.
  if (nextFlushedExpirationTime !== NoWork) {
    scheduleCallbackWithExpiration(nextFlushedExpirationTime);
  }

  // Clean-up.
  deadline = null;
  deadlineDidExpire = false;

  finishRendering();
}

function flushRoot(root, expirationTime) {
  !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;
  // Perform work on root as if the given expiration time is the current time.
  // This has the effect of synchronously flushing all work up to and
  // including the given time.
  nextFlushedRoot = root;
  nextFlushedExpirationTime = expirationTime;
  performWorkOnRoot(root, expirationTime, false);
  // Flush any sync work that was scheduled by lifecycles
  performSyncWork();
  finishRendering();
}

function finishRendering() {
  nestedUpdateCount = 0;

  if (completedBatches !== null) {
    var batches = completedBatches;
    completedBatches = null;
    for (var i = 0; i < batches.length; i++) {
      var batch = batches[i];
      try {
        batch._onComplete();
      } catch (error) {
        if (!hasUnhandledError) {
          hasUnhandledError = true;
          unhandledError = error;
        }
      }
    }
  }

  if (hasUnhandledError) {
    var error = unhandledError;
    unhandledError = null;
    hasUnhandledError = false;
    throw error;
  }
}

function performWorkOnRoot(root, expirationTime, isAsync) {
  !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  isRendering = true;

  // Check if this is async work or sync/expired work.
  if (!isAsync) {
    // Flush sync work.
    var finishedWork = root.finishedWork;
    if (finishedWork !== null) {
      // This root is already complete. We can commit it.
      completeRoot(root, finishedWork, expirationTime);
    } else {
      root.finishedWork = null;
      finishedWork = renderRoot(root, expirationTime, false);
      if (finishedWork !== null) {
        // We've completed the root. Commit it.
        completeRoot(root, finishedWork, expirationTime);
      }
    }
  } else {
    // Flush async work.
    var _finishedWork = root.finishedWork;
    if (_finishedWork !== null) {
      // This root is already complete. We can commit it.
      completeRoot(root, _finishedWork, expirationTime);
    } else {
      root.finishedWork = null;
      _finishedWork = renderRoot(root, expirationTime, true);
      if (_finishedWork !== null) {
        // We've completed the root. Check the deadline one more time
        // before committing.
        if (!shouldYield()) {
          // Still time left. Commit the root.
          completeRoot(root, _finishedWork, expirationTime);
        } else {
          // There's no time left. Mark this root as complete. We'll come
          // back and commit it later.
          root.finishedWork = _finishedWork;

          if (enableProfilerTimer) {
            // If we didn't finish, pause the "actual" render timer.
            // We'll restart it when we resume work.
            pauseActualRenderTimerIfRunning();
          }
        }
      }
    }
  }

  isRendering = false;
}

function completeRoot(root, finishedWork, expirationTime) {
  // Check if there's a batch that matches this expiration time.
  var firstBatch = root.firstBatch;
  if (firstBatch !== null && firstBatch._expirationTime <= expirationTime) {
    if (completedBatches === null) {
      completedBatches = [firstBatch];
    } else {
      completedBatches.push(firstBatch);
    }
    if (firstBatch._defer) {
      // This root is blocked from committing by a batch. Unschedule it until
      // we receive another update.
      root.finishedWork = finishedWork;
      root.remainingExpirationTime = NoWork;
      return;
    }
  }

  // Commit the root.
  root.finishedWork = null;
  root.remainingExpirationTime = commitRoot(finishedWork);
}

// When working on async work, the reconciler asks the renderer if it should
// yield execution. For DOM, we implement this with requestIdleCallback.
function shouldYield() {
  if (deadline === null) {
    return false;
  }
  if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
    // Disregard deadline.didTimeout. Only expired work should be flushed
    // during a timeout. This path is only hit for non-expired work.
    return false;
  }
  deadlineDidExpire = true;
  return true;
}

function onUncaughtError(error) {
  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  // Unschedule this root so we don't work on it again until there's
  // another update.
  nextFlushedRoot.remainingExpirationTime = NoWork;
  if (!hasUnhandledError) {
    hasUnhandledError = true;
    unhandledError = error;
  }
}

function onBlock(remainingExpirationTime) {
  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  // This root was blocked. Unschedule it until there's another update.
  nextFlushedRoot.remainingExpirationTime = remainingExpirationTime;
}

// TODO: Batching should be implemented at the renderer level, not inside
// the reconciler.
function batchedUpdates$1(fn, a) {
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    return fn(a);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performSyncWork();
    }
  }
}

// TODO: Batching should be implemented at the renderer level, not inside
// the reconciler.
function unbatchedUpdates(fn, a) {
  if (isBatchingUpdates && !isUnbatchingUpdates) {
    isUnbatchingUpdates = true;
    try {
      return fn(a);
    } finally {
      isUnbatchingUpdates = false;
    }
  }
  return fn(a);
}

// TODO: Batching should be implemented at the renderer level, not within
// the reconciler.
function flushSync(fn, a) {
  !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    return syncUpdates(fn, a);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    performSyncWork();
  }
}

function interactiveUpdates$1(fn, a, b) {
  if (isBatchingInteractiveUpdates) {
    return fn(a, b);
  }
  // If there are any pending interactive updates, synchronously flush them.
  // This needs to happen before we read any handlers, because the effect of
  // the previous event may influence which handlers are called during
  // this event.
  if (!isBatchingUpdates && !isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
    // Synchronously flush pending interactive updates.
    performWork(lowestPendingInteractiveExpirationTime, false, null);
    lowestPendingInteractiveExpirationTime = NoWork;
  }
  var previousIsBatchingInteractiveUpdates = isBatchingInteractiveUpdates;
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingInteractiveUpdates = true;
  isBatchingUpdates = true;
  try {
    return fn(a, b);
  } finally {
    isBatchingInteractiveUpdates = previousIsBatchingInteractiveUpdates;
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performSyncWork();
    }
  }
}

function flushInteractiveUpdates$1() {
  if (!isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
    // Synchronously flush pending interactive updates.
    performWork(lowestPendingInteractiveExpirationTime, false, null);
    lowestPendingInteractiveExpirationTime = NoWork;
  }
}

function flushControlled(fn) {
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    syncUpdates(fn);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performWork(Sync, false, null);
    }
  }
}

// 0 is PROD, 1 is DEV.
// Might add PROFILE later.


var didWarnAboutNestedUpdates = void 0;

{
  didWarnAboutNestedUpdates = false;
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);
  return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
}

function scheduleRootUpdate(current, element, expirationTime, callback) {
  {
    if (ReactDebugCurrentFiber.phase === 'render' && ReactDebugCurrentFiber.current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;
      warning(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(ReactDebugCurrentFiber.current) || 'Unknown');
    }
  }

  var update = createUpdate(expirationTime);
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: element };

  callback = callback === undefined ? null : callback;
  if (callback !== null) {
    !(typeof callback === 'function') ? warning(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
    update.callback = callback;
  }
  enqueueUpdate(current, update, expirationTime);

  scheduleWork$1(current, expirationTime);
  return expirationTime;
}

function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {
  // TODO: If this is a nested container, this won't be the root.
  var current = container.current;

  {
    if (ReactFiberInstrumentation_1.debugTool) {
      if (current.alternate === null) {
        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
      } else if (element === null) {
        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
      } else {
        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
      }
    }
  }

  var context = getContextForSubtree(parentComponent);
  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  return scheduleRootUpdate(current, element, expirationTime, callback);
}

function findHostInstance(component) {
  var fiber = get(component);
  if (fiber === undefined) {
    if (typeof component.render === 'function') {
      invariant(false, 'Unable to find node on an unmounted component.');
    } else {
      invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
    }
  }
  var hostFiber = findCurrentHostFiber(fiber);
  if (hostFiber === null) {
    return null;
  }
  return hostFiber.stateNode;
}

function createContainer(containerInfo, isAsync, hydrate) {
  return createFiberRoot(containerInfo, isAsync, hydrate);
}

function updateContainer(element, container, parentComponent, callback) {
  var current = container.current;
  var currentTime = recalculateCurrentTime();
  var expirationTime = computeExpirationForFiber(currentTime, current);
  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);
}

function getPublicRootInstance(container) {
  var containerFiber = container.current;
  if (!containerFiber.child) {
    return null;
  }
  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);
    default:
      return containerFiber.child.stateNode;
  }
}

function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
  if (hostFiber === null) {
    return null;
  }
  return hostFiber.stateNode;
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;

  return injectInternals(_assign({}, devToolsConfig, {
    findHostInstanceByFiber: function (fiber) {
      var hostFiber = findCurrentHostFiber(fiber);
      if (hostFiber === null) {
        return null;
      }
      return hostFiber.stateNode;
    },
    findFiberByHostInstance: function (instance) {
      if (!findFiberByHostInstance) {
        // Might not be implemented by the renderer.
        return null;
      }
      return findFiberByHostInstance(instance);
    }
  }));
}

// This file intentionally does *not* have the Flow annotation.
// Don't add it. See `./inline-typed.js` for an explanation.



var DOMRenderer = Object.freeze({
	updateContainerAtExpirationTime: updateContainerAtExpirationTime,
	createContainer: createContainer,
	updateContainer: updateContainer,
	flushRoot: flushRoot,
	requestWork: requestWork,
	computeUniqueAsyncExpiration: computeUniqueAsyncExpiration,
	batchedUpdates: batchedUpdates$1,
	unbatchedUpdates: unbatchedUpdates,
	deferredUpdates: deferredUpdates,
	syncUpdates: syncUpdates,
	interactiveUpdates: interactiveUpdates$1,
	flushInteractiveUpdates: flushInteractiveUpdates$1,
	flushControlled: flushControlled,
	flushSync: flushSync,
	getPublicRootInstance: getPublicRootInstance,
	findHostInstance: findHostInstance,
	findHostInstanceWithNoPortals: findHostInstanceWithNoPortals,
	injectIntoDevTools: injectIntoDevTools
});

function createPortal$1(children, containerInfo,
// TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.4.0';

// TODO: This type is shared between the reconciler and ReactDOM, but will
// eventually be lifted out to the renderer.
var topLevelUpdateWarnings = void 0;
var warnOnInvalidCallback = void 0;
var didWarnAboutUnstableCreatePortal = false;

{
  if (typeof Map !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    warning(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
  }

  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
      if (hostInstance) {
        !(hostInstance.parentNode === container) ? warning(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warning(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warning(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
  };

  warnOnInvalidCallback = function (callback, callerName) {
    !(callback === null || typeof callback === 'function') ? warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
  };
}

injection$2.injectFiberControlledHostComponent(ReactDOMFiberComponent);

function ReactBatch(root) {
  var expirationTime = computeUniqueAsyncExpiration();
  this._expirationTime = expirationTime;
  this._root = root;
  this._next = null;
  this._callbacks = null;
  this._didComplete = false;
  this._hasChildren = false;
  this._children = null;
  this._defer = true;
}
ReactBatch.prototype.render = function (children) {
  !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;
  this._hasChildren = true;
  this._children = children;
  var internalRoot = this._root._internalRoot;
  var expirationTime = this._expirationTime;
  var work = new ReactWork();
  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);
  return work;
};
ReactBatch.prototype.then = function (onComplete) {
  if (this._didComplete) {
    onComplete();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onComplete);
};
ReactBatch.prototype.commit = function () {
  var internalRoot = this._root._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;

  if (!this._hasChildren) {
    // This batch is empty. Return.
    this._next = null;
    this._defer = false;
    return;
  }

  var expirationTime = this._expirationTime;

  // Ensure this is the first batch in the list.
  if (firstBatch !== this) {
    // This batch is not the earliest batch. We need to move it to the front.
    // Update its expiration time to be the expiration time of the earliest
    // batch, so that we can flush it without flushing the other batches.
    if (this._hasChildren) {
      expirationTime = this._expirationTime = firstBatch._expirationTime;
      // Rendering this batch again ensures its children will be the final state
      // when we flush (updates are processed in insertion order: last
      // update wins).
      // TODO: This forces a restart. Should we print a warning?
      this.render(this._children);
    }

    // Remove the batch from the list.
    var previous = null;
    var batch = firstBatch;
    while (batch !== this) {
      previous = batch;
      batch = batch._next;
    }
    !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
    previous._next = batch._next;

    // Add it to the front.
    this._next = firstBatch;
    firstBatch = internalRoot.firstBatch = this;
  }

  // Synchronously flush all the work up to this batch's expiration time.
  this._defer = false;
  flushRoot(internalRoot, expirationTime);

  // Pop the batch from the list.
  var next = this._next;
  this._next = null;
  firstBatch = internalRoot.firstBatch = next;

  // Append the next earliest batch's children to the update queue.
  if (firstBatch !== null && firstBatch._hasChildren) {
    firstBatch.render(firstBatch._children);
  }
};
ReactBatch.prototype._onComplete = function () {
  if (this._didComplete) {
    return;
  }
  this._didComplete = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback = callbacks[i];
    _callback();
  }
};

function ReactWork() {
  this._callbacks = null;
  this._didCommit = false;
  // TODO: Avoid need to bind by replacing callbacks in the update queue with
  // list of Work objects.
  this._onCommit = this._onCommit.bind(this);
}
ReactWork.prototype.then = function (onCommit) {
  if (this._didCommit) {
    onCommit();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onCommit);
};
ReactWork.prototype._onCommit = function () {
  if (this._didCommit) {
    return;
  }
  this._didCommit = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback2 = callbacks[i];
    !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;
    _callback2();
  }
};

function ReactRoot(container, isAsync, hydrate) {
  var root = createContainer(container, isAsync, hydrate);
  this._internalRoot = root;
}
ReactRoot.prototype.render = function (children, callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(children, root, null, work._onCommit);
  return work;
};
ReactRoot.prototype.unmount = function (callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(null, root, null, work._onCommit);
  return work;
};
ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(children, root, parentComponent, work._onCommit);
  return work;
};
ReactRoot.prototype.createBatch = function () {
  var batch = new ReactBatch(this);
  var expirationTime = batch._expirationTime;

  var internalRoot = this._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  if (firstBatch === null) {
    internalRoot.firstBatch = batch;
    batch._next = null;
  } else {
    // Insert sorted by expiration time then insertion order
    var insertAfter = null;
    var insertBefore = firstBatch;
    while (insertBefore !== null && insertBefore._expirationTime <= expirationTime) {
      insertAfter = insertBefore;
      insertBefore = insertBefore._next;
    }
    batch._next = insertBefore;
    if (insertAfter !== null) {
      insertAfter._next = batch;
    }
  }

  return batch;
};

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

injection$3.injectRenderer(DOMRenderer);

var warnedAboutHydrateAPI = false;

function legacyCreateRootFromDOMContainer(container, forceHydrate) {
  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
  // First clear any existing content.
  if (!shouldHydrate) {
    var warned = false;
    var rootSibling = void 0;
    while (rootSibling = container.lastChild) {
      {
        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
          warned = true;
          warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
        }
      }
      container.removeChild(rootSibling);
    }
  }
  {
    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
      warnedAboutHydrateAPI = true;
      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
    }
  }
  // Legacy roots are not async by default.
  var isAsync = false;
  return new ReactRoot(container, isAsync, shouldHydrate);
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  // TODO: Ensure all entry points contain this check
  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;

  {
    topLevelUpdateWarnings(container);
  }

  // TODO: Without `any` type, Flow says "Property cannot be accessed on any
  // member of intersection type." Whyyyyyy.
  var root = container._reactRootContainer;
  if (!root) {
    // Initial mount
    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
    if (typeof callback === 'function') {
      var originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(root._internalRoot);
        originalCallback.call(instance);
      };
    }
    // Initial mount should not be batched.
    unbatchedUpdates(function () {
      if (parentComponent != null) {
        root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
      } else {
        root.render(children, callback);
      }
    });
  } else {
    if (typeof callback === 'function') {
      var _originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(root._internalRoot);
        _originalCallback.call(instance);
      };
    }
    // Update
    if (parentComponent != null) {
      root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
    } else {
      root.render(children, callback);
    }
  }
  return getPublicRootInstance(root._internalRoot);
}

function createPortal(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
  // TODO: pass ReactDOM portal implementation as third argument
  return createPortal$1(children, container, null, key);
}

var ReactDOM = {
  createPortal: createPortal,

  findDOMNode: function (componentOrElement) {
    {
      var owner = ReactCurrentOwner.current;
      if (owner !== null && owner.stateNode !== null) {
        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
        !warnedAboutRefsInRender ? warning(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner) || 'A component') : void 0;
        owner.stateNode._warnedAboutRefsInRender = true;
      }
    }
    if (componentOrElement == null) {
      return null;
    }
    if (componentOrElement.nodeType === ELEMENT_NODE) {
      return componentOrElement;
    }

    return findHostInstance(componentOrElement);
  },
  hydrate: function (element, container, callback) {
    // TODO: throw or warn if we couldn't hydrate?
    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
  },
  render: function (element, container, callback) {
    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
  },
  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
  },
  unmountComponentAtNode: function (container) {
    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

    if (container._reactRootContainer) {
      {
        var rootEl = getReactRootElementInContainer(container);
        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
        !!renderedByDifferentReact ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
      }

      // Unmount should not be batched.
      unbatchedUpdates(function () {
        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
          container._reactRootContainer = null;
        });
      });
      // If you call unmountComponentAtNode twice in quick succession, you'll
      // get `true` twice. That's probably fine?
      return true;
    } else {
      {
        var _rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

        // Check if the container itself is a React root node.
        var isContainerReactRoot = container.nodeType === 1 && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

        !!hasNonRootReactChild ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
  },


  // Temporary alias since we already shipped React 16 RC with it.
  // TODO: remove in React 17.
  unstable_createPortal: function () {
    if (!didWarnAboutUnstableCreatePortal) {
      didWarnAboutUnstableCreatePortal = true;
      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
    }
    return createPortal.apply(undefined, arguments);
  },


  unstable_batchedUpdates: batchedUpdates$1,

  unstable_deferredUpdates: deferredUpdates,

  flushSync: flushSync,

  unstable_flushControlled: flushControlled,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    // For TapEventPlugin which is popular in open source
    EventPluginHub: EventPluginHub,
    // Used by test-utils
    EventPluginRegistry: EventPluginRegistry,
    EventPropagators: EventPropagators,
    ReactControlledComponent: ReactControlledComponent,
    ReactDOMComponentTree: ReactDOMComponentTree,
    ReactDOMEventListener: ReactDOMEventListener
  }
};

ReactDOM.unstable_createRoot = function createRoot(container, options) {
  var hydrate = options != null && options.hydrate === true;
  return new ReactRoot(container, true, hydrate);
};

var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType: 1,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol;
      // Don't warn in exotic cases like chrome-extension://.
      if (/^(https?|file):$/.test(protocol)) {
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}



var ReactDOM$2 = Object.freeze({
	default: ReactDOM
});

var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var reactDom = ReactDOM$3.default ? ReactDOM$3.default : ReactDOM$3;

module.exports = reactDom;
  })();
}

}).call(this,require('_process'))
},{"_process":1327,"fbjs/lib/ExecutionEnvironment":1193,"fbjs/lib/camelizeStyleName":1195,"fbjs/lib/containsNode":1196,"fbjs/lib/emptyFunction":1197,"fbjs/lib/emptyObject":1198,"fbjs/lib/getActiveElement":1199,"fbjs/lib/hyphenateStyleName":1201,"fbjs/lib/invariant":1202,"fbjs/lib/shallowEqual":1205,"fbjs/lib/warning":1206,"object-assign":1309,"prop-types/checkPropTypes":1328,"react":1347}],1343:[function(require,module,exports){
/** @license React v16.4.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
'use strict';var aa=require("fbjs/lib/invariant"),ca=require("react"),m=require("fbjs/lib/ExecutionEnvironment"),p=require("object-assign"),v=require("fbjs/lib/emptyFunction"),da=require("fbjs/lib/getActiveElement"),ea=require("fbjs/lib/shallowEqual"),fa=require("fbjs/lib/containsNode"),ha=require("fbjs/lib/emptyObject");
function A(a){for(var b=arguments.length-1,c="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=0;d<b;d++)c+="&args[]="+encodeURIComponent(arguments[d+1]);aa(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",c)}ca?void 0:A("227");
function ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}
var B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=
B._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A("198")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};
function na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A("96",a);if(!oa[c]){b.extractEvents?void 0:A("97",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A("99",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A("98",d,a)}}}}
function qa(a,b,c){ra[a]?A("100",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A("101"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A("102",c):void 0,ma[c]=d,b=!0)}b&&na()}
var va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||"unknown-event";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}
function Aa(a,b){null==b?A("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;
function Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};
function Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?A("231",b,typeof c):void 0;
return c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A("95"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C="__reactInternalInstance$"+La,Ma="__reactEventHandlers$"+La;
function Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A("33")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};
function F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}
function Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}
function Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],"bubbled",a);for(a=c.length;0<a--;)Va(c[a],"captured",b)}
var $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;c["ms"+a]="MS"+b;c["O"+a]="o"+b.toLowerCase();return c}
var bb={animationend:ab("Animation","AnimationEnd"),animationiteration:ab("Animation","AnimationIteration"),animationstart:ab("Animation","AnimationStart"),transitionend:ab("Transition","TransitionEnd")},cb={},db={};m.canUseDOM&&(db=document.createElement("div").style,"AnimationEvent"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),"TransitionEvent"in window||delete bb.transitionend.transition);
function eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb("animationend"),gb=eb("animationiteration"),hb=eb("animationstart"),ib=eb("transitionend"),jb="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),kb=null;
function lb(){!kb&&m.canUseDOM&&(kb="textContent"in document.documentElement?"textContent":"innerText");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return"value"in G._root?G._root.value:G._root[lb()]}
var ob="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
function H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}
p(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,
destructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);
function rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A("223");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&"CompositionEvent"in window,xb=null;m.canUseDOM&&"documentMode"in document&&(xb=document.documentMode);
var yb=m.canUseDOM&&"TextEvent"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Cb=!1;
function Db(a,b){switch(a){case "keyup":return-1!==vb.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function Eb(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case "compositionend":return Eb(b);case "keypress":if(32!==b.which)return null;Cb=!0;return Ab;case "textInput":return a=b.data,a===Ab&&Cb?null:a;default:return null}}
function Hb(a,b){if(Fb)return"compositionend"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return zb?null:b.data;default:return null}}
var Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case "compositionstart":e=Bb.compositionStart;break b;case "compositionend":e=Bb.compositionEnd;break b;case "compositionupdate":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):"keydown"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=
f:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&"function"===typeof Jb.restoreControlledState?void 0:A("194");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}
function Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}
var Xb={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!Xb[a.type]:"textarea"===b?!0:!1}function Zb(a){a=a.target||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}
function $b(a,b){if(!m.canUseDOM||b&&!("addEventListener"in document))return!1;a="on"+a;b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function bc(a){var b=ac(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=ac(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}
var ec=ca.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,I="function"===typeof Symbol&&Symbol.for,fc=I?Symbol.for("react.element"):60103,gc=I?Symbol.for("react.portal"):60106,hc=I?Symbol.for("react.fragment"):60107,ic=I?Symbol.for("react.strict_mode"):60108,jc=I?Symbol.for("react.profiler"):60114,mc=I?Symbol.for("react.provider"):60109,nc=I?Symbol.for("react.context"):60110,oc=I?Symbol.for("react.async_mode"):60111,pc=I?Symbol.for("react.forward_ref"):60112,qc=I?Symbol.for("react.timeout"):
60113,rc="function"===typeof Symbol&&Symbol.iterator;function sc(a){if(null===a||"undefined"===typeof a)return null;a=rc&&a[rc]||a["@@iterator"];return"function"===typeof a?a:null}
function tc(a){var b=a.type;if("function"===typeof b)return b.displayName||b.name;if("string"===typeof b)return b;switch(b){case oc:return"AsyncMode";case nc:return"Context.Consumer";case hc:return"ReactFragment";case gc:return"ReactPortal";case jc:return"Profiler("+a.pendingProps.id+")";case mc:return"Context.Provider";case ic:return"StrictMode";case qc:return"Timeout"}if("object"===typeof b&&null!==b)switch(b.$$typeof){case pc:return a=b.render.displayName||b.render.name||"",""!==a?"ForwardRef("+
a+")":"ForwardRef"}return null}function vc(a){var b="";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=tc(a);var f=null;c&&(f=tc(c));c=d;e="\n    in "+(e||"Unknown")+(c?" (at "+c.fileName.replace(/^.*[\\\/]/,"")+":"+c.lineNumber+")":f?" (created by "+f+")":"");break a;default:e=""}b+=e;a=a.return}while(a);return b}
var wc=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,xc={},yc={};function zc(a){if(yc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return yc[a]=!0;xc[a]=!0;return!1}
function Ac(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}function Bc(a,b,c,d){if(null===b||"undefined"===typeof b||Ac(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}
function J(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){K[a]=new J(a,0,!1,a,null)});
[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];K[b]=new J(b,1,!1,a[1],null)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){K[a]=new J(a,2,!1,a.toLowerCase(),null)});["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(a){K[a]=new J(a,2,!1,a,null)});
"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){K[a]=new J(a,3,!1,a.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach(function(a){K[a]=new J(a,3,!0,a.toLowerCase(),null)});["capture","download"].forEach(function(a){K[a]=new J(a,4,!1,a.toLowerCase(),null)});
["cols","rows","size","span"].forEach(function(a){K[a]=new J(a,6,!1,a.toLowerCase(),null)});["rowSpan","start"].forEach(function(a){K[a]=new J(a,5,!1,a.toLowerCase(),null)});var Cc=/[\-:]([a-z])/g;function Dc(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Cc,
Dc);K[b]=new J(b,1,!1,a,null)});"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Cc,Dc);K[b]=new J(b,1,!1,a,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Cc,Dc);K[b]=new J(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")});K.tabIndex=new J("tabIndex",1,!1,"tabindex",null);
function Ec(a,b,c,d){var e=K.hasOwnProperty(b)?K[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Bc(b,c,e,d)&&(c=null),d||null===e?zc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
function Fc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Gc(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Hc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Ic(a,b){b=b.checked;null!=b&&Ec(a,"checked",b,!1)}
function Jc(a,b){Ic(a,b);var c=Hc(b.value);if(null!=c)if("number"===b.type){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);b.hasOwnProperty("value")?Kc(a,b.type,c):b.hasOwnProperty("defaultValue")&&Kc(a,b.type,Hc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Lc(a,b){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue"))""===a.value&&(a.value=""+a._wrapperState.initialValue),a.defaultValue=""+a._wrapperState.initialValue;b=a.name;""!==b&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;""!==b&&(a.name=b)}function Kc(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}
function Hc(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}var Mc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Nc(a,b,c){a=H.getPooled(Mc.change,a,b,c);a.type="change";Ob(c);Ya(a);return a}var Oc=null,Pc=null;function Qc(a){Ia(a,!1)}function Rc(a){var b=Oa(a);if(dc(b))return a}
function Sc(a,b){if("change"===a)return b}var Tc=!1;m.canUseDOM&&(Tc=$b("input")&&(!document.documentMode||9<document.documentMode));function Uc(){Oc&&(Oc.detachEvent("onpropertychange",Vc),Pc=Oc=null)}function Vc(a){"value"===a.propertyName&&Rc(Pc)&&(a=Nc(Pc,a,Zb(a)),Wb(Qc,a))}function Wc(a,b,c){"focus"===a?(Uc(),Oc=b,Pc=c,Oc.attachEvent("onpropertychange",Vc)):"blur"===a&&Uc()}function Xc(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return Rc(Pc)}
function Yc(a,b){if("click"===a)return Rc(b)}function Zc(a,b){if("input"===a||"change"===a)return Rc(b)}
var $c={eventTypes:Mc,_isInputEventSupported:Tc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();"select"===h||"input"===h&&"file"===e.type?f=Sc:Yb(e)?Tc?f=Zc:(f=Xc,g=Wc):(h=e.nodeName)&&"input"===h.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(f=Yc);if(f&&(f=f(a,b)))return Nc(f,c,d);g&&g(a,e,b);"blur"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&"number"===e.type&&Kc(e,"number",e.value)}},ad=H.extend({view:null,
detail:null}),bd={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function cd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=bd[a])?!!b[a]:!1}function dd(){return cd}
var ed=ad.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:dd,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),fd=ed.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),gd={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},
mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},hd={eventTypes:gd,extractEvents:function(a,b,c,d){var e="mouseover"===a||"pointerover"===a,f="mouseout"===a||"pointerout"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||
e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if("mouseout"===a||"mouseover"===a)g=ed,h=gd.mouseLeave,k=gd.mouseEnter,n="mouse";else if("pointerout"===a||"pointerover"===a)g=fd,h=gd.pointerLeave,k=gd.pointerEnter,n="pointer";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+"leave";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+"enter";c.target=e;c.relatedTarget=a;Za(h,
c,f,b);return[h,c]}};function id(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function jd(a){2!==id(a)?A("188"):void 0}
function kd(a){var b=a.alternate;if(!b)return b=id(a),3===b?A("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return jd(e),a;if(g===d)return jd(e),b;g=g.sibling}A("188")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?
void 0:A("189")}}c.alternate!==d?A("190"):void 0}3!==c.tag?A("188"):void 0;return c.stateNode.current===c?a:b}function ld(a){a=kd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
function md(a){a=kd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var nd=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),od=H.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),pd=ad.extend({relatedTarget:null});
function qd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
var rd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},td=ad.extend({key:function(a){if(a.key){var b=rd[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=qd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?sd[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:dd,charCode:function(a){return"keypress"===
a.type?qd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?qd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),ud=ed.extend({dataTransfer:null}),vd=ad.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:dd}),wd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),xd=ed.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),yd=[["abort","abort"],[fb,"animationEnd"],[gb,"animationIteration"],[hb,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],
["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],
["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ib,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],zd={},Ad={};function Bd(a,b){var c=a[0];a=a[1];var d="on"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+"Capture"},dependencies:[c],isInteractive:b};zd[a]=b;Ad[c]=b}
[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],
["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(a){Bd(a,!0)});yd.forEach(function(a){Bd(a,!1)});
var Cd={eventTypes:zd,isInteractiveTopLevelEventType:function(a){a=Ad[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Ad[a];if(!e)return null;switch(a){case "keypress":if(0===qd(c))return null;case "keydown":case "keyup":a=td;break;case "blur":case "focus":a=pd;break;case "click":if(2===c.button)return null;case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=ed;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=
ud;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=vd;break;case fb:case gb:case hb:a=nd;break;case ib:a=wd;break;case "scroll":a=ad;break;case "wheel":a=xd;break;case "copy":case "cut":case "paste":a=od;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=fd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Dd=Cd.isInteractiveTopLevelEventType,
Ed=[];function Fd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Gd=!0;function Id(a){Gd=!!a}function L(a,b){if(!b)return null;var c=(Dd(a)?Jd:Kd).bind(null,a);b.addEventListener(a,c,!1)}
function Ld(a,b){if(!b)return null;var c=(Dd(a)?Jd:Kd).bind(null,a);b.addEventListener(a,c,!0)}function Jd(a,b){Tb(Kd,a,b)}function Kd(a,b){if(Gd){var c=Zb(b);c=Na(c);null===c||"number"!==typeof c.tag||2===id(c)||(c=null);if(Ed.length){var d=Ed.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Fd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Ed.length&&Ed.push(a)}}}
var Md={get _enabled(){return Gd},setEnabled:Id,isEnabled:function(){return Gd},trapBubbledEvent:L,trapCapturedEvent:Ld,dispatchEvent:Kd},Nd={},Od=0,Pd="_reactListenersID"+(""+Math.random()).slice(2);function Qd(a){Object.prototype.hasOwnProperty.call(a,Pd)||(a[Pd]=Od++,Nd[a[Pd]]={});return Nd[a[Pd]]}function Rd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Sd(a,b){var c=Rd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Rd(c)}}function Td(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&"text"===a.type||"textarea"===b||"true"===a.contentEditable)}
var Ud=m.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Vd={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wd=null,Xd=null,Yd=null,Zd=!1;
function $d(a,b){if(Zd||null==Wd||Wd!==da())return null;var c=Wd;"selectionStart"in c&&Td(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Yd&&ea(Yd,c)?null:(Yd=c,a=H.getPooled(Vd.select,Xd,a,b),a.type="select",a.target=Wd,Ya(a),a)}
var ae={eventTypes:Vd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Qd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case "focus":if(Yb(e)||"true"===e.contentEditable)Wd=e,Xd=b,Yd=null;break;case "blur":Yd=Xd=Wd=null;break;case "mousedown":Zd=!0;break;case "contextmenu":case "mouseup":return Zd=!1,$d(c,d);case "selectionchange":if(Ud)break;
case "keydown":case "keyup":return $d(c,d)}return null}};Ga.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Cd,EnterLeaveEventPlugin:hd,ChangeEventPlugin:$c,SelectEventPlugin:ae,BeforeInputEventPlugin:Ib});var be=void 0;
be="object"===typeof performance&&"function"===typeof performance.now?function(){return performance.now()}:function(){return Date.now()};var ce=void 0,de=void 0;
if(m.canUseDOM){var ee=[],fe=0,ge={},he=-1,ie=!1,je=!1,ke=0,le=33,me=33,ne={didTimeout:!1,timeRemaining:function(){var a=ke-be();return 0<a?a:0}},oe=function(a,b){if(ge[b])try{a(ne)}finally{delete ge[b]}},pe="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){if(a.source===window&&a.data===pe&&(ie=!1,0!==ee.length)){if(0!==ee.length&&(a=be(),!(-1===he||he>a))){he=-1;ne.didTimeout=!0;for(var b=0,c=ee.length;b<c;b++){var d=ee[b],e=d.timeoutTime;-1!==
e&&e<=a?oe(d.scheduledCallback,d.callbackId):-1!==e&&(-1===he||e<he)&&(he=e)}}for(a=be();0<ke-a&&0<ee.length;)a=ee.shift(),ne.didTimeout=!1,oe(a.scheduledCallback,a.callbackId),a=be();0<ee.length&&!je&&(je=!0,requestAnimationFrame(qe))}},!1);var qe=function(a){je=!1;var b=a-ke+me;b<me&&le<me?(8>b&&(b=8),me=b<le?le:b):le=b;ke=a+me;ie||(ie=!0,window.postMessage(pe,"*"))};ce=function(a,b){var c=-1;null!=b&&"number"===typeof b.timeout&&(c=be()+b.timeout);if(-1===he||-1!==c&&c<he)he=c;fe++;b=fe;ee.push({scheduledCallback:a,
callbackId:b,timeoutTime:c});ge[b]=!0;je||(je=!0,requestAnimationFrame(qe));return b};de=function(a){delete ge[a]}}else{var re=0,se={};ce=function(a){var b=re++,c=setTimeout(function(){a({timeRemaining:function(){return Infinity},didTimeout:!1})});se[b]=c;return b};de=function(a){var b=se[a];delete se[a];clearTimeout(b)}}function te(a){var b="";ca.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}
function ue(a,b){a=p({children:void 0},b);if(b=te(b.children))a.children=b;return a}function ve(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function we(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function xe(a,b){null!=b.dangerouslySetInnerHTML?A("91"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function ye(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A("93"),b=b[0]),c=""+b),null==c&&(c=""));a._wrapperState={initialValue:""+c}}
function ze(a,b){var c=b.value;null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ae(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Be={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Ce(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function De(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Ce(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var Ee=void 0,Fe=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Be.svg||"innerHTML"in a)a.innerHTML=b;else{Ee=Ee||document.createElement("div");Ee.innerHTML="<svg>"+b+"</svg>";for(b=Ee.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function Ge(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var He={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,
stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ie=["Webkit","ms","Moz","O"];Object.keys(He).forEach(function(a){Ie.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);He[b]=He[a]})});
function Je(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--");var e=c;var f=b[c];e=null==f||"boolean"===typeof f||""===f?"":d||"number"!==typeof f||0===f||He.hasOwnProperty(e)&&He[e]?(""+f).trim():f+"px";"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var Ke=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function Le(a,b,c){b&&(Ke[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A("137",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:A("61")),null!=b.style&&"object"!==typeof b.style?A("62",c()):void 0)}
function Me(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var Ne=v.thatReturns("");
function Oe(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Qd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case "scroll":Ld("scroll",a);break;case "focus":case "blur":Ld("focus",a);Ld("blur",a);c.blur=!0;c.focus=!0;break;case "cancel":case "close":$b(e,!0)&&Ld(e,a);break;case "invalid":case "submit":case "reset":break;default:-1===jb.indexOf(e)&&L(e,a)}c[e]=!0}}}
function Pe(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Be.html&&(d=Ce(a));d===Be.html?"script"===a?(a=c.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):a="string"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Qe(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}
function Re(a,b,c,d){var e=Me(b,c);switch(b){case "iframe":case "object":L("load",a);var f=c;break;case "video":case "audio":for(f=0;f<jb.length;f++)L(jb[f],a);f=c;break;case "source":L("error",a);f=c;break;case "img":case "image":case "link":L("error",a);L("load",a);f=c;break;case "form":L("reset",a);L("submit",a);f=c;break;case "details":L("toggle",a);f=c;break;case "input":Gc(a,c);f=Fc(a,c);L("invalid",a);Oe(d,"onChange");break;case "option":f=ue(a,c);break;case "select":we(a,c);f=p({},c,{value:void 0});
L("invalid",a);Oe(d,"onChange");break;case "textarea":ye(a,c);f=xe(a,c);L("invalid",a);Oe(d,"onChange");break;default:f=c}Le(b,f,Ne);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];"style"===h?Je(a,k,Ne):"dangerouslySetInnerHTML"===h?(k=k?k.__html:void 0,null!=k&&Fe(a,k)):"children"===h?"string"===typeof k?("textarea"!==b||""!==k)&&Ge(a,k):"number"===typeof k&&Ge(a,""+k):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(ra.hasOwnProperty(h)?null!=k&&Oe(d,
h):null!=k&&Ec(a,h,k,e))}switch(b){case "input":cc(a);Lc(a,c);break;case "textarea":cc(a);Ae(a,c);break;case "option":null!=c.value&&a.setAttribute("value",c.value);break;case "select":a.multiple=!!c.multiple;b=c.value;null!=b?ve(a,!!c.multiple,b,!1):null!=c.defaultValue&&ve(a,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof f.onClick&&(a.onclick=v)}}
function Se(a,b,c,d,e){var f=null;switch(b){case "input":c=Fc(a,c);d=Fc(a,d);f=[];break;case "option":c=ue(a,c);d=ue(a,d);f=[];break;case "select":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case "textarea":c=xe(a,c);d=xe(a,d);f=[];break;default:"function"!==typeof c.onClick&&"function"===typeof d.onClick&&(a.onclick=v)}Le(b,d,Ne);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if("style"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||
(g={}),g[b]="")}else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if("style"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]="");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),
g=k;else"dangerouslySetInnerHTML"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,""+k)):"children"===a?h===k||"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(a,""+k):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Oe(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push("style",g);return f}
function Te(a,b,c,d,e){"input"===c&&"radio"===e.type&&null!=e.name&&Ic(a,e);Me(c,d);d=Me(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];"style"===g?Je(a,h,Ne):"dangerouslySetInnerHTML"===g?Fe(a,h):"children"===g?Ge(a,h):Ec(a,g,h,d)}switch(c){case "input":Jc(a,e);break;case "textarea":ze(a,e);break;case "select":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ve(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?
ve(a,!!e.multiple,e.defaultValue,!0):ve(a,!!e.multiple,e.multiple?[]:"",!1))}}
function Ue(a,b,c,d,e){switch(b){case "iframe":case "object":L("load",a);break;case "video":case "audio":for(d=0;d<jb.length;d++)L(jb[d],a);break;case "source":L("error",a);break;case "img":case "image":case "link":L("error",a);L("load",a);break;case "form":L("reset",a);L("submit",a);break;case "details":L("toggle",a);break;case "input":Gc(a,c);L("invalid",a);Oe(e,"onChange");break;case "select":we(a,c);L("invalid",a);Oe(e,"onChange");break;case "textarea":ye(a,c),L("invalid",a),Oe(e,"onChange")}Le(b,
c,Ne);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];"children"===f?"string"===typeof g?a.textContent!==g&&(d=["children",g]):"number"===typeof g&&a.textContent!==""+g&&(d=["children",""+g]):ra.hasOwnProperty(f)&&null!=g&&Oe(e,f)}switch(b){case "input":cc(a);Lc(a,c);break;case "textarea":cc(a);Ae(a,c);break;case "select":case "option":break;default:"function"===typeof c.onClick&&(a.onclick=v)}return d}function Ve(a,b){return a.nodeValue!==b}
var We={createElement:Pe,createTextNode:Qe,setInitialProperties:Re,diffProperties:Se,updateProperties:Te,diffHydratedProperties:Ue,diffHydratedText:Ve,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case "input":Jc(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;
c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A("90");dc(d);Jc(d,e)}}}break;case "textarea":ze(a,c);break;case "select":b=c.value,null!=b&&ve(a,!!c.multiple,b,!1)}}},Xe=null,Ye=null;function Ze(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function $e(a,b){return"textarea"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&"string"===typeof b.dangerouslySetInnerHTML.__html}var af=be,bf=ce,cf=de;function df(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function ef(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var ff=[],gf=-1;function hf(a){return{current:a}}
function M(a){0>gf||(a.current=ff[gf],ff[gf]=null,gf--)}function N(a,b){gf++;ff[gf]=a.current;a.current=b}var jf=hf(ha),O=hf(!1),kf=ha;function lf(a){return mf(a)?kf:jf.current}
function nf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function mf(a){return 2===a.tag&&null!=a.type.childContextTypes}function of(a){mf(a)&&(M(O,a),M(jf,a))}function pf(a){M(O,a);M(jf,a)}
function qf(a,b,c){jf.current!==ha?A("168"):void 0;N(jf,b,a);N(O,c,a)}function rf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if("function"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A("108",tc(a)||"Unknown",e);return p({},b,c)}function sf(a){if(!mf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;kf=jf.current;N(jf,b,a);N(O,O.current,a);return!0}
function tf(a,b){var c=a.stateNode;c?void 0:A("169");if(b){var d=rf(a,kf);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(jf,a);N(jf,d,a)}else M(O,a);N(O,b,a)}
function uf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}
function vf(a,b,c){var d=a.alternate;null===d?(d=new uf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}
function wf(a,b,c){var d=a.type,e=a.key;a=a.props;if("function"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if("string"===typeof d)f=5;else switch(d){case hc:return xf(a.children,b,c,e);case oc:f=11;b|=3;break;case ic:f=11;b|=2;break;case jc:return d=new uf(15,a,e,b|4),d.type=jc,d.expirationTime=c,d;case qc:f=16;b|=2;break;default:a:{switch("object"===typeof d&&null!==d?d.$$typeof:null){case mc:f=13;break a;case nc:f=12;break a;case pc:f=14;break a;default:A("130",null==d?
d:typeof d,"")}f=void 0}}b=new uf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function xf(a,b,c,d){a=new uf(10,a,d,b);a.expirationTime=c;return a}function yf(a,b,c){a=new uf(6,a,null,b);a.expirationTime=c;return a}function zf(a,b,c){b=new uf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function Af(a,b,c){b=new uf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Bf=null,Cf=null;function Df(a){return function(b){try{return a(b)}catch(c){}}}
function Ef(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Bf=Df(function(a){return b.onCommitFiberRoot(c,a)});Cf=Df(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Ff(a){"function"===typeof Bf&&Bf(a)}function Gf(a){"function"===typeof Cf&&Cf(a)}var Hf=!1;
function If(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Jf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}
function Kf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Lf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}
function Mf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=If(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=If(a.memoizedState),f=d.updateQueue=If(d.memoizedState)):e=a.updateQueue=Jf(f):null===f&&(f=d.updateQueue=Jf(e));null===f||e===f?Lf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Lf(e,b,c),Lf(f,b,c)):(Lf(e,b,c),f.lastUpdate=b)}
function Nf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=If(a.memoizedState):Of(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Of(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Jf(b));return b}
function Pf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,"function"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e="function"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Hf=!0}return d}
function Qf(a,b,c,d,e){Hf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Of(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Pf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===
g&&(f=n)),0===h||h>w)h=w}else n=Pf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}
function Rf(a,b){"function"!==typeof a?A("191",a):void 0;a.call(b)}
function Sf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Rf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Rf(b,c)),a=a.nextEffect}
function Tf(a,b){return{value:a,source:b,stack:vc(b)}}var Uf=hf(null),Vf=hf(null),Wf=hf(0);function Xf(a){var b=a.type._context;N(Wf,b._changedBits,a);N(Vf,b._currentValue,a);N(Uf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function Yf(a){var b=Wf.current,c=Vf.current;M(Uf,a);M(Vf,a);M(Wf,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var Zf={},$f=hf(Zf),ag=hf(Zf),bg=hf(Zf);function cg(a){a===Zf?A("174"):void 0;return a}
function dg(a,b){N(bg,b,a);N(ag,a,a);N($f,Zf,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:De(null,"");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=De(b,c)}M($f,a);N($f,b,a)}function eg(a){M($f,a);M(ag,a);M(bg,a)}function fg(a){ag.current===a&&(M($f,a),M(ag,a))}function hg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}
var lg={isMounted:function(a){return(a=a._reactInternalFiber)?2===id(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=ig();d=jg(d,a);var e=Kf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Mf(a,e,d);kg(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=ig();d=jg(d,a);var e=Kf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Mf(a,e,d);kg(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=ig();c=jg(c,a);var d=Kf(c);d.tag=2;void 0!==
b&&null!==b&&(d.callback=b);Mf(a,d,c);kg(a,c)}};function mg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return"function"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}
function ng(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&lg.enqueueReplaceState(b,b.state,null)}
function og(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=lf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=nf(a,f);f=a.updateQueue;null!==f&&(Qf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;"function"===typeof f&&(hg(a,f,e),d.state=a.memoizedState);"function"===typeof c.getDerivedStateFromProps||"function"===typeof d.getSnapshotBeforeUpdate||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||(c=d.state,"function"===typeof d.componentWillMount&&
d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&lg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Qf(a,f,e,d,b),d.state=a.memoizedState));"function"===typeof d.componentDidMount&&(a.effectTag|=4)}var pg=Array.isArray;
function qg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A("110"):void 0,d=c.stateNode);d?void 0:A("147",a);var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}"string"!==typeof a?A("148"):void 0;c._owner?void 0:A("254",a)}return a}
function rg(a,b){"textarea"!==a.type&&A("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
function sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=vf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=yf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=qg(a,b,c),d.return=a,d;d=wf(c,a.mode,d);d.ref=qg(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=
zf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=xf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if("string"===typeof b||"number"===typeof b)return b=yf(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case fc:return c=wf(b,a.mode,c),c.ref=qg(a,null,b),c.return=a,c;case gc:return b=zf(b,a.mode,c),b.return=a,b}if(pg(b)||sc(b))return b=xf(b,a.mode,c,null),b.return=
a,b;rg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case fc:return c.key===e?c.type===hc?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case gc:return c.key===e?n(a,b,c,d):null}if(pg(c)||sc(c))return null!==e?null:r(a,b,c,d,null);rg(a,c)}return null}function kc(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);
if("object"===typeof d&&null!==d){switch(d.$$typeof){case fc:return a=a.get(null===d.key?c:d.key)||null,d.type===hc?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case gc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(pg(d)||sc(d))return a=a.get(c)||null,r(b,a,d,e,null);rg(b,d)}return null}function Hd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,
t);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=kc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var t=sc(h);"function"!==typeof t?A("150"):void 0;h=t.call(h);null==h?A("151"):void 0;for(var u=t=null,n=g,x=
g=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===u?t=r:u.sibling=r;u=r;n=y}if(l.done)return c(e,n),t;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===u?t=l:u.sibling=l,u=l);return t}for(n=d(e,n);!l.done;x++,l=h.next())l=kc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===
u?t=l:u.sibling=l,u=l);a&&n.forEach(function(a){return b(e,a)});return t}return function(a,d,f,h){"object"===typeof f&&null!==f&&f.type===hc&&null===f.key&&(f=f.props.children);var k="object"===typeof f&&null!==f;if(k)switch(f.$$typeof){case fc:a:{var n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===hc:k.type===f.type){c(a,k.sibling);d=e(k,f.type===hc?f.props.children:f.props,h);d.ref=qg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===hc?(d=xf(f.props.children,
a.mode,h,f.key),d.return=a,a=d):(h=wf(f,a.mode,h),h.ref=qg(a,d,f),h.return=a,a=h)}return g(a);case gc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zf(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=
a,a=d):(c(a,d),d=yf(f,a.mode,h),d.return=a,a=d),g(a);if(pg(f))return Hd(a,d,f,h);if(sc(f))return E(a,d,f,h);k&&rg(a,f);if("undefined"===typeof f)switch(a.tag){case 2:case 1:h=a.type,A("152",h.displayName||h.name||"Component")}return c(a,d)}}var tg=sg(!0),ug=sg(!1),vg=null,wg=null,xg=!1;function yg(a,b){var c=new uf(5,null,null,0);c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
function zg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Ag(a){if(xg){var b=wg;if(b){var c=b;if(!zg(a,b)){b=df(c);if(!b||!zg(a,b)){a.effectTag|=2;xg=!1;vg=a;return}yg(vg,c)}vg=a;wg=ef(b)}else a.effectTag|=2,xg=!1,vg=a}}
function Bg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;vg=a}function Cg(a){if(a!==vg)return!1;if(!xg)return Bg(a),xg=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!$e(b,a.memoizedProps))for(b=wg;b;)yg(a,b),b=df(b);Bg(a);wg=vg?df(a.stateNode):null;return!0}function Dg(){wg=vg=null;xg=!1}function Q(a,b,c){Eg(a,b,c,b.expirationTime)}function Eg(a,b,c,d){b.child=null===a?ug(b,null,c,d):tg(b,a.child,c,d)}
function Fg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Gg(a,b,c,d,e){Fg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&tf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Eg(a,b,null,e),b.child=null);Eg(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&tf(b,!0);return b.child}
function Hg(a){var b=a.stateNode;b.pendingContext?qf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&qf(a,b.context,!1);dg(a,b.containerInfo)}
function Ig(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=
e.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}
function Jg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,Xf(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,Xf(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,Xf(b),R(a,b);h=0}else if(h="function"===typeof d._calculateChangedBits?d._calculateChangedBits(k,
h):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,Xf(b),R(a,b)}else Ig(b,d,h,c)}b.stateNode=h;Xf(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A("153"):void 0;if(null!==b.child){a=b.child;var c=vf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=vf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}
function Kg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Hg(b);break;case 2:sf(b);break;case 4:dg(b,b.stateNode.containerInfo);break;case 13:Xf(b)}return null}switch(b.tag){case 0:null!==a?A("155"):void 0;var d=b.type,e=b.pendingProps,f=lf(b);f=nf(b,f);d=d(e,f);b.effectTag|=1;"object"===typeof d&&null!==d&&"function"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,"function"===
typeof f&&hg(b,f,e),e=sf(b),d.updater=lg,b.stateNode=d,d._reactInternalFiber=b,og(b,c),a=Gg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=lf(b),d=nf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=sf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=lf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?nf(b,d):ha;g=new h(g,f);b.memoizedState=null!==
g.state&&void 0!==g.state?g.state:null;g.updater=lg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);og(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=lf(b);g=nf(b,g);var r=h.getDerivedStateFromProps;(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
(k!==f||n!==g)&&ng(b,d,f,g);Hf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Qf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Hf?("function"===typeof r&&(hg(b,r,f),n=b.memoizedState),(k=Hf||mg(b,k,f,w,n,g))?(h||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||("function"===typeof d.componentWillMount&&d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),"function"===typeof d.componentDidMount&&
(b.effectTag|=4)):("function"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):("function"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=lf(b),g=nf(b,g),r=h.getDerivedStateFromProps,(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
(f!==k||n!==g)&&ng(b,d,k,g),Hf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Qf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Hf?("function"===typeof r&&(hg(b,r,k),w=b.memoizedState),(r=Hf||mg(b,f,k,n,w,g))?(h||"function"!==typeof d.UNSAFE_componentWillUpdate&&"function"!==typeof d.componentWillUpdate||("function"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),"function"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),"function"===typeof d.componentDidUpdate&&
(b.effectTag|=4),"function"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||
f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Gg(a,b,d,e,c);case 3:Hg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Qf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Dg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)wg=ef(b.stateNode.containerInfo),vg=b,d=xg=!0;d?(b.effectTag|=2,b.child=ug(b,null,e,c)):(Dg(),Q(a,b,e));a=b.child}else Dg(),a=R(a,b);return a;case 5:a:{cg(bg.current);e=cg($f.current);d=De(e,
b.type);e!==d&&(N(ag,b,b),N($f,d,b));null===a&&Ag(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;$e(e,d)?k=null:f&&$e(e,f)&&(b.effectTag|=16);Fg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Ag(b),b.memoizedProps=b.pendingProps,
null;case 16:return null;case 4:return dg(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=tg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=
b.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Jg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Ig(b,d,g,c);else if(k===f){a=
R(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A("156")}}function Lg(a){a.effectTag|=4}var Pg=void 0,Qg=void 0,Rg=void 0;Pg=function(){};Qg=function(a,b,c){(b.updateQueue=c)&&Lg(b)};Rg=function(a,b,c,d){c!==d&&Lg(b)};
function Sg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return of(b),null;case 3:eg(b);pf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Cg(b),b.effectTag&=-3;Pg(b);return null;case 5:fg(b);d=cg(bg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=cg($f.current);g=Se(g,e,f,c,d);Qg(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?
A("166"):void 0,null;a=cg($f.current);if(Cg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ue(c,e,f,a,d),b.updateQueue=d,null!==d&&Lg(b);else{a=Pe(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Re(a,e,c,d);Ze(e,c)&&Lg(b);b.stateNode=
a}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Rg(a,b,a.memoizedProps,c);else{if("string"!==typeof c)return null===b.stateNode?A("166"):void 0,null;d=cg(bg.current);cg($f.current);Cg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ve(d,c)&&Lg(b)):(d=Qe(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return eg(b),Pg(b),null;case 13:return Yf(b),null;case 12:return null;case 0:A("167");
default:A("156")}}function Tg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&tc(c);b=b.value;null!==a&&2===a.tag&&tc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Ug(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Vg(a,c)}else b.current=null}
function Wg(a){"function"===typeof Gf&&Gf(a);switch(a.tag){case 2:Ug(a);var b=a.stateNode;if("function"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Vg(a,c)}break;case 5:Ug(a);break;case 4:Xg(a)}}function Yg(a){return 5===a.tag||3===a.tag||4===a.tag}
function Zg(a){a:{for(var b=a.return;null!==b;){if(Yg(b)){var c=b;break a}b=b.return}A("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A("161")}c.effectTag&16&&(Ge(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Yg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;
if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===
e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}
function Xg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A("160"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(Wg(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?
(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:Wg(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}
function $g(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Te(c,f,e,a,d))}break;case 6:null===b.stateNode?A("162"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A("163")}}function ah(a,b,c){c=Kf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){bh(d);Tg(a,b)};return c}
function ch(a,b,c){c=Kf(c);c.tag=3;var d=a.stateNode;null!==d&&"function"===typeof d.componentDidCatch&&(c.callback=function(){null===dh?dh=new Set([this]):dh.add(this);var c=b.value,d=b.stack;Tg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:""})});return c}
function eh(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Tf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=ah(a,d,f);Nf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&"function"===typeof c.componentDidCatch&&(null===dh||!dh.has(c))){a.effectTag|=1024;d=ch(a,b,f);Nf(a,d,f);return}}a=a.return}while(null!==a)}
function fh(a){switch(a.tag){case 2:of(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return eg(a),pf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return fg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return eg(a),null;case 13:return Yf(a),null;default:return null}}var gh=af(),hh=2,ih=gh,jh=0,kh=0,lh=!1,S=null,mh=null,T=0,nh=-1,oh=!1,U=null,ph=!1,qh=!1,dh=null;
function rh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:of(b);break;case 3:eg(b);pf(b);break;case 5:fg(b);break;case 4:eg(b);break;case 13:Yf(b)}a=a.return}mh=null;T=0;nh=-1;oh=!1;S=null;qh=!1}
function sh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Sg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&
(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{qh=!0;break}}else{a=fh(a,oh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}
function th(a){var b=Kg(a.alternate,a,T);null===b&&(b=sh(a));ec.current=null;return b}
function uh(a,b,c){lh?A("243"):void 0;lh=!0;if(b!==T||a!==mh||null===S)rh(),mh=a,T=b,nh=-1,S=vf(mh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;oh=!c||T<=hh;do{try{if(c)for(;null!==S&&!vh();)S=th(S);else for(;null!==S;)S=th(S)}catch(f){if(null===S)d=!0,bh(f);else{null===S?A("271"):void 0;c=S;var e=c.return;if(null===e){d=!0;bh(f);break}eh(a,e,c,f,oh,T,ih);S=sh(c)}}break}while(1);lh=!1;if(d)return null;if(null===S){if(qh)return a.pendingCommitExpirationTime=b,a.current.alternate;oh?A("262"):
void 0;0<=nh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&wh(a,b)},nh);xh(a.current.expirationTime)}return null}
function Vg(a,b){var c;a:{lh&&!ph?A("263"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromCatch||"function"===typeof d.componentDidCatch&&(null===dh||!dh.has(d))){a=Tf(b,a);a=ch(c,a,1);Mf(c,a,1);kg(c,1);c=void 0;break a}break;case 3:a=Tf(b,a);a=ah(c,a,1);Mf(c,a,1);kg(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Tf(b,a),c=ah(a,c,1),Mf(a,c,1),kg(a,1));c=void 0}return c}
function yh(){var a=2+25*(((ig()-2+500)/25|0)+1);a<=jh&&(a=jh+1);return jh=a}function jg(a,b){a=0!==kh?kh:lh?ph?1:T:b.mode&1?zh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;zh&&(0===Ah||a>Ah)&&(Ah=a);return a}
function kg(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!lh&&0!==T&&b<T&&rh();var d=c.current.expirationTime;lh&&!ph&&mh===c||wh(c,d);Bh>Ch&&A("185")}else break;a=a.return}}function ig(){ih=af()-gh;return hh=(ih/10|0)+2}
function Dh(a){var b=kh;kh=2+25*(((ig()-2+500)/25|0)+1);try{return a()}finally{kh=b}}function Eh(a,b,c,d,e){var f=kh;kh=1;try{return a(b,c,d,e)}finally{kh=f}}var Fh=null,V=null,Gh=0,Hh=-1,W=!1,X=null,Y=0,Ah=0,Ih=!1,Jh=!1,Kh=null,Lh=null,Z=!1,Mh=!1,zh=!1,Nh=null,Ch=1E3,Bh=0,Oh=1;function Ph(a){if(0!==Gh){if(a>Gh)return;cf(Hh)}var b=af()-gh;Gh=a;Hh=bf(Qh,{timeout:10*(a-2)-b})}
function wh(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Fh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Fh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Mh&&(X=a,Y=1,Rh(a,1,!1)):1===b?Sh():Ph(b))}
function Th(){var a=0,b=null;if(null!==V)for(var c=V,d=Fh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A("244"):void 0;if(d===d.nextScheduledRoot){Fh=V=d.nextScheduledRoot=null;break}else if(d===Fh)Fh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Fh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;
c=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Bh++:Bh=0;X=b;Y=a}function Qh(a){Uh(0,!0,a)}function Sh(){Uh(1,!1,null)}function Uh(a,b,c){Lh=c;Th();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Ih||ig()>=Y);)ig(),Rh(X,Y,!Ih),Th();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Rh(X,Y,!1),Th();null!==Lh&&(Gh=0,Hh=-1);0!==Y&&Ph(Y);Lh=null;Ih=!1;Vh()}function Wh(a,b){W?A("253"):void 0;X=a;Y=b;Rh(a,b,!1);Sh();Vh()}
function Vh(){Bh=0;if(null!==Nh){var a=Nh;Nh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Jh||(Jh=!0,Kh=d)}}}if(Jh)throw a=Kh,Kh=null,Jh=!1,a;}function Rh(a,b,c){W?A("245"):void 0;W=!0;c?(c=a.finishedWork,null!==c?Xh(a,c,b):(a.finishedWork=null,c=uh(a,b,!0),null!==c&&(vh()?a.finishedWork=c:Xh(a,c,b)))):(c=a.finishedWork,null!==c?Xh(a,c,b):(a.finishedWork=null,c=uh(a,b,!1),null!==c&&Xh(a,c,b)));W=!1}
function Xh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Nh?Nh=[d]:Nh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;ph=lh=!0;c=b.stateNode;c.current===b?A("177"):void 0;d=c.pendingCommitExpirationTime;0===d?A("261"):void 0;c.pendingCommitExpirationTime=0;ig();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;Xe=Gd;var f=da();if(Td(f)){if("selectionStart"in
f)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,kc=0,Hd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&
++kc===k&&(w=r);t===n&&++Hd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;Ye={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var hi=ja.getSnapshotBeforeUpdate(y,
D);ja.__reactInternalSnapshotBeforeUpdate=hi}break;case 3:case 5:case 6:case 4:break;default:A("163")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A("178"):void 0,Vg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ge(U.stateNode,"");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&("function"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:Zg(U);U.effectTag&=-3;break;case 6:Zg(U);U.effectTag&=-3;$g(U.alternate,
U);break;case 4:$g(U.alternate,U);break;case 8:D=U,Xg(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A("178"):void 0,Vg(U,y),null!==U&&(U=U.nextEffect))}l=Ye;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){Td(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),"selectionStart"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),
y=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Sd(q,l),D=Sd(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,
top:l.scrollTop});q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}Ye=null;Id(Xe);Xe=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var gg=U.effectTag;if(gg&36){var lc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ba=l.stateNode;if(l.effectTag&4)if(null===lc)ba.props=l.memoizedProps,ba.state=l.memoizedState,ba.componentDidMount();else{var ri=lc.memoizedProps,si=lc.memoizedState;ba.props=l.memoizedProps;ba.state=l.memoizedState;
ba.componentDidUpdate(ri,si,ba.__reactInternalSnapshotBeforeUpdate)}var Mg=l.updateQueue;null!==Mg&&(ba.props=l.memoizedProps,ba.state=l.memoizedState,Sf(l,Mg,ba,u));break;case 3:var Ng=l.updateQueue;if(null!==Ng){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Sf(l,Ng,y,u)}break;case 5:var ti=l.stateNode;null===lc&&l.effectTag&4&&Ze(l.type,l.memoizedProps)&&ti.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;default:A("163")}}if(gg&
128){l=void 0;var uc=U.ref;if(null!==uc){var Og=U.stateNode;switch(U.tag){case 5:l=Og;break;default:l=Og}"function"===typeof uc?uc(l):uc.current=l}}var ui=U.nextEffect;U.nextEffect=null;U=ui}}catch(Wa){e=!0,q=Wa}e&&(null===U?A("178"):void 0,Vg(U,q),null!==U&&(U=U.nextEffect))}lh=ph=!1;"function"===typeof Ff&&Ff(b.stateNode);b=c.current.expirationTime;0===b&&(dh=null);a.remainingExpirationTime=b}function vh(){return null===Lh||Lh.timeRemaining()>Oh?!1:Ih=!0}
function bh(a){null===X?A("246"):void 0;X.remainingExpirationTime=0;Jh||(Jh=!0,Kh=a)}function xh(a){null===X?A("246"):void 0;X.remainingExpirationTime=a}function Yh(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Sh()}}function Zh(a,b){if(Z&&!Mh){Mh=!0;try{return a(b)}finally{Mh=!1}}return a(b)}function $h(a,b){W?A("187"):void 0;var c=Z;Z=!0;try{return Eh(a,b)}finally{Z=c,Sh()}}function ai(a){var b=Z;Z=!0;try{Eh(a)}finally{(Z=b)||W||Uh(1,!1,null)}}
function bi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===id(c)&&2===c.tag?void 0:A("170");for(g=c;3!==g.tag;){if(mf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A("171")}g=g.stateNode.context}c=mf(c)?rf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Kf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Mf(f,e,d);kg(f,d);return d}
function ci(a){var b=a._reactInternalFiber;void 0===b&&("function"===typeof a.render?A("188"):A("268",Object.keys(a)));a=ld(b);return null===a?null:a.stateNode}function di(a,b,c,d){var e=b.current,f=ig();e=jg(f,e);return bi(a,b,c,e,d)}function ei(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}
function fi(a){var b=a.findFiberByHostInstance;return Ef(p({},a,{findHostInstanceByFiber:function(a){a=ld(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}
var gi={updateContainerAtExpirationTime:bi,createContainer:function(a,b,c){return Af(a,b,c)},updateContainer:di,flushRoot:Wh,requestWork:wh,computeUniqueAsyncExpiration:yh,batchedUpdates:Yh,unbatchedUpdates:Zh,deferredUpdates:Dh,syncUpdates:Eh,interactiveUpdates:function(a,b,c){if(zh)return a(b,c);Z||W||0===Ah||(Uh(Ah,!1,null),Ah=0);var d=zh,e=Z;Z=zh=!0;try{return a(b,c)}finally{zh=d,(Z=e)||W||Sh()}},flushInteractiveUpdates:function(){W||0===Ah||(Uh(Ah,!1,null),Ah=0)},flushControlled:ai,flushSync:$h,
getPublicRootInstance:ei,findHostInstance:ci,findHostInstanceWithNoPortals:function(a){a=md(a);return null===a?null:a.stateNode},injectIntoDevTools:fi};function ii(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:gc,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent(We);
function ji(a){this._expirationTime=yh();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}ji.prototype.render=function(a){this._defer?void 0:A("250");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new ki;bi(a,b,null,c,d._onCommit);return d};ji.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
ji.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A("251");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A("251"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Wh(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=
null,this._defer=!1};ji.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function ki(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}ki.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
ki.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];"function"!==typeof c?A("191",c):void 0;c()}}};function li(a,b,c){this._internalRoot=Af(a,b,c)}li.prototype.render=function(a,b){var c=this._internalRoot,d=new ki;b=void 0===b?null:b;null!==b&&d.then(b);di(a,c,null,d._onCommit);return d};
li.prototype.unmount=function(a){var b=this._internalRoot,c=new ki;a=void 0===a?null:a;null!==a&&c.then(a);di(null,b,null,c._onCommit);return c};li.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new ki;c=void 0===c?null:c;null!==c&&e.then(c);di(b,d,a,e._onCommit);return e};
li.prototype.createBatch=function(){var a=new ji(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function mi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}Sb=gi.batchedUpdates;Tb=gi.interactiveUpdates;Ub=gi.flushInteractiveUpdates;
function ni(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new li(a,!1,b)}
function oi(a,b,c,d,e){mi(c)?void 0:A("200");var f=c._reactRootContainer;if(f){if("function"===typeof e){var g=e;e=function(){var a=ei(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ni(c,d);if("function"===typeof e){var h=e;e=function(){var a=ei(f._internalRoot);h.call(a)}}Zh(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ei(f._internalRoot)}
function pi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;mi(b)?void 0:A("200");return ii(a,b,null,c)}
var qi={createPortal:pi,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:ci(a)},hydrate:function(a,b,c){return oi(null,a,b,!0,c)},render:function(a,b,c){return oi(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A("38"):void 0;return oi(a,b,c,!1,d)},unmountComponentAtNode:function(a){mi(a)?void 0:A("40");return a._reactRootContainer?(Zh(function(){oi(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return pi.apply(void 0,
arguments)},unstable_batchedUpdates:Yh,unstable_deferredUpdates:Dh,flushSync:$h,unstable_flushControlled:ai,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Md},unstable_createRoot:function(a,b){return new li(a,!0,null!=b&&!0===b.hydrate)}};fi({findFiberByHostInstance:Na,bundleType:0,version:"16.4.0",rendererPackageName:"react-dom"});
var vi={default:qi},wi=vi&&qi||vi;module.exports=wi.default?wi.default:wi;

},{"fbjs/lib/ExecutionEnvironment":1193,"fbjs/lib/containsNode":1196,"fbjs/lib/emptyFunction":1197,"fbjs/lib/emptyObject":1198,"fbjs/lib/getActiveElement":1199,"fbjs/lib/invariant":1202,"fbjs/lib/shallowEqual":1205,"object-assign":1309,"react":1347}],1344:[function(require,module,exports){
(function (process){
'use strict';

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (process.env.NODE_ENV === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = require('./cjs/react-dom.production.min.js');
} else {
  module.exports = require('./cjs/react-dom.development.js');
}

}).call(this,require('_process'))
},{"./cjs/react-dom.development.js":1342,"./cjs/react-dom.production.min.js":1343,"_process":1327}],1345:[function(require,module,exports){
(function (process){
/** @license React v16.4.0
 * react.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var _assign = require('object-assign');
var invariant = require('fbjs/lib/invariant');
var emptyObject = require('fbjs/lib/emptyObject');
var warning = require('fbjs/lib/warning');
var emptyFunction = require('fbjs/lib/emptyFunction');
var checkPropTypes = require('prop-types/checkPropTypes');

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.4.0';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

// Relying on the `invariant()` implementation lets us
// have preserve the format and params in the www builds.

// Exports ReactDOM.createRoot


// Experimental error-boundary API that can recover from errors within a single
// render phase

// Suspense
var enableSuspense = false;
// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:


// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.


// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:


// Warn about legacy context API


// Gather advanced timing metrics for Profiler subtrees.


// Fires getDerivedStateFromProps for state *or* props changes


// Only used in www builds.

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + '.' + callerName;
    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }
    warning(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

/**
 * Base class helpers for the updating state of a component.
 */
function Component(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
Component.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
        return undefined;
      }
    });
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}
ComponentDummy.prototype = Component.prototype;

/**
 * Convenience component with default shallow equality check for sCU.
 */
function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent;
// Avoid an extra prototype jump for these methods.
_assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };
  {
    Object.seal(refObject);
  }
  return refObject;
}

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown = void 0;
var specialPropRefWarningShown = void 0;

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    });
    // self and source are DEV only properties.
    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    });
    // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.
    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */
function createElement(type, config, children) {
  var propName = void 0;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}

/**
 * Return a function that produces ReactElements of a given type.
 * See https://reactjs.org/docs/react-api.html#createfactory
 */


function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
}

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */
function cloneElement(element, config, children) {
  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;

  var propName = void 0;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps = void 0;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}

/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var ReactDebugCurrentFrame = {};

{
  // Component that is being worked on
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var impl = ReactDebugCurrentFrame.getCurrentStack;
    if (impl) {
      return impl();
    }
    return null;
  };
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */
function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];
function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;
  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;
      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }
    }
  }

  if (invokeCallback) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child = void 0;
  var nextName = void 0;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (typeof iteratorFn === 'function') {
      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum()) : void 0;
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step = void 0;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }
      var childrenString = '' + children;
      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children) {
  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warning(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    _defaultValue: defaultValue,
    _currentValue: defaultValue,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue2: defaultValue,
    _changedBits: 0,
    _changedBits2: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };

  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  context.Consumer = context;

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

function forwardRef(render) {
  {
    !(typeof render === 'function') ? warning(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render) : void 0;

    if (render != null) {
      !(render.defaultProps == null && render.propTypes == null) ? warning(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
    }
  }

  return {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };
}

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_TIMEOUT_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
}

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_ASYNC_MODE_TYPE:
      return 'AsyncMode';
    case REACT_CONTEXT_TYPE:
      return 'Context.Consumer';
    case REACT_FRAGMENT_TYPE:
      return 'ReactFragment';
    case REACT_PORTAL_TYPE:
      return 'ReactPortal';
    case REACT_PROFILER_TYPE:
      return 'Profiler(' + fiber.pendingProps.id + ')';
    case REACT_PROVIDER_TYPE:
      return 'Context.Provider';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_TIMEOUT_TYPE:
      return 'Timeout';
  }
  if (typeof type === 'object' && type !== null) {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        var functionName = type.render.displayName || type.render.name || '';
        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
    }
  }
  return null;
}

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

var currentlyValidatingElement = void 0;
var propTypesMisspellWarningShown = void 0;

var getDisplayName = function () {};
var getStackAddendum = function () {};

{
  currentlyValidatingElement = null;

  propTypesMisspellWarningShown = false;

  getDisplayName = function (element) {
    if (element == null) {
      return '#empty';
    } else if (typeof element === 'string' || typeof element === 'number') {
      return '#text';
    } else if (typeof element.type === 'string') {
      return element.type;
    } else if (element.type === REACT_FRAGMENT_TYPE) {
      return 'React.Fragment';
    } else {
      return element.type.displayName || element.type.name || 'Unknown';
    }
  };

  getStackAddendum = function () {
    var stack = '';
    if (currentlyValidatingElement) {
      var name = getDisplayName(currentlyValidatingElement);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
    }
    stack += ReactDebugCurrentFrame.getStackAddendum() || '';
    return stack;
  };
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current);
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
  }

  currentlyValidatingElement = element;
  {
    warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());
  }
  currentlyValidatingElement = null;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step = void 0;
        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  var propTypes = componentClass.propTypes;
  if (propTypes) {
    currentlyValidatingElement = element;
    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);
    currentlyValidatingElement = null;
  } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {
    propTypesMisspellWarningShown = true;
    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    !componentClass.getDefaultProps.isReactClassApproved ? warning(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */
function validateFragmentProps(fragment) {
  currentlyValidatingElement = fragment;

  var keys = Object.keys(fragment.props);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (key !== 'children' && key !== 'key') {
      warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());
      break;
    }
  }

  if (fragment.ref !== null) {
    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());
  }

  currentlyValidatingElement = null;
}

function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type);

  // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.
  if (!validType) {
    var info = '';
    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendum(props);
    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    info += getStackAddendum() || '';

    var typeString = void 0;
    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else {
      typeString = typeof type;
    }

    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = createElement.apply(this, arguments);

  // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.
  if (element == null) {
    return element;
  }

  // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)
  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}

function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;
  // Legacy hook: remove it
  {
    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}

function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);
  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }
  validatePropTypes(newElement);
  return newElement;
}

var React = {
  Children: {
    map: mapChildren,
    forEach: forEachChildren,
    count: countChildren,
    toArray: toArray,
    only: onlyChild
  },

  createRef: createRef,
  Component: Component,
  PureComponent: PureComponent,

  createContext: createContext,
  forwardRef: forwardRef,

  Fragment: REACT_FRAGMENT_TYPE,
  StrictMode: REACT_STRICT_MODE_TYPE,
  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,
  unstable_Profiler: REACT_PROFILER_TYPE,

  createElement: createElementWithValidation,
  cloneElement: cloneElementWithValidation,
  createFactory: createFactoryWithValidation,
  isValidElement: isValidElement,

  version: ReactVersion,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    ReactCurrentOwner: ReactCurrentOwner,
    // Used by renderers to avoid bundling object-assign twice in UMD bundles:
    assign: _assign
  }
};

if (enableSuspense) {
  React.Timeout = REACT_TIMEOUT_TYPE;
}

{
  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}



var React$2 = Object.freeze({
	default: React
});

var React$3 = ( React$2 && React ) || React$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var react = React$3.default ? React$3.default : React$3;

module.exports = react;
  })();
}

}).call(this,require('_process'))
},{"_process":1327,"fbjs/lib/emptyFunction":1197,"fbjs/lib/emptyObject":1198,"fbjs/lib/invariant":1202,"fbjs/lib/warning":1206,"object-assign":1309,"prop-types/checkPropTypes":1328}],1346:[function(require,module,exports){
/** @license React v16.4.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';var k=require("object-assign"),n=require("fbjs/lib/invariant"),p=require("fbjs/lib/emptyObject"),q=require("fbjs/lib/emptyFunction"),r="function"===typeof Symbol&&Symbol.for,t=r?Symbol.for("react.element"):60103,u=r?Symbol.for("react.portal"):60106,v=r?Symbol.for("react.fragment"):60107,w=r?Symbol.for("react.strict_mode"):60108,x=r?Symbol.for("react.profiler"):60114,y=r?Symbol.for("react.provider"):60109,z=r?Symbol.for("react.context"):60110,A=r?Symbol.for("react.async_mode"):60111,B=
r?Symbol.for("react.forward_ref"):60112;r&&Symbol.for("react.timeout");var C="function"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=0;c<b;c++)e+="&args[]="+encodeURIComponent(arguments[c+1]);n(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e)}
var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?D("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function G(){}
G.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
function M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}
function N(a){return"object"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}
function S(a,b,e,c){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,""===b?"."+T(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||"undefined"===typeof a?f=null:(f=C&&a[C]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),
h=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else"object"===d&&(e=""+a,D("31","[object Object]"===e?"object with keys {"+Object.keys(a).join(", ")+"}":e,""));return g}function T(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}
function V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g="";null!=e&&(g=(""+e).replace(O,"$&/")+"/");b=Q(b,g,c,d);null==a||S(a,"",V,b);R(b)}
var X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,"",U,b);R(b)},count:function(a){return null==a?0:S(a,"",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D("143");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,
_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D("267",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==
b.key&&(g=""+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:"16.4.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,
assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;

},{"fbjs/lib/emptyFunction":1197,"fbjs/lib/emptyObject":1198,"fbjs/lib/invariant":1202,"object-assign":1309}],1347:[function(require,module,exports){
(function (process){
'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require('./cjs/react.production.min.js');
} else {
  module.exports = require('./cjs/react.development.js');
}

}).call(this,require('_process'))
},{"./cjs/react.development.js":1345,"./cjs/react.production.min.js":1346,"_process":1327}],1348:[function(require,module,exports){
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":1349}],1349:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};
},{"./_stream_readable":1351,"./_stream_writable":1353,"core-util-is":80,"inherits":1233,"process-nextick-args":1326}],1350:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":1352,"core-util-is":80,"inherits":1233}],1351:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":1349,"./internal/streams/BufferList":1354,"./internal/streams/destroy":1355,"./internal/streams/stream":1356,"_process":1327,"core-util-is":80,"events":143,"inherits":1233,"isarray":1241,"process-nextick-args":1326,"safe-buffer":1363,"string_decoder/":1379,"util":40}],1352:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":1349,"core-util-is":80,"inherits":1233}],1353:[function(require,module,exports){
(function (process,global,setImmediate){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  pna.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("timers").setImmediate)
},{"./_stream_duplex":1349,"./internal/streams/destroy":1355,"./internal/streams/stream":1356,"_process":1327,"core-util-is":80,"inherits":1233,"process-nextick-args":1326,"safe-buffer":1363,"timers":1382,"util-deprecate":1388}],1354:[function(require,module,exports){
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
var util = require('util');

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}
},{"safe-buffer":1363,"util":40}],1355:[function(require,module,exports){
'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":1326}],1356:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":143}],1357:[function(require,module,exports){
module.exports = require('./readable').PassThrough

},{"./readable":1358}],1358:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":1349,"./lib/_stream_passthrough.js":1350,"./lib/_stream_readable.js":1351,"./lib/_stream_transform.js":1352,"./lib/_stream_writable.js":1353}],1359:[function(require,module,exports){
module.exports = require('./readable').Transform

},{"./readable":1358}],1360:[function(require,module,exports){
module.exports = require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":1353}],1361:[function(require,module,exports){
(function (Buffer){
'use strict';

const Readable = require('stream').Readable;
const lowercaseKeys = require('lowercase-keys');

class Response extends Readable {
	constructor(statusCode, headers, body, url) {
		if (typeof statusCode !== 'number') {
			throw new TypeError('Argument `statusCode` should be a number');
		}
		if (typeof headers !== 'object') {
			throw new TypeError('Argument `headers` should be an object');
		}
		if (!(body instanceof Buffer)) {
			throw new TypeError('Argument `body` should be a buffer');
		}
		if (typeof url !== 'string') {
			throw new TypeError('Argument `url` should be a string');
		}

		super();
		this.statusCode = statusCode;
		this.headers = lowercaseKeys(headers);
		this.body = body;
		this.url = url;
	}

	_read() {
		this.push(this.body);
		this.push(null);
	}
}

module.exports = Response;

}).call(this,require("buffer").Buffer)
},{"buffer":71,"lowercase-keys":1302,"stream":1373}],1362:[function(require,module,exports){
'use strict'
var Buffer = require('buffer').Buffer
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

},{"buffer":71,"hash-base":1216,"inherits":1233}],1363:[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":71}],1364:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

},{"safe-buffer":1363}],1365:[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":1366,"./sha1":1367,"./sha224":1368,"./sha256":1369,"./sha384":1370,"./sha512":1371}],1366:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

},{"./hash":1364,"inherits":1233,"safe-buffer":1363}],1367:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

},{"./hash":1364,"inherits":1233,"safe-buffer":1363}],1368:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

},{"./hash":1364,"./sha256":1369,"inherits":1233,"safe-buffer":1363}],1369:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

},{"./hash":1364,"inherits":1233,"safe-buffer":1363}],1370:[function(require,module,exports){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

},{"./hash":1364,"./sha512":1371,"inherits":1233,"safe-buffer":1363}],1371:[function(require,module,exports){
var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

},{"./hash":1364,"inherits":1233,"safe-buffer":1363}],1372:[function(require,module,exports){
'use strict';
const isPlainObj = require('is-plain-obj');

module.exports = (obj, opts) => {
	if (!isPlainObj(obj)) {
		throw new TypeError('Expected a plain object');
	}

	opts = opts || {};

	// DEPRECATED
	if (typeof opts === 'function') {
		throw new TypeError('Specify the compare function as an option instead');
	}

	const deep = opts.deep;
	const seenInput = [];
	const seenOutput = [];

	const sortKeys = x => {
		const seenIndex = seenInput.indexOf(x);

		if (seenIndex !== -1) {
			return seenOutput[seenIndex];
		}

		const ret = {};
		const keys = Object.keys(x).sort(opts.compare);

		seenInput.push(x);
		seenOutput.push(ret);

		for (let i = 0; i < keys.length; i++) {
			const key = keys[i];
			const val = x[key];

			if (deep && Array.isArray(val)) {
				const retArr = [];

				for (let j = 0; j < val.length; j++) {
					retArr[j] = isPlainObj(val[j]) ? sortKeys(val[j]) : val[j];
				}

				ret[key] = retArr;
				continue;
			}

			ret[key] = deep && isPlainObj(val) ? sortKeys(val) : val;
		}

		return ret;
	};

	return sortKeys(obj);
};

},{"is-plain-obj":1238}],1373:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":143,"inherits":1233,"readable-stream/duplex.js":1348,"readable-stream/passthrough.js":1357,"readable-stream/readable.js":1358,"readable-stream/transform.js":1359,"readable-stream/writable.js":1360}],1374:[function(require,module,exports){
(function (global){
var ClientRequest = require('./lib/request')
var response = require('./lib/response')
var extend = require('xtend')
var statusCodes = require('builtin-status-codes')
var url = require('url')

var http = exports

http.request = function (opts, cb) {
	if (typeof opts === 'string')
		opts = url.parse(opts)
	else
		opts = extend(opts)

	// Normally, the page is loaded from http or https, so not specifying a protocol
	// will result in a (valid) protocol-relative url. However, this won't work if
	// the protocol is something else, like 'file:'
	var defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''

	var protocol = opts.protocol || defaultProtocol
	var host = opts.hostname || opts.host
	var port = opts.port
	var path = opts.path || '/'

	// Necessary for IPv6 addresses
	if (host && host.indexOf(':') !== -1)
		host = '[' + host + ']'

	// This may be a relative url. The browser should always be able to interpret it correctly.
	opts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path
	opts.method = (opts.method || 'GET').toUpperCase()
	opts.headers = opts.headers || {}

	// Also valid opts.auth, opts.mode

	var req = new ClientRequest(opts)
	if (cb)
		req.on('response', cb)
	return req
}

http.get = function get (opts, cb) {
	var req = http.request(opts, cb)
	req.end()
	return req
}

http.ClientRequest = ClientRequest
http.IncomingMessage = response.IncomingMessage

http.Agent = function () {}
http.Agent.defaultMaxSockets = 4

http.globalAgent = new http.Agent()

http.STATUS_CODES = statusCodes

http.METHODS = [
	'CHECKOUT',
	'CONNECT',
	'COPY',
	'DELETE',
	'GET',
	'HEAD',
	'LOCK',
	'M-SEARCH',
	'MERGE',
	'MKACTIVITY',
	'MKCOL',
	'MOVE',
	'NOTIFY',
	'OPTIONS',
	'PATCH',
	'POST',
	'PROPFIND',
	'PROPPATCH',
	'PURGE',
	'PUT',
	'REPORT',
	'SEARCH',
	'SUBSCRIBE',
	'TRACE',
	'UNLOCK',
	'UNSUBSCRIBE'
]
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./lib/request":1376,"./lib/response":1377,"builtin-status-codes":72,"url":1386,"xtend":1465}],1375:[function(require,module,exports){
(function (global){
exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)

exports.writableStream = isFunction(global.WritableStream)

exports.abortController = isFunction(global.AbortController)

exports.blobConstructor = false
try {
	new Blob([new ArrayBuffer(1)])
	exports.blobConstructor = true
} catch (e) {}

// The xhr request to example.com may violate some restrictive CSP configurations,
// so if we're running in a browser that supports `fetch`, avoid calling getXHR()
// and assume support for certain features below.
var xhr
function getXHR () {
	// Cache the xhr value
	if (xhr !== undefined) return xhr

	if (global.XMLHttpRequest) {
		xhr = new global.XMLHttpRequest()
		// If XDomainRequest is available (ie only, where xhr might not work
		// cross domain), use the page location. Otherwise use example.com
		// Note: this doesn't actually make an http request.
		try {
			xhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')
		} catch(e) {
			xhr = null
		}
	} else {
		// Service workers don't have XHR
		xhr = null
	}
	return xhr
}

function checkTypeSupport (type) {
	var xhr = getXHR()
	if (!xhr) return false
	try {
		xhr.responseType = type
		return xhr.responseType === type
	} catch (e) {}
	return false
}

// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.
// Safari 7.1 appears to have fixed this bug.
var haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'
var haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)

// If fetch is supported, then arraybuffer will be supported too. Skip calling
// checkTypeSupport(), since that calls getXHR().
exports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))

// These next two tests unavoidably show warnings in Chrome. Since fetch will always
// be used if it's available, just return false for these to avoid the warnings.
exports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')
exports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&
	checkTypeSupport('moz-chunked-arraybuffer')

// If fetch is supported, then overrideMimeType will be supported too. Skip calling
// getXHR().
exports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)

exports.vbArray = isFunction(global.VBArray)

function isFunction (value) {
	return typeof value === 'function'
}

xhr = null // Help gc

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],1376:[function(require,module,exports){
(function (process,global,Buffer){
var capability = require('./capability')
var inherits = require('inherits')
var response = require('./response')
var stream = require('readable-stream')
var toArrayBuffer = require('to-arraybuffer')

var IncomingMessage = response.IncomingMessage
var rStates = response.readyStates

function decideMode (preferBinary, useFetch) {
	if (capability.fetch && useFetch) {
		return 'fetch'
	} else if (capability.mozchunkedarraybuffer) {
		return 'moz-chunked-arraybuffer'
	} else if (capability.msstream) {
		return 'ms-stream'
	} else if (capability.arraybuffer && preferBinary) {
		return 'arraybuffer'
	} else if (capability.vbArray && preferBinary) {
		return 'text:vbarray'
	} else {
		return 'text'
	}
}

var ClientRequest = module.exports = function (opts) {
	var self = this
	stream.Writable.call(self)

	self._opts = opts
	self._body = []
	self._headers = {}
	if (opts.auth)
		self.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))
	Object.keys(opts.headers).forEach(function (name) {
		self.setHeader(name, opts.headers[name])
	})

	var preferBinary
	var useFetch = true
	if (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {
		// If the use of XHR should be preferred. Not typically needed.
		useFetch = false
		preferBinary = true
	} else if (opts.mode === 'prefer-streaming') {
		// If streaming is a high priority but binary compatibility and
		// the accuracy of the 'content-type' header aren't
		preferBinary = false
	} else if (opts.mode === 'allow-wrong-content-type') {
		// If streaming is more important than preserving the 'content-type' header
		preferBinary = !capability.overrideMimeType
	} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {
		// Use binary if text streaming may corrupt data or the content-type header, or for speed
		preferBinary = true
	} else {
		throw new Error('Invalid value for opts.mode')
	}
	self._mode = decideMode(preferBinary, useFetch)
	self._fetchTimer = null

	self.on('finish', function () {
		self._onFinish()
	})
}

inherits(ClientRequest, stream.Writable)

ClientRequest.prototype.setHeader = function (name, value) {
	var self = this
	var lowerName = name.toLowerCase()
	// This check is not necessary, but it prevents warnings from browsers about setting unsafe
	// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but
	// http-browserify did it, so I will too.
	if (unsafeHeaders.indexOf(lowerName) !== -1)
		return

	self._headers[lowerName] = {
		name: name,
		value: value
	}
}

ClientRequest.prototype.getHeader = function (name) {
	var header = this._headers[name.toLowerCase()]
	if (header)
		return header.value
	return null
}

ClientRequest.prototype.removeHeader = function (name) {
	var self = this
	delete self._headers[name.toLowerCase()]
}

ClientRequest.prototype._onFinish = function () {
	var self = this

	if (self._destroyed)
		return
	var opts = self._opts

	var headersObj = self._headers
	var body = null
	if (opts.method !== 'GET' && opts.method !== 'HEAD') {
		if (capability.arraybuffer) {
			body = toArrayBuffer(Buffer.concat(self._body))
		} else if (capability.blobConstructor) {
			body = new global.Blob(self._body.map(function (buffer) {
				return toArrayBuffer(buffer)
			}), {
				type: (headersObj['content-type'] || {}).value || ''
			})
		} else {
			// get utf8 string
			body = Buffer.concat(self._body).toString()
		}
	}

	// create flattened list of headers
	var headersList = []
	Object.keys(headersObj).forEach(function (keyName) {
		var name = headersObj[keyName].name
		var value = headersObj[keyName].value
		if (Array.isArray(value)) {
			value.forEach(function (v) {
				headersList.push([name, v])
			})
		} else {
			headersList.push([name, value])
		}
	})

	if (self._mode === 'fetch') {
		var signal = null
		var fetchTimer = null
		if (capability.abortController) {
			var controller = new AbortController()
			signal = controller.signal
			self._fetchAbortController = controller

			if ('requestTimeout' in opts && opts.requestTimeout !== 0) {
				self._fetchTimer = global.setTimeout(function () {
					self.emit('requestTimeout')
					if (self._fetchAbortController)
						self._fetchAbortController.abort()
				}, opts.requestTimeout)
			}
		}

		global.fetch(self._opts.url, {
			method: self._opts.method,
			headers: headersList,
			body: body || undefined,
			mode: 'cors',
			credentials: opts.withCredentials ? 'include' : 'same-origin',
			signal: signal
		}).then(function (response) {
			self._fetchResponse = response
			self._connect()
		}, function (reason) {
			global.clearTimeout(self._fetchTimer)
			if (!self._destroyed)
				self.emit('error', reason)
		})
	} else {
		var xhr = self._xhr = new global.XMLHttpRequest()
		try {
			xhr.open(self._opts.method, self._opts.url, true)
		} catch (err) {
			process.nextTick(function () {
				self.emit('error', err)
			})
			return
		}

		// Can't set responseType on really old browsers
		if ('responseType' in xhr)
			xhr.responseType = self._mode.split(':')[0]

		if ('withCredentials' in xhr)
			xhr.withCredentials = !!opts.withCredentials

		if (self._mode === 'text' && 'overrideMimeType' in xhr)
			xhr.overrideMimeType('text/plain; charset=x-user-defined')

		if ('requestTimeout' in opts) {
			xhr.timeout = opts.requestTimeout
			xhr.ontimeout = function () {
				self.emit('requestTimeout')
			}
		}

		headersList.forEach(function (header) {
			xhr.setRequestHeader(header[0], header[1])
		})

		self._response = null
		xhr.onreadystatechange = function () {
			switch (xhr.readyState) {
				case rStates.LOADING:
				case rStates.DONE:
					self._onXHRProgress()
					break
			}
		}
		// Necessary for streaming in Firefox, since xhr.response is ONLY defined
		// in onprogress, not in onreadystatechange with xhr.readyState = 3
		if (self._mode === 'moz-chunked-arraybuffer') {
			xhr.onprogress = function () {
				self._onXHRProgress()
			}
		}

		xhr.onerror = function () {
			if (self._destroyed)
				return
			self.emit('error', new Error('XHR error'))
		}

		try {
			xhr.send(body)
		} catch (err) {
			process.nextTick(function () {
				self.emit('error', err)
			})
			return
		}
	}
}

/**
 * Checks if xhr.status is readable and non-zero, indicating no error.
 * Even though the spec says it should be available in readyState 3,
 * accessing it throws an exception in IE8
 */
function statusValid (xhr) {
	try {
		var status = xhr.status
		return (status !== null && status !== 0)
	} catch (e) {
		return false
	}
}

ClientRequest.prototype._onXHRProgress = function () {
	var self = this

	if (!statusValid(self._xhr) || self._destroyed)
		return

	if (!self._response)
		self._connect()

	self._response._onXHRProgress()
}

ClientRequest.prototype._connect = function () {
	var self = this

	if (self._destroyed)
		return

	self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)
	self._response.on('error', function(err) {
		self.emit('error', err)
	})

	self.emit('response', self._response)
}

ClientRequest.prototype._write = function (chunk, encoding, cb) {
	var self = this

	self._body.push(chunk)
	cb()
}

ClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {
	var self = this
	self._destroyed = true
	global.clearTimeout(self._fetchTimer)
	if (self._response)
		self._response._destroyed = true
	if (self._xhr)
		self._xhr.abort()
	else if (self._fetchAbortController)
		self._fetchAbortController.abort()
}

ClientRequest.prototype.end = function (data, encoding, cb) {
	var self = this
	if (typeof data === 'function') {
		cb = data
		data = undefined
	}

	stream.Writable.prototype.end.call(self, data, encoding, cb)
}

ClientRequest.prototype.flushHeaders = function () {}
ClientRequest.prototype.setTimeout = function () {}
ClientRequest.prototype.setNoDelay = function () {}
ClientRequest.prototype.setSocketKeepAlive = function () {}

// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method
var unsafeHeaders = [
	'accept-charset',
	'accept-encoding',
	'access-control-request-headers',
	'access-control-request-method',
	'connection',
	'content-length',
	'cookie',
	'cookie2',
	'date',
	'dnt',
	'expect',
	'host',
	'keep-alive',
	'origin',
	'referer',
	'te',
	'trailer',
	'transfer-encoding',
	'upgrade',
	'via'
]

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"./capability":1375,"./response":1377,"_process":1327,"buffer":71,"inherits":1233,"readable-stream":1358,"to-arraybuffer":1383}],1377:[function(require,module,exports){
(function (process,global,Buffer){
var capability = require('./capability')
var inherits = require('inherits')
var stream = require('readable-stream')

var rStates = exports.readyStates = {
	UNSENT: 0,
	OPENED: 1,
	HEADERS_RECEIVED: 2,
	LOADING: 3,
	DONE: 4
}

var IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {
	var self = this
	stream.Readable.call(self)

	self._mode = mode
	self.headers = {}
	self.rawHeaders = []
	self.trailers = {}
	self.rawTrailers = []

	// Fake the 'close' event, but only once 'end' fires
	self.on('end', function () {
		// The nextTick is necessary to prevent the 'request' module from causing an infinite loop
		process.nextTick(function () {
			self.emit('close')
		})
	})

	if (mode === 'fetch') {
		self._fetchResponse = response

		self.url = response.url
		self.statusCode = response.status
		self.statusMessage = response.statusText
		
		response.headers.forEach(function (header, key){
			self.headers[key.toLowerCase()] = header
			self.rawHeaders.push(key, header)
		})

		if (capability.writableStream) {
			var writable = new WritableStream({
				write: function (chunk) {
					return new Promise(function (resolve, reject) {
						if (self._destroyed) {
							reject()
						} else if(self.push(new Buffer(chunk))) {
							resolve()
						} else {
							self._resumeFetch = resolve
						}
					})
				},
				close: function () {
					global.clearTimeout(fetchTimer)
					if (!self._destroyed)
						self.push(null)
				},
				abort: function (err) {
					if (!self._destroyed)
						self.emit('error', err)
				}
			})

			try {
				response.body.pipeTo(writable).catch(function (err) {
					global.clearTimeout(fetchTimer)
					if (!self._destroyed)
						self.emit('error', err)
				})
				return
			} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this
		}
		// fallback for when writableStream or pipeTo aren't available
		var reader = response.body.getReader()
		function read () {
			reader.read().then(function (result) {
				if (self._destroyed)
					return
				if (result.done) {
					global.clearTimeout(fetchTimer)
					self.push(null)
					return
				}
				self.push(new Buffer(result.value))
				read()
			}).catch(function (err) {
				global.clearTimeout(fetchTimer)
				if (!self._destroyed)
					self.emit('error', err)
			})
		}
		read()
	} else {
		self._xhr = xhr
		self._pos = 0

		self.url = xhr.responseURL
		self.statusCode = xhr.status
		self.statusMessage = xhr.statusText
		var headers = xhr.getAllResponseHeaders().split(/\r?\n/)
		headers.forEach(function (header) {
			var matches = header.match(/^([^:]+):\s*(.*)/)
			if (matches) {
				var key = matches[1].toLowerCase()
				if (key === 'set-cookie') {
					if (self.headers[key] === undefined) {
						self.headers[key] = []
					}
					self.headers[key].push(matches[2])
				} else if (self.headers[key] !== undefined) {
					self.headers[key] += ', ' + matches[2]
				} else {
					self.headers[key] = matches[2]
				}
				self.rawHeaders.push(matches[1], matches[2])
			}
		})

		self._charset = 'x-user-defined'
		if (!capability.overrideMimeType) {
			var mimeType = self.rawHeaders['mime-type']
			if (mimeType) {
				var charsetMatch = mimeType.match(/;\s*charset=([^;])(;|$)/)
				if (charsetMatch) {
					self._charset = charsetMatch[1].toLowerCase()
				}
			}
			if (!self._charset)
				self._charset = 'utf-8' // best guess
		}
	}
}

inherits(IncomingMessage, stream.Readable)

IncomingMessage.prototype._read = function () {
	var self = this

	var resolve = self._resumeFetch
	if (resolve) {
		self._resumeFetch = null
		resolve()
	}
}

IncomingMessage.prototype._onXHRProgress = function () {
	var self = this

	var xhr = self._xhr

	var response = null
	switch (self._mode) {
		case 'text:vbarray': // For IE9
			if (xhr.readyState !== rStates.DONE)
				break
			try {
				// This fails in IE8
				response = new global.VBArray(xhr.responseBody).toArray()
			} catch (e) {}
			if (response !== null) {
				self.push(new Buffer(response))
				break
			}
			// Falls through in IE8	
		case 'text':
			try { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4
				response = xhr.responseText
			} catch (e) {
				self._mode = 'text:vbarray'
				break
			}
			if (response.length > self._pos) {
				var newData = response.substr(self._pos)
				if (self._charset === 'x-user-defined') {
					var buffer = new Buffer(newData.length)
					for (var i = 0; i < newData.length; i++)
						buffer[i] = newData.charCodeAt(i) & 0xff

					self.push(buffer)
				} else {
					self.push(newData, self._charset)
				}
				self._pos = response.length
			}
			break
		case 'arraybuffer':
			if (xhr.readyState !== rStates.DONE || !xhr.response)
				break
			response = xhr.response
			self.push(new Buffer(new Uint8Array(response)))
			break
		case 'moz-chunked-arraybuffer': // take whole
			response = xhr.response
			if (xhr.readyState !== rStates.LOADING || !response)
				break
			self.push(new Buffer(new Uint8Array(response)))
			break
		case 'ms-stream':
			response = xhr.response
			if (xhr.readyState !== rStates.LOADING)
				break
			var reader = new global.MSStreamReader()
			reader.onprogress = function () {
				if (reader.result.byteLength > self._pos) {
					self.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))
					self._pos = reader.result.byteLength
				}
			}
			reader.onload = function () {
				self.push(null)
			}
			// reader.onerror = ??? // TODO: this
			reader.readAsArrayBuffer(response)
			break
	}

	// The ms-stream case handles end separately in reader.onload()
	if (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {
		self.push(null)
	}
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"./capability":1375,"_process":1327,"buffer":71,"inherits":1233,"readable-stream":1358}],1378:[function(require,module,exports){
'use strict';
module.exports = function (str) {
	return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
		return '%' + c.charCodeAt(0).toString(16).toUpperCase();
	});
};

},{}],1379:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":1363}],1380:[function(require,module,exports){
(function (Buffer){
'use strict';
var isUtf8 = require('is-utf8');

module.exports = function (x) {
	// Catches EFBBBF (UTF-8 BOM) because the buffer-to-string
	// conversion translates it to FEFF (UTF-16 BOM)
	if (typeof x === 'string' && x.charCodeAt(0) === 0xFEFF) {
		return x.slice(1);
	}

	if (Buffer.isBuffer(x) && isUtf8(x) &&
		x[0] === 0xEF && x[1] === 0xBB && x[2] === 0xBF) {
		return x.slice(3);
	}

	return x;
};

}).call(this,{"isBuffer":require("../is-buffer/index.js")})
},{"../is-buffer/index.js":1235,"is-utf8":1240}],1381:[function(require,module,exports){
'use strict';

module.exports = function (req, time) {
	if (req.timeoutTimer) {
		return req;
	}

	var delays = isNaN(time) ? time : {socket: time, connect: time};
	var host = req._headers ? (' to ' + req._headers.host) : '';

	if (delays.connect !== undefined) {
		req.timeoutTimer = setTimeout(function timeoutHandler() {
			req.abort();
			var e = new Error('Connection timed out on request' + host);
			e.code = 'ETIMEDOUT';
			req.emit('error', e);
		}, delays.connect);
	}

	// Clear the connection timeout timer once a socket is assigned to the
	// request and is connected.
	req.on('socket', function assign(socket) {
		// Socket may come from Agent pool and may be already connected.
		if (!(socket.connecting || socket._connecting)) {
			connect();
			return;
		}

		socket.once('connect', connect);
	});

	function clear() {
		if (req.timeoutTimer) {
			clearTimeout(req.timeoutTimer);
			req.timeoutTimer = null;
		}
	}

	function connect() {
		clear();

		if (delays.socket !== undefined) {
			// Abort the request if there is no activity on the socket for more
			// than `delays.socket` milliseconds.
			req.setTimeout(delays.socket, function socketTimeoutHandler() {
				req.abort();
				var e = new Error('Socket timed out on request' + host);
				e.code = 'ESOCKETTIMEDOUT';
				req.emit('error', e);
			});
		}
	}

	return req.on('error', clear);
};

},{}],1382:[function(require,module,exports){
(function (setImmediate,clearImmediate){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":1327,"timers":1382}],1383:[function(require,module,exports){
var Buffer = require('buffer').Buffer

module.exports = function (buf) {
	// If the buffer is backed by a Uint8Array, a faster version will work
	if (buf instanceof Uint8Array) {
		// If the buffer isn't a subarray, return the underlying ArrayBuffer
		if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {
			return buf.buffer
		} else if (typeof buf.buffer.slice === 'function') {
			// Otherwise we need to get a proper copy
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)
		}
	}

	if (Buffer.isBuffer(buf)) {
		// This is the slow version that will work with any Buffer
		// implementation (even in old browsers)
		var arrayCopy = new Uint8Array(buf.length)
		var len = buf.length
		for (var i = 0; i < len; i++) {
			arrayCopy[i] = buf[i]
		}
		return arrayCopy.buffer
	} else {
		throw new Error('Argument must be a Buffer')
	}
}

},{"buffer":71}],1384:[function(require,module,exports){
'use strict';
const url = require('url');
const prependHttp = require('prepend-http');

module.exports = (input, options) => {
	if (typeof input !== 'string') {
		throw new TypeError(`Expected \`url\` to be of type \`string\`, got \`${typeof input}\` instead.`);
	}

	const finalUrl = prependHttp(input, Object.assign({https: true}, options));
	return url.parse(finalUrl);
};

},{"prepend-http":1325,"url":1386}],1385:[function(require,module,exports){
'use strict';



// Copied from https://github.com/nodejs/node/blob/master/lib/internal/url.js

function urlToOptions(url) {
  var options = {
    protocol: url.protocol,
    hostname: url.hostname,
    hash: url.hash,
    search: url.search,
    pathname: url.pathname,
    path: `${url.pathname}${url.search}`,
    href: url.href
  };
  if (url.port !== '') {
    options.port = Number(url.port);
  }
  if (url.username || url.password) {
    options.auth = `${url.username}:${url.password}`;
  }
  return options;
}



module.exports = urlToOptions;

},{}],1386:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = require('punycode');
var util = require('./util');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

},{"./util":1387,"punycode":69,"querystring":1339}],1387:[function(require,module,exports){
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};

},{}],1388:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],1389:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],1390:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":1389,"_process":1327,"inherits":1233}],1391:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toDate = require('./lib/toDate');

var _toDate2 = _interopRequireDefault(_toDate);

var _toFloat = require('./lib/toFloat');

var _toFloat2 = _interopRequireDefault(_toFloat);

var _toInt = require('./lib/toInt');

var _toInt2 = _interopRequireDefault(_toInt);

var _toBoolean = require('./lib/toBoolean');

var _toBoolean2 = _interopRequireDefault(_toBoolean);

var _equals = require('./lib/equals');

var _equals2 = _interopRequireDefault(_equals);

var _contains = require('./lib/contains');

var _contains2 = _interopRequireDefault(_contains);

var _matches = require('./lib/matches');

var _matches2 = _interopRequireDefault(_matches);

var _isEmail = require('./lib/isEmail');

var _isEmail2 = _interopRequireDefault(_isEmail);

var _isURL = require('./lib/isURL');

var _isURL2 = _interopRequireDefault(_isURL);

var _isMACAddress = require('./lib/isMACAddress');

var _isMACAddress2 = _interopRequireDefault(_isMACAddress);

var _isIP = require('./lib/isIP');

var _isIP2 = _interopRequireDefault(_isIP);

var _isFQDN = require('./lib/isFQDN');

var _isFQDN2 = _interopRequireDefault(_isFQDN);

var _isBoolean = require('./lib/isBoolean');

var _isBoolean2 = _interopRequireDefault(_isBoolean);

var _isAlpha = require('./lib/isAlpha');

var _isAlpha2 = _interopRequireDefault(_isAlpha);

var _isAlphanumeric = require('./lib/isAlphanumeric');

var _isAlphanumeric2 = _interopRequireDefault(_isAlphanumeric);

var _isNumeric = require('./lib/isNumeric');

var _isNumeric2 = _interopRequireDefault(_isNumeric);

var _isPort = require('./lib/isPort');

var _isPort2 = _interopRequireDefault(_isPort);

var _isLowercase = require('./lib/isLowercase');

var _isLowercase2 = _interopRequireDefault(_isLowercase);

var _isUppercase = require('./lib/isUppercase');

var _isUppercase2 = _interopRequireDefault(_isUppercase);

var _isAscii = require('./lib/isAscii');

var _isAscii2 = _interopRequireDefault(_isAscii);

var _isFullWidth = require('./lib/isFullWidth');

var _isFullWidth2 = _interopRequireDefault(_isFullWidth);

var _isHalfWidth = require('./lib/isHalfWidth');

var _isHalfWidth2 = _interopRequireDefault(_isHalfWidth);

var _isVariableWidth = require('./lib/isVariableWidth');

var _isVariableWidth2 = _interopRequireDefault(_isVariableWidth);

var _isMultibyte = require('./lib/isMultibyte');

var _isMultibyte2 = _interopRequireDefault(_isMultibyte);

var _isSurrogatePair = require('./lib/isSurrogatePair');

var _isSurrogatePair2 = _interopRequireDefault(_isSurrogatePair);

var _isInt = require('./lib/isInt');

var _isInt2 = _interopRequireDefault(_isInt);

var _isFloat = require('./lib/isFloat');

var _isFloat2 = _interopRequireDefault(_isFloat);

var _isDecimal = require('./lib/isDecimal');

var _isDecimal2 = _interopRequireDefault(_isDecimal);

var _isHexadecimal = require('./lib/isHexadecimal');

var _isHexadecimal2 = _interopRequireDefault(_isHexadecimal);

var _isDivisibleBy = require('./lib/isDivisibleBy');

var _isDivisibleBy2 = _interopRequireDefault(_isDivisibleBy);

var _isHexColor = require('./lib/isHexColor');

var _isHexColor2 = _interopRequireDefault(_isHexColor);

var _isISRC = require('./lib/isISRC');

var _isISRC2 = _interopRequireDefault(_isISRC);

var _isMD = require('./lib/isMD5');

var _isMD2 = _interopRequireDefault(_isMD);

var _isHash = require('./lib/isHash');

var _isHash2 = _interopRequireDefault(_isHash);

var _isJSON = require('./lib/isJSON');

var _isJSON2 = _interopRequireDefault(_isJSON);

var _isEmpty = require('./lib/isEmpty');

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _isLength = require('./lib/isLength');

var _isLength2 = _interopRequireDefault(_isLength);

var _isByteLength = require('./lib/isByteLength');

var _isByteLength2 = _interopRequireDefault(_isByteLength);

var _isUUID = require('./lib/isUUID');

var _isUUID2 = _interopRequireDefault(_isUUID);

var _isMongoId = require('./lib/isMongoId');

var _isMongoId2 = _interopRequireDefault(_isMongoId);

var _isAfter = require('./lib/isAfter');

var _isAfter2 = _interopRequireDefault(_isAfter);

var _isBefore = require('./lib/isBefore');

var _isBefore2 = _interopRequireDefault(_isBefore);

var _isIn = require('./lib/isIn');

var _isIn2 = _interopRequireDefault(_isIn);

var _isCreditCard = require('./lib/isCreditCard');

var _isCreditCard2 = _interopRequireDefault(_isCreditCard);

var _isISIN = require('./lib/isISIN');

var _isISIN2 = _interopRequireDefault(_isISIN);

var _isISBN = require('./lib/isISBN');

var _isISBN2 = _interopRequireDefault(_isISBN);

var _isISSN = require('./lib/isISSN');

var _isISSN2 = _interopRequireDefault(_isISSN);

var _isMobilePhone = require('./lib/isMobilePhone');

var _isMobilePhone2 = _interopRequireDefault(_isMobilePhone);

var _isCurrency = require('./lib/isCurrency');

var _isCurrency2 = _interopRequireDefault(_isCurrency);

var _isISO = require('./lib/isISO8601');

var _isISO2 = _interopRequireDefault(_isISO);

var _isRFC = require('./lib/isRFC3339');

var _isRFC2 = _interopRequireDefault(_isRFC);

var _isISO31661Alpha = require('./lib/isISO31661Alpha2');

var _isISO31661Alpha2 = _interopRequireDefault(_isISO31661Alpha);

var _isISO31661Alpha3 = require('./lib/isISO31661Alpha3');

var _isISO31661Alpha4 = _interopRequireDefault(_isISO31661Alpha3);

var _isBase = require('./lib/isBase64');

var _isBase2 = _interopRequireDefault(_isBase);

var _isDataURI = require('./lib/isDataURI');

var _isDataURI2 = _interopRequireDefault(_isDataURI);

var _isMimeType = require('./lib/isMimeType');

var _isMimeType2 = _interopRequireDefault(_isMimeType);

var _isLatLong = require('./lib/isLatLong');

var _isLatLong2 = _interopRequireDefault(_isLatLong);

var _isPostalCode = require('./lib/isPostalCode');

var _isPostalCode2 = _interopRequireDefault(_isPostalCode);

var _ltrim = require('./lib/ltrim');

var _ltrim2 = _interopRequireDefault(_ltrim);

var _rtrim = require('./lib/rtrim');

var _rtrim2 = _interopRequireDefault(_rtrim);

var _trim = require('./lib/trim');

var _trim2 = _interopRequireDefault(_trim);

var _escape = require('./lib/escape');

var _escape2 = _interopRequireDefault(_escape);

var _unescape = require('./lib/unescape');

var _unescape2 = _interopRequireDefault(_unescape);

var _stripLow = require('./lib/stripLow');

var _stripLow2 = _interopRequireDefault(_stripLow);

var _whitelist = require('./lib/whitelist');

var _whitelist2 = _interopRequireDefault(_whitelist);

var _blacklist = require('./lib/blacklist');

var _blacklist2 = _interopRequireDefault(_blacklist);

var _isWhitelisted = require('./lib/isWhitelisted');

var _isWhitelisted2 = _interopRequireDefault(_isWhitelisted);

var _normalizeEmail = require('./lib/normalizeEmail');

var _normalizeEmail2 = _interopRequireDefault(_normalizeEmail);

var _toString = require('./lib/util/toString');

var _toString2 = _interopRequireDefault(_toString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var version = '10.3.0';

var validator = {
  version: version,
  toDate: _toDate2.default,
  toFloat: _toFloat2.default,
  toInt: _toInt2.default,
  toBoolean: _toBoolean2.default,
  equals: _equals2.default,
  contains: _contains2.default,
  matches: _matches2.default,
  isEmail: _isEmail2.default,
  isURL: _isURL2.default,
  isMACAddress: _isMACAddress2.default,
  isIP: _isIP2.default,
  isFQDN: _isFQDN2.default,
  isBoolean: _isBoolean2.default,
  isAlpha: _isAlpha2.default,
  isAlphanumeric: _isAlphanumeric2.default,
  isNumeric: _isNumeric2.default,
  isPort: _isPort2.default,
  isLowercase: _isLowercase2.default,
  isUppercase: _isUppercase2.default,
  isAscii: _isAscii2.default,
  isFullWidth: _isFullWidth2.default,
  isHalfWidth: _isHalfWidth2.default,
  isVariableWidth: _isVariableWidth2.default,
  isMultibyte: _isMultibyte2.default,
  isSurrogatePair: _isSurrogatePair2.default,
  isInt: _isInt2.default,
  isFloat: _isFloat2.default,
  isDecimal: _isDecimal2.default,
  isHexadecimal: _isHexadecimal2.default,
  isDivisibleBy: _isDivisibleBy2.default,
  isHexColor: _isHexColor2.default,
  isISRC: _isISRC2.default,
  isMD5: _isMD2.default,
  isHash: _isHash2.default,
  isJSON: _isJSON2.default,
  isEmpty: _isEmpty2.default,
  isLength: _isLength2.default,
  isByteLength: _isByteLength2.default,
  isUUID: _isUUID2.default,
  isMongoId: _isMongoId2.default,
  isAfter: _isAfter2.default,
  isBefore: _isBefore2.default,
  isIn: _isIn2.default,
  isCreditCard: _isCreditCard2.default,
  isISIN: _isISIN2.default,
  isISBN: _isISBN2.default,
  isISSN: _isISSN2.default,
  isMobilePhone: _isMobilePhone2.default,
  isPostalCode: _isPostalCode2.default,
  isPostalCodeLocales: _isPostalCode.locales,
  isCurrency: _isCurrency2.default,
  isISO8601: _isISO2.default,
  isRFC3339: _isRFC2.default,
  isISO31661Alpha2: _isISO31661Alpha2.default,
  isISO31661Alpha3: _isISO31661Alpha4.default,
  isBase64: _isBase2.default,
  isDataURI: _isDataURI2.default,
  isMimeType: _isMimeType2.default,
  isLatLong: _isLatLong2.default,
  ltrim: _ltrim2.default,
  rtrim: _rtrim2.default,
  trim: _trim2.default,
  escape: _escape2.default,
  unescape: _unescape2.default,
  stripLow: _stripLow2.default,
  whitelist: _whitelist2.default,
  blacklist: _blacklist2.default,
  isWhitelisted: _isWhitelisted2.default,
  normalizeEmail: _normalizeEmail2.default,
  toString: _toString2.default
};

exports.default = validator;
module.exports = exports['default'];
},{"./lib/blacklist":1393,"./lib/contains":1394,"./lib/equals":1395,"./lib/escape":1396,"./lib/isAfter":1397,"./lib/isAlpha":1398,"./lib/isAlphanumeric":1399,"./lib/isAscii":1400,"./lib/isBase64":1401,"./lib/isBefore":1402,"./lib/isBoolean":1403,"./lib/isByteLength":1404,"./lib/isCreditCard":1405,"./lib/isCurrency":1406,"./lib/isDataURI":1407,"./lib/isDecimal":1408,"./lib/isDivisibleBy":1409,"./lib/isEmail":1410,"./lib/isEmpty":1411,"./lib/isFQDN":1412,"./lib/isFloat":1413,"./lib/isFullWidth":1414,"./lib/isHalfWidth":1415,"./lib/isHash":1416,"./lib/isHexColor":1417,"./lib/isHexadecimal":1418,"./lib/isIP":1419,"./lib/isISBN":1420,"./lib/isISIN":1421,"./lib/isISO31661Alpha2":1422,"./lib/isISO31661Alpha3":1423,"./lib/isISO8601":1424,"./lib/isISRC":1425,"./lib/isISSN":1426,"./lib/isIn":1427,"./lib/isInt":1428,"./lib/isJSON":1429,"./lib/isLatLong":1430,"./lib/isLength":1431,"./lib/isLowercase":1432,"./lib/isMACAddress":1433,"./lib/isMD5":1434,"./lib/isMimeType":1435,"./lib/isMobilePhone":1436,"./lib/isMongoId":1437,"./lib/isMultibyte":1438,"./lib/isNumeric":1439,"./lib/isPort":1440,"./lib/isPostalCode":1441,"./lib/isRFC3339":1442,"./lib/isSurrogatePair":1443,"./lib/isURL":1444,"./lib/isUUID":1445,"./lib/isUppercase":1446,"./lib/isVariableWidth":1447,"./lib/isWhitelisted":1448,"./lib/ltrim":1449,"./lib/matches":1450,"./lib/normalizeEmail":1451,"./lib/rtrim":1452,"./lib/stripLow":1453,"./lib/toBoolean":1454,"./lib/toDate":1455,"./lib/toFloat":1456,"./lib/toInt":1457,"./lib/trim":1458,"./lib/unescape":1459,"./lib/util/toString":1462,"./lib/whitelist":1463}],1392:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var alpha = exports.alpha = {
  'en-US': /^[A-Z]+$/i,
  'bg-BG': /^[А-Я]+$/i,
  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
  'da-DK': /^[A-ZÆØÅ]+$/i,
  'de-DE': /^[A-ZÄÖÜß]+$/i,
  'el-GR': /^[Α-ω]+$/i,
  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,
  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
  'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,
  'nb-NO': /^[A-ZÆØÅ]+$/i,
  'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,
  'nn-NO': /^[A-ZÆØÅ]+$/i,
  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
  'pt-PT': /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,
  'ru-RU': /^[А-ЯЁ]+$/i,
  'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,
  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,
  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,
  'sv-SE': /^[A-ZÅÄÖ]+$/i,
  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,
  'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,
  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/
};

var alphanumeric = exports.alphanumeric = {
  'en-US': /^[0-9A-Z]+$/i,
  'bg-BG': /^[0-9А-Я]+$/i,
  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
  'da-DK': /^[0-9A-ZÆØÅ]+$/i,
  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,
  'el-GR': /^[0-9Α-ω]+$/i,
  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,
  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
  'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,
  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
  'nb-NO': /^[0-9A-ZÆØÅ]+$/i,
  'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,
  'nn-NO': /^[0-9A-ZÆØÅ]+$/i,
  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
  'pt-PT': /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,
  'ru-RU': /^[0-9А-ЯЁ]+$/i,
  'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,
  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,
  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,
  'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,
  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,
  'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,
  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/
};

var decimal = exports.decimal = {
  'en-US': '.',
  ar: '٫'
};

var englishLocales = exports.englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];

for (var locale, i = 0; i < englishLocales.length; i++) {
  locale = 'en-' + englishLocales[i];
  alpha[locale] = alpha['en-US'];
  alphanumeric[locale] = alphanumeric['en-US'];
  decimal[locale] = decimal['en-US'];
}

// Source: http://www.localeplanet.com/java/
var arabicLocales = exports.arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];

for (var _locale, _i = 0; _i < arabicLocales.length; _i++) {
  _locale = 'ar-' + arabicLocales[_i];
  alpha[_locale] = alpha.ar;
  alphanumeric[_locale] = alphanumeric.ar;
  decimal[_locale] = decimal.ar;
}

// Source: https://en.wikipedia.org/wiki/Decimal_mark
var dotDecimal = exports.dotDecimal = [];
var commaDecimal = exports.commaDecimal = ['bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'es-ES', 'fr-FR', 'it-IT', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-Pl', 'pt-PT', 'ru-RU', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA'];

for (var _i2 = 0; _i2 < dotDecimal.length; _i2++) {
  decimal[dotDecimal[_i2]] = decimal['en-US'];
}

for (var _i3 = 0; _i3 < commaDecimal.length; _i3++) {
  decimal[commaDecimal[_i3]] = ',';
}

alpha['pt-BR'] = alpha['pt-PT'];
alphanumeric['pt-BR'] = alphanumeric['pt-PT'];
decimal['pt-BR'] = decimal['pt-PT'];
},{}],1393:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = blacklist;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function blacklist(str, chars) {
  (0, _assertString2.default)(str);
  return str.replace(new RegExp('[' + chars + ']+', 'g'), '');
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1394:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = contains;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _toString = require('./util/toString');

var _toString2 = _interopRequireDefault(_toString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function contains(str, elem) {
  (0, _assertString2.default)(str);
  return str.indexOf((0, _toString2.default)(elem)) >= 0;
}
module.exports = exports['default'];
},{"./util/assertString":1460,"./util/toString":1462}],1395:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = equals;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function equals(str, comparison) {
  (0, _assertString2.default)(str);
  return str === comparison;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1396:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = escape;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function escape(str) {
  (0, _assertString2.default)(str);
  return str.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\//g, '&#x2F;').replace(/\\/g, '&#x5C;').replace(/`/g, '&#96;');
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1397:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAfter;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _toDate = require('./toDate');

var _toDate2 = _interopRequireDefault(_toDate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isAfter(str) {
  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());

  (0, _assertString2.default)(str);
  var comparison = (0, _toDate2.default)(date);
  var original = (0, _toDate2.default)(str);
  return !!(original && comparison && original > comparison);
}
module.exports = exports['default'];
},{"./toDate":1455,"./util/assertString":1460}],1398:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAlpha;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _alpha = require('./alpha');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isAlpha(str) {
  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';

  (0, _assertString2.default)(str);
  if (locale in _alpha.alpha) {
    return _alpha.alpha[locale].test(str);
  }
  throw new Error('Invalid locale \'' + locale + '\'');
}
module.exports = exports['default'];
},{"./alpha":1392,"./util/assertString":1460}],1399:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAlphanumeric;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _alpha = require('./alpha');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isAlphanumeric(str) {
  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';

  (0, _assertString2.default)(str);
  if (locale in _alpha.alphanumeric) {
    return _alpha.alphanumeric[locale].test(str);
  }
  throw new Error('Invalid locale \'' + locale + '\'');
}
module.exports = exports['default'];
},{"./alpha":1392,"./util/assertString":1460}],1400:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAscii;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-control-regex */
var ascii = /^[\x00-\x7F]+$/;
/* eslint-enable no-control-regex */

function isAscii(str) {
  (0, _assertString2.default)(str);
  return ascii.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1401:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBase64;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var notBase64 = /[^A-Z0-9+\/=]/i;

function isBase64(str) {
  (0, _assertString2.default)(str);
  var len = str.length;
  if (!len || len % 4 !== 0 || notBase64.test(str)) {
    return false;
  }
  var firstPaddingChar = str.indexOf('=');
  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1402:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBefore;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _toDate = require('./toDate');

var _toDate2 = _interopRequireDefault(_toDate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isBefore(str) {
  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());

  (0, _assertString2.default)(str);
  var comparison = (0, _toDate2.default)(date);
  var original = (0, _toDate2.default)(str);
  return !!(original && comparison && original < comparison);
}
module.exports = exports['default'];
},{"./toDate":1455,"./util/assertString":1460}],1403:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBoolean;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isBoolean(str) {
  (0, _assertString2.default)(str);
  return ['true', 'false', '1', '0'].indexOf(str) >= 0;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1404:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isByteLength;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable prefer-rest-params */
function isByteLength(str, options) {
  (0, _assertString2.default)(str);
  var min = void 0;
  var max = void 0;
  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {
    min = options.min || 0;
    max = options.max;
  } else {
    // backwards compatibility: isByteLength(str, min [, max])
    min = arguments[1];
    max = arguments[2];
  }
  var len = encodeURI(str).split(/%..|./).length - 1;
  return len >= min && (typeof max === 'undefined' || len <= max);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1405:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isCreditCard;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable max-len */
var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/;
/* eslint-enable max-len */

function isCreditCard(str) {
  (0, _assertString2.default)(str);
  var sanitized = str.replace(/[- ]+/g, '');
  if (!creditCard.test(sanitized)) {
    return false;
  }
  var sum = 0;
  var digit = void 0;
  var tmpNum = void 0;
  var shouldDouble = void 0;
  for (var i = sanitized.length - 1; i >= 0; i--) {
    digit = sanitized.substring(i, i + 1);
    tmpNum = parseInt(digit, 10);
    if (shouldDouble) {
      tmpNum *= 2;
      if (tmpNum >= 10) {
        sum += tmpNum % 10 + 1;
      } else {
        sum += tmpNum;
      }
    } else {
      sum += tmpNum;
    }
    shouldDouble = !shouldDouble;
  }
  return !!(sum % 10 === 0 ? sanitized : false);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1406:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isCurrency;

var _merge = require('./util/merge');

var _merge2 = _interopRequireDefault(_merge);

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function currencyRegex(options) {
  var decimal_digits = '\\d{' + options.digits_after_decimal[0] + '}';
  options.digits_after_decimal.forEach(function (digit, index) {
    if (index !== 0) decimal_digits = decimal_digits + '|\\d{' + digit + '}';
  });
  var symbol = '(\\' + options.symbol.replace(/\./g, '\\.') + ')' + (options.require_symbol ? '' : '?'),
      negative = '-?',
      whole_dollar_amount_without_sep = '[1-9]\\d*',
      whole_dollar_amount_with_sep = '[1-9]\\d{0,2}(\\' + options.thousands_separator + '\\d{3})*',
      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],
      whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?',
      decimal_amount = '(\\' + options.decimal_separator + '(' + decimal_digits + '))' + (options.require_decimal ? '' : '?');
  var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : '');

  // default is negative sign before symbol, but there are two other options (besides parens)
  if (options.allow_negatives && !options.parens_for_negatives) {
    if (options.negative_sign_after_digits) {
      pattern += negative;
    } else if (options.negative_sign_before_digits) {
      pattern = negative + pattern;
    }
  }

  // South African Rand, for example, uses R 123 (space) and R-123 (no space)
  if (options.allow_negative_sign_placeholder) {
    pattern = '( (?!\\-))?' + pattern;
  } else if (options.allow_space_after_symbol) {
    pattern = ' ?' + pattern;
  } else if (options.allow_space_after_digits) {
    pattern += '( (?!$))?';
  }

  if (options.symbol_after_digits) {
    pattern += symbol;
  } else {
    pattern = symbol + pattern;
  }

  if (options.allow_negatives) {
    if (options.parens_for_negatives) {
      pattern = '(\\(' + pattern + '\\)|' + pattern + ')';
    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {
      pattern = negative + pattern;
    }
  }

  // ensure there's a dollar and/or decimal amount, and that
  // it doesn't start with a space or a negative sign followed by a space
  return new RegExp('^(?!-? )(?=.*\\d)' + pattern + '$');
}

var default_currency_options = {
  symbol: '$',
  require_symbol: false,
  allow_space_after_symbol: false,
  symbol_after_digits: false,
  allow_negatives: true,
  parens_for_negatives: false,
  negative_sign_before_digits: false,
  negative_sign_after_digits: false,
  allow_negative_sign_placeholder: false,
  thousands_separator: ',',
  decimal_separator: '.',
  allow_decimal: true,
  require_decimal: false,
  digits_after_decimal: [2],
  allow_space_after_digits: false
};

function isCurrency(str, options) {
  (0, _assertString2.default)(str);
  options = (0, _merge2.default)(options, default_currency_options);
  return currencyRegex(options).test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460,"./util/merge":1461}],1407:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDataURI;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var validMediaType = /^[a-z]+\/[a-z0-9\-\+]+$/i;

var validAttribute = /^[a-z\-]+=[a-z0-9\-]+$/i;

var validData = /^[a-z0-9!\$&'\(\)\*\+,;=\-\._~:@\/\?%\s]*$/i;

function isDataURI(str) {
  (0, _assertString2.default)(str);
  var data = str.split(',');
  if (data.length < 2) {
    return false;
  }
  var attributes = data.shift().trim().split(';');
  var schemeAndMediaType = attributes.shift();
  if (schemeAndMediaType.substr(0, 5) !== 'data:') {
    return false;
  }
  var mediaType = schemeAndMediaType.substr(5);
  if (mediaType !== '' && !validMediaType.test(mediaType)) {
    return false;
  }
  for (var i = 0; i < attributes.length; i++) {
    if (i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') {
      // ok
    } else if (!validAttribute.test(attributes[i])) {
      return false;
    }
  }
  for (var _i = 0; _i < data.length; _i++) {
    if (!validData.test(data[_i])) {
      return false;
    }
  }
  return true;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1408:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDecimal;

var _merge = require('./util/merge');

var _merge2 = _interopRequireDefault(_merge);

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _alpha = require('./alpha');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function decimalRegExp(options) {
  var regExp = new RegExp('^[-+]?([0-9]+)?(\\' + _alpha.decimal[options.locale] + '[0-9]{' + options.decimal_digits + '})' + (options.force_decimal ? '' : '?') + '$');
  return regExp;
}

var default_decimal_options = {
  force_decimal: false,
  decimal_digits: '1,',
  locale: 'en-US'
};

var blacklist = ['', '-', '+'];

function isDecimal(str, options) {
  (0, _assertString2.default)(str);
  options = (0, _merge2.default)(options, default_decimal_options);
  if (options.locale in _alpha.decimal) {
    return !blacklist.includes(str.replace(/ /g, '')) && decimalRegExp(options).test(str);
  }
  throw new Error('Invalid locale \'' + options.locale + '\'');
}
module.exports = exports['default'];
},{"./alpha":1392,"./util/assertString":1460,"./util/merge":1461}],1409:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDivisibleBy;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _toFloat = require('./toFloat');

var _toFloat2 = _interopRequireDefault(_toFloat);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isDivisibleBy(str, num) {
  (0, _assertString2.default)(str);
  return (0, _toFloat2.default)(str) % parseInt(num, 10) === 0;
}
module.exports = exports['default'];
},{"./toFloat":1456,"./util/assertString":1460}],1410:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmail;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _merge = require('./util/merge');

var _merge2 = _interopRequireDefault(_merge);

var _isByteLength = require('./isByteLength');

var _isByteLength2 = _interopRequireDefault(_isByteLength);

var _isFQDN = require('./isFQDN');

var _isFQDN2 = _interopRequireDefault(_isFQDN);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_email_options = {
  allow_display_name: false,
  require_display_name: false,
  allow_utf8_local_part: true,
  require_tld: true
};

/* eslint-disable max-len */
/* eslint-disable no-control-regex */
var displayName = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\,\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i;
var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
var gmailUserPart = /^[a-z\d]+$/;
var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;
var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;
/* eslint-enable max-len */
/* eslint-enable no-control-regex */

function isEmail(str, options) {
  (0, _assertString2.default)(str);
  options = (0, _merge2.default)(options, default_email_options);

  if (options.require_display_name || options.allow_display_name) {
    var display_email = str.match(displayName);
    if (display_email) {
      str = display_email[1];
    } else if (options.require_display_name) {
      return false;
    }
  }

  var parts = str.split('@');
  var domain = parts.pop();
  var user = parts.join('@');

  var lower_domain = domain.toLowerCase();

  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {
    /*
      Previously we removed dots for gmail addresses before validating.
      This was removed because it allows `multiple..dots@gmail.com`
      to be reported as valid, but it is not.
      Gmail only normalizes single dots, removing them from here is pointless,
      should be done in normalizeEmail
    */
    user = user.toLowerCase();

    // Removing sub-address from username before gmail validation
    var username = user.split('+')[0];

    // Dots are not included in gmail length restriction
    if (!(0, _isByteLength2.default)(username.replace('.', ''), { min: 6, max: 30 })) {
      return false;
    }

    var _user_parts = username.split('.');
    for (var i = 0; i < _user_parts.length; i++) {
      if (!gmailUserPart.test(_user_parts[i])) {
        return false;
      }
    }
  }

  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 254 })) {
    return false;
  }

  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {
    return false;
  }

  if (user[0] === '"') {
    user = user.slice(1, user.length - 1);
    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);
  }

  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;

  var user_parts = user.split('.');
  for (var _i = 0; _i < user_parts.length; _i++) {
    if (!pattern.test(user_parts[_i])) {
      return false;
    }
  }

  return true;
}
module.exports = exports['default'];
},{"./isByteLength":1404,"./isFQDN":1412,"./util/assertString":1460,"./util/merge":1461}],1411:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmpty;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isEmpty(str) {
  (0, _assertString2.default)(str);
  return str.length === 0;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1412:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isFQDN;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _merge = require('./util/merge');

var _merge2 = _interopRequireDefault(_merge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_fqdn_options = {
  require_tld: true,
  allow_underscores: false,
  allow_trailing_dot: false
};

function isFQDN(str, options) {
  (0, _assertString2.default)(str);
  options = (0, _merge2.default)(options, default_fqdn_options);

  /* Remove the optional trailing dot before checking validity */
  if (options.allow_trailing_dot && str[str.length - 1] === '.') {
    str = str.substring(0, str.length - 1);
  }
  var parts = str.split('.');
  for (var i = 0; i < parts.length; i++) {
    if (parts[i].length > 63) {
      return false;
    }
  }
  if (options.require_tld) {
    var tld = parts.pop();
    if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
      return false;
    }
    // disallow spaces
    if (/[\s\u2002-\u200B\u202F\u205F\u3000\uFEFF\uDB40\uDC20]/.test(tld)) {
      return false;
    }
  }
  for (var part, _i = 0; _i < parts.length; _i++) {
    part = parts[_i];
    if (options.allow_underscores) {
      part = part.replace(/_/g, '');
    }
    if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
      return false;
    }
    // disallow full-width chars
    if (/[\uff01-\uff5e]/.test(part)) {
      return false;
    }
    if (part[0] === '-' || part[part.length - 1] === '-') {
      return false;
    }
  }
  return true;
}
module.exports = exports['default'];
},{"./util/assertString":1460,"./util/merge":1461}],1413:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isFloat;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _alpha = require('./alpha');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isFloat(str, options) {
  (0, _assertString2.default)(str);
  options = options || {};
  var float = new RegExp('^(?:[-+])?(?:[0-9]+)?(?:\\' + (options.locale ? _alpha.decimal[options.locale] : '.') + '[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$');
  if (str === '' || str === '.' || str === '-' || str === '+') {
    return false;
  }
  var value = parseFloat(str.replace(',', '.'));
  return float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);
}
module.exports = exports['default'];
},{"./alpha":1392,"./util/assertString":1460}],1414:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fullWidth = undefined;
exports.default = isFullWidth;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fullWidth = exports.fullWidth = /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;

function isFullWidth(str) {
  (0, _assertString2.default)(str);
  return fullWidth.test(str);
}
},{"./util/assertString":1460}],1415:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.halfWidth = undefined;
exports.default = isHalfWidth;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var halfWidth = exports.halfWidth = /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;

function isHalfWidth(str) {
  (0, _assertString2.default)(str);
  return halfWidth.test(str);
}
},{"./util/assertString":1460}],1416:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHash;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengths = {
  md5: 32,
  md4: 32,
  sha1: 40,
  sha256: 64,
  sha384: 96,
  sha512: 128,
  ripemd128: 32,
  ripemd160: 40,
  tiger128: 32,
  tiger160: 40,
  tiger192: 48,
  crc32: 8,
  crc32b: 8
};

function isHash(str, algorithm) {
  (0, _assertString2.default)(str);
  var hash = new RegExp('^[a-f0-9]{' + lengths[algorithm] + '}$');
  return hash.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1417:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHexColor;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;

function isHexColor(str) {
  (0, _assertString2.default)(str);
  return hexcolor.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1418:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHexadecimal;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hexadecimal = /^[0-9A-F]+$/i;

function isHexadecimal(str) {
  (0, _assertString2.default)(str);
  return hexadecimal.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1419:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isIP;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ipv4Maybe = /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/;
var ipv6Block = /^[0-9A-F]{1,4}$/i;

function isIP(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  (0, _assertString2.default)(str);
  version = String(version);
  if (!version) {
    return isIP(str, 4) || isIP(str, 6);
  } else if (version === '4') {
    if (!ipv4Maybe.test(str)) {
      return false;
    }
    var parts = str.split('.').sort(function (a, b) {
      return a - b;
    });
    return parts[3] <= 255;
  } else if (version === '6') {
    var blocks = str.split(':');
    var foundOmissionBlock = false; // marker to indicate ::

    // At least some OS accept the last 32 bits of an IPv6 address
    // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says
    // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,
    // and '::a.b.c.d' is deprecated, but also valid.
    var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);
    var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;

    if (blocks.length > expectedNumberOfBlocks) {
      return false;
    }
    // initial or final ::
    if (str === '::') {
      return true;
    } else if (str.substr(0, 2) === '::') {
      blocks.shift();
      blocks.shift();
      foundOmissionBlock = true;
    } else if (str.substr(str.length - 2) === '::') {
      blocks.pop();
      blocks.pop();
      foundOmissionBlock = true;
    }

    for (var i = 0; i < blocks.length; ++i) {
      // test for a :: which can not be at the string start/end
      // since those cases have been handled above
      if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {
        if (foundOmissionBlock) {
          return false; // multiple :: in address
        }
        foundOmissionBlock = true;
      } else if (foundIPv4TransitionBlock && i === blocks.length - 1) {
        // it has been checked before that the last
        // block is a valid IPv4 address
      } else if (!ipv6Block.test(blocks[i])) {
        return false;
      }
    }
    if (foundOmissionBlock) {
      return blocks.length >= 1;
    }
    return blocks.length === expectedNumberOfBlocks;
  }
  return false;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1420:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISBN;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;
var isbn13Maybe = /^(?:[0-9]{13})$/;
var factor = [1, 3];

function isISBN(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  (0, _assertString2.default)(str);
  version = String(version);
  if (!version) {
    return isISBN(str, 10) || isISBN(str, 13);
  }
  var sanitized = str.replace(/[\s-]+/g, '');
  var checksum = 0;
  var i = void 0;
  if (version === '10') {
    if (!isbn10Maybe.test(sanitized)) {
      return false;
    }
    for (i = 0; i < 9; i++) {
      checksum += (i + 1) * sanitized.charAt(i);
    }
    if (sanitized.charAt(9) === 'X') {
      checksum += 10 * 10;
    } else {
      checksum += 10 * sanitized.charAt(9);
    }
    if (checksum % 11 === 0) {
      return !!sanitized;
    }
  } else if (version === '13') {
    if (!isbn13Maybe.test(sanitized)) {
      return false;
    }
    for (i = 0; i < 12; i++) {
      checksum += factor[i % 2] * sanitized.charAt(i);
    }
    if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {
      return !!sanitized;
    }
  }
  return false;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1421:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISIN;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;

function isISIN(str) {
  (0, _assertString2.default)(str);
  if (!isin.test(str)) {
    return false;
  }

  var checksumStr = str.replace(/[A-Z]/g, function (character) {
    return parseInt(character, 36);
  });

  var sum = 0;
  var digit = void 0;
  var tmpNum = void 0;
  var shouldDouble = true;
  for (var i = checksumStr.length - 2; i >= 0; i--) {
    digit = checksumStr.substring(i, i + 1);
    tmpNum = parseInt(digit, 10);
    if (shouldDouble) {
      tmpNum *= 2;
      if (tmpNum >= 10) {
        sum += tmpNum + 1;
      } else {
        sum += tmpNum;
      }
    } else {
      sum += tmpNum;
    }
    shouldDouble = !shouldDouble;
  }

  return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1422:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISO31661Alpha2;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
var validISO31661Alpha2CountriesCodes = ['AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'YE', 'YT', 'ZA', 'ZM', 'ZW'];

function isISO31661Alpha2(str) {
  (0, _assertString2.default)(str);
  return validISO31661Alpha2CountriesCodes.includes(str.toUpperCase());
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1423:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISO31661Alpha3;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3
var validISO31661Alpha3CountriesCodes = ['AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE', 'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA', 'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK', 'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM', 'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB', 'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI', 'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN', 'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE', 'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX', 'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC', 'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN', 'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM', 'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD', 'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL', 'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT', 'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE'];

function isISO31661Alpha3(str) {
  (0, _assertString2.default)(str);
  return validISO31661Alpha3CountriesCodes.includes(str.toUpperCase());
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1424:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISO8601;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable max-len */
// from http://goo.gl/0ejHHW
var iso8601 = /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;
/* eslint-enable max-len */

function isISO8601(str) {
  (0, _assertString2.default)(str);
  return iso8601.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1425:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISRC;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// see http://isrc.ifpi.org/en/isrc-standard/code-syntax
var isrc = /^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/;

function isISRC(str) {
  (0, _assertString2.default)(str);
  return isrc.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1426:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISSN;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var issn = '^\\d{4}-?\\d{3}[\\dX]$';

function isISSN(str) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _assertString2.default)(str);
  var testIssn = issn;
  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;
  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');
  if (!testIssn.test(str)) {
    return false;
  }
  var digits = str.replace('-', '').toUpperCase();
  var checksum = 0;
  for (var i = 0; i < digits.length; i++) {
    var digit = digits[i];
    checksum += (digit === 'X' ? 10 : +digit) * (8 - i);
  }
  return checksum % 11 === 0;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1427:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isIn;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _toString = require('./util/toString');

var _toString2 = _interopRequireDefault(_toString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isIn(str, options) {
  (0, _assertString2.default)(str);
  var i = void 0;
  if (Object.prototype.toString.call(options) === '[object Array]') {
    var array = [];
    for (i in options) {
      if ({}.hasOwnProperty.call(options, i)) {
        array[i] = (0, _toString2.default)(options[i]);
      }
    }
    return array.indexOf(str) >= 0;
  } else if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {
    return options.hasOwnProperty(str);
  } else if (options && typeof options.indexOf === 'function') {
    return options.indexOf(str) >= 0;
  }
  return false;
}
module.exports = exports['default'];
},{"./util/assertString":1460,"./util/toString":1462}],1428:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isInt;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;
var intLeadingZeroes = /^[-+]?[0-9]+$/;

function isInt(str, options) {
  (0, _assertString2.default)(str);
  options = options || {};

  // Get the regex to use for testing, based on whether
  // leading zeroes are allowed or not.
  var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes;

  // Check min/max/lt/gt
  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;
  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;
  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;
  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;

  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1429:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isJSON;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isJSON(str) {
  (0, _assertString2.default)(str);
  try {
    var obj = JSON.parse(str);
    return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';
  } catch (e) {/* ignore */}
  return false;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1430:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (str) {
  (0, _assertString2.default)(str);
  if (!str.includes(',')) return false;
  var pair = str.split(',');
  return lat.test(pair[0]) && long.test(pair[1]);
};

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lat = /^\(?[+-]?(90(\.0+)?|[1-8]?\d(\.\d+)?)$/;
var long = /^\s?[+-]?(180(\.0+)?|1[0-7]\d(\.\d+)?|\d{1,2}(\.\d+)?)\)?$/;

module.exports = exports['default'];
},{"./util/assertString":1460}],1431:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isLength;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable prefer-rest-params */
function isLength(str, options) {
  (0, _assertString2.default)(str);
  var min = void 0;
  var max = void 0;
  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {
    min = options.min || 0;
    max = options.max;
  } else {
    // backwards compatibility: isLength(str, min [, max])
    min = arguments[1];
    max = arguments[2];
  }
  var surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
  var len = str.length - surrogatePairs.length;
  return len >= min && (typeof max === 'undefined' || len <= max);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1432:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isLowercase;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isLowercase(str) {
  (0, _assertString2.default)(str);
  return str === str.toLowerCase();
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1433:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMACAddress;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;

function isMACAddress(str) {
  (0, _assertString2.default)(str);
  return macAddress.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1434:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMD5;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var md5 = /^[a-f0-9]{32}$/;

function isMD5(str) {
  (0, _assertString2.default)(str);
  return md5.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1435:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMimeType;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
  Checks if the provided string matches to a correct Media type format (MIME type)

  This function only checks is the string format follows the
  etablished rules by the according RFC specifications.
  This function supports 'charset' in textual media types
  (https://tools.ietf.org/html/rfc6657).

  This function does not check against all the media types listed
  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)
  because of lightness purposes : it would require to include
  all these MIME types in this librairy, which would weigh it
  significantly. This kind of effort maybe is not worth for the use that
  this function has in this entire librairy.

  More informations in the RFC specifications :
  - https://tools.ietf.org/html/rfc2045
  - https://tools.ietf.org/html/rfc2046
  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1
  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5
*/

// Match simple MIME types
// NB :
//   Subtype length must not exceed 100 characters.
//   This rule does not comply to the RFC specs (what is the max length ?).
var mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i; // eslint-disable-line max-len

// Handle "charset" in "text/*"
var mimeTypeText = /^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i; // eslint-disable-line max-len

// Handle "boundary" in "multipart/*"
var mimeTypeMultipart = /^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i; // eslint-disable-line max-len

function isMimeType(str) {
  (0, _assertString2.default)(str);
  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1436:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMobilePhone;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable max-len */
var phones = {
  'ar-AE': /^((\+?971)|0)?5[024568]\d{7}$/,
  'ar-DZ': /^(\+?213|0)(5|6|7)\d{8}$/,
  'ar-EG': /^((\+?20)|0)?1[012]\d{8}$/,
  'ar-JO': /^(\+?962|0)?7[789]\d{7}$/,
  'ar-SA': /^(!?(\+?966)|0)?5\d{8}$/,
  'ar-SY': /^(!?(\+?963)|0)?9\d{8}$/,
  'ar-TN': /^(\+?216)?[2459]\d{7}$/,
  'be-BY': /^(\+?375)?(24|25|29|33|44)\d{7}$/,
  'bg-BG': /^(\+?359|0)?8[789]\d{7}$/,
  'cs-CZ': /^(\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,
  'da-DK': /^(\+?45)?\s?\d{2}\s?\d{2}\s?\d{2}\s?\d{2}$/,
  'de-DE': /^(\+?49[ \.\-]?)?([\(]{1}[0-9]{1,6}[\)])?([0-9 \.\-\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,
  'el-GR': /^(\+?30|0)?(69\d{8})$/,
  'en-AU': /^(\+?61|0)4\d{8}$/,
  'en-GB': /^(\+?44|0)7\d{9}$/,
  'en-HK': /^(\+?852\-?)?[456789]\d{3}\-?\d{4}$/,
  'en-IN': /^(\+?91|0)?[6789]\d{9}$/,
  'en-KE': /^(\+?254|0)?[7]\d{8}$/,
  'en-NG': /^(\+?234|0)?[789]\d{9}$/,
  'en-NZ': /^(\+?64|0)2\d{7,9}$/,
  'en-PK': /^((\+92)|(0092))-{0,1}\d{3}-{0,1}\d{7}$|^\d{11}$|^\d{4}-\d{7}$/,
  'en-RW': /^(\+?250|0)?[7]\d{8}$/,
  'en-SG': /^(\+65)?[89]\d{7}$/,
  'en-TZ': /^(\+?255|0)?[67]\d{8}$/,
  'en-UG': /^(\+?256|0)?[7]\d{8}$/,
  'en-US': /^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,
  'en-ZA': /^(\+?27|0)\d{9}$/,
  'en-ZM': /^(\+?26)?09[567]\d{7}$/,
  'es-ES': /^(\+?34)?(6\d{1}|7[1234])\d{7}$/,
  'et-EE': /^(\+?372)?\s?(5|8[1-4])\s?([0-9]\s?){6,7}$/,
  'fa-IR': /^(\+?98[\-\s]?|0)9[0-39]\d[\-\s]?\d{3}[\-\s]?\d{4}$/,
  'fi-FI': /^(\+?358|0)\s?(4(0|1|2|4|5|6)?|50)\s?(\d\s?){4,8}\d$/,
  'fo-FO': /^(\+?298)?\s?\d{2}\s?\d{2}\s?\d{2}$/,
  'fr-FR': /^(\+?33|0)[67]\d{8}$/,
  'he-IL': /^(\+972|0)([23489]|5[012345689]|77)[1-9]\d{6}/,
  'hu-HU': /^(\+?36)(20|30|70)\d{7}$/,
  'id-ID': /^(\+?62|0[1-9])[\s|\d]+$/,
  'it-IT': /^(\+?39)?\s?3\d{2} ?\d{6,7}$/,
  'ja-JP': /^(\+?81|0)[789]0[ \-]?[1-9]\d{2}[ \-]?\d{5}$/,
  'kk-KZ': /^(\+?7|8)?7\d{9}$/,
  'kl-GL': /^(\+?299)?\s?\d{2}\s?\d{2}\s?\d{2}$/,
  'ko-KR': /^((\+?82)[ \-]?)?0?1([0|1|6|7|8|9]{1})[ \-]?\d{3,4}[ \-]?\d{4}$/,
  'lt-LT': /^(\+370|8)\d{8}$/,
  'ms-MY': /^(\+?6?01){1}(([145]{1}(\-|\s)?\d{7,8})|([236789]{1}(\s|\-)?\d{7}))$/,
  'nb-NO': /^(\+?47)?[49]\d{7}$/,
  'nl-BE': /^(\+?32|0)4?\d{8}$/,
  'nn-NO': /^(\+?47)?[49]\d{7}$/,
  'pl-PL': /^(\+?48)? ?[5-8]\d ?\d{3} ?\d{2} ?\d{2}$/,
  'pt-BR': /^(\+?55|0)\-?[1-9]{2}\-?[2-9]{1}\d{3,4}\-?\d{4}$/,
  'pt-PT': /^(\+?351)?9[1236]\d{7}$/,
  'ro-RO': /^(\+?4?0)\s?7\d{2}(\/|\s|\.|\-)?\d{3}(\s|\.|\-)?\d{3}$/,
  'ru-RU': /^(\+?7|8)?9\d{9}$/,
  'sk-SK': /^(\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,
  'sr-RS': /^(\+3816|06)[- \d]{5,9}$/,
  'sv-SE': /^(\+?46|0)[\s\-]?7[\s\-]?[02369]([\s\-]?\d){7}$/,
  'th-TH': /^(\+66|66|0)\d{9}$/,
  'tr-TR': /^(\+?90|0)?5\d{9}$/,
  'uk-UA': /^(\+?38|8)?0\d{9}$/,
  'vi-VN': /^(\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,
  'zh-CN': /^(\+?0?86\-?)?1[3456789]\d{9}$/,
  'zh-TW': /^(\+?886\-?|0)?9\d{8}$/
};
/* eslint-enable max-len */

// aliases
phones['en-CA'] = phones['en-US'];
phones['fr-BE'] = phones['nl-BE'];
phones['zh-HK'] = phones['en-HK'];

function isMobilePhone(str, locale, options) {
  (0, _assertString2.default)(str);
  if (options && options.strictMode && !str.startsWith('+')) {
    return false;
  }
  if (locale in phones) {
    return phones[locale].test(str);
  } else if (locale === 'any') {
    for (var key in phones) {
      if (phones.hasOwnProperty(key)) {
        var phone = phones[key];
        if (phone.test(str)) {
          return true;
        }
      }
    }
    return false;
  }
  throw new Error('Invalid locale \'' + locale + '\'');
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1437:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMongoId;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _isHexadecimal = require('./isHexadecimal');

var _isHexadecimal2 = _interopRequireDefault(_isHexadecimal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isMongoId(str) {
  (0, _assertString2.default)(str);
  return (0, _isHexadecimal2.default)(str) && str.length === 24;
}
module.exports = exports['default'];
},{"./isHexadecimal":1418,"./util/assertString":1460}],1438:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMultibyte;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-control-regex */
var multibyte = /[^\x00-\x7F]/;
/* eslint-enable no-control-regex */

function isMultibyte(str) {
  (0, _assertString2.default)(str);
  return multibyte.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1439:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isNumeric;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var numeric = /^[+-]?([0-9]*[.])?[0-9]+$/;

function isNumeric(str) {
  (0, _assertString2.default)(str);
  return numeric.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1440:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isPort;

var _isInt = require('./isInt');

var _isInt2 = _interopRequireDefault(_isInt);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isPort(str) {
  return (0, _isInt2.default)(str, { min: 0, max: 65535 });
}
module.exports = exports['default'];
},{"./isInt":1428}],1441:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.locales = undefined;

exports.default = function (str, locale) {
  (0, _assertString2.default)(str);
  if (locale in patterns) {
    return patterns[locale].test(str);
  } else if (locale === 'any') {
    for (var key in patterns) {
      if (patterns.hasOwnProperty(key)) {
        var pattern = patterns[key];
        if (pattern.test(str)) {
          return true;
        }
      }
    }
    return false;
  }
  throw new Error('Invalid locale \'' + locale + '\'');
};

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// common patterns
var threeDigit = /^\d{3}$/;
var fourDigit = /^\d{4}$/;
var fiveDigit = /^\d{5}$/;
var sixDigit = /^\d{6}$/;

var patterns = {
  AT: fourDigit,
  AU: fourDigit,
  BE: fourDigit,
  BG: fourDigit,
  CA: /^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJ-NPRSTV-Z][\s\-]?\d[ABCEGHJ-NPRSTV-Z]\d$/i,
  CH: fourDigit,
  CZ: /^\d{3}\s?\d{2}$/,
  DE: fiveDigit,
  DK: fourDigit,
  DZ: fiveDigit,
  EE: fiveDigit,
  ES: fiveDigit,
  FI: fiveDigit,
  FR: /^\d{2}\s?\d{3}$/,
  GB: /^(gir\s?0aa|[a-z]{1,2}\d[\da-z]?\s?(\d[a-z]{2})?)$/i,
  GR: /^\d{3}\s?\d{2}$/,
  HR: /^([1-5]\d{4}$)/,
  HU: fourDigit,
  IL: fiveDigit,
  IN: sixDigit,
  IS: threeDigit,
  IT: fiveDigit,
  JP: /^\d{3}\-\d{4}$/,
  KE: fiveDigit,
  LI: /^(948[5-9]|949[0-7])$/,
  LT: /^LT\-\d{5}$/,
  LU: fourDigit,
  LV: /^LV\-\d{4}$/,
  MX: fiveDigit,
  NL: /^\d{4}\s?[a-z]{2}$/i,
  NO: fourDigit,
  PL: /^\d{2}\-\d{3}$/,
  PT: /^\d{4}\-\d{3}?$/,
  RO: sixDigit,
  RU: sixDigit,
  SA: fiveDigit,
  SE: /^\d{3}\s?\d{2}$/,
  SI: fourDigit,
  SK: /^\d{3}\s?\d{2}$/,
  TN: fourDigit,
  TW: /^\d{3}(\d{2})?$/,
  US: /^\d{5}(-\d{4})?$/,
  ZA: fourDigit,
  ZM: fiveDigit
};

var locales = exports.locales = Object.keys(patterns);
},{"./util/assertString":1460}],1442:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isRFC3339;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */

var dateFullYear = /[0-9]{4}/;
var dateMonth = /(0[1-9]|1[0-2])/;
var dateMDay = /([12]\d|0[1-9]|3[01])/;

var timeHour = /([01][0-9]|2[0-3])/;
var timeMinute = /[0-5][0-9]/;
var timeSecond = /([0-5][0-9]|60)/;

var timeSecFrac = /(\.[0-9]+)?/;
var timeNumOffset = new RegExp('[-+]' + timeHour.source + ':' + timeMinute.source);
var timeOffset = new RegExp('([zZ]|' + timeNumOffset.source + ')');

var partialTime = new RegExp(timeHour.source + ':' + timeMinute.source + ':' + timeSecond.source + timeSecFrac.source);

var fullDate = new RegExp(dateFullYear.source + '-' + dateMonth.source + '-' + dateMDay.source);
var fullTime = new RegExp('' + partialTime.source + timeOffset.source);

var rfc3339 = new RegExp(fullDate.source + '[ tT]' + fullTime.source);

function isRFC3339(str) {
  (0, _assertString2.default)(str);
  return rfc3339.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1443:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isSurrogatePair;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var surrogatePair = /[\uD800-\uDBFF][\uDC00-\uDFFF]/;

function isSurrogatePair(str) {
  (0, _assertString2.default)(str);
  return surrogatePair.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1444:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isURL;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _isFQDN = require('./isFQDN');

var _isFQDN2 = _interopRequireDefault(_isFQDN);

var _isIP = require('./isIP');

var _isIP2 = _interopRequireDefault(_isIP);

var _merge = require('./util/merge');

var _merge2 = _interopRequireDefault(_merge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_url_options = {
  protocols: ['http', 'https', 'ftp'],
  require_tld: true,
  require_protocol: false,
  require_host: true,
  require_valid_protocol: true,
  allow_underscores: false,
  allow_trailing_dot: false,
  allow_protocol_relative_urls: false
};

var wrapped_ipv6 = /^\[([^\]]+)\](?::([0-9]+))?$/;

function isRegExp(obj) {
  return Object.prototype.toString.call(obj) === '[object RegExp]';
}

function checkHost(host, matches) {
  for (var i = 0; i < matches.length; i++) {
    var match = matches[i];
    if (host === match || isRegExp(match) && match.test(host)) {
      return true;
    }
  }
  return false;
}

function isURL(url, options) {
  (0, _assertString2.default)(url);
  if (!url || url.length >= 2083 || /[\s<>]/.test(url)) {
    return false;
  }
  if (url.indexOf('mailto:') === 0) {
    return false;
  }
  options = (0, _merge2.default)(options, default_url_options);
  var protocol = void 0,
      auth = void 0,
      host = void 0,
      hostname = void 0,
      port = void 0,
      port_str = void 0,
      split = void 0,
      ipv6 = void 0;

  split = url.split('#');
  url = split.shift();

  split = url.split('?');
  url = split.shift();

  split = url.split('://');
  if (split.length > 1) {
    protocol = split.shift();
    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {
      return false;
    }
  } else if (options.require_protocol) {
    return false;
  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {
    split[0] = url.substr(2);
  }
  url = split.join('://');

  if (url === '') {
    return false;
  }

  split = url.split('/');
  url = split.shift();

  if (url === '' && !options.require_host) {
    return true;
  }

  split = url.split('@');
  if (split.length > 1) {
    auth = split.shift();
    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
      return false;
    }
  }
  hostname = split.join('@');

  port_str = null;
  ipv6 = null;
  var ipv6_match = hostname.match(wrapped_ipv6);
  if (ipv6_match) {
    host = '';
    ipv6 = ipv6_match[1];
    port_str = ipv6_match[2] || null;
  } else {
    split = hostname.split(':');
    host = split.shift();
    if (split.length) {
      port_str = split.join(':');
    }
  }

  if (port_str !== null) {
    port = parseInt(port_str, 10);
    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
      return false;
    }
  }

  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6))) {
    return false;
  }

  host = host || ipv6;

  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {
    return false;
  }
  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {
    return false;
  }

  return true;
}
module.exports = exports['default'];
},{"./isFQDN":1412,"./isIP":1419,"./util/assertString":1460,"./util/merge":1461}],1445:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isUUID;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var uuid = {
  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
};

function isUUID(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';

  (0, _assertString2.default)(str);
  var pattern = uuid[version];
  return pattern && pattern.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1446:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isUppercase;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isUppercase(str) {
  (0, _assertString2.default)(str);
  return str === str.toUpperCase();
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1447:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isVariableWidth;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _isFullWidth = require('./isFullWidth');

var _isHalfWidth = require('./isHalfWidth');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isVariableWidth(str) {
  (0, _assertString2.default)(str);
  return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);
}
module.exports = exports['default'];
},{"./isFullWidth":1414,"./isHalfWidth":1415,"./util/assertString":1460}],1448:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isWhitelisted;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isWhitelisted(str, chars) {
  (0, _assertString2.default)(str);
  for (var i = str.length - 1; i >= 0; i--) {
    if (chars.indexOf(str[i]) === -1) {
      return false;
    }
  }
  return true;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1449:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ltrim;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ltrim(str, chars) {
  (0, _assertString2.default)(str);
  var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\s+/g;
  return str.replace(pattern, '');
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1450:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = matches;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function matches(str, pattern, modifiers) {
  (0, _assertString2.default)(str);
  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {
    pattern = new RegExp(pattern, modifiers);
  }
  return pattern.test(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1451:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = normalizeEmail;

var _merge = require('./util/merge');

var _merge2 = _interopRequireDefault(_merge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_normalize_email_options = {
  // The following options apply to all email addresses
  // Lowercases the local part of the email address.
  // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).
  // The domain is always lowercased, as per RFC 1035
  all_lowercase: true,

  // The following conversions are specific to GMail
  // Lowercases the local part of the GMail address (known to be case-insensitive)
  gmail_lowercase: true,
  // Removes dots from the local part of the email address, as that's ignored by GMail
  gmail_remove_dots: true,
  // Removes the subaddress (e.g. "+foo") from the email address
  gmail_remove_subaddress: true,
  // Conversts the googlemail.com domain to gmail.com
  gmail_convert_googlemaildotcom: true,

  // The following conversions are specific to Outlook.com / Windows Live / Hotmail
  // Lowercases the local part of the Outlook.com address (known to be case-insensitive)
  outlookdotcom_lowercase: true,
  // Removes the subaddress (e.g. "+foo") from the email address
  outlookdotcom_remove_subaddress: true,

  // The following conversions are specific to Yahoo
  // Lowercases the local part of the Yahoo address (known to be case-insensitive)
  yahoo_lowercase: true,
  // Removes the subaddress (e.g. "-foo") from the email address
  yahoo_remove_subaddress: true,

  // The following conversions are specific to Yandex
  // Lowercases the local part of the Yandex address (known to be case-insensitive)
  yandex_lowercase: true,

  // The following conversions are specific to iCloud
  // Lowercases the local part of the iCloud address (known to be case-insensitive)
  icloud_lowercase: true,
  // Removes the subaddress (e.g. "+foo") from the email address
  icloud_remove_subaddress: true
};

// List of domains used by iCloud
var icloud_domains = ['icloud.com', 'me.com'];

// List of domains used by Outlook.com and its predecessors
// This list is likely incomplete.
// Partial reference:
// https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/
var outlookdotcom_domains = ['hotmail.at', 'hotmail.be', 'hotmail.ca', 'hotmail.cl', 'hotmail.co.il', 'hotmail.co.nz', 'hotmail.co.th', 'hotmail.co.uk', 'hotmail.com', 'hotmail.com.ar', 'hotmail.com.au', 'hotmail.com.br', 'hotmail.com.gr', 'hotmail.com.mx', 'hotmail.com.pe', 'hotmail.com.tr', 'hotmail.com.vn', 'hotmail.cz', 'hotmail.de', 'hotmail.dk', 'hotmail.es', 'hotmail.fr', 'hotmail.hu', 'hotmail.id', 'hotmail.ie', 'hotmail.in', 'hotmail.it', 'hotmail.jp', 'hotmail.kr', 'hotmail.lv', 'hotmail.my', 'hotmail.ph', 'hotmail.pt', 'hotmail.sa', 'hotmail.sg', 'hotmail.sk', 'live.be', 'live.co.uk', 'live.com', 'live.com.ar', 'live.com.mx', 'live.de', 'live.es', 'live.eu', 'live.fr', 'live.it', 'live.nl', 'msn.com', 'outlook.at', 'outlook.be', 'outlook.cl', 'outlook.co.il', 'outlook.co.nz', 'outlook.co.th', 'outlook.com', 'outlook.com.ar', 'outlook.com.au', 'outlook.com.br', 'outlook.com.gr', 'outlook.com.pe', 'outlook.com.tr', 'outlook.com.vn', 'outlook.cz', 'outlook.de', 'outlook.dk', 'outlook.es', 'outlook.fr', 'outlook.hu', 'outlook.id', 'outlook.ie', 'outlook.in', 'outlook.it', 'outlook.jp', 'outlook.kr', 'outlook.lv', 'outlook.my', 'outlook.ph', 'outlook.pt', 'outlook.sa', 'outlook.sg', 'outlook.sk', 'passport.com'];

// List of domains used by Yahoo Mail
// This list is likely incomplete
var yahoo_domains = ['rocketmail.com', 'yahoo.ca', 'yahoo.co.uk', 'yahoo.com', 'yahoo.de', 'yahoo.fr', 'yahoo.in', 'yahoo.it', 'ymail.com'];

// List of domains used by yandex.ru
var yandex_domains = ['yandex.ru', 'yandex.ua', 'yandex.kz', 'yandex.com', 'yandex.by', 'ya.ru'];

// replace single dots, but not multiple consecutive dots
function dotsReplacer(match) {
  if (match.length > 1) {
    return match;
  }
  return '';
}

function normalizeEmail(email, options) {
  options = (0, _merge2.default)(options, default_normalize_email_options);

  var raw_parts = email.split('@');
  var domain = raw_parts.pop();
  var user = raw_parts.join('@');
  var parts = [user, domain];

  // The domain is always lowercased, as it's case-insensitive per RFC 1035
  parts[1] = parts[1].toLowerCase();

  if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {
    // Address is GMail
    if (options.gmail_remove_subaddress) {
      parts[0] = parts[0].split('+')[0];
    }
    if (options.gmail_remove_dots) {
      // this does not replace consecutive dots like example..email@gmail.com
      parts[0] = parts[0].replace(/\.+/g, dotsReplacer);
    }
    if (!parts[0].length) {
      return false;
    }
    if (options.all_lowercase || options.gmail_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
    parts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];
  } else if (icloud_domains.indexOf(parts[1]) >= 0) {
    // Address is iCloud
    if (options.icloud_remove_subaddress) {
      parts[0] = parts[0].split('+')[0];
    }
    if (!parts[0].length) {
      return false;
    }
    if (options.all_lowercase || options.icloud_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
  } else if (outlookdotcom_domains.indexOf(parts[1]) >= 0) {
    // Address is Outlook.com
    if (options.outlookdotcom_remove_subaddress) {
      parts[0] = parts[0].split('+')[0];
    }
    if (!parts[0].length) {
      return false;
    }
    if (options.all_lowercase || options.outlookdotcom_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
  } else if (yahoo_domains.indexOf(parts[1]) >= 0) {
    // Address is Yahoo
    if (options.yahoo_remove_subaddress) {
      var components = parts[0].split('-');
      parts[0] = components.length > 1 ? components.slice(0, -1).join('-') : components[0];
    }
    if (!parts[0].length) {
      return false;
    }
    if (options.all_lowercase || options.yahoo_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
  } else if (yandex_domains.indexOf(parts[1]) >= 0) {
    if (options.all_lowercase || options.yandex_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
    parts[1] = 'yandex.ru'; // all yandex domains are equal, 1st preffered
  } else if (options.all_lowercase) {
    // Any other address
    parts[0] = parts[0].toLowerCase();
  }
  return parts.join('@');
}
module.exports = exports['default'];
},{"./util/merge":1461}],1452:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rtrim;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function rtrim(str, chars) {
  (0, _assertString2.default)(str);
  var pattern = chars ? new RegExp('[' + chars + ']') : /\s/;

  var idx = str.length - 1;
  for (; idx >= 0 && pattern.test(str[idx]); idx--) {}

  return idx < str.length ? str.substr(0, idx + 1) : str;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1453:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = stripLow;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

var _blacklist = require('./blacklist');

var _blacklist2 = _interopRequireDefault(_blacklist);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stripLow(str, keep_new_lines) {
  (0, _assertString2.default)(str);
  var chars = keep_new_lines ? '\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F' : '\\x00-\\x1F\\x7F';
  return (0, _blacklist2.default)(str, chars);
}
module.exports = exports['default'];
},{"./blacklist":1393,"./util/assertString":1460}],1454:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toBoolean;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toBoolean(str, strict) {
  (0, _assertString2.default)(str);
  if (strict) {
    return str === '1' || str === 'true';
  }
  return str !== '0' && str !== 'false' && str !== '';
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1455:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toDate;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toDate(date) {
  (0, _assertString2.default)(date);
  date = Date.parse(date);
  return !isNaN(date) ? new Date(date) : null;
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1456:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toFloat;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toFloat(str) {
  (0, _assertString2.default)(str);
  return parseFloat(str);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1457:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toInt;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toInt(str, radix) {
  (0, _assertString2.default)(str);
  return parseInt(str, radix || 10);
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1458:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = trim;

var _rtrim = require('./rtrim');

var _rtrim2 = _interopRequireDefault(_rtrim);

var _ltrim = require('./ltrim');

var _ltrim2 = _interopRequireDefault(_ltrim);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function trim(str, chars) {
  return (0, _rtrim2.default)((0, _ltrim2.default)(str, chars), chars);
}
module.exports = exports['default'];
},{"./ltrim":1449,"./rtrim":1452}],1459:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = unescape;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function unescape(str) {
  (0, _assertString2.default)(str);
  return str.replace(/&amp;/g, '&').replace(/&quot;/g, '"').replace(/&#x27;/g, "'").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#x5C;/g, '\\').replace(/&#96;/g, '`');
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1460:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = assertString;
function assertString(input) {
  var isString = typeof input === 'string' || input instanceof String;

  if (!isString) {
    throw new TypeError('This library (validator.js) validates strings only');
  }
}
module.exports = exports['default'];
},{}],1461:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = merge;
function merge() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var defaults = arguments[1];

  for (var key in defaults) {
    if (typeof obj[key] === 'undefined') {
      obj[key] = defaults[key];
    }
  }
  return obj;
}
module.exports = exports['default'];
},{}],1462:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = toString;
function toString(input) {
  if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input !== null) {
    if (typeof input.toString === 'function') {
      input = input.toString();
    } else {
      input = '[object Object]';
    }
  } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {
    input = '';
  }
  return String(input);
}
module.exports = exports['default'];
},{}],1463:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = whitelist;

var _assertString = require('./util/assertString');

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function whitelist(str, chars) {
  (0, _assertString2.default)(str);
  return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');
}
module.exports = exports['default'];
},{"./util/assertString":1460}],1464:[function(require,module,exports){
var indexOf = function (xs, item) {
    if (xs.indexOf) return xs.indexOf(item);
    else for (var i = 0; i < xs.length; i++) {
        if (xs[i] === item) return i;
    }
    return -1;
};
var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    if (context) {
        forEach(Object_keys(ctx), function (key) {
            context[key] = ctx[key];
        });
    }

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.isContext = function (context) {
    return context instanceof Context;
};

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};

},{}],1465:[function(require,module,exports){
module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}],1466:[function(require,module,exports){
module.exports={
    "name": "cryptotithe",
    "version": "0.3.0",
    "description": "",
    "main": "index.js",
    "scripts": {
        "start": "npm run build && electron .",
        "web": "npm run build && start ./index.html",
        "test": "jest",
        "build": "tsc -p configs/tsconfig.json && browserify ./react.js -o ./bundle.js -u ./data.json --im",
        "lint": "tslint -p ./configs/tsconfig.json -c ./configs/tslint.json --fix",
        "full-build-test": "npm run tslint && npm run test && npm run prod-build",
        "prod-start": "set NODE_ENV=production&& npm run start"
    },
    "author": "",
    "license": "MIT",
    "devDependencies": {
        "@types/faker": "^4.1.2",
        "@types/jest": "^22.2.3",
        "@types/node": "^10.3.0",
        "browserify": "^16.2.2",
        "electron": "^2.0.2",
        "electron-react-devtools": "^0.5.3",
        "faker": "^4.1.0",
        "jest": "^23.0.0",
        "ts-jest": "^22.4.6",
        "typescript": "^2.9"
    },
    "jest": {
        "transform": {
            "^.+\\.tsx?$": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
        "moduleFileExtensions": [
            "ts",
            "tsx",
            "js",
            "jsx",
            "json",
            "node"
        ],
        "globals": {
            "ts-jest": {
                "tsConfigFile": "./configs/tsconfig.json"
            }
        }
    },
    "dependencies": {
        "@types/classnames": "^2.2.4",
        "@types/clone": "^0.1.30",
        "@types/csv2json": "^1.4.0",
        "@types/csvtojson": "^1.1.5",
        "@types/got": "^8.3.1",
        "@types/react": "^16.3.17",
        "@types/react-dom": "^16.0.6",
        "@types/validator": "^9.4.1",
        "classnames": "^2.2.6",
        "clone": "^2.1.1",
        "csv2json": "^1.4.2",
        "csvtojson": "^1.1.12",
        "font-awesome": "^4.7.0",
        "got": "^8.3.1",
        "is-electron": "^2.1.0",
        "react": "^16.3.17",
        "react-dom": "^16.0.6",
        "tachyons": "^4.10.0",
        "validator": "^10.3.0"
    }
}

},{}],1467:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const ReactDOM = require("react-dom");
const components_1 = require("./components");
const mock_1 = require("./src/mock");
function render(browser, savedData = mock_1.createEmptySavedData()) {
    ReactDOM.render(React.createElement(components_1.rootElement, {
        savedData,
        browser,
    }), document.getElementById('cryptotithe'));
}
const isElectron = require('is-electron');
const electron = isElectron();
if (electron) {
    try {
        const data = require('./data');
        render(false, data);
    }
    catch (ex) {
        render(false);
    }
}
else {
    render(true);
}

},{"./components":21,"./data":undefined,"./src/mock":1468,"is-electron":1236,"react":1347,"react-dom":1344}],1468:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const faker = require("faker");
const types_1 = require("../types");
function mockHoldings(currencies, holdingsPerCurrency, startingDate = new Date(1 / 1 / 2010), endingDate = new Date()) {
    const holdings = {};
    for (let i = 0; i < currencies; i++) {
        const toBeHoldings = [];
        for (let hpc = 0; hpc < holdingsPerCurrency; hpc++) {
            toBeHoldings.push({
                amount: faker.random.number(),
                date: faker.date.between(startingDate, endingDate).getTime(),
                rateInFiat: faker.random.number(),
            });
        }
        holdings[faker.random.word().toUpperCase()] = toBeHoldings;
    }
    return holdings;
}
exports.mockHoldings = mockHoldings;
function mockTrades(amount, startingDate, currentHoldings, allowOverflow) {
    const trades = [];
    const currencies = Object.keys(currentHoldings);
    for (const currency of currencies) {
        let totalHoldings = 0;
        for (const holding of currentHoldings[currency]) {
            totalHoldings += holding.amount;
        }
        for (let i = 0; i < amount; i++) {
            trades.push({
                boughtCurrency: faker.random.word().toUpperCase(),
                soldCurrency: faker.random.arrayElement(currencies),
                amountSold: (allowOverflow ?
                    totalHoldings + faker.random.number() : (totalHoldings - faker.random.number()) / amount),
                rate: faker.random.number(),
                date: faker.date.between(startingDate, new Date()).getTime(),
                fiatRate: faker.random.number(),
                id: faker.random.words(5),
                exchange: faker.random.objectElement(types_1.EXCHANGES),
            });
        }
    }
    return trades;
}
exports.mockTrades = mockTrades;
function mockTradesWithFiatRate(amount, startingDate, currentHoldings, allowOverflow) {
    const trades = mockTrades(amount, startingDate, currentHoldings, allowOverflow);
    for (const trade of trades) {
        trade.fiatRate = faker.random.number();
    }
    return trades;
}
exports.mockTradesWithFiatRate = mockTradesWithFiatRate;
function createEmptySavedData() {
    const packageData = require('../../package.json');
    return {
        trades: [],
        holdings: {},
        savedDate: new Date(),
        version: packageData.version,
        settings: {
            fiatRateMethod: Object.keys(types_1.FiatRateMethod)[0],
            fiatCurrency: 'USD',
            gainCalculationMethod: types_1.METHOD.FIFO,
        },
    };
}
exports.createEmptySavedData = createEmptySavedData;

},{"../../package.json":1466,"../types":1491,"faker":145}],1469:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const CalculateGains_1 = require("../../processing/CalculateGains");
const headers = [
    'Description',
    'Date Acquired',
    'Date Sold',
    'Proceeds',
    'Cost Basis',
    'Adjustment Code',
    'Adjustment Amount',
    'Gain or Loss',
].join(',');
function outputForm8949(holdings, trades, fiatCurrency, method) {
    const result = CalculateGains_1.calculateGainsPerHoldings(holdings, trades, fiatCurrency, method);
    let csvData = [
        'Form 8949 Statement',
        '',
        'Part 1 (Short-Term)',
    ];
    csvData = csvData.concat(headers);
    csvData = csvData.concat(addTrades(result.shortTermTrades));
    csvData = csvData.concat(addTotal(result.shortTermProceeds, result.shortTermCostBasis, result.shortTermGain));
    csvData = csvData.concat(['', 'Part 2 (Long Term)']).concat(headers);
    csvData = csvData.concat(addTrades(result.longTermTrades));
    csvData = csvData.concat(addTotal(result.longTermProceeds, result.longTermCostBasis, result.longTermGain));
    return csvData.join('\n');
}
exports.default = outputForm8949;
function addTrades(trades) {
    return trades.map((trade) => [
        `${trade.amountSold} ${trade.soldCurrency}`,
        new Date(trade.dateAcquired).toLocaleDateString(),
        new Date(trade.date).toLocaleDateString(),
        (trade.costBasis + trade.longTerm + trade.shortTerm).toFixed(2),
        (trade.costBasis).toFixed(2),
        null,
        null,
        (trade.longTerm + trade.shortTerm).toFixed(2),
    ]);
}
function addTotal(proceeds, costBasis, gain) {
    return ['Totals', '', '', proceeds.toFixed(2), costBasis.toFixed(2), '', 0, gain.toFixed(2)].join(',');
}

},{"../../processing/CalculateGains":1478}],1470:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const crypto = require("crypto");
const __1 = require("../");
const types_1 = require("../../types");
const utils_1 = require("../utils");
var BinanceOrderType;
(function (BinanceOrderType) {
    BinanceOrderType["SELL"] = "SELL";
    BinanceOrderType["BUY"] = "BUY";
})(BinanceOrderType || (BinanceOrderType = {}));
function getPairs(market) {
    const pairs = [];
    if (market.length === 6) {
        pairs.push(market.substr(0, 3));
        pairs.push(market.substr(3, 3));
    }
    else {
        pairs.push(market.substr(0, 4));
        pairs.push(market.substr(4, 3));
    }
    return pairs;
}
function processData(fileData) {
    return __awaiter(this, void 0, void 0, function* () {
        const data = yield __1.getCSVData(fileData);
        const internalFormat = [];
        for (const trade of data) {
            const pair = getPairs(trade.Market);
            const tradeToAdd = {};
            switch (trade.Type) {
                case BinanceOrderType.BUY:
                    tradeToAdd.boughtCurrency = pair[0].toUpperCase();
                    tradeToAdd.soldCurrency = pair[1].toUpperCase();
                    tradeToAdd.date = utils_1.createDateAsUTC(new Date(trade['Date(UTC)'])).getTime();
                    tradeToAdd.exchange = types_1.EXCHANGES.BINANCE;
                    if (pair[1].toUpperCase() === trade['Fee Coin']) {
                        tradeToAdd.amountSold = parseFloat(trade.Total) + parseFloat(trade.Fee);
                        tradeToAdd.rate = tradeToAdd.amountSold / parseFloat(trade.Amount);
                    }
                    else {
                        tradeToAdd.amountSold = parseFloat(trade.Total);
                        tradeToAdd.rate = parseFloat(trade.Total) / (parseFloat(trade.Amount) + parseFloat(trade.Fee));
                    }
                    break;
                case BinanceOrderType.SELL:
                    tradeToAdd.soldCurrency = pair[0].toUpperCase();
                    tradeToAdd.boughtCurrency = pair[1].toUpperCase();
                    tradeToAdd.date = utils_1.createDateAsUTC(new Date(trade['Date(UTC)'])).getTime();
                    tradeToAdd.exchange = types_1.EXCHANGES.BINANCE;
                    if (pair[1].toUpperCase() === trade['Fee Coin']) {
                        tradeToAdd.amountSold = parseFloat(trade.Amount);
                        tradeToAdd.rate = parseFloat(trade.Amount) / (parseFloat(trade.Total) - parseFloat(trade.Fee));
                    }
                    else {
                        tradeToAdd.amountSold = parseFloat(trade.Amount) + parseFloat(trade.Fee);
                        tradeToAdd.rate = tradeToAdd.amountSold / parseFloat(trade.Total);
                    }
                    break;
                default:
                    throw new Error('Unknown Order Type - ' + trade['Date(UTC)']);
            }
            tradeToAdd.id = crypto.createHash('sha256').update(JSON.stringify(tradeToAdd)).digest('hex');
            internalFormat.push(tradeToAdd);
        }
        return internalFormat;
    });
}
exports.processData = processData;

},{"../":1473,"../../types":1491,"../utils":1476,"crypto":86}],1471:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("../");
const types_1 = require("../../types");
const utils_1 = require("../utils");
var BittrexOrderType;
(function (BittrexOrderType) {
    BittrexOrderType["LIMIT_SELL"] = "LIMIT_SELL";
    BittrexOrderType["LIMIT_BUY"] = "LIMIT_BUY";
})(BittrexOrderType || (BittrexOrderType = {}));
function processData(fileData) {
    return __awaiter(this, void 0, void 0, function* () {
        const data = yield __1.getCSVData(fileData);
        const internalFormat = [];
        for (const trade of data) {
            const pair = trade.Exchange.split('-');
            switch (trade.Type) {
                case BittrexOrderType.LIMIT_BUY:
                    internalFormat.push({
                        boughtCurrency: pair[1].toUpperCase(),
                        soldCurrency: pair[0].toUpperCase(),
                        amountSold: parseFloat(trade.Quantity) * parseFloat(trade.Limit),
                        rate: parseFloat((parseFloat(trade.Price) / parseFloat(trade.Quantity)).toFixed(8)),
                        date: utils_1.createDateAsUTC(new Date(trade.Closed)).getTime(),
                        id: trade.OrderUuid,
                        exchange: types_1.EXCHANGES.BITTREX,
                    });
                    break;
                case BittrexOrderType.LIMIT_SELL:
                    internalFormat.push({
                        boughtCurrency: pair[0].toUpperCase(),
                        soldCurrency: pair[1].toUpperCase(),
                        amountSold: parseFloat(trade.Quantity),
                        rate: parseFloat((parseFloat(trade.Quantity) / parseFloat(trade.Price)).toFixed(8)),
                        date: utils_1.createDateAsUTC(new Date(trade.Closed)).getTime(),
                        id: trade.OrderUuid,
                        exchange: types_1.EXCHANGES.BITTREX,
                    });
                    break;
                default:
                    throw new Error('Unknown Order Type - ' + trade.OrderUuid);
            }
        }
        return internalFormat;
    });
}
exports.processData = processData;

},{"../":1473,"../../types":1491,"../utils":1476}],1472:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("../");
const types_1 = require("../../types");
const utils_1 = require("../utils");
var GeminiOrderType;
(function (GeminiOrderType) {
    GeminiOrderType["Sell"] = "Sell";
    GeminiOrderType["Buy"] = "Buy";
    GeminiOrderType["Credit"] = "Credit";
    GeminiOrderType["Debit"] = "Debit";
})(GeminiOrderType || (GeminiOrderType = {}));
function getCurrenciesTraded(trade) {
    const keys = Object.keys(trade);
    const currencies = {
        bought: '',
        sold: '',
    };
    for (const key of keys) {
        if (key.indexOf(' Amount') !== -1 && trade[key] !== undefined && trade[key] !== '') {
            if (trade[key].substring(0, 1) === '-' || trade[key].substring(0, 1) === '(') {
                currencies.sold = key.substring(0, 3);
            }
            else {
                currencies.bought = key.substring(0, 3);
            }
        }
    }
    return currencies;
}
function parseNumber(amount) {
    if (!amount || amount === null || amount === '') {
        return 0;
    }
    const amountSold = amount.replace(/[($-,)]/g, '');
    return parseFloat(amountSold.split(' ')[0]);
}
function processData(fileData) {
    return __awaiter(this, void 0, void 0, function* () {
        const data = yield __1.getCSVData(fileData);
        const internalFormat = [];
        for (let i = 1; i < data.length - 1; i++) {
            const trade = data[i];
            if (trade.Symbol.length > 3) {
                const pair = getCurrenciesTraded(trade);
                switch (trade.Type) {
                    case GeminiOrderType.Buy:
                    case GeminiOrderType.Sell:
                        const amountSold = parseNumber(trade[`${pair.sold} Amount`]);
                        const amountSoldFee = parseNumber(trade[`Trading Fee (${pair.sold})`]);
                        const amountBought = parseNumber(trade[`${pair.bought} Amount`]);
                        const amountBoughtFee = parseNumber(trade[`Trading Fee (${pair.bought})`]);
                        internalFormat.push({
                            boughtCurrency: pair.bought.toUpperCase(),
                            soldCurrency: pair.sold.toUpperCase(),
                            amountSold: amountSold + amountSoldFee,
                            rate: (amountSold + amountSoldFee) / (amountBought - amountBoughtFee),
                            date: utils_1.createDateAsUTC(new Date(`${trade['Order Date']} ${trade['Order Time']}`)).getTime(),
                            id: trade['Trade ID'],
                            exchange: types_1.EXCHANGES.GEMINI,
                        });
                        break;
                    case GeminiOrderType.Credit:
                    case GeminiOrderType.Debit:
                        throw new Error('Credit/Debit - Skipping');
                    default:
                        throw new Error(`Unknown Order Type - ${trade['Order ID']} - ${trade['Trade ID']}`);
                }
            }
        }
        return internalFormat;
    });
}
exports.processData = processData;

},{"../":1473,"../../types":1491,"../utils":1476}],1473:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const crypto = require("crypto");
const csv = require("csvtojson");
const types_1 = require("../types");
function getCSVData(fileData) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve, reject) => {
            const promises = [];
            csv().fromString(fileData)
                .on('json', (converted) => promises.push(Promise.resolve(converted)))
                .on('done', (error) => {
                if (error) {
                    reject(error);
                }
                Promise.all(promises).then(resolve);
            });
        });
    });
}
exports.getCSVData = getCSVData;
function processData(exchange, fileData) {
    return __awaiter(this, void 0, void 0, function* () {
        let processExchangeData;
        switch (exchange) {
            case 'BITTREX':
                processExchangeData = require('./bittrex').processData;
                break;
            case 'GEMINI':
                processExchangeData = require('./gemini').processData;
                break;
            case 'POLONIEX':
                processExchangeData = require('./poloniex').processData;
                break;
            case 'KRAKEN':
                processExchangeData = require('./kraken').processData;
                break;
            case 'BINANCE':
                processExchangeData = require('./binance').processData;
                break;
            default:
                const headers = fileData.substr(0, fileData.indexOf('\n'));
                const headersHash = crypto.createHash('sha256').update(headers).digest('hex');
                for (const key in types_1.ExchangesHeaders) {
                    if (types_1.ExchangesHeaders[key] === headersHash) {
                        return processData(key, fileData);
                    }
                }
                throw new Error(`Unknown Exchange - ${exchange}`);
        }
        if (typeof processExchangeData === 'function') {
            return processExchangeData(fileData);
        }
        return [];
    });
}
exports.processData = processData;

},{"../types":1491,"./binance":1470,"./bittrex":1471,"./gemini":1472,"./kraken":1474,"./poloniex":1475,"crypto":86,"csvtojson":87}],1474:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("../");
const types_1 = require("../../types");
const utils_1 = require("../utils");
var KrakenType;
(function (KrakenType) {
    KrakenType["BUY"] = "buy";
    KrakenType["SELL"] = "sell";
})(KrakenType || (KrakenType = {}));
var KrakenOrderType;
(function (KrakenOrderType) {
    KrakenOrderType["LIMIT"] = "limit";
    KrakenOrderType["MARKET"] = "market";
})(KrakenOrderType || (KrakenOrderType = {}));
// maybe change it to https://api.kraken.com/0/public/Assets api call
const KRAKEN_TO_NORMAL_CURRENCY = {
    XXBT: 'BTC',
    XBT: 'BTC',
    XXMR: 'XMR',
    XXLM: 'XLM',
    XETC: 'ETC',
    XETH: 'ETH',
    ZUSD: 'USD',
    XZEC: 'ZEC',
    XDAO: 'DAO',
    XICN: 'ICN',
    XLTC: 'LTC',
    XMLN: 'MLN',
    XNMC: 'NMC',
    XREP: 'REP',
    XXDG: 'DOGE',
    XXRP: 'XRP',
    XXVN: 'XVN',
    ZCAD: 'CAD',
    ZEUR: 'EUR',
    ZGBP: 'GBP',
    ZJPY: 'JPY',
    ZKRW: 'KRW',
};
function getRealTradedPairs(market) {
    const pairs = [];
    switch (market.length) {
        case 6:
            pairs.push(market.substr(0, 3));
            pairs.push(market.substr(3));
            break;
        case 8:
            pairs.push(market.substr(0, 4));
            pairs.push(market.substr(4));
            break;
        default:
            throw new Error('Unknwon Market Length');
    }
    return pairs.map((pair) => (pair in KRAKEN_TO_NORMAL_CURRENCY ? KRAKEN_TO_NORMAL_CURRENCY[pair] : pair));
}
function processData(filePath) {
    return __awaiter(this, void 0, void 0, function* () {
        const data = yield __1.getCSVData(filePath);
        const internalFormat = [];
        for (const trade of data) {
            const pairs = getRealTradedPairs(trade.pair);
            switch (trade.type) {
                case KrakenType.BUY:
                    internalFormat.push({
                        boughtCurrency: pairs[0].toUpperCase(),
                        soldCurrency: pairs[1].toUpperCase(),
                        amountSold: parseFloat(trade.cost),
                        rate: (parseFloat(trade.cost) + parseFloat(trade.fee)) / (parseFloat(trade.vol)),
                        date: utils_1.createDateAsUTC(new Date(trade.time)).getTime(),
                        id: trade.txid,
                        exchange: types_1.EXCHANGES.KRAKEN,
                    });
                    break;
                case KrakenType.SELL:
                    internalFormat.push({
                        boughtCurrency: pairs[1].toUpperCase(),
                        soldCurrency: pairs[0].toUpperCase(),
                        amountSold: parseFloat(trade.vol),
                        rate: parseFloat(trade.vol) / (parseFloat(trade.cost) - parseFloat(trade.fee)),
                        date: utils_1.createDateAsUTC(new Date(trade.time)).getTime(),
                        id: trade.txid,
                        exchange: types_1.EXCHANGES.KRAKEN,
                    });
                    break;
                default:
                    throw new Error('Unknown Order Type - ' + trade['Order Number']);
            }
        }
        return internalFormat;
    });
}
exports.processData = processData;

},{"../":1473,"../../types":1491,"../utils":1476}],1475:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("../");
const types_1 = require("../../types");
const utils_1 = require("../utils");
var PoloniexOrderType;
(function (PoloniexOrderType) {
    PoloniexOrderType["BUY"] = "Buy";
    PoloniexOrderType["SELL"] = "Sell";
})(PoloniexOrderType || (PoloniexOrderType = {}));
function parseNumber(amount) {
    return Math.abs(parseFloat(amount));
}
function garbageTrade(trade) {
    return parseNumber(trade['Quote Total Less Fee']) === 0 || parseNumber(trade['Base Total Less Fee']) === 0;
}
function processData(fileData) {
    return __awaiter(this, void 0, void 0, function* () {
        const data = yield __1.getCSVData(fileData);
        const internalFormat = [];
        for (const trade of data) {
            const pair = trade.Market.split('/');
            // some trades have 0 cost/value so skip those
            if (garbageTrade(trade)) {
                // change to something to warn users ('Garbage Trade Skipped - ' + trade['Order Number']);
                continue;
            }
            switch (trade.Type) {
                case PoloniexOrderType.BUY:
                    internalFormat.push({
                        boughtCurrency: pair[0].toUpperCase(),
                        soldCurrency: pair[1].toUpperCase(),
                        amountSold: parseNumber(trade['Base Total Less Fee']),
                        rate: parseNumber(trade['Base Total Less Fee']) / parseNumber(trade['Quote Total Less Fee']),
                        date: utils_1.createDateAsUTC(new Date(trade.Date)).getTime(),
                        id: trade['Order Number'],
                        exchange: types_1.EXCHANGES.POLONIEX,
                    });
                    break;
                case PoloniexOrderType.SELL:
                    internalFormat.push({
                        boughtCurrency: pair[1].toUpperCase(),
                        soldCurrency: pair[0].toUpperCase(),
                        amountSold: parseNumber(trade['Quote Total Less Fee']),
                        rate: parseNumber(trade['Quote Total Less Fee']) / parseNumber(trade['Base Total Less Fee']),
                        date: utils_1.createDateAsUTC(new Date(trade.Date)).getTime(),
                        id: trade['Order Number'],
                        exchange: types_1.EXCHANGES.POLONIEX,
                    });
                    break;
                default:
                    throw new Error('Unknown Order Type - ' + trade['Order Number']);
            }
        }
        return internalFormat;
    });
}
exports.processData = processData;

},{"../":1473,"../../types":1491,"../utils":1476}],1476:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function createDateAsUTC(date) {
    return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
}
exports.createDateAsUTC = createDateAsUTC;

},{}],1477:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const CalculateGains_1 = require("../CalculateGains");
const CalculateHoldingsValue_1 = require("../CalculateHoldingsValue");
const SortTrades_1 = require("../SortTrades");
function calculateDailyBalance(trades, fiatCurrency) {
    return __awaiter(this, void 0, void 0, function* () {
        const dailyBalance = [];
        let holdings = {};
        const sortedTrades = SortTrades_1.default(trades);
        const endingDate = sortedTrades[sortedTrades.length - 1].date;
        for (let index = sortedTrades[0].date; index < endingDate; index += 86400000) {
            const tradesOfDay = sortedTrades.filter((trade) => trade.date <= index + 86400000 && trade.date >= index);
            holdings = CalculateGains_1.calculateGains(holdings, tradesOfDay, fiatCurrency).newHoldings;
            const result = yield CalculateHoldingsValue_1.calculateHoldingsValue(holdings, fiatCurrency, new Date(index));
            dailyBalance.push({
                date: new Date(index),
                holdings: result.currencies,
                fiatValue: result.total,
            });
        }
        return dailyBalance;
    });
}
exports.calculateDailyBalance = calculateDailyBalance;

},{"../CalculateGains":1478,"../CalculateHoldingsValue":1479,"../SortTrades":1481}],1478:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const clone = require("clone");
const types_1 = require("../../types");
const FULL_YEAR_IN_MILLISECONDS = 31536000000;
function calculateGains(holdings, trades, fiatCurrency, method = types_1.METHOD.FIFO) {
    let shortTermGain = 0;
    let longTermGain = 0;
    let newHoldings = clone(holdings);
    for (const trade of trades) {
        const result = getCurrenyHolding(newHoldings, trade, fiatCurrency, method);
        newHoldings = result.newHoldings;
        if (!(trade.boughtCurrency in newHoldings)) {
            newHoldings[trade.boughtCurrency] = [];
        }
        if (trade.soldCurrency === fiatCurrency) {
            newHoldings[trade.boughtCurrency].push({
                amount: trade.amountSold / trade.rate,
                rateInFiat: trade.fiatRate,
                date: trade.date,
            });
            continue;
        }
        else {
            newHoldings[trade.boughtCurrency].push({
                amount: trade.amountSold / trade.rate,
                rateInFiat: trade.fiatRate * trade.rate,
                date: trade.date,
            });
            for (const holding of result.deductedHoldings) {
                const gain = (trade.fiatRate - holding.rateInFiat) * holding.amount;
                if (trade.date - holding.date > FULL_YEAR_IN_MILLISECONDS) {
                    longTermGain += gain;
                }
                else {
                    shortTermGain += gain;
                }
            }
        }
    }
    return {
        newHoldings,
        longTermGain,
        shortTermGain,
    };
}
exports.calculateGains = calculateGains;
function getCurrenyHolding(holdings, trade, fiatCurrency, method) {
    holdings = clone(holdings);
    const currencyHolding = [];
    let amountUsed = trade.amountSold;
    while (amountUsed !== 0) {
        if (trade.soldCurrency in holdings) {
            switch (method) {
                case types_1.METHOD.LIFO:
                    const lastIn = holdings[trade.soldCurrency][holdings[trade.soldCurrency].length - 1];
                    if (lastIn.amount > amountUsed) {
                        lastIn.amount = lastIn.amount - amountUsed;
                        currencyHolding.push({
                            amount: amountUsed,
                            rateInFiat: lastIn.rateInFiat,
                            date: lastIn.date,
                        });
                        amountUsed = 0;
                    }
                    else {
                        amountUsed = amountUsed - lastIn.amount;
                        const popped = holdings[trade.soldCurrency].pop();
                        if (popped !== undefined) {
                            currencyHolding.push(popped);
                        }
                    }
                    break;
                case types_1.METHOD.LTFO:
                    let lowestTaxCostPosition = 0;
                    if (trade.date - holdings[trade.soldCurrency][0].date < FULL_YEAR_IN_MILLISECONDS) {
                        let fallBackPosition = 0;
                        for (let index = 1; index < holdings[trade.soldCurrency].length; index++) {
                            const holding = holdings[trade.soldCurrency][index];
                            if (holding.rateInFiat > holdings[trade.soldCurrency][fallBackPosition].rateInFiat) {
                                fallBackPosition = index;
                            }
                            if (trade.date - holding.date > FULL_YEAR_IN_MILLISECONDS) {
                                lowestTaxCostPosition = index;
                                break;
                            }
                        }
                        if (lowestTaxCostPosition === 0) {
                            lowestTaxCostPosition = fallBackPosition;
                        }
                    }
                    const lowestTaxCostHolding = holdings[trade.soldCurrency][lowestTaxCostPosition];
                    if (lowestTaxCostHolding.amount > amountUsed) {
                        lowestTaxCostHolding.amount = lowestTaxCostHolding.amount - amountUsed;
                        currencyHolding.push({
                            amount: amountUsed,
                            rateInFiat: lowestTaxCostHolding.rateInFiat,
                            date: lowestTaxCostHolding.date,
                        });
                        amountUsed = 0;
                    }
                    else {
                        amountUsed = amountUsed - lowestTaxCostHolding.amount;
                        currencyHolding.push(lowestTaxCostHolding);
                        holdings[trade.soldCurrency].splice(lowestTaxCostPosition, 1);
                    }
                    break;
                case types_1.METHOD.HTFO:
                    let highestTaxCostPosition = 0;
                    if (trade.date - holdings[trade.soldCurrency][0].date > FULL_YEAR_IN_MILLISECONDS) {
                        let fallBackPosition = 0;
                        for (let index = 1; index < holdings[trade.soldCurrency].length; index++) {
                            const holding = holdings[trade.soldCurrency][index];
                            if (holding.rateInFiat < holdings[trade.soldCurrency][fallBackPosition].rateInFiat) {
                                fallBackPosition = index;
                            }
                            if (trade.date - holding.date < FULL_YEAR_IN_MILLISECONDS) {
                                highestTaxCostPosition = index;
                                break;
                            }
                        }
                        if (highestTaxCostPosition === 0) {
                            highestTaxCostPosition = fallBackPosition;
                        }
                    }
                    const highestTaxCostHolding = holdings[trade.soldCurrency][highestTaxCostPosition];
                    if (highestTaxCostHolding.amount > amountUsed) {
                        highestTaxCostHolding.amount = highestTaxCostHolding.amount - amountUsed;
                        currencyHolding.push({
                            amount: amountUsed,
                            rateInFiat: highestTaxCostHolding.rateInFiat,
                            date: highestTaxCostHolding.date,
                        });
                        amountUsed = 0;
                    }
                    else {
                        amountUsed = amountUsed - highestTaxCostHolding.amount;
                        currencyHolding.push(highestTaxCostHolding);
                        holdings[trade.soldCurrency].splice(highestTaxCostPosition, 1);
                    }
                    break;
                case types_1.METHOD.HCFO:
                    let highestCostPosition = 0;
                    for (let index = 1; index < holdings[trade.soldCurrency].length; index++) {
                        const holding = holdings[trade.soldCurrency][index];
                        if (holding.rateInFiat > holdings[trade.soldCurrency][highestCostPosition].rateInFiat) {
                            highestCostPosition = index;
                        }
                    }
                    const highestCostHolding = holdings[trade.soldCurrency][highestCostPosition];
                    if (highestCostHolding.amount > amountUsed) {
                        highestCostHolding.amount = highestCostHolding.amount - amountUsed;
                        currencyHolding.push({
                            amount: amountUsed,
                            rateInFiat: highestCostHolding.rateInFiat,
                            date: highestCostHolding.date,
                        });
                        amountUsed = 0;
                    }
                    else {
                        amountUsed = amountUsed - highestCostHolding.amount;
                        currencyHolding.push(highestCostHolding);
                        holdings[trade.soldCurrency].splice(highestCostPosition, 1);
                    }
                    break;
                case types_1.METHOD.LCFO:
                    let lowestCostPosition = 0;
                    for (let index = 1; index < holdings[trade.soldCurrency].length; index++) {
                        const holding = holdings[trade.soldCurrency][index];
                        if (holding.rateInFiat < holdings[trade.soldCurrency][lowestCostPosition].rateInFiat) {
                            lowestCostPosition = index;
                        }
                    }
                    const lowestCostHolding = holdings[trade.soldCurrency][lowestCostPosition];
                    if (lowestCostHolding.amount > amountUsed) {
                        lowestCostHolding.amount = lowestCostHolding.amount - amountUsed;
                        currencyHolding.push({
                            amount: amountUsed,
                            rateInFiat: lowestCostHolding.rateInFiat,
                            date: lowestCostHolding.date,
                        });
                        amountUsed = 0;
                    }
                    else {
                        amountUsed = amountUsed - lowestCostHolding.amount;
                        currencyHolding.push(lowestCostHolding);
                        holdings[trade.soldCurrency].splice(lowestCostPosition, 1);
                    }
                    break;
                case types_1.METHOD.FIFO:
                default:
                    const firstIn = holdings[trade.soldCurrency][0];
                    if (firstIn.amount > amountUsed) {
                        firstIn.amount = firstIn.amount - amountUsed;
                        currencyHolding.push({
                            amount: amountUsed,
                            rateInFiat: firstIn.rateInFiat,
                            date: firstIn.date,
                        });
                        amountUsed = 0;
                    }
                    else {
                        amountUsed = amountUsed - firstIn.amount;
                        currencyHolding.push(holdings[trade.soldCurrency][0]);
                        holdings[trade.soldCurrency].splice(0, 1);
                    }
                    break;
            }
            if (!holdings[trade.soldCurrency].length) {
                delete holdings[trade.soldCurrency];
            }
        }
        else {
            if (trade.soldCurrency === fiatCurrency) {
                currencyHolding.push({
                    amount: amountUsed,
                    date: trade.date,
                    rateInFiat: 1,
                });
            }
            else {
                currencyHolding.push({
                    amount: amountUsed,
                    date: trade.date,
                    rateInFiat: 0,
                });
            }
            amountUsed = 0;
        }
    }
    return {
        deductedHoldings: currencyHolding,
        newHoldings: holdings,
    };
}
exports.getCurrenyHolding = getCurrenyHolding;
function calculateGainPerTrade(holdings, internalFormat, fiatCurrency, method) {
    let tempHoldings = clone(holdings);
    let shortTerm = 0;
    let longTerm = 0;
    const finalFormat = [];
    for (const trade of internalFormat) {
        const result = calculateGains(tempHoldings, [trade], fiatCurrency, method);
        tempHoldings = result.newHoldings;
        shortTerm += result.shortTermGain;
        longTerm += result.longTermGain;
        finalFormat.push(Object.assign({}, trade, { shortTerm: result.shortTermGain, longTerm: result.longTermGain }));
    }
    return {
        trades: finalFormat,
        shortTerm,
        longTerm,
    };
}
exports.calculateGainPerTrade = calculateGainPerTrade;
function calculateGainsPerHoldings(holdings, trades, fiatCurrency, method) {
    let newHoldings = clone(holdings);
    let shortTermGain = 0;
    let shortTermProceeds = 0;
    let shortTermCostBasis = 0;
    let longTermGain = 0;
    let longTermProceeds = 0;
    let longTermCostBasis = 0;
    const shortTermTrades = [];
    const longTermTrades = [];
    for (const trade of trades) {
        const result = getCurrenyHolding(newHoldings, trade, fiatCurrency, method);
        newHoldings = result.newHoldings;
        if (!(trade.boughtCurrency in newHoldings)) {
            newHoldings[trade.boughtCurrency] = [];
        }
        if (trade.soldCurrency === fiatCurrency) {
            newHoldings[trade.boughtCurrency].push({
                amount: trade.amountSold / trade.rate,
                rateInFiat: trade.fiatRate,
                date: trade.date,
            });
            continue;
        }
        else {
            newHoldings[trade.boughtCurrency].push({
                amount: trade.amountSold / trade.rate,
                rateInFiat: trade.fiatRate * trade.rate,
                date: trade.date,
            });
        }
        for (const holding of result.deductedHoldings) {
            const tradeToAdd = {
                fiatRate: trade.fiatRate,
                boughtCurrency: trade.boughtCurrency,
                soldCurrency: trade.soldCurrency,
                amountSold: holding.amount,
                rate: trade.rate,
                date: trade.date,
                id: trade.id,
                exchange: trade.exchange,
                shortTerm: 0,
                longTerm: 0,
                dateAcquired: holding.date,
                costBasis: parseFloat((holding.rateInFiat * holding.amount).toFixed(2)),
            };
            const unFixedGain = (trade.fiatRate - holding.rateInFiat) * holding.amount;
            let trueGain = parseFloat(unFixedGain.toFixed(2));
            if (parseFloat(unFixedGain.toFixed(2)) === 0) {
                if (unFixedGain === 0) {
                    trueGain = 0;
                }
                else {
                    if (unFixedGain > 0) {
                        trueGain = 0.01;
                    }
                    else {
                        trueGain = -0.01;
                    }
                }
            }
            const gain = trueGain;
            if (trade.date - holding.date > FULL_YEAR_IN_MILLISECONDS) {
                longTermProceeds += tradeToAdd.fiatRate * tradeToAdd.amountSold;
                longTermCostBasis += tradeToAdd.costBasis;
                longTermGain += gain;
                tradeToAdd.longTerm = gain;
                longTermTrades.push(tradeToAdd);
            }
            else {
                shortTermProceeds += tradeToAdd.fiatRate * tradeToAdd.amountSold;
                shortTermCostBasis += tradeToAdd.costBasis;
                shortTermGain += gain;
                tradeToAdd.shortTerm = gain;
                shortTermTrades.push(tradeToAdd);
            }
        }
    }
    return {
        shortTermTrades,
        longTermTrades,
        shortTermGain,
        longTermGain,
        shortTermProceeds,
        longTermProceeds,
        shortTermCostBasis,
        longTermCostBasis,
        holdings: newHoldings,
    };
}
exports.calculateGainsPerHoldings = calculateGainsPerHoldings;

},{"../../types":1491,"clone":79}],1479:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const getDayAvgCurrencyRate_1 = require("../getFiatRate/getDayAvgCurrencyRate");
function calculateHoldingsValue(holdings, fiatCurrency, date = new Date()) {
    return __awaiter(this, void 0, void 0, function* () {
        const currencies = Object.keys(holdings);
        const holdingsValues = {
            total: 0,
            currencies: {},
        };
        for (const currency of currencies) {
            let totalHeld = 0;
            const rate = getDayAvgCurrencyRate_1.getDayAvg(fiatCurrency, currency, date.getTime());
            for (const holding of holdings[currency]) {
                totalHeld += holding.amount;
            }
            holdingsValues.currencies[currency] = {
                fiatValue: (yield rate) * totalHeld,
                amount: totalHeld,
            };
            holdingsValues.total += holdingsValues.currencies[currency].fiatValue;
        }
        return holdingsValues;
    });
}
exports.calculateHoldingsValue = calculateHoldingsValue;

},{"../getFiatRate/getDayAvgCurrencyRate":1484}],1480:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function duplicateCheck(currentTrades, newTrades) {
    const duplicateTrades = [];
    for (const newTrade of newTrades) {
        const IDMatchedTrades = currentTrades.filter((trade) => newTrade.id === trade.id);
        if (IDMatchedTrades.length) {
            duplicateTrades.push(Object.assign({}, newTrade, { probability: 100, duplicate: true }));
            continue;
        }
        for (const currentTrade of currentTrades) {
            if (newTrade.exchange === currentTrade.exchange) {
                let probability = 0;
                if (newTrade.date === currentTrade.date) {
                    if (newTrade.boughtCurrency === currentTrade.boughtCurrency ||
                        newTrade.soldCurrency === currentTrade.soldCurrency) {
                        probability += 20;
                    }
                    if (newTrade.amountSold === currentTrade.amountSold) {
                        probability += 30;
                    }
                    if (newTrade.rate === currentTrade.rate) {
                        probability += 50;
                    }
                }
                if (probability > 0) {
                    duplicateTrades.push(Object.assign({}, newTrade, { probability, duplicate: probability > 50 }));
                }
            }
        }
    }
    return duplicateTrades;
}
exports.default = duplicateCheck;

},{}],1481:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function sortTrades(trades) {
    return trades.sort(sortTradesByDate);
}
exports.default = sortTrades;
function sortTradesByDate(trade1, trade2) {
    return new Date(trade1.date).getTime() - new Date(trade2.date).getTime();
}

},{}],1482:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("../../../types");
const getClosestHourPrice_1 = require("../getClosestHourPrice");
const getDayAvgCurrencyRate_1 = require("../getDayAvgCurrencyRate");
const utils_1 = require("../utils");
function BTCBasedRate(trade, BTCFiatRate) {
    if (trade.boughtCurrency === 'BTC' || trade.boughtCurrency === 'XBT') {
        return BTCFiatRate * (trade.amountSold / trade.rate) / trade.amountSold;
    }
    else if (trade.soldCurrency === 'BTC' || trade.soldCurrency === 'XBT') {
        return BTCFiatRate;
    }
    else {
        throw new Error('Not a BTC Trade' + trade.id);
    }
}
exports.BTCBasedRate = BTCBasedRate;
function getBTCFiatRate(trade, fiatCurrency, method) {
    return __awaiter(this, void 0, void 0, function* () {
        switch (method) {
            case types_1.FiatRateMethod.DOUBLEAVERAGE:
                const dayAvg = yield getDayAvgCurrencyRate_1.getDayAvg(fiatCurrency, 'BTC', trade.date);
                const hourBTCData = yield getClosestHourPrice_1.getClosestHourPrice('BTC', fiatCurrency, trade.date);
                return utils_1.calculateAverageFromArray([dayAvg, utils_1.calculateAvgerageHourPrice(hourBTCData)]);
            case types_1.FiatRateMethod.DAYAVERAGE:
                const vwapRate = yield getDayAvgCurrencyRate_1.getDayAvg(fiatCurrency, 'BTC', trade.date);
                return BTCBasedRate(trade, vwapRate);
            case types_1.FiatRateMethod.DAYAVERAGEMID:
                const midRate = yield getDayAvgCurrencyRate_1.getDayAvg(fiatCurrency, 'BTC', trade.date, 'MidHighLow');
                return BTCBasedRate(trade, midRate);
            case types_1.FiatRateMethod.DAYAVERAGEVOLUME:
                const volumeRate = yield getDayAvgCurrencyRate_1.getDayAvg(fiatCurrency, 'BTC', trade.date, 'VolFVolT');
                return BTCBasedRate(trade, volumeRate);
            default:
                const hourData = yield getClosestHourPrice_1.getClosestHourPrice('BTC', fiatCurrency, trade.date);
                switch (method) {
                    case types_1.FiatRateMethod.HOURLOW:
                        return BTCBasedRate(trade, hourData.low);
                    case types_1.FiatRateMethod.HOURHIGH:
                        return BTCBasedRate(trade, hourData.high);
                    case types_1.FiatRateMethod.HOUROPEN:
                        return BTCBasedRate(trade, hourData.open);
                    case types_1.FiatRateMethod.HOURCLOSE:
                        return BTCBasedRate(trade, hourData.close);
                    default:
                        return BTCBasedRate(trade, utils_1.calculateAvgerageHourPrice(hourData));
                }
        }
    });
}
exports.getBTCFiatRate = getBTCFiatRate;

},{"../../../types":1491,"../getClosestHourPrice":1483,"../getDayAvgCurrencyRate":1484,"../utils":1486}],1483:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const got = require("got");
const utils_1 = require("../utils");
function getClosestHourPrice(currency, fiatCurrency, date) {
    return __awaiter(this, void 0, void 0, function* () {
        const tradeTime = parseInt((utils_1.roundHour(new Date(date)) / 1000).toFixed(0), 10);
        const data = [
            `fsym=${currency}`,
            `tsym=${fiatCurrency}`,
            `limit=1`,
            `toTs=${tradeTime}`,
        ];
        const response = yield got('https://min-api.cryptocompare.com/data/histohour?' + data.join('&'));
        if ('body' in response) {
            try {
                const result = JSON.parse(response.body);
                if ('Data' in result) {
                    for (const hourData of result.Data) {
                        if (hourData.time <= tradeTime && tradeTime >= hourData.time + 3600) {
                            return hourData;
                        }
                    }
                }
                throw new Error('Unknown Response Type');
            }
            catch (ex) {
                throw new Error('Error parsing JSON');
            }
        }
        else {
            throw new Error('Invalid Response');
        }
    });
}
exports.getClosestHourPrice = getClosestHourPrice;
function getClosestHourPriceForTrade(trade, fiatCurrency) {
    return __awaiter(this, void 0, void 0, function* () {
        return getClosestHourPrice(trade.soldCurrency, fiatCurrency, trade.date);
    });
}
exports.getClosestHourPriceForTrade = getClosestHourPriceForTrade;

},{"../utils":1486,"got":1211}],1484:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const got = require("got");
const utils_1 = require("../utils");
function getDayAvg(fiatCurrency, currency, date, type = 'HourVWAP') {
    return __awaiter(this, void 0, void 0, function* () {
        const tradeTime = parseInt((new Date(date).getTime() / 1000).toFixed(0), 10);
        const data = [
            `fsym=${currency}`,
            `tsym=${fiatCurrency}`,
            'sign=false',
            `toTs=${tradeTime}`,
            'extraParams=cryptotithe',
            `avgType=${type}`,
        ];
        const response = yield got('https://min-api.cryptocompare.com/data/dayAvg?' + data.join('&'));
        const rate = utils_1.cryptocompareRateResponse(response, fiatCurrency);
        return rate || 0;
    });
}
exports.getDayAvg = getDayAvg;
function getDayAvgTradeRate(trade, fiatCurrency, type = 'HourVWAP') {
    return __awaiter(this, void 0, void 0, function* () {
        const rate = getDayAvg(fiatCurrency, trade.soldCurrency, trade.date);
        if (rate) {
            return rate;
        }
        else {
            const backupRate = getDayAvg(fiatCurrency, trade.boughtCurrency, trade.date, type);
            if (backupRate) {
                return backupRate;
            }
            else {
                throw new Error('Cant get any fiat Rate for trade ' + trade.id);
            }
        }
    });
}
exports.getDayAvgTradeRate = getDayAvgTradeRate;

},{"../utils":1486,"got":1211}],1485:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("../../types");
const BTCBasedRate_1 = require("./BTCBasedRate");
const getClosestHourPrice_1 = require("./getClosestHourPrice");
const getDayAvgCurrencyRate_1 = require("./getDayAvgCurrencyRate");
const utils_1 = require("./utils");
function getFiatRate(trade, fiatCurrency, method) {
    return __awaiter(this, void 0, void 0, function* () {
        if (utils_1.isCurrencyTrade(trade, fiatCurrency)) {
            return addRatetoTrade(trade, getFiatTradeRate(trade, fiatCurrency));
        }
        else {
            // non fiat currency trade
            if (utils_1.isCurrencyTrade(trade, 'BTC')) {
                const BTCBasedRate = yield BTCBasedRate_1.getBTCFiatRate(trade, fiatCurrency, method);
                return addRatetoTrade(trade, BTCBasedRate);
            }
            else {
                switch (method) {
                    case types_1.FiatRateMethod.DOUBLEAVERAGE:
                        const dayAvgDouble = yield getDayAvgCurrencyRate_1.getDayAvgTradeRate(trade, fiatCurrency);
                        const closestHourAvg = yield getClosestHourPrice_1.getClosestHourPriceForTrade(trade, fiatCurrency);
                        return addRatetoTrade(trade, utils_1.calculateAverageFromArray([
                            dayAvgDouble,
                            utils_1.calculateAvgerageHourPrice(closestHourAvg),
                        ]));
                    case types_1.FiatRateMethod.DAYAVERAGE:
                        const dayAvg = yield getDayAvgCurrencyRate_1.getDayAvgTradeRate(trade, fiatCurrency);
                        return addRatetoTrade(trade, dayAvg);
                    case types_1.FiatRateMethod.DAYAVERAGEMID:
                        const dayAvgMid = yield getDayAvgCurrencyRate_1.getDayAvgTradeRate(trade, fiatCurrency, 'MidHighLow');
                        return addRatetoTrade(trade, dayAvgMid);
                    case types_1.FiatRateMethod.DAYAVERAGEVOLUME:
                        const dayAvgVolume = yield getDayAvgCurrencyRate_1.getDayAvgTradeRate(trade, fiatCurrency, 'VolFVolT');
                        return addRatetoTrade(trade, dayAvgVolume);
                    case types_1.FiatRateMethod.HOURLOW:
                        const lowPrice = yield getClosestHourPrice_1.getClosestHourPriceForTrade(trade, fiatCurrency);
                        return addRatetoTrade(trade, lowPrice.low);
                    case types_1.FiatRateMethod.HOURHIGH:
                        const highPrice = yield getClosestHourPrice_1.getClosestHourPriceForTrade(trade, fiatCurrency);
                        return addRatetoTrade(trade, highPrice.high);
                    case types_1.FiatRateMethod.HOUROPEN:
                        const openPrice = yield getClosestHourPrice_1.getClosestHourPriceForTrade(trade, fiatCurrency);
                        return addRatetoTrade(trade, openPrice.open);
                    case types_1.FiatRateMethod.HOURCLOSE:
                        const closePrice = yield getClosestHourPrice_1.getClosestHourPriceForTrade(trade, fiatCurrency);
                        return addRatetoTrade(trade, closePrice.close);
                    default:
                        const avg = yield getClosestHourPrice_1.getClosestHourPriceForTrade(trade, fiatCurrency);
                        return addRatetoTrade(trade, utils_1.calculateAvgerageHourPrice(avg));
                }
            }
        }
    });
}
exports.getFiatRate = getFiatRate;
function addRatetoTrade(trade, rate) {
    return Object.assign({}, trade, { fiatRate: rate });
}
function addFiatRateToTrades(trades, fiatCurrency, method = types_1.FiatRateMethod.DOUBLEAVERAGE) {
    return __awaiter(this, void 0, void 0, function* () {
        const newTrades = [];
        for (const trade of trades) {
            // cant get some rates without await maybe cryptocompare rate limiting
            newTrades.push(yield getFiatRate(trade, fiatCurrency, method));
        }
        return Promise.all(newTrades);
    });
}
exports.addFiatRateToTrades = addFiatRateToTrades;
function getFiatTradeRate(trade, fiatCurrency) {
    if (trade.boughtCurrency === fiatCurrency) {
        return trade.amountSold / trade.rate / trade.amountSold;
    }
    else if (trade.soldCurrency === fiatCurrency) {
        return trade.rate;
    }
    else {
        throw new Error(`Not ${fiatCurrency} Trade`);
    }
}

},{"../../types":1491,"./BTCBasedRate":1482,"./getClosestHourPrice":1483,"./getDayAvgCurrencyRate":1484,"./utils":1486}],1486:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function cryptocompareRateResponse(response, fiatCurrency) {
    if ('body' in response) {
        try {
            const result = JSON.parse(response.body);
            if (result[fiatCurrency] !== 0) {
                return result[fiatCurrency];
            }
            else {
                return false;
            }
        }
        catch (ex) {
            throw new Error('Error parsing JSON');
        }
    }
    else {
        throw new Error('Invalid Response');
    }
}
exports.cryptocompareRateResponse = cryptocompareRateResponse;
function roundHour(date) {
    date.setUTCHours(date.getUTCHours() + Math.round(date.getUTCMinutes() / 60));
    date.setUTCMinutes(0);
    date.setUTCSeconds(0);
    return date.getTime();
}
exports.roundHour = roundHour;
function isCurrencyTrade(trade, currency) {
    if (trade.boughtCurrency === currency || trade.soldCurrency === currency) {
        return true;
    }
    else {
        return false;
    }
}
exports.isCurrencyTrade = isCurrencyTrade;
function calculateAvgerageHourPrice(data) {
    return (data.open + data.close + data.high + data.low) / 4;
}
exports.calculateAvgerageHourPrice = calculateAvgerageHourPrice;
function calculateAverageFromArray(avgs) {
    return avgs.reduce((accumulator, currentValue) => accumulator + currentValue) / avgs.length;
}
exports.calculateAverageFromArray = calculateAverageFromArray;

},{}],1487:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const CalculateGains_1 = require("../processing/CalculateGains");
const SortTrades_1 = require("../processing/SortTrades");
function save(data, fallback) {
    const packageData = require('../../package.json');
    const newHoldings = data.holdings || fallback.holdings;
    const newTrades = data.trades || fallback.trades;
    const newSettings = data.settings || fallback.settings;
    const sortedTrades = SortTrades_1.default(newTrades);
    const currentHoldings = CalculateGains_1.calculateGains(newHoldings, sortedTrades, newSettings.fiatCurrency, newSettings.gainCalculationMethod).newHoldings;
    const savedData = {
        savedDate: new Date(),
        trades: sortedTrades,
        holdings: currentHoldings,
        settings: newSettings,
        version: packageData.version,
    };
    return savedData;
}
exports.default = save;

},{"../../package.json":1466,"../processing/CalculateGains":1478,"../processing/SortTrades":1481}],1488:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function converter(savedData) {
    let changeMade = false;
    if (savedData.trades.length && 'USDRate' in savedData.trades[0]) {
        changeMade = true;
        for (const trade of savedData.trades) {
            const oldFormatTrade = trade;
            trade.fiatRate = oldFormatTrade.USDRate;
            delete oldFormatTrade.USDRate;
        }
    }
    if (Object.keys(savedData.holdings).length) {
        const keys = Object.keys(savedData.holdings);
        if ('rateInUSD' in savedData.holdings[keys[0]][0]) {
            changeMade = true;
            for (const currency of keys) {
                for (const holding of savedData.holdings[currency]) {
                    const oldFormatHolding = holding;
                    holding.rateInFiat = oldFormatHolding.rateInUSD;
                    delete oldFormatHolding.rateInUSD;
                }
            }
        }
    }
    return changeMade;
}
exports.default = converter;

},{}],1489:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("../../types");
function converter(savedData) {
    let changeMade = false;
    if ('gainCalculationMethod' in savedData.settings === false) {
        changeMade = true;
        savedData.settings.gainCalculationMethod = types_1.METHOD.FIFO;
    }
    return changeMade;
}
exports.default = converter;

},{"../../types":1491}],1490:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _0_2_0_1 = require("./0.2.0");
const _0_3_0_1 = require("./0.3.0");
function onSaveDataLoaded(savedData) {
    const version = savedData.version || 0;
    const packageData = require('./package.json');
    const currentVersion = packageData.version;
    let changeMade = false;
    switch (version) {
        case undefined: // prior to 0.2.0
            changeMade = _0_2_0_1.default(savedData);
        case '0.2.0': // 0.2.0
            changeMade = changeMade || _0_3_0_1.default(savedData);
            break;
        default:
    }
    if (changeMade && version === 0 || version < currentVersion) {
        savedData.version = currentVersion;
    }
    return changeMade;
}
exports.default = onSaveDataLoaded;

},{"./0.2.0":1488,"./0.3.0":1489,"./package.json":undefined}],1491:[function(require,module,exports){
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(require("./trade"));
var METHOD;
(function (METHOD) {
    METHOD["FIFO"] = "FIFO";
    METHOD["LIFO"] = "LIFO";
    METHOD["HCFO"] = "HCFO";
    METHOD["LCFO"] = "LCFO";
    METHOD["LTFO"] = "LTFO";
    METHOD["HTFO"] = "HTFO";
})(METHOD = exports.METHOD || (exports.METHOD = {}));
var FiatRateMethod;
(function (FiatRateMethod) {
    FiatRateMethod["DOUBLEAVERAGE"] = "Double Average";
    FiatRateMethod["HOURAVG"] = "Hour Avg";
    FiatRateMethod["HOURHIGH"] = "Hour High";
    FiatRateMethod["HOURLOW"] = "Hour Low";
    FiatRateMethod["HOURCLOSE"] = "Hour Close";
    FiatRateMethod["HOUROPEN"] = "Hour Open";
    FiatRateMethod["DAYAVERAGE"] = "Day Average";
    FiatRateMethod["DAYAVERAGEMID"] = "Day Average Middle";
    FiatRateMethod["DAYAVERAGEVOLUME"] = "Day Average Volume";
})(FiatRateMethod = exports.FiatRateMethod || (exports.FiatRateMethod = {}));

},{"./trade":1492}],1492:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EXCHANGES;
(function (EXCHANGES) {
    EXCHANGES["BITTREX"] = "Bittrex";
    EXCHANGES["GEMINI"] = "Gemini";
    EXCHANGES["POLONIEX"] = "Poloniex";
    EXCHANGES["KRAKEN"] = "Kraken";
    EXCHANGES["BINANCE"] = "Binance";
})(EXCHANGES = exports.EXCHANGES || (exports.EXCHANGES = {}));
var ExchangesHeaders;
(function (ExchangesHeaders) {
    ExchangesHeaders["BITTREX"] = "07230399aaa8d1f15e88e38bd43a01c5ef1af6c1f9131668d346e196ff090d80";
    ExchangesHeaders["GEMINI"] = "9d324bebad54408dd639d87a3a99f83291c0ebe1c2656531d1bf2fbee2a6301f";
    ExchangesHeaders["POLONIEX"] = "d7484d726e014edaa059c0137ac91183a7eaa9ee5d52713aa48bb4104b01afb0";
    ExchangesHeaders["KRAKEN"] = "85bf27e799cc0a30fe5b201cd6a4724e4a52feb433f41a1e8b046924e3bf8dc5";
    ExchangesHeaders["BINANCE"] = "4d0d5df894fe488872e513f6148dfa14ff29272e759b7fb3c86d264687a7cf99";
})(ExchangesHeaders = exports.ExchangesHeaders || (exports.ExchangesHeaders = {}));

},{}]},{},[1467]);
